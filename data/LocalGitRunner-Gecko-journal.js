put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/APZTestData.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/APZTestData.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/*\u000a * This file declares data structures used to communicate data logged by\u000a * various components for the purpose of APZ testing (see bug 961289 and \u000a * gfx/layers/apz/test/APZTestData.h) to JS test code.\u000a */\u000a\u000a// A single key-value pair in the data.\u000adictionary ScrollFrameDataEntry {\u000a  DOMString key;\u000a  DOMString value;\u000a};\u000a\u000a// All the key-value pairs associated with a given scrollable frame.\u000a// The scrollable frame is identified by a scroll id.\u000adictionary ScrollFrameData {\u000a  unsigned long long scrollId;\u000a  sequence<ScrollFrameDataEntry> entries;\u000a};\u000a\u000a// All the scrollable frames associated with a given paint or repaint request.\u000a// The paint or repaint request is identified by a sequence number.\u000adictionary APZBucket {\u000a  unsigned long sequenceNumber;\u000a  sequence<ScrollFrameData> scrollFrames;\u000a};\u000a\u000a[Pref=\"apz.test.logging_enabled\"]\u000anamespace APZHitResultFlags {\u000a  // These constants should be kept in sync with mozilla::gfx::CompositorHitTestInfo\u000a  const unsigned short INVISIBLE = 0;\u000a  const unsigned short VISIBLE = 0x0001;\u000a  const unsigned short DISPATCH_TO_CONTENT = 0x0002;\u000a  const unsigned short PAN_X_DISABLED = 0x0004;\u000a  const unsigned short PAN_Y_DISABLED = 0x0008;\u000a  const unsigned short PINCH_ZOOM_DISABLED = 0x0010;\u000a  const unsigned short DOUBLE_TAP_ZOOM_DISABLED = 0x0020;\u000a  const unsigned short SCROLLBAR = 0x0040;\u000a  const unsigned short SCROLLBAR_THUMB = 0x0080;\u000a  const unsigned short SCROLLBAR_VERTICAL = 0x0100;\u000a};\u000a\u000adictionary APZHitResult {\u000a  float screenX;\u000a  float screenY;\u000a  unsigned short hitResult; // combination of the APZHitResultFlags.* flags\u000a  unsigned long long scrollId;\u000a};\u000a\u000a// All the paints and repaint requests. This is the top-level data structure.\u000adictionary APZTestData {\u000a  sequence<APZBucket> paints;\u000a  sequence<APZBucket> repaintRequests;\u000a  sequence<APZHitResult> hitResults;\u000a};\u000a\u000a// A frame uniformity measurement for every scrollable layer\u000adictionary FrameUniformity {\u000a  unsigned long layerAddress;\u000a  float frameUniformity;\u000a};\u000a\u000adictionary FrameUniformityResults {\u000a  sequence<FrameUniformity> layerUniformities;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AbortController.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AbortController.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dom.spec.whatwg.org/#abortcontroller\u000a */\u000a\u000a[Constructor(), Exposed=(Window,Worker,System)]\u000ainterface AbortController {\u000a  readonly attribute AbortSignal signal;\u000a\u000a  void abort();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AbortSignal.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AbortSignal.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dom.spec.whatwg.org/#abortsignal\u000a */\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface AbortSignal : EventTarget {\u000a  readonly attribute boolean aborted;\u000a\u000a  attribute EventHandler onabort;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AbstractWorker.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AbstractWorker.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[NoInterfaceObject, Exposed=(Window,Worker,System)]\u000ainterface AbstractWorker {\u000a    attribute EventHandler onerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AccessibleNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AccessibleNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Pref=\"accessibility.AOM.enabled\"]\u000ainterface AccessibleNode {\u000a  readonly attribute DOMString role;\u000a  [Frozen, Cached, Pure]\u000a  readonly attribute sequence<DOMString> states;\u000a  [Frozen, Cached, Pure]\u000a  readonly attribute sequence<DOMString> attributes;\u000a  readonly attribute Node? DOMNode;\u000a\u000a  boolean is(DOMString... states);\u000a  boolean has(DOMString... attributes);\u000a  [Throws]\u000a  any get(DOMString attribute);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AddonEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AddonEvent.webidl"},contents:"[ Func=\"mozilla::AddonManagerWebAPI::IsAPIEnabled\",\u000a  Constructor(DOMString type, AddonEventInit eventInitDict)]\u000ainterface AddonEvent : Event {\u000a  readonly attribute DOMString id;\u000a  readonly attribute boolean needsRestart;\u000a};\u000a\u000adictionary AddonEventInit : EventInit {\u000a  required DOMString id;\u000a  required boolean needsRestart;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AddonManager.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AddonManager.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/* We need a JSImplementation but cannot get one without a contract ID.\u000a   Since Addon and AddonInstall are only ever created from JS they don't need\u000a   real contract IDs. */\u000a[ChromeOnly, JSImplementation=\"dummy\"]\u000ainterface Addon {\u000a  // The add-on's ID.\u000a  readonly attribute DOMString id;\u000a  // The add-on's version.\u000a  readonly attribute DOMString version;\u000a  // The add-on's type (extension, theme, etc.).\u000a  readonly attribute DOMString type;\u000a  // The add-on's name in the current locale.\u000a  readonly attribute DOMString name;\u000a  // The add-on's description in the current locale.\u000a  readonly attribute DOMString description;\u000a  // If the user has enabled this add-on, note that it still may not be running\u000a  // depending on whether enabling requires a restart or if the add-on is\u000a  // incompatible in some way.\u000a  readonly attribute boolean isEnabled;\u000a  // If the add-on is currently active in the browser.\u000a  readonly attribute boolean isActive;\u000a  // If the add-on may be uninstalled\u000a  readonly attribute boolean canUninstall;\u000a\u000a  Promise<boolean> uninstall();\u000a  Promise<void> setEnabled(boolean value);\u000a};\u000a\u000a[ChromeOnly, JSImplementation=\"dummy\"]\u000ainterface AddonInstall : EventTarget {\u000a  // One of the STATE_* symbols from AddonManager.jsm\u000a  readonly attribute DOMString state;\u000a  // One of the ERROR_* symbols from AddonManager.jsm, or null\u000a  readonly attribute DOMString? error;\u000a  // How many bytes have been downloaded\u000a  readonly attribute long long progress;\u000a  // How many total bytes will need to be downloaded or -1 if unknown\u000a  readonly attribute long long maxProgress;\u000a\u000a  Promise<void> install();\u000a  Promise<void> cancel();\u000a};\u000a\u000adictionary addonInstallOptions {\u000a  required DOMString url;\u000a  // If a non-empty string is passed for \"hash\", it is used to verify the\u000a  // checksum of the downloaded XPI before installing.  If is omitted or if\u000a  // it is null or empty string, no checksum verification is performed.\u000a  DOMString? hash = null;\u000a};\u000a\u000a[HeaderFile=\"mozilla/AddonManagerWebAPI.h\",\u000a Func=\"mozilla::AddonManagerWebAPI::IsAPIEnabled\",\u000a NavigatorProperty=\"mozAddonManager\",\u000a JSImplementation=\"@mozilla.org/addon-web-api/manager;1\"]\u000ainterface AddonManager : EventTarget {\u000a  /**\u000a   * Gets information about an add-on\u000a   *\u000a   * @param  id\u000a   *         The ID of the add-on to test for.\u000a   * @return A promise. It will resolve to an Addon if the add-on is installed.\u000a   */\u000a  Promise<Addon> getAddonByID(DOMString id);\u000a\u000a  /**\u000a   * Creates an AddonInstall object for a given URL.\u000a   *\u000a   * @param options\u000a   *        Only one supported option: 'url', the URL of the addon to install.\u000a   * @return A promise that resolves to an instance of AddonInstall.\u000a   */\u000a  Promise<AddonInstall> createInstall(optional addonInstallOptions options);\u000a\u000a  // Indicator to content whether permissions prompts are enabled\u000a  readonly attribute boolean permissionPromptsEnabled;\u000a\u000a  /* Hooks for managing event listeners */\u000a  [ChromeOnly]\u000a  void eventListenerWasAdded(DOMString type);\u000a  [ChromeOnly]\u000a  void eventListenerWasRemoved(DOMString type);\u000a};\u000a\u000a[ChromeOnly,Exposed=System,HeaderFile=\"mozilla/AddonManagerWebAPI.h\"]\u000ainterface AddonManagerPermissions {\u000a  static boolean isHostPermitted(DOMString host);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnalyserNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnalyserNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary AnalyserOptions : AudioNodeOptions {\u000a             unsigned long fftSize = 2048;\u000a             float         maxDecibels = -30;\u000a             float         minDecibels = -100;\u000a             float         smoothingTimeConstant = 0.8;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional AnalyserOptions options)]\u000ainterface AnalyserNode : AudioNode {\u000a\u000a    // Real-time frequency-domain data\u000a    void getFloatFrequencyData(Float32Array array);\u000a    void getByteFrequencyData(Uint8Array array);\u000a\u000a    // Real-time waveform data\u000a    void getFloatTimeDomainData(Float32Array array);\u000a    void getByteTimeDomainData(Uint8Array array);\u000a\u000a    [SetterThrows, Pure]\u000a    attribute unsigned long fftSize;\u000a    [Pure]\u000a    readonly attribute unsigned long frequencyBinCount;\u000a\u000a    [SetterThrows, Pure]\u000a    attribute double minDecibels;\u000a    [SetterThrows, Pure]\u000a    attribute double maxDecibels;\u000a\u000a    [SetterThrows, Pure]\u000a    attribute double smoothingTimeConstant;\u000a\u000a};\u000a\u000a// Mozilla extension\u000aAnalyserNode implements AudioNodePassThrough;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Animatable.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Animatable.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/fxtf/web-animations/#the-animatable-interface\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary KeyframeAnimationOptions : KeyframeEffectOptions {\u000a  DOMString id = \"\";\u000a};\u000a\u000adictionary AnimationFilter {\u000a  boolean subtree = false;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface Animatable {\u000a  [Func=\"nsDocument::IsElementAnimateEnabled\", Throws]\u000a  Animation animate(object? keyframes,\u000a                    optional UnrestrictedDoubleOrKeyframeAnimationOptions options);\u000a  [Func=\"nsDocument::IsWebAnimationsEnabled\"]\u000a  sequence<Animation> getAnimations(optional AnimationFilter filter);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Animation.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Animation.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/web-animations/#animation\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum AnimationPlayState { \"idle\", \"pending\", \"running\", \"paused\", \"finished\" };\u000a\u000a[Func=\"nsDocument::IsElementAnimateEnabled\",\u000a Constructor (optional AnimationEffectReadOnly? effect = null,\u000a              optional AnimationTimeline? timeline)]\u000ainterface Animation : EventTarget {\u000a  attribute DOMString id;\u000a  [Func=\"nsDocument::IsWebAnimationsEnabled\", Pure]\u000a  attribute AnimationEffectReadOnly? effect;\u000a  [Func=\"nsDocument::IsWebAnimationsEnabled\"]\u000a  attribute AnimationTimeline? timeline;\u000a  [BinaryName=\"startTimeAsDouble\"]\u000a  attribute double? startTime;\u000a  [SetterThrows, BinaryName=\"currentTimeAsDouble\"]\u000a  attribute double? currentTime;\u000a\u000a           attribute double             playbackRate;\u000a  [BinaryName=\"playStateFromJS\"]\u000a  readonly attribute AnimationPlayState playState;\u000a  [Pref=\"dom.animations-api.pending-member.enabled\", BinaryName=\"pendingFromJS\"]\u000a  readonly attribute boolean            pending;\u000a  [Func=\"nsDocument::IsWebAnimationsEnabled\", Throws]\u000a  readonly attribute Promise<Animation> ready;\u000a  [Func=\"nsDocument::IsWebAnimationsEnabled\", Throws]\u000a  readonly attribute Promise<Animation> finished;\u000a           attribute EventHandler       onfinish;\u000a           attribute EventHandler       oncancel;\u000a  void cancel ();\u000a  [Throws]\u000a  void finish ();\u000a  [Throws, BinaryName=\"playFromJS\"]\u000a  void play ();\u000a  [Throws, BinaryName=\"pauseFromJS\"]\u000a  void pause ();\u000a  void updatePlaybackRate (double playbackRate);\u000a  [Throws]\u000a  void reverse ();\u000a};\u000a\u000a// Non-standard extensions\u000apartial interface Animation {\u000a  [ChromeOnly] readonly attribute boolean isRunningOnCompositor;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationEffectReadOnly.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationEffectReadOnly.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/web-animations/#animationeffectreadonly\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum FillMode {\u000a  \"none\",\u000a  \"forwards\",\u000a  \"backwards\",\u000a  \"both\",\u000a  \"auto\"\u000a};\u000a\u000aenum PlaybackDirection {\u000a  \"normal\",\u000a  \"reverse\",\u000a  \"alternate\",\u000a  \"alternate-reverse\"\u000a};\u000a\u000adictionary AnimationEffectTimingProperties {\u000a  double                              delay = 0.0;\u000a  double                              endDelay = 0.0;\u000a  FillMode                            fill = \"auto\";\u000a  double                              iterationStart = 0.0;\u000a  unrestricted double                 iterations = 1.0;\u000a  (unrestricted double or DOMString)  duration = \"auto\";\u000a  PlaybackDirection                   direction = \"normal\";\u000a  DOMString                           easing = \"linear\";\u000a};\u000a\u000adictionary ComputedTimingProperties : AnimationEffectTimingProperties {\u000a  unrestricted double   endTime = 0.0;\u000a  unrestricted double   activeDuration = 0.0;\u000a  double?               localTime = null;\u000a  double?               progress = null;\u000a  unrestricted double?  currentIteration = null;\u000a};\u000a\u000a[Func=\"nsDocument::IsWebAnimationsEnabled\"]\u000ainterface AnimationEffectReadOnly {\u000a  [Cached, Constant]\u000a  readonly attribute AnimationEffectTimingReadOnly timing;\u000a  [BinaryName=\"getComputedTimingAsDict\"]\u000a  ComputedTimingProperties getComputedTiming();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationEffectTiming.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationEffectTiming.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/web-animations/#animationeffecttiming\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Func=\"nsDocument::IsWebAnimationsEnabled\"]\u000ainterface AnimationEffectTiming : AnimationEffectTimingReadOnly {\u000a  inherit attribute double                             delay;\u000a  inherit attribute double                             endDelay;\u000a  inherit attribute FillMode                           fill;\u000a  [SetterThrows]\u000a  inherit attribute double                             iterationStart;\u000a  [SetterThrows]\u000a  inherit attribute unrestricted double                iterations;\u000a  [SetterThrows]\u000a  inherit attribute (unrestricted double or DOMString) duration;\u000a  inherit attribute PlaybackDirection                  direction;\u000a  [SetterThrows]\u000a  inherit attribute DOMString                          easing;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationEffectTimingReadOnly.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationEffectTimingReadOnly.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/web-animations/#animationeffecttimingreadonly\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Func=\"nsDocument::IsWebAnimationsEnabled\"]\u000ainterface AnimationEffectTimingReadOnly {\u000a  readonly attribute double                             delay;\u000a  readonly attribute double                             endDelay;\u000a  readonly attribute FillMode                           fill;\u000a  readonly attribute double                             iterationStart;\u000a  readonly attribute unrestricted double                iterations;\u000a  readonly attribute (unrestricted double or DOMString) duration;\u000a  readonly attribute PlaybackDirection                  direction;\u000a  readonly attribute DOMString                          easing;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/css3-animations/#animation-events-\u000a * http://dev.w3.org/csswg/css3-animations/#animation-events-\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString type, optional AnimationEventInit eventInitDict)]\u000ainterface AnimationEvent : Event {\u000a  readonly attribute DOMString animationName;\u000a  readonly attribute float     elapsedTime;\u000a  readonly attribute DOMString pseudoElement;\u000a};\u000a\u000adictionary AnimationEventInit : EventInit {\u000a  DOMString animationName = \"\";\u000a  float elapsedTime = 0;\u000a  DOMString pseudoElement = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationPlaybackEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationPlaybackEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/web-animations/#animationplaybackevent\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Func=\"nsDocument::IsWebAnimationsEnabled\",\u000a Constructor(DOMString type,\u000a             optional AnimationPlaybackEventInit eventInitDict)]\u000ainterface AnimationPlaybackEvent : Event {\u000a  readonly attribute double? currentTime;\u000a  readonly attribute double? timelineTime;\u000a};\u000a\u000adictionary AnimationPlaybackEventInit : EventInit {\u000a  double? currentTime = null;\u000a  double? timelineTime = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationTimeline.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnimationTimeline.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/web-animations/#animationtimeline\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Func=\"nsDocument::IsWebAnimationsEnabled\"]\u000ainterface AnimationTimeline {\u000a  [BinaryName=\"currentTimeAsDouble\"]\u000a  readonly attribute double? currentTime;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnonymousContent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AnonymousContent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/*\u000a * This file declares the AnonymousContent interface which is used to\u000a * manipulate content that has been inserted into the document's canvasFrame\u000a * anonymous container.\u000a * See Document.insertAnonymousContent.\u000a *\u000a * This API never returns a reference to the actual inserted DOM node on\u000a * purpose. This is to make sure the content cannot be randomly changed and the\u000a * DOM cannot be traversed from the node, so that Gecko can remain in control of\u000a * the inserted content.\u000a */\u000a\u000a[ChromeOnly]\u000ainterface AnonymousContent {\u000a  /**\u000a   * Get the text content of an element inside this custom anonymous content.\u000a   */\u000a  [Throws]\u000a  DOMString getTextContentForElement(DOMString elementId);\u000a\u000a  /**\u000a   * Set the text content of an element inside this custom anonymous content.\u000a   */\u000a  [Throws]\u000a  void setTextContentForElement(DOMString elementId, DOMString text);\u000a\u000a  /**\u000a   * Get the value of an attribute of an element inside this custom anonymous\u000a   * content.\u000a   */\u000a  [Throws]\u000a  DOMString? getAttributeForElement(DOMString elementId,\u000a                                    DOMString attributeName);\u000a\u000a  /**\u000a   * Set the value of an attribute of an element inside this custom anonymous\u000a   * content.\u000a   */\u000a  [NeedsSubjectPrincipal=NonSystem, Throws]\u000a  void setAttributeForElement(DOMString elementId,\u000a                              DOMString attributeName,\u000a                              DOMString value);\u000a\u000a  /**\u000a   * Remove an attribute from an element inside this custom anonymous content.\u000a   */\u000a  [Throws]\u000a  void removeAttributeForElement(DOMString elementId,\u000a                                 DOMString attributeName);\u000a\u000a  /**\u000a   * Get the canvas' context for the element specified if it's a <canvas>\u000a   * node, `null` otherwise.\u000a   */\u000a  [Throws]\u000a  nsISupports? getCanvasContext(DOMString elementId,\u000a                                DOMString contextId);\u000a\u000a  [Func=\"nsDocument::IsElementAnimateEnabled\", Throws]\u000a  Animation setAnimationForElement(DOMString elementId,\u000a                                   object? keyframes,\u000a                                   optional UnrestrictedDoubleOrKeyframeAnimationOptions\u000a                                     options);\u000a\u000a  /**\u000a   * Accepts a list of (possibly overlapping) DOMRects which describe a shape\u000a   * in CSS pixels relative to the element's border box. This shape will be\u000a   * excluded from the element's background color rendering. The element will\u000a   * not render any background images once this method has been called.\u000a   */\u000a  [Throws]\u000a  void setCutoutRectsForElement(DOMString elementId,\u000a                                sequence<DOMRect> rects);\u000a\u000a  /**\u000a   * Get the computed value of a property on an element inside this custom\u000a   * anonymous content.\u000a   */\u000a  [Throws]\u000a  DOMString? getComputedStylePropertyValue(DOMString elementId,\u000a                                           DOMString propertyName);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AppInfo.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AppInfo.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/**\u000a  * This dictionnary holds the parameters supporting the app:// protocol.\u000a  */\u000adictionary AppInfo\u000a{\u000a  DOMString path = \"\";\u000a  boolean   isCoreApp = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AppNotificationServiceOptions.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AppNotificationServiceOptions.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface MozObserver;\u000a\u000adictionary AppNotificationServiceOptions {\u000a  boolean textClickable = false;\u000a  DOMString manifestURL = \"\";\u000a  DOMString id = \"\";\u000a  DOMString dbId = \"\";\u000a  DOMString dir = \"\";\u000a  DOMString lang = \"\";\u000a  DOMString tag = \"\";\u000a  DOMString data = \"\";\u000a  NotificationBehavior mozbehavior = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Attr.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Attr.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface Attr : Node {\u000a  readonly attribute DOMString localName;\u000a           [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows]\u000a           attribute DOMString value;\u000a\u000a  [Constant]\u000a  readonly attribute DOMString name;\u000a  [Constant]\u000a  readonly attribute DOMString? namespaceURI;\u000a  [Constant]\u000a  readonly attribute DOMString? prefix;\u000a\u000a  readonly attribute boolean specified;\u000a};\u000a\u000a// Mozilla extensions\u000a\u000apartial interface Attr {\u000a           [GetterThrows]\u000a  readonly attribute Element? ownerElement;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioBuffer.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioBuffer.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary AudioBufferOptions {\u000a             unsigned long numberOfChannels = 1;\u000a    required unsigned long length;\u000a    required float         sampleRate;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(AudioBufferOptions options)]\u000ainterface AudioBuffer {\u000a\u000a    readonly attribute float sampleRate;\u000a    readonly attribute unsigned long length;\u000a\u000a    // in seconds \u000a    readonly attribute double duration;\u000a\u000a    readonly attribute unsigned long numberOfChannels;\u000a\u000a    [Throws]\u000a    Float32Array getChannelData(unsigned long channel);\u000a\u000a    [Throws]\u000a    void copyFromChannel(Float32Array destination, long channelNumber, optional unsigned long startInChannel = 0);\u000a    [Throws]\u000a    void copyToChannel(Float32Array source, long channelNumber, optional unsigned long startInChannel = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioBufferSourceNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioBufferSourceNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary AudioBufferSourceOptions {\u000a             AudioBuffer? buffer;\u000a             float        detune = 0;\u000a             boolean      loop = false;\u000a             double       loopEnd = 0;\u000a             double       loopStart = 0;\u000a             float        playbackRate = 1;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional AudioBufferSourceOptions options)]\u000ainterface AudioBufferSourceNode : AudioScheduledSourceNode {\u000a\u000a    attribute AudioBuffer? buffer;\u000a\u000a    readonly attribute AudioParam playbackRate;\u000a    readonly attribute AudioParam detune;\u000a\u000a    attribute boolean loop;\u000a    attribute double loopStart;\u000a    attribute double loopEnd;\u000a\u000a    [Throws]\u000a    void start(optional double when = 0, optional double grainOffset = 0,\u000a               optional double grainDuration);\u000a};\u000a\u000a// Mozilla extensions\u000aAudioBufferSourceNode implements AudioNodePassThrough;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioContext.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioContext.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor,\u000a Pref=\"dom.webaudio.enabled\"]\u000ainterface AudioContext : BaseAudioContext {\u000a\u000a    // Bug 1324545: readonly        attribute double outputLatency;\u000a    // Bug 1324545: AudioTimestamp                  getOutputTimestamp ();\u000a\u000a    [Throws]\u000a    Promise<void> suspend();\u000a    [Throws]\u000a    Promise<void> close();\u000a\u000a    [NewObject, Throws]\u000a    MediaElementAudioSourceNode createMediaElementSource(HTMLMediaElement mediaElement);\u000a\u000a    [NewObject, Throws]\u000a    MediaStreamAudioSourceNode createMediaStreamSource(MediaStream mediaStream);\u000a\u000a    // Bug 1324548: MediaStreamTrackAudioSourceNode createMediaStreamTrackSource (AudioMediaStreamTrack mediaStreamTrack);\u000a\u000a    [NewObject, Throws]\u000a    MediaStreamAudioDestinationNode createMediaStreamDestination();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioDestinationNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioDestinationNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"dom.webaudio.enabled\"]\u000ainterface AudioDestinationNode : AudioNode {\u000a\u000a    readonly attribute unsigned long maxChannelCount;\u000a\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioListener.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioListener.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"dom.webaudio.enabled\"]\u000ainterface AudioListener {\u000a\u000a    // same as OpenAL (default 1)\u000a    [Deprecated=\"PannerNodeDoppler\"]\u000a    attribute double dopplerFactor;\u000a\u000a    // in meters / second (default 343.3)\u000a    [Deprecated=\"PannerNodeDoppler\"]\u000a    attribute double speedOfSound;\u000a\u000a    // Uses a 3D cartesian coordinate system\u000a    void setPosition(double x, double y, double z);\u000a    void setOrientation(double x, double y, double z, double xUp, double yUp, double zUp);\u000a    [Deprecated=\"PannerNodeDoppler\"]\u000a    void setVelocity(double x, double y, double z);\u000a\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum ChannelCountMode {\u000a    \"max\",\u000a    \"clamped-max\",\u000a    \"explicit\"\u000a};\u000a\u000aenum ChannelInterpretation {\u000a    \"speakers\",\u000a    \"discrete\"\u000a};\u000a\u000adictionary AudioNodeOptions {\u000a             unsigned long         channelCount;\u000a             ChannelCountMode      channelCountMode;\u000a             ChannelInterpretation channelInterpretation;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\"]\u000ainterface AudioNode : EventTarget {\u000a\u000a    [Throws]\u000a    AudioNode connect(AudioNode destination, optional unsigned long output = 0, optional unsigned long input = 0);\u000a    [Throws]\u000a    void connect(AudioParam destination, optional unsigned long output = 0);\u000a    [Throws]\u000a    void disconnect();\u000a    [Throws]\u000a    void disconnect(unsigned long output);\u000a    [Throws]\u000a    void disconnect(AudioNode destination);\u000a    [Throws]\u000a    void disconnect(AudioNode destination, unsigned long output);\u000a    [Throws]\u000a    void disconnect(AudioNode destination, unsigned long output, unsigned long input);\u000a    [Throws]\u000a    void disconnect(AudioParam destination);\u000a    [Throws]\u000a    void disconnect(AudioParam destination, unsigned long output);\u000a\u000a    readonly attribute BaseAudioContext context;\u000a    readonly attribute unsigned long numberOfInputs;\u000a    readonly attribute unsigned long numberOfOutputs;\u000a\u000a    // Channel up-mixing and down-mixing rules for all inputs.\u000a    [SetterThrows]\u000a    attribute unsigned long channelCount;\u000a    [SetterThrows]\u000a    attribute ChannelCountMode channelCountMode;\u000a    attribute ChannelInterpretation channelInterpretation;\u000a\u000a};\u000a\u000a// Mozilla extension\u000apartial interface AudioNode {\u000a  [ChromeOnly]\u000a  readonly attribute unsigned long id;\u000a};\u000a[NoInterfaceObject]\u000ainterface AudioNodePassThrough {\u000a  [ChromeOnly]\u000a  attribute boolean passThrough;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioParam.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioParam.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"dom.webaudio.enabled\"]\u000ainterface AudioParam {\u000a\u000a                    attribute float value;\u000a    readonly        attribute float defaultValue;\u000a    readonly        attribute float minValue;\u000a    readonly        attribute float maxValue;\u000a\u000a    // Parameter automation. \u000a    [Throws]\u000a    AudioParam setValueAtTime(float value, double startTime);\u000a    [Throws]\u000a    AudioParam linearRampToValueAtTime(float value, double endTime);\u000a    [Throws]\u000a    AudioParam exponentialRampToValueAtTime(float value, double endTime);\u000a\u000a    // Exponentially approach the target value with a rate having the given time constant. \u000a    [Throws]\u000a    AudioParam setTargetAtTime(float target, double startTime, double timeConstant);\u000a\u000a    // Sets an array of arbitrary parameter values starting at time for the given duration. \u000a    // The number of values will be scaled to fit into the desired duration. \u000a    [Throws]\u000a    AudioParam setValueCurveAtTime(Float32Array values, double startTime, double duration);\u000a\u000a    // Cancels all scheduled parameter changes with times greater than or equal to startTime. \u000a    [Throws]\u000a    AudioParam cancelScheduledValues(double startTime);\u000a\u000a};\u000a\u000a// Mozilla extension\u000apartial interface AudioParam {\u000a  // The ID of the AudioNode this AudioParam belongs to.\u000a  [ChromeOnly]\u000a  readonly attribute unsigned long parentNodeId;\u000a  // The name of the AudioParam\u000a  [ChromeOnly]\u000a  readonly attribute DOMString name;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioProcessingEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioProcessingEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"dom.webaudio.enabled\"]\u000ainterface AudioProcessingEvent : Event {\u000a\u000a  readonly attribute double playbackTime;\u000a\u000a  [Throws]\u000a  readonly attribute AudioBuffer inputBuffer;\u000a  [Throws]\u000a  readonly attribute AudioBuffer outputBuffer;\u000a\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioScheduledSourceNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioScheduledSourceNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/#idl-def-AudioScheduledSourceNode\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface AudioScheduledSourceNode : AudioNode {\u000a                    attribute EventHandler onended;\u000a    [Throws]\u000a    void start (optional double when = 0);\u000a\u000a    [Throws]\u000a    void stop (optional double when = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioStreamTrack.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioStreamTrack.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/getusermedia.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a// [Constructor(optional MediaTrackConstraints audioConstraints)]\u000ainterface AudioStreamTrack : MediaStreamTrack {\u000a//    static sequence<DOMString> getSourceIds ();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioTrack.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioTrack.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#audiotrack\u000a */\u000a\u000a[Pref=\"media.track.enabled\"]\u000ainterface AudioTrack {\u000a  readonly attribute DOMString id;\u000a  readonly attribute DOMString kind;\u000a  readonly attribute DOMString label;\u000a  readonly attribute DOMString language;\u000a           attribute boolean enabled;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioTrackList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioTrackList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#audiotracklist\u000a */\u000a\u000a[Pref=\"media.track.enabled\"]\u000ainterface AudioTrackList : EventTarget {\u000a  readonly attribute unsigned long length;\u000a  getter AudioTrack (unsigned long index);\u000a  AudioTrack? getTrackById(DOMString id);\u000a\u000a           attribute EventHandler onchange;\u000a           attribute EventHandler onaddtrack;\u000a           attribute EventHandler onremovetrack;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioWorkletGlobalScope.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AudioWorkletGlobalScope.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope\u000a */\u000a\u000a[Global=(Worklet,AudioWorklet),Exposed=AudioWorklet]\u000ainterface AudioWorkletGlobalScope : WorkletGlobalScope {\u000a    void registerProcessor (DOMString name, VoidFunction processorCtor);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AutocompleteInfo.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/AutocompleteInfo.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * This dictionary is used for the input, textarea and select element's\u000a * getAutocompleteInfo method.\u000a */\u000a\u000adictionary AutocompleteInfo {\u000a  DOMString section = \"\";\u000a  DOMString addressType = \"\";\u000a  DOMString contactType = \"\";\u000a  DOMString fieldName = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BarProp.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BarProp.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface BarProp\u000a{\u000a  [Throws, NeedsCallerType]\u000a           attribute boolean visible;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BaseAudioContext.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BaseAudioContext.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/#idl-def-BaseAudioContext\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000acallback DecodeSuccessCallback = void (AudioBuffer decodedData);\u000acallback DecodeErrorCallback = void (DOMException error);\u000a\u000aenum AudioContextState {\u000a    \"suspended\",\u000a    \"running\",\u000a    \"closed\"\u000a};\u000a\u000ainterface BaseAudioContext : EventTarget {\u000a    readonly        attribute AudioDestinationNode destination;\u000a    readonly        attribute float                sampleRate;\u000a    readonly        attribute double               currentTime;\u000a    readonly        attribute AudioListener        listener;\u000a    readonly        attribute AudioContextState    state;\u000a    // Bug 1324552: readonly        attribute double               baseLatency;\u000a\u000a    [Throws]\u000a    Promise<void> resume();\u000a\u000a                    attribute EventHandler         onstatechange;\u000a\u000a    [NewObject, Throws]\u000a    AudioBuffer            createBuffer (unsigned long numberOfChannels,\u000a                                         unsigned long length,\u000a                                         float sampleRate);\u000a\u000a    [Throws]\u000a    Promise<AudioBuffer> decodeAudioData(ArrayBuffer audioData,\u000a                                         optional DecodeSuccessCallback successCallback,\u000a                                         optional DecodeErrorCallback errorCallback);\u000a\u000a    // AudioNode creation\u000a    [NewObject, Throws]\u000a    AudioBufferSourceNode createBufferSource();\u000a\u000a    [NewObject, Throws]\u000a    ConstantSourceNode createConstantSource();\u000a\u000a    [NewObject, Throws]\u000a    ScriptProcessorNode createScriptProcessor(optional unsigned long bufferSize = 0,\u000a                                              optional unsigned long numberOfInputChannels = 2,\u000a                                              optional unsigned long numberOfOutputChannels = 2);\u000a\u000a    [NewObject, Throws]\u000a    AnalyserNode createAnalyser();\u000a\u000a    [NewObject, Throws]\u000a    GainNode createGain();\u000a\u000a    [NewObject, Throws]\u000a    DelayNode createDelay(optional double maxDelayTime = 1); // TODO: no = 1\u000a\u000a    [NewObject, Throws]\u000a    BiquadFilterNode createBiquadFilter();\u000a\u000a    [NewObject, Throws]\u000a    IIRFilterNode createIIRFilter(sequence<double> feedforward, sequence<double> feedback);\u000a\u000a    [NewObject, Throws]\u000a    WaveShaperNode createWaveShaper();\u000a\u000a    [NewObject, Throws]\u000a    PannerNode createPanner();\u000a\u000a    [NewObject, Throws]\u000a    StereoPannerNode createStereoPanner();\u000a\u000a    [NewObject, Throws]\u000a    ConvolverNode createConvolver();\u000a\u000a    [NewObject, Throws]\u000a    ChannelSplitterNode createChannelSplitter(optional unsigned long numberOfOutputs = 6);\u000a\u000a    [NewObject, Throws]\u000a    ChannelMergerNode createChannelMerger(optional unsigned long numberOfInputs = 6);\u000a\u000a    [NewObject, Throws]\u000a    DynamicsCompressorNode createDynamicsCompressor();\u000a\u000a    [NewObject, Throws]\u000a    OscillatorNode createOscillator();\u000a\u000a    [NewObject, Throws]\u000a    PeriodicWave createPeriodicWave(Float32Array real,\u000a                                    Float32Array imag,\u000a                                    optional PeriodicWaveConstraints constraints);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BaseKeyframeTypes.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BaseKeyframeTypes.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/web-animations/#the-compositeoperation-enumeration\u000a * https://drafts.csswg.org/web-animations/#dictdef-basepropertyindexedkeyframe\u000a * https://drafts.csswg.org/web-animations/#dictdef-basekeyframe\u000a * https://drafts.csswg.org/web-animations/#dictdef-basecomputedkeyframe\u000a *\u000a * Copyright © 2016 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum CompositeOperation { \"replace\", \"add\", \"accumulate\" };\u000a\u000a// The following dictionary types are not referred to by other .webidl files,\u000a// but we use it for manual JS->IDL and IDL->JS conversions in\u000a// KeyframeEffectReadOnly's implementation.\u000a\u000adictionary BasePropertyIndexedKeyframe {\u000a  (double? or sequence<double?>) offset = [];\u000a  (DOMString or sequence<DOMString>) easing = [];\u000a  (CompositeOperation? or sequence<CompositeOperation?>) composite = [];\u000a};\u000a\u000adictionary BaseKeyframe {\u000a  double? offset = null;\u000a  DOMString easing = \"linear\";\u000a  CompositeOperation? composite = null;\u000a\u000a  // Non-standard extensions\u000a\u000a  // Member to allow testing when StyleAnimationValue::ComputeValues fails.\u000a  //\u000a  // Note that we currently only apply this to shorthand properties since\u000a  // it's easier to annotate shorthand property values and because we have\u000a  // only ever observed ComputeValues failing on shorthand values.\u000a  //\u000a  // Bug 1216844 should remove this member since after that bug is fixed we will\u000a  // have a well-defined behavior to use when animation endpoints are not\u000a  // available.\u000a  [ChromeOnly] boolean simulateComputeValuesFailure = false;\u000a};\u000a\u000adictionary BaseComputedKeyframe : BaseKeyframe {\u000a  double computedOffset;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BasicCardPayment.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BasicCardPayment.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this WebIDL file is\u000a *   https://www.w3.org/TR/payment-request/#paymentrequest-interface\u000a */\u000aenum BasicCardType {\u000a  \"credit\",\u000a  \"debit\",\u000a  \"prepaid\"\u000a};\u000a\u000adictionary BasicCardRequest {\u000a  sequence<DOMString> supportedNetworks;\u000a  sequence<BasicCardType> supportedTypes;\u000a};\u000a\u000adictionary BasicCardResponse {\u000a           DOMString cardholderName;\u000a  required DOMString cardNumber;\u000a           DOMString expiryMonth;\u000a           DOMString expiryYear;\u000a           DOMString cardSecurityCode;\u000a           PaymentAddress? billingAddress;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BatteryManager.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BatteryManager.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/battery-status/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface BatteryManager : EventTarget {\u000a    readonly attribute boolean             charging;\u000a    readonly attribute unrestricted double chargingTime;\u000a    readonly attribute unrestricted double dischargingTime;\u000a    readonly attribute double              level;\u000a\u000a             attribute EventHandler        onchargingchange;\u000a             attribute EventHandler        onchargingtimechange;\u000a             attribute EventHandler        ondischargingtimechange;\u000a             attribute EventHandler        onlevelchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BeforeUnloadEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BeforeUnloadEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface, please see\u000a * http://www.whatwg.org/specs/web-apps/current-work/#beforeunloadevent\u000a */\u000a\u000ainterface BeforeUnloadEvent : Event {\u000a  attribute DOMString returnValue;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BiquadFilterNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BiquadFilterNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum BiquadFilterType {\u000a  \"lowpass\",\u000a  \"highpass\",\u000a  \"bandpass\",\u000a  \"lowshelf\",\u000a  \"highshelf\",\u000a  \"peaking\",\u000a  \"notch\",\u000a  \"allpass\"\u000a};\u000a\u000adictionary BiquadFilterOptions : AudioNodeOptions {\u000a             BiquadFilterType type = \"lowpass\";\u000a             float            Q = 1;\u000a             float            detune = 0;\u000a             float            frequency = 350;\u000a             float            gain = 0;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional BiquadFilterOptions options)]\u000ainterface BiquadFilterNode : AudioNode {\u000a\u000a    attribute BiquadFilterType type;\u000a    readonly attribute AudioParam frequency; // in Hertz\u000a    readonly attribute AudioParam detune; // in Cents\u000a    readonly attribute AudioParam Q; // Quality factor\u000a    readonly attribute AudioParam gain; // in Decibels\u000a\u000a    void getFrequencyResponse(Float32Array frequencyHz,\u000a                              Float32Array magResponse,\u000a                              Float32Array phaseResponse);\u000a\u000a};\u000a\u000a// Mozilla extension\u000aBiquadFilterNode implements AudioNodePassThrough;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Blob.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Blob.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/FileAPI/#blob\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000atypedef (BufferSource or Blob or USVString) BlobPart;\u000a\u000a[Constructor(optional sequence<BlobPart> blobParts,\u000a             optional BlobPropertyBag options),\u000a Exposed=(Window,Worker)]\u000ainterface Blob {\u000a\u000a  [GetterThrows]\u000a  readonly attribute unsigned long long size;\u000a\u000a  readonly attribute DOMString type;\u000a\u000a  //slice Blob into byte-ranged chunks\u000a\u000a  [Throws]\u000a  Blob slice([Clamp] optional long long start,\u000a             [Clamp] optional long long end,\u000a             optional DOMString contentType);\u000a};\u000a\u000aenum EndingTypes { \"transparent\", \"native\" };\u000a\u000adictionary BlobPropertyBag {\u000a  DOMString type = \"\";\u000a  EndingTypes endings = \"transparent\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BlobEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BlobEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional BlobEventInit eventInitDict)]\u000ainterface BlobEvent : Event\u000a{\u000a  readonly attribute Blob? data;\u000a};\u000a\u000adictionary BlobEventInit : EventInit\u000a{\u000a  Blob? data = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BoxObject.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BoxObject.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Func=\"IsChromeOrXBL\"]\u000ainterface BoxObject {\u000a  readonly attribute Element? element;\u000a\u000a  readonly attribute long x;\u000a  readonly attribute long y;\u000a  [Throws]\u000a  readonly attribute long screenX;\u000a  [Throws]\u000a  readonly attribute long screenY;\u000a  readonly attribute long width;\u000a  readonly attribute long height;\u000a\u000a  nsISupports? getPropertyAsSupports(DOMString propertyName);\u000a  void setPropertyAsSupports(DOMString propertyName, nsISupports value);\u000a  [Throws]\u000a  DOMString? getProperty(DOMString propertyName);\u000a  void setProperty(DOMString propertyName, DOMString propertyValue);\u000a  void removeProperty(DOMString propertyName);\u000a\u000a  // for stepping through content in the expanded dom with box-ordinal-group order\u000a  readonly attribute Element? parentBox;\u000a  readonly attribute Element? firstChild;\u000a  readonly attribute Element? lastChild;\u000a  readonly attribute Element? nextSibling;\u000a  readonly attribute Element? previousSibling;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BroadcastChannel.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BroadcastChannel.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface, please see\u000a * https://html.spec.whatwg.org/#broadcastchannel\u000a */\u000a\u000a[Constructor(DOMString channel),\u000a Exposed=(Window,Worker)]\u000ainterface BroadcastChannel : EventTarget {\u000a  readonly attribute DOMString name;\u000a\u000a  [Throws]\u000a  void postMessage(any message);\u000a\u000a  void close();\u000a\u000a  attribute EventHandler onmessage;\u000a  attribute EventHandler onmessageerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BrowserElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BrowserElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000acallback BrowserElementNextPaintEventCallback = void ();\u000a\u000aenum BrowserFindCaseSensitivity { \"case-sensitive\", \"case-insensitive\" };\u000aenum BrowserFindDirection { \"forward\", \"backward\" };\u000a\u000adictionary BrowserElementDownloadOptions {\u000a  DOMString? filename;\u000a  DOMString? referrer;\u000a};\u000a\u000adictionary BrowserElementExecuteScriptOptions {\u000a  DOMString? url;\u000a  DOMString? origin;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface BrowserElement {\u000a};\u000a\u000aBrowserElement implements BrowserElementCommon;\u000aBrowserElement implements BrowserElementPrivileged;\u000a\u000a[NoInterfaceObject]\u000ainterface BrowserElementCommon {\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  void addNextPaintListener(BrowserElementNextPaintEventCallback listener);\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  void removeNextPaintListener(BrowserElementNextPaintEventCallback listener);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface BrowserElementPrivileged {\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  void sendMouseEvent(DOMString type,\u000a                      unsigned long x,\u000a                      unsigned long y,\u000a                      unsigned long button,\u000a                      unsigned long clickCount,\u000a                      unsigned long modifiers);\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   Func=\"TouchEvent::PrefEnabled\",\u000a   ChromeOnly]\u000a  void sendTouchEvent(DOMString type,\u000a                      sequence<unsigned long> identifiers,\u000a                      sequence<long> x,\u000a                      sequence<long> y,\u000a                      sequence<unsigned long> rx,\u000a                      sequence<unsigned long> ry,\u000a                      sequence<float> rotationAngles,\u000a                      sequence<float> forces,\u000a                      unsigned long count,\u000a                      unsigned long modifiers);\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  void goBack();\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  void goForward();\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  void reload(optional boolean hardReload = false);\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  void stop();\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  DOMRequest download(DOMString url,\u000a                      optional BrowserElementDownloadOptions options);\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  DOMRequest purgeHistory();\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  DOMRequest getScreenshot([EnforceRange] unsigned long width,\u000a                           [EnforceRange] unsigned long height,\u000a                           optional DOMString mimeType=\"\");\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  void zoom(float zoom);\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  DOMRequest getCanGoBack();\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  DOMRequest getCanGoForward();\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  DOMRequest getContentDimensions();\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  void findAll(DOMString searchString, BrowserFindCaseSensitivity caseSensitivity);\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  void findNext(BrowserFindDirection direction);\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  void clearMatch();\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  DOMRequest executeScript(DOMString script,\u000a                           optional BrowserElementExecuteScriptOptions options);\u000a\u000a  [Throws,\u000a   Pref=\"dom.mozBrowserFramesEnabled\",\u000a   ChromeOnly]\u000a  DOMRequest getWebManifest();\u000a\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BrowserElementDictionaries.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BrowserElementDictionaries.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary OpenWindowEventDetail {\u000a  DOMString url = \"\";\u000a  DOMString name = \"\";\u000a  DOMString features = \"\";\u000a  Node? frameElement = null;\u000a};\u000a\u000adictionary DOMWindowResizeEventDetail {\u000a  long width = 0;\u000a  long height = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BrowserFeedWriter.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/BrowserFeedWriter.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[JSImplementation=\"@mozilla.org/browser/feeds/result-writer;1\",\u000a Func=\"mozilla::FeedWriterEnabled::IsEnabled\",\u000a Constructor]\u000ainterface BrowserFeedWriter {\u000a  /**\u000a   * Writes the feed content, assumes that the feed writer is initialized.\u000a   */\u000a  void writeContent();\u000a\u000a  /**\u000a   * Uninitialize the feed writer.\u000a   */\u000a  void close();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CDATASection.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CDATASection.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface CDATASection : Text {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSPDictionaries.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSPDictionaries.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/**\u000a  * Dictionary used to display CSP info.\u000a  */\u000a\u000adictionary CSP {\u000a  boolean report-only = false;\u000a\u000a  sequence<DOMString> default-src;\u000a  sequence<DOMString> script-src;\u000a  sequence<DOMString> object-src;\u000a  sequence<DOMString> style-src;\u000a  sequence<DOMString> img-src;\u000a  sequence<DOMString> media-src;\u000a  sequence<DOMString> frame-src;\u000a  sequence<DOMString> font-src;\u000a  sequence<DOMString> connect-src;\u000a  sequence<DOMString> report-uri;\u000a  sequence<DOMString> frame-ancestors;\u000a  // sequence<DOMString> reflected-xss; // not supported in Firefox\u000a  sequence<DOMString> base-uri;\u000a  sequence<DOMString> form-action;\u000a  sequence<DOMString> referrer;\u000a  sequence<DOMString> manifest-src;\u000a  sequence<DOMString> upgrade-insecure-requests;\u000a  sequence<DOMString> child-src;\u000a  sequence<DOMString> block-all-mixed-content;\u000a  sequence<DOMString> require-sri-for;\u000a  sequence<DOMString> sandbox;\u000a  sequence<DOMString> worker-src;\u000a};\u000a\u000adictionary CSPPolicies {\u000a  sequence<CSP> csp-policies;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSPReport.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSPReport.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/**\u000a  * This dictionary holds the parameters used to send\u000a  * CSP reports in JSON format.\u000a  */\u000a\u000adictionary CSPReportProperties {\u000a  DOMString document-uri = \"\";\u000a  DOMString referrer = \"\";\u000a  DOMString blocked-uri = \"\";\u000a  DOMString violated-directive = \"\";\u000a  DOMString original-policy= \"\";\u000a  DOMString source-file;\u000a  DOMString script-sample;\u000a  long line-number;\u000a};\u000a\u000adictionary CSPReport {\u000a  CSPReportProperties csp-report;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSS.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSS.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/css3-conditional/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface CSS {\u000a  [Throws]\u000a  static boolean supports(DOMString property, DOMString value);\u000a\u000a  [Throws]\u000a  static boolean supports(DOMString conditionText);\u000a};\u000a\u000a// http://dev.w3.org/csswg/cssom/#the-css.escape%28%29-method\u000apartial interface CSS {\u000a  static DOMString escape(DOMString ident);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSAnimation.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSAnimation.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/css-animations-2/#the-CSSAnimation-interface\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Func=\"nsDocument::IsWebAnimationsEnabled\",\u000a HeaderFile=\"nsAnimationManager.h\"]\u000ainterface CSSAnimation : Animation {\u000a  [Constant] readonly attribute DOMString animationName;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSConditionRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSConditionRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/css-conditional/#the-cssconditionrule-interface\u000a */\u000a\u000a// https://drafts.csswg.org/css-conditional/#the-cssconditionrule-interface\u000ainterface CSSConditionRule : CSSGroupingRule {\u000a  [SetterThrows]\u000a  attribute DOMString conditionText;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSCounterStyleRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSCounterStyleRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/css-counter-styles-3/#the-csscounterstylerule-interface\u000a */\u000a\u000a// https://drafts.csswg.org/css-counter-styles-3/#the-csscounterstylerule-interface\u000ainterface CSSCounterStyleRule : CSSRule {\u000a  attribute DOMString name;\u000a  attribute DOMString system;\u000a  attribute DOMString symbols;\u000a  attribute DOMString additiveSymbols;\u000a  attribute DOMString negative;\u000a  attribute DOMString prefix;\u000a  attribute DOMString suffix;\u000a  attribute DOMString range;\u000a  attribute DOMString pad;\u000a  attribute DOMString speakAs;\u000a  attribute DOMString fallback;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSFontFaceRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSFontFaceRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/css-fonts/#om-fontface\u000a */\u000a\u000a// https://drafts.csswg.org/css-fonts/#om-fontface\u000a// But we implement a very old draft, apparently....\u000a// See bug 1058408 for implementing the current spec.\u000ainterface CSSFontFaceRule : CSSRule {\u000a  [SameObject] readonly attribute CSSStyleDeclaration style;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSFontFeatureValuesRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSFontFeatureValuesRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/css-fonts/#om-fontfeaturevalues\u000a */\u000a\u000a// https://drafts.csswg.org/css-fonts/#om-fontfeaturevalues\u000a// but we don't implement anything remotely resembling the spec.\u000ainterface CSSFontFeatureValuesRule : CSSRule {\u000a  [SetterThrows]\u000a  attribute DOMString fontFamily;\u000a\u000a  // Not yet implemented\u000a  //  readonly attribute CSSFontFeatureValuesMap annotation;\u000a  //  readonly attribute CSSFontFeatureValuesMap ornaments;\u000a  //  readonly attribute CSSFontFeatureValuesMap stylistic;\u000a  //  readonly attribute CSSFontFeatureValuesMap swash;\u000a  //  readonly attribute CSSFontFeatureValuesMap characterVariant;\u000a  //  readonly attribute CSSFontFeatureValuesMap styleset;\u000a};\u000a\u000apartial interface CSSFontFeatureValuesRule {\u000a  // Gecko addition?\u000a  [SetterThrows]\u000a  attribute DOMString valueText;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSGroupingRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSGroupingRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/cssom/#cssgroupingrule\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#cssgroupingrule\u000ainterface CSSGroupingRule : CSSRule {\u000a  [SameObject] readonly attribute CSSRuleList cssRules;\u000a  [Throws]\u000a  unsigned long insertRule(DOMString rule, optional unsigned long index = 0);\u000a  [Throws]\u000a  void deleteRule(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSImportRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSImportRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/cssom/#cssimportrule\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#cssimportrule\u000ainterface CSSImportRule : CSSRule {\u000a  readonly attribute DOMString href;\u000a  // Per spec, the .media is never null, but in our implementation it can\u000a  // be since stylesheet can be null, and in Stylo, media is derived from\u000a  // the stylesheet.  See <https://bugzilla.mozilla.org/show_bug.cgi?id=1326509>.\u000a  [SameObject, PutForwards=mediaText] readonly attribute MediaList? media;\u000a  // Per spec, the .styleSheet is never null, but in our implementation it can\u000a  // be.  See <https://bugzilla.mozilla.org/show_bug.cgi?id=1326509>.\u000a  [SameObject] readonly attribute CSSStyleSheet? styleSheet;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSKeyframeRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSKeyframeRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/css-animations/#interface-csskeyframerule\u000a */\u000a\u000a// https://drafts.csswg.org/css-animations/#interface-csskeyframerule\u000ainterface CSSKeyframeRule : CSSRule {\u000a           attribute DOMString           keyText;\u000a  readonly attribute CSSStyleDeclaration style;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSKeyframesRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSKeyframesRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/css-animations/#interface-csskeyframesrule\u000a */\u000a\u000a// https://drafts.csswg.org/css-animations/#interface-csskeyframesrule\u000ainterface CSSKeyframesRule : CSSRule {\u000a           attribute DOMString   name;\u000a  readonly attribute CSSRuleList cssRules;\u000a\u000a  void            appendRule(DOMString rule);\u000a  void            deleteRule(DOMString select);\u000a  CSSKeyframeRule? findRule(DOMString select);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSLexer.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSLexer.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a// The possible values for CSSToken.tokenType.\u000aenum CSSTokenType {\u000a  // Whitespace.\u000a  \"whitespace\",\u000a  // A CSS comment.\u000a  \"comment\",\u000a  // An identifier.  |text| holds the identifier text.\u000a  \"ident\",\u000a  // A function token.  |text| holds the function name.  Note that the\u000a  // function token includes (i.e., consumes) the \"(\" -- but this is\u000a  // not included in |text|.\u000a  \"function\",\u000a  // \"@word\".  |text| holds \"word\", without the \"@\".\u000a  \"at\",\u000a  // \"#word\".  |text| holds \"word\", without the \"#\".\u000a  \"id\",\u000a  // \"#word\".  ID is used when \"word\" would have been a valid IDENT\u000a  // token without the \"#\"; otherwise, HASH is used.\u000a  \"hash\",\u000a  // A number.\u000a  \"number\",\u000a  // A dimensioned number.\u000a  \"dimension\",\u000a  // A percentage.\u000a  \"percentage\",\u000a  // A string.\u000a  \"string\",\u000a  // A \"bad string\".  This can only be returned when a string is\u000a  // unterminated at EOF.  (However, currently the lexer returns\u000a  // ordinary STRING tokens in this situation.)\u000a  \"bad_string\",\u000a  // A URL.  |text| holds the URL.\u000a  \"url\",\u000a  // A \"bad URL\".  This is a URL that is unterminated at EOF.  |text|\u000a  // holds the URL.\u000a  \"bad_url\",\u000a  // A \"symbol\" is any one-character symbol.  This corresponds to the\u000a  // DELIM token in the CSS specification.\u000a  \"symbol\",\u000a  // The \"~=\" token.\u000a  \"includes\",\u000a  // The \"|=\" token.\u000a  \"dashmatch\",\u000a  // The \"^=\" token.\u000a  \"beginsmatch\",\u000a  // The \"$=\" token.\u000a  \"endsmatch\",\u000a  // The \"*=\" token.\u000a  \"containsmatch\",\u000a  // A unicode-range token.  This is currently not fully represented\u000a  // by CSSToken.\u000a  \"urange\",\u000a  // HTML comment delimiters, either \"<!--\" or \"-->\".  Note that each\u000a  // is emitted as a separate token, and the intervening text is lexed\u000a  // as normal; whereas ordinary CSS comments are lexed as a unit.\u000a  \"htmlcomment\"\u000a};\u000a\u000adictionary CSSToken {\u000a  // The token type.\u000a  CSSTokenType tokenType = \"whitespace\";\u000a\u000a  // Offset of the first character of the token.\u000a  unsigned long startOffset = 0;\u000a  // Offset of the character after the final character of the token.\u000a  // This is chosen so that the offsets can be passed to |substring|\u000a  // to yield the exact contents of the token.\u000a  unsigned long endOffset = 0;\u000a\u000a  // If the token is a number, percentage, or dimension, this holds\u000a  // the value.  This is not present for other token types.\u000a  double number;\u000a  // If the token is a number, percentage, or dimension, this is true\u000a  // iff the number had an explicit sign.  This is not present for\u000a  // other token types.\u000a  boolean hasSign;\u000a  // If the token is a number, percentage, or dimension, this is true\u000a  // iff the number was specified as an integer.  This is not present\u000a  // for other token types.\u000a  boolean isInteger;\u000a\u000a  // Text associated with the token.  This is not present for all\u000a  // token types.  In particular it is:\u000a  //\u000a  // Token type    Meaning\u000a  // ===============================\u000a  //    ident      The identifier.\u000a  //    function   The function name.  Note that the \"(\" is part\u000a  //               of the token but is not present in |text|.\u000a  //    at         The word.\u000a  //    id         The word.\u000a  //    hash       The word.\u000a  //    dimension  The dimension.\u000a  //    string     The string contents after escape processing.\u000a  //    bad_string Ditto.\u000a  //    url        The URL after escape processing.\u000a  //    bad_url    Ditto.\u000a  //    symbol     The symbol text.\u000a  DOMString text;\u000a};\u000a\u000a/**\u000a * CSSLexer is an interface to the CSS lexer.  It tokenizes an\u000a * input stream and returns CSS tokens.\u000a *\u000a * @see InspectorUtils.getCSSLexer to create an instance of the lexer.\u000a */\u000a[ChromeOnly]\u000ainterface CSSLexer\u000a{\u000a  /**\u000a   * The line number of the most recently returned token.  Line\u000a   * numbers are 0-based.\u000a   */\u000a  readonly attribute unsigned long lineNumber;\u000a\u000a  /**\u000a   * The column number of the most recently returned token.  Column\u000a   * numbers are 0-based.\u000a   */\u000a  readonly attribute unsigned long columnNumber;\u000a\u000a  /**\u000a   * When EOF is reached, the last token might be unterminated in some\u000a   * ways.  This method takes an input string and appends the needed\u000a   * terminators.  In particular:\u000a   *\u000a   * 1. If EOF occurs mid-string, this will append the correct quote.\u000a   * 2. If EOF occurs in a url token, this will append the close paren.\u000a   * 3. If EOF occurs in a comment this will append the comment closer.\u000a   *\u000a   * A trailing backslash might also have been present in the input\u000a   * string.  This is handled in different ways, depending on the\u000a   * context and arguments.\u000a   *\u000a   * If preserveBackslash is true, then the existing backslash at the\u000a   * end of inputString is preserved, and a new backslash is appended.\u000a   * That is, the input |\\| is transformed to |\\\\|, and the\u000a   * input |'\\| is transformed to |'\\\\'|.\u000a   *\u000a   * Otherwise, preserveBackslash is false:\u000a   * If the backslash appears in a string context, then the trailing\u000a   * backslash is dropped from inputString.  That is, |\"\\| is\u000a   * transformed to |\"\"|.\u000a   * If the backslash appears outside of a string context, then\u000a   * U+FFFD is appended.  That is, |\\| is transformed to a string\u000a   * with two characters: backslash followed by U+FFFD.\u000a   *\u000a   * Passing false for preserveBackslash makes the result conform to\u000a   * the CSS Syntax specification.  However, passing true may give\u000a   * somewhat more intuitive behavior.\u000a   *\u000a   * @param inputString the input string\u000a   * @param preserveBackslash how to handle trailing backslashes\u000a   * @return the input string with the termination characters appended\u000a   */\u000a  DOMString performEOFFixup(DOMString inputString, boolean preserveBackslash);\u000a\u000a  /**\u000a   * Return the next token, or null at EOF.\u000a   */\u000a  CSSToken? nextToken();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSMediaRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSMediaRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/cssom/#the-cssmediarule-interface\u000a * https://drafts.csswg.org/css-conditional/#the-cssmediarule-interface\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssmediarule-interface and\u000a// https://drafts.csswg.org/css-conditional/#the-cssmediarule-interface\u000a// except they disagree with each other.  We're taking the inheritance from\u000a// css-conditional and the PutForwards behavior from cssom.\u000ainterface CSSMediaRule : CSSConditionRule {\u000a  [SameObject, PutForwards=mediaText] readonly attribute MediaList media;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSMozDocumentRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSMozDocumentRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a// This is a non-standard interface for @-moz-document rules\u000ainterface CSSMozDocumentRule : CSSConditionRule {\u000a  // XXX Add access to the URL list.\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSNamespaceRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSNamespaceRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/cssom/#cssnamespacerule\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#cssnamespacerule\u000ainterface CSSNamespaceRule : CSSRule {\u000a  readonly attribute DOMString namespaceURI;\u000a  readonly attribute DOMString prefix;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSPageRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSPageRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/cssom/#the-csspagerule-interface\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-csspagerule-interface\u000a// Per spec, this should inherit from CSSGroupingRule, but we don't\u000a// implement this yet.\u000ainterface CSSPageRule : CSSRule {\u000a  // selectorText not implemented yet\u000a  //         attribute DOMString selectorText;\u000a  [SameObject, PutForwards=cssText] readonly attribute CSSStyleDeclaration style;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSPrimitiveValue.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSPrimitiveValue.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface CSSPrimitiveValue : CSSValue {\u000a\u000a  // UnitTypes\u000a  const unsigned short      CSS_UNKNOWN                    = 0;\u000a  const unsigned short      CSS_NUMBER                     = 1;\u000a  const unsigned short      CSS_PERCENTAGE                 = 2;\u000a  const unsigned short      CSS_EMS                        = 3;\u000a  const unsigned short      CSS_EXS                        = 4;\u000a  const unsigned short      CSS_PX                         = 5;\u000a  const unsigned short      CSS_CM                         = 6;\u000a  const unsigned short      CSS_MM                         = 7;\u000a  const unsigned short      CSS_IN                         = 8;\u000a  const unsigned short      CSS_PT                         = 9;\u000a  const unsigned short      CSS_PC                         = 10;\u000a  const unsigned short      CSS_DEG                        = 11;\u000a  const unsigned short      CSS_RAD                        = 12;\u000a  const unsigned short      CSS_GRAD                       = 13;\u000a  const unsigned short      CSS_MS                         = 14;\u000a  const unsigned short      CSS_S                          = 15;\u000a  const unsigned short      CSS_HZ                         = 16;\u000a  const unsigned short      CSS_KHZ                        = 17;\u000a  const unsigned short      CSS_DIMENSION                  = 18;\u000a  const unsigned short      CSS_STRING                     = 19;\u000a  const unsigned short      CSS_URI                        = 20;\u000a  const unsigned short      CSS_IDENT                      = 21;\u000a  const unsigned short      CSS_ATTR                       = 22;\u000a  const unsigned short      CSS_COUNTER                    = 23;\u000a  const unsigned short      CSS_RECT                       = 24;\u000a  const unsigned short      CSS_RGBCOLOR                   = 25;\u000a\u000a  readonly attribute unsigned short   primitiveType;\u000a  [Throws]\u000a  void               setFloatValue(unsigned short unitType,\u000a                                   float floatValue);\u000a  [Throws]\u000a  float              getFloatValue(unsigned short unitType);\u000a  [Throws]\u000a  void               setStringValue(unsigned short stringType,\u000a                                    DOMString stringValue);\u000a  [Throws]\u000a  DOMString          getStringValue();\u000a  [Throws]\u000a  void               getCounterValue();  // always throws\u000a  [Throws]\u000a  Rect               getRectValue();\u000a  [Throws]\u000a  RGBColor           getRGBColorValue();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSPseudoElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSPseudoElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/css-pseudo/#CSSPseudoElement-interface\u000a * https://drafts.csswg.org/cssom/#pseudoelement\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a// Both CSSOM and CSS Pseudo-Elements 4 provide contradictory definitions for\u000a// this interface.\u000a// What we implement here is a minimal subset of the two definitions which we\u000a// ship behind a pref until the specification issues have been resolved.\u000a[Func=\"nsDocument::IsWebAnimationsEnabled\"]\u000ainterface CSSPseudoElement {\u000a  readonly attribute DOMString type;\u000a  readonly attribute Element parentElement;\u000a};\u000a\u000a// https://drafts.csswg.org/web-animations/#extensions-to-the-pseudoelement-interface\u000aCSSPseudoElement implements Animatable;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/cssom/#the-cssrule-interface\u000a * https://drafts.csswg.org/css-animations/#interface-cssrule\u000a * https://drafts.csswg.org/css-counter-styles-3/#extentions-to-cssrule-interface\u000a * https://drafts.csswg.org/css-conditional-3/#extentions-to-cssrule-interface\u000a * https://drafts.csswg.org/css-fonts-3/#om-fontfeaturevalues\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssrule-interface\u000ainterface CSSRule {\u000a\u000a  const unsigned short STYLE_RULE = 1;\u000a  const unsigned short CHARSET_RULE = 2; // historical\u000a  const unsigned short IMPORT_RULE = 3;\u000a  const unsigned short MEDIA_RULE = 4;\u000a  const unsigned short FONT_FACE_RULE = 5;\u000a  const unsigned short PAGE_RULE = 6;\u000a  // FIXME: We don't support MARGIN_RULE yet.\u000a  // XXXbz Should we expose the constant anyway?\u000a  // const unsigned short MARGIN_RULE = 9;\u000a  const unsigned short NAMESPACE_RULE = 10;\u000a  readonly attribute unsigned short type;\u000a  attribute DOMString cssText;\u000a  readonly attribute CSSRule? parentRule;\u000a  readonly attribute CSSStyleSheet? parentStyleSheet;\u000a};\u000a\u000a// https://drafts.csswg.org/css-animations/#interface-cssrule\u000apartial interface CSSRule {\u000a    const unsigned short KEYFRAMES_RULE = 7;\u000a    const unsigned short KEYFRAME_RULE = 8;\u000a};\u000a\u000a// https://drafts.csswg.org/css-counter-styles-3/#extentions-to-cssrule-interface\u000apartial interface CSSRule {\u000a    const unsigned short COUNTER_STYLE_RULE = 11;\u000a};\u000a\u000a// https://drafts.csswg.org/css-conditional-3/#extentions-to-cssrule-interface\u000apartial interface CSSRule {\u000a    const unsigned short SUPPORTS_RULE = 12;\u000a};\u000a\u000a// Non-standard extension for @-moz-document rules.\u000apartial interface CSSRule {\u000a    [ChromeOnly]\u000a    const unsigned short DOCUMENT_RULE = 13;\u000a};\u000a\u000a// https://drafts.csswg.org/css-fonts-3/#om-fontfeaturevalues\u000apartial interface CSSRule {\u000a  const unsigned short FONT_FEATURE_VALUES_RULE = 14;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSRuleList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSRuleList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface CSSRuleList {\u000a  readonly attribute unsigned long length;\u000a  getter CSSRule? item(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSStyleDeclaration.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSStyleDeclaration.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/cssom/\u000a */\u000a\u000ainterface CSSStyleDeclaration {\u000a  [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows]\u000a  attribute DOMString cssText;\u000a\u000a  readonly attribute unsigned long length;\u000a  getter DOMString item(unsigned long index);\u000a\u000a  [Throws]\u000a  DOMString getPropertyValue(DOMString property);\u000a  // Mozilla extension, sort of\u000a  [Throws]\u000a  CSSValue? getPropertyCSSValue(DOMString property);\u000a  DOMString getPropertyPriority(DOMString property);\u000a  [CEReactions, NeedsSubjectPrincipal=NonSystem, Throws]\u000a  void setProperty(DOMString property, [TreatNullAs=EmptyString] DOMString value, [TreatNullAs=EmptyString] optional DOMString priority = \"\");\u000a  [CEReactions, Throws]\u000a  DOMString removeProperty(DOMString property);\u000a\u000a  readonly attribute CSSRule? parentRule;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSStyleRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSStyleRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/cssom/#the-cssstylerule-interface\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssstylerule-interface\u000ainterface CSSStyleRule : CSSRule {\u000a  attribute DOMString selectorText;\u000a  [SameObject, PutForwards=cssText] readonly attribute CSSStyleDeclaration style;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSStyleSheet.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSStyleSheet.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/cssom/\u000a */\u000a\u000aenum CSSStyleSheetParsingMode {\u000a  \"author\",\u000a  \"user\",\u000a  \"agent\"\u000a};\u000a\u000ainterface CSSStyleSheet : StyleSheet {\u000a  [Pure]\u000a  readonly attribute CSSRule? ownerRule;\u000a  [Throws, NeedsSubjectPrincipal]\u000a  readonly attribute CSSRuleList cssRules;\u000a  [ChromeOnly, BinaryName=\"parsingModeDOM\"]\u000a  readonly attribute CSSStyleSheetParsingMode parsingMode;\u000a  [Throws, NeedsSubjectPrincipal]\u000a  unsigned long insertRule(DOMString rule, optional unsigned long index = 0);\u000a  [Throws, NeedsSubjectPrincipal]\u000a  void deleteRule(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSSupportsRule.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSSupportsRule.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/css-conditional/#the-csssupportsrule-interface\u000a */\u000a\u000a// https://drafts.csswg.org/css-conditional/#the-csssupportsrule-interface\u000ainterface CSSSupportsRule : CSSConditionRule {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSTransition.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSTransition.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/css-transitions-2/#the-CSSTransition-interface\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Func=\"nsDocument::IsWebAnimationsEnabled\",\u000a HeaderFile=\"nsTransitionManager.h\"]\u000ainterface CSSTransition : Animation {\u000a  [Constant] readonly attribute DOMString transitionProperty;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSValue.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSValue.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface CSSValue {\u000a\u000a  // UnitTypes\u000a  const unsigned short      CSS_INHERIT                    = 0;\u000a  const unsigned short      CSS_PRIMITIVE_VALUE            = 1;\u000a  const unsigned short      CSS_VALUE_LIST                 = 2;\u000a  const unsigned short      CSS_CUSTOM                     = 3;\u000a\u000a           [Throws]\u000a           attribute DOMString        cssText;\u000a\u000a  readonly attribute unsigned short   cssValueType;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSValueList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CSSValueList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface CSSValueList : CSSValue {\u000a         readonly attribute unsigned long    length;\u000a  getter CSSValue?          item(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Cache.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Cache.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html\u000a *\u000a */\u000a\u000a// https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#cache\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::DOMPrefs::DOMCachesEnabled\"]\u000ainterface Cache {\u000a  [NewObject]\u000a  Promise<Response> match(RequestInfo request, optional CacheQueryOptions options);\u000a  [NewObject]\u000a  Promise<sequence<Response>> matchAll(optional RequestInfo request, optional CacheQueryOptions options);\u000a  [NewObject, NeedsCallerType]\u000a  Promise<void> add(RequestInfo request);\u000a  [NewObject, NeedsCallerType]\u000a  Promise<void> addAll(sequence<RequestInfo> requests);\u000a  [NewObject]\u000a  Promise<void> put(RequestInfo request, Response response);\u000a  [NewObject]\u000a  Promise<boolean> delete(RequestInfo request, optional CacheQueryOptions options);\u000a  [NewObject]\u000a  Promise<sequence<Request>> keys(optional RequestInfo request, optional CacheQueryOptions options);\u000a};\u000a\u000adictionary CacheQueryOptions {\u000a  boolean ignoreSearch = false;\u000a  boolean ignoreMethod = false;\u000a  boolean ignoreVary = false;\u000a  DOMString cacheName;\u000a};\u000a\u000adictionary CacheBatchOperation {\u000a  DOMString type;\u000a  Request request;\u000a  Response response;\u000a  CacheQueryOptions options;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CacheStorage.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CacheStorage.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html\u000a *\u000a */\u000a\u000a// https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#cache-storage\u000a\u000ainterface Principal;\u000a\u000a[Exposed=(Window,Worker),\u000a ChromeConstructor(CacheStorageNamespace namespace, Principal principal),\u000a Func=\"mozilla::dom::DOMPrefs::DOMCachesEnabled\"]\u000ainterface CacheStorage {\u000a  [NewObject]\u000a  Promise<Response> match(RequestInfo request, optional CacheQueryOptions options);\u000a  [NewObject]\u000a  Promise<boolean> has(DOMString cacheName);\u000a  [NewObject]\u000a  Promise<Cache> open(DOMString cacheName);\u000a  [NewObject]\u000a  Promise<boolean> delete(DOMString cacheName);\u000a  [NewObject]\u000a  Promise<sequence<DOMString>> keys();\u000a};\u000a\u000a// chrome-only, gecko specific extension\u000aenum CacheStorageNamespace {\u000a  \"content\", \"chrome\"\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CanvasCaptureMediaStream.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CanvasCaptureMediaStream.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/mediacapture-fromelement/index.html\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"canvas.capturestream.enabled\"]\u000ainterface CanvasCaptureMediaStream : MediaStream {\u000a    readonly attribute HTMLCanvasElement canvas;\u000a    void requestFrame();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CanvasRenderingContext2D.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CanvasRenderingContext2D.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000aenum CanvasWindingRule { \"nonzero\", \"evenodd\" };\u000a\u000adictionary ContextAttributes2D {\u000a  // whether or not we're planning to do a lot of readback operations\u000a  boolean willReadFrequently = false;\u000a  // signal if the canvas contains an alpha channel\u000a  boolean alpha = true;\u000a};\u000a\u000adictionary HitRegionOptions {\u000a  Path2D? path = null;\u000a  DOMString id = \"\";\u000a  Element? control = null;\u000a};\u000a\u000atypedef (HTMLImageElement or\u000a         SVGImageElement) HTMLOrSVGImageElement;\u000a\u000atypedef (HTMLOrSVGImageElement or\u000a         HTMLCanvasElement or\u000a         HTMLVideoElement or\u000a         ImageBitmap) CanvasImageSource;\u000a\u000ainterface CanvasRenderingContext2D {\u000a\u000a  // back-reference to the canvas.  Might be null if we're not\u000a  // associated with a canvas.\u000a  readonly attribute HTMLCanvasElement? canvas;\u000a\u000a  // Mozilla-specific stuff\u000a  // FIXME Bug 768048 mozCurrentTransform/mozCurrentTransformInverse should return a WebIDL array.\u000a  [Throws]\u000a  attribute object mozCurrentTransform; // [ m11, m12, m21, m22, dx, dy ], i.e. row major\u000a  [Throws]\u000a  attribute object mozCurrentTransformInverse;\u000a\u000a  [SetterThrows]\u000a  attribute DOMString mozTextStyle;\u000a\u000a  // image smoothing mode -- if disabled, images won't be smoothed\u000a  // if scaled.\u000a  [Deprecated=\"PrefixedImageSmoothingEnabled\"]\u000a  attribute boolean mozImageSmoothingEnabled;\u000a\u000a  // Show the caret if appropriate when drawing\u000a  [Func=\"CanvasUtils::HasDrawWindowPrivilege\"]\u000a  const unsigned long DRAWWINDOW_DRAW_CARET   = 0x01;\u000a  // Don't flush pending layout notifications that could otherwise\u000a  // be batched up\u000a  [Func=\"CanvasUtils::HasDrawWindowPrivilege\"]\u000a  const unsigned long DRAWWINDOW_DO_NOT_FLUSH = 0x02;\u000a  // Draw scrollbars and scroll the viewport if they are present\u000a  [Func=\"CanvasUtils::HasDrawWindowPrivilege\"]\u000a  const unsigned long DRAWWINDOW_DRAW_VIEW    = 0x04;\u000a  // Use the widget layer manager if available. This means hardware\u000a  // acceleration may be used, but it might actually be slower or\u000a  // lower quality than normal. It will however more accurately reflect\u000a  // the pixels rendered to the screen.\u000a  [Func=\"CanvasUtils::HasDrawWindowPrivilege\"]\u000a  const unsigned long DRAWWINDOW_USE_WIDGET_LAYERS = 0x08;\u000a  // Don't synchronously decode images - draw what we have\u000a  [Func=\"CanvasUtils::HasDrawWindowPrivilege\"]\u000a  const unsigned long DRAWWINDOW_ASYNC_DECODE_IMAGES = 0x10;\u000a\u000a  /**\u000a   * Renders a region of a window into the canvas.  The contents of\u000a   * the window's viewport are rendered, ignoring viewport clipping\u000a   * and scrolling.\u000a   *\u000a   * @param x\u000a   * @param y\u000a   * @param w\u000a   * @param h specify the area of the window to render, in CSS\u000a   * pixels.\u000a   *\u000a   * @param backgroundColor the canvas is filled with this color\u000a   * before we render the window into it. This color may be\u000a   * transparent/translucent. It is given as a CSS color string\u000a   * (e.g., rgb() or rgba()).\u000a   *\u000a   * @param flags Used to better control the drawWindow call.\u000a   * Flags can be ORed together.\u000a   *\u000a   * Of course, the rendering obeys the current scale, transform and\u000a   * globalAlpha values.\u000a   *\u000a   * Hints:\u000a   * -- If 'rgba(0,0,0,0)' is used for the background color, the\u000a   * drawing will be transparent wherever the window is transparent.\u000a   * -- Top-level browsed documents are usually not transparent\u000a   * because the user's background-color preference is applied,\u000a   * but IFRAMEs are transparent if the page doesn't set a background.\u000a   * -- If an opaque color is used for the background color, rendering\u000a   * will be faster because we won't have to compute the window's\u000a   * transparency.\u000a   *\u000a   * This API cannot currently be used by Web content. It is chrome\u000a   * and Web Extensions (with a permission) only.\u000a   */\u000a  [Throws, Func=\"CanvasUtils::HasDrawWindowPrivilege\"]\u000a  void drawWindow(Window window, double x, double y, double w, double h,\u000a                  DOMString bgColor, optional unsigned long flags = 0);\u000a\u000a  /**\u000a   * This causes a context that is currently using a hardware-accelerated\u000a   * backend to fallback to a software one. All state should be preserved.\u000a   */\u000a  [ChromeOnly]\u000a  void demote();\u000a};\u000a\u000aCanvasRenderingContext2D implements CanvasState;\u000aCanvasRenderingContext2D implements CanvasTransform;\u000aCanvasRenderingContext2D implements CanvasCompositing;\u000aCanvasRenderingContext2D implements CanvasImageSmoothing;\u000aCanvasRenderingContext2D implements CanvasFillStrokeStyles;\u000aCanvasRenderingContext2D implements CanvasShadowStyles;\u000aCanvasRenderingContext2D implements CanvasFilters;\u000aCanvasRenderingContext2D implements CanvasRect;\u000aCanvasRenderingContext2D implements CanvasDrawPath;\u000aCanvasRenderingContext2D implements CanvasUserInterface;\u000aCanvasRenderingContext2D implements CanvasText;\u000aCanvasRenderingContext2D implements CanvasDrawImage;\u000aCanvasRenderingContext2D implements CanvasImageData;\u000aCanvasRenderingContext2D implements CanvasPathDrawingStyles;\u000aCanvasRenderingContext2D implements CanvasTextDrawingStyles;\u000aCanvasRenderingContext2D implements CanvasPathMethods;\u000aCanvasRenderingContext2D implements CanvasHitRegions;\u000a\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasState {\u000a  // state\u000a  void save(); // push state on state stack\u000a  void restore(); // pop state stack and restore state\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasTransform {\u000a  // transformations (default transform is the identity matrix)\u000a// NOT IMPLEMENTED           attribute SVGMatrix currentTransform;\u000a  [Throws, LenientFloat]\u000a  void scale(double x, double y);\u000a  [Throws, LenientFloat]\u000a  void rotate(double angle);\u000a  [Throws, LenientFloat]\u000a  void translate(double x, double y);\u000a  [Throws, LenientFloat]\u000a  void transform(double a, double b, double c, double d, double e, double f);\u000a  [Throws, LenientFloat]\u000a  void setTransform(double a, double b, double c, double d, double e, double f);\u000a  [Throws]\u000a  void resetTransform();\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasCompositing {\u000a  attribute unrestricted double globalAlpha; // (default 1.0)\u000a  [Throws]\u000a  attribute DOMString globalCompositeOperation; // (default source-over)\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasImageSmoothing {\u000a  // drawing images\u000a  attribute boolean imageSmoothingEnabled;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasFillStrokeStyles {\u000a  // colors and styles (see also the CanvasPathDrawingStyles interface)\u000a  attribute (DOMString or CanvasGradient or CanvasPattern) strokeStyle; // (default black)\u000a  attribute (DOMString or CanvasGradient or CanvasPattern) fillStyle; // (default black)\u000a  [NewObject]\u000a  CanvasGradient createLinearGradient(double x0, double y0, double x1, double y1);\u000a  [NewObject, Throws]\u000a  CanvasGradient createRadialGradient(double x0, double y0, double r0, double x1, double y1, double r1);\u000a  [NewObject, Throws]\u000a  CanvasPattern? createPattern(CanvasImageSource image, [TreatNullAs=EmptyString] DOMString repetition);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasShadowStyles {\u000a  [LenientFloat]\u000a  attribute double shadowOffsetX; // (default 0)\u000a  [LenientFloat]\u000a  attribute double shadowOffsetY; // (default 0)\u000a  [LenientFloat]\u000a  attribute double shadowBlur; // (default 0)\u000a  attribute DOMString shadowColor; // (default transparent black)\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasFilters {\u000a  [Pref=\"canvas.filters.enabled\", SetterThrows]\u000a  attribute DOMString filter; // (default empty string = no filter)\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasRect {\u000a  [LenientFloat]\u000a  void clearRect(double x, double y, double w, double h);\u000a  [LenientFloat]\u000a  void fillRect(double x, double y, double w, double h);\u000a  [LenientFloat]\u000a  void strokeRect(double x, double y, double w, double h);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasDrawPath {\u000a  // path API (see also CanvasPathMethods)\u000a  void beginPath();\u000a  void fill(optional CanvasWindingRule winding = \"nonzero\");\u000a  void fill(Path2D path, optional CanvasWindingRule winding = \"nonzero\");\u000a  void stroke();\u000a  void stroke(Path2D path);\u000a  void clip(optional CanvasWindingRule winding = \"nonzero\");\u000a  void clip(Path2D path, optional CanvasWindingRule winding = \"nonzero\");\u000a// NOT IMPLEMENTED  void resetClip();\u000a  boolean isPointInPath(unrestricted double x, unrestricted double y, optional CanvasWindingRule winding = \"nonzero\");\u000a  boolean isPointInPath(Path2D path, unrestricted double x, unrestricted double y, optional CanvasWindingRule winding = \"nonzero\");\u000a  boolean isPointInStroke(double x, double y);\u000a  boolean isPointInStroke(Path2D path, unrestricted double x, unrestricted double y);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasUserInterface {\u000a  [Pref=\"canvas.focusring.enabled\", Throws] void drawFocusIfNeeded(Element element);\u000a// NOT IMPLEMENTED  void drawSystemFocusRing(Path path, HTMLElement element);\u000a  [Pref=\"canvas.customfocusring.enabled\"] boolean drawCustomFocusRing(Element element);\u000a// NOT IMPLEMENTED  boolean drawCustomFocusRing(Path path, HTMLElement element);\u000a// NOT IMPLEMENTED  void scrollPathIntoView();\u000a// NOT IMPLEMENTED  void scrollPathIntoView(Path path);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasText {\u000a  // text (see also the CanvasPathDrawingStyles interface)\u000a  [Throws, LenientFloat]\u000a  void fillText(DOMString text, double x, double y, optional double maxWidth);\u000a  [Throws, LenientFloat]\u000a  void strokeText(DOMString text, double x, double y, optional double maxWidth);\u000a  [NewObject, Throws]\u000a  TextMetrics measureText(DOMString text);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasDrawImage {\u000a  [Throws, LenientFloat]\u000a  void drawImage(CanvasImageSource image, double dx, double dy);\u000a  [Throws, LenientFloat]\u000a  void drawImage(CanvasImageSource image, double dx, double dy, double dw, double dh);\u000a  [Throws, LenientFloat]\u000a  void drawImage(CanvasImageSource image, double sx, double sy, double sw, double sh, double dx, double dy, double dw, double dh);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasImageData {\u000a  // pixel manipulation\u000a  [NewObject, Throws]\u000a  ImageData createImageData(double sw, double sh);\u000a  [NewObject, Throws]\u000a  ImageData createImageData(ImageData imagedata);\u000a  [NewObject, Throws]\u000a  ImageData getImageData(double sx, double sy, double sw, double sh);\u000a  [Throws]\u000a  void putImageData(ImageData imagedata, double dx, double dy);\u000a  [Throws]\u000a  void putImageData(ImageData imagedata, double dx, double dy, double dirtyX, double dirtyY, double dirtyWidth, double dirtyHeight);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasPathDrawingStyles {\u000a  // line caps/joins\u000a  [LenientFloat]\u000a  attribute double lineWidth; // (default 1)\u000a  attribute DOMString lineCap; // \"butt\", \"round\", \"square\" (default \"butt\")\u000a  [GetterThrows]\u000a  attribute DOMString lineJoin; // \"round\", \"bevel\", \"miter\" (default \"miter\")\u000a  [LenientFloat]\u000a  attribute double miterLimit; // (default 10)\u000a\u000a  // dashed lines\u000a  [LenientFloat, Throws] void setLineDash(sequence<double> segments); // default empty\u000a  sequence<double> getLineDash();\u000a  [LenientFloat] attribute double lineDashOffset;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasTextDrawingStyles {\u000a  // text\u000a  [SetterThrows]\u000a  attribute DOMString font; // (default 10px sans-serif)\u000a  attribute DOMString textAlign; // \"start\", \"end\", \"left\", \"right\", \"center\" (default: \"start\")\u000a  attribute DOMString textBaseline; // \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", \"bottom\" (default: \"alphabetic\")\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasPathMethods {\u000a  // shared path API methods\u000a  void closePath();\u000a  [LenientFloat]\u000a  void moveTo(double x, double y);\u000a  [LenientFloat]\u000a  void lineTo(double x, double y);\u000a  [LenientFloat]\u000a  void quadraticCurveTo(double cpx, double cpy, double x, double y);\u000a\u000a  [LenientFloat]\u000a  void bezierCurveTo(double cp1x, double cp1y, double cp2x, double cp2y, double x, double y);\u000a\u000a  [Throws, LenientFloat]\u000a  void arcTo(double x1, double y1, double x2, double y2, double radius);\u000a// NOT IMPLEMENTED  [LenientFloat] void arcTo(double x1, double y1, double x2, double y2, double radiusX, double radiusY, double rotation);\u000a\u000a  [LenientFloat]\u000a  void rect(double x, double y, double w, double h);\u000a\u000a  [Throws, LenientFloat]\u000a  void arc(double x, double y, double radius, double startAngle, double endAngle, optional boolean anticlockwise = false);\u000a\u000a  [Throws, LenientFloat]\u000a  void ellipse(double x, double y, double radiusX, double radiusY, double rotation, double startAngle, double endAngle, optional boolean anticlockwise = false);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface CanvasHitRegions {\u000a  // hit regions\u000a  [Pref=\"canvas.hitregions.enabled\", Throws] void addHitRegion(optional HitRegionOptions options);\u000a  [Pref=\"canvas.hitregions.enabled\"] void removeHitRegion(DOMString id);\u000a  [Pref=\"canvas.hitregions.enabled\"] void clearHitRegions();\u000a};\u000a\u000ainterface CanvasGradient {\u000a  // opaque object\u000a  [Throws]\u000a  // addColorStop should take a double\u000a  void addColorStop(float offset, DOMString color);\u000a};\u000a\u000ainterface CanvasPattern {\u000a  // opaque object\u000a  // [Throws, LenientFloat] - could not do this overload because of bug 1020975\u000a  // void setTransform(double a, double b, double c, double d, double e, double f);\u000a\u000a  // No throw necessary here - SVGMatrix is always good.\u000a  void setTransform(SVGMatrix matrix);\u000a};\u000a\u000ainterface TextMetrics {\u000a\u000a  // x-direction\u000a  readonly attribute double width; // advance width\u000a\u000a  /*\u000a   * NOT IMPLEMENTED YET\u000a\u000a  readonly attribute double actualBoundingBoxLeft;\u000a  readonly attribute double actualBoundingBoxRight;\u000a\u000a  // y-direction\u000a  readonly attribute double fontBoundingBoxAscent;\u000a  readonly attribute double fontBoundingBoxDescent;\u000a  readonly attribute double actualBoundingBoxAscent;\u000a  readonly attribute double actualBoundingBoxDescent;\u000a  readonly attribute double emHeightAscent;\u000a  readonly attribute double emHeightDescent;\u000a  readonly attribute double hangingBaseline;\u000a  readonly attribute double alphabeticBaseline;\u000a  readonly attribute double ideographicBaseline;\u000a  */\u000a\u000a};\u000a\u000a[Pref=\"canvas.path.enabled\",\u000a Constructor,\u000a Constructor(Path2D other),\u000a Constructor(DOMString pathString)]\u000ainterface Path2D\u000a{\u000a  void addPath(Path2D path, optional SVGMatrix transformation);\u000a};\u000aPath2D implements CanvasPathMethods;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CaretPosition.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CaretPosition.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000ainterface CaretPosition {\u000a\u000a  /**\u000a   * The offsetNode could potentially be null due to anonymous content.\u000a   */\u000a  readonly attribute Node? offsetNode;\u000a  readonly attribute unsigned long offset;\u000a\u000a};\u000a\u000a/**\u000a * Gecko specific methods and properties for CaretPosition.\u000a */\u000apartial interface CaretPosition {\u000a  DOMRect? getClientRect();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CaretStateChangedEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CaretStateChangedEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000aenum CaretChangedReason {\u000a  \"visibilitychange\",\u000a  \"updateposition\",\u000a  \"longpressonemptycontent\",\u000a  \"taponcaret\",\u000a  \"presscaret\",\u000a  \"releasecaret\",\u000a  \"scroll\"\u000a};\u000a\u000adictionary CaretStateChangedEventInit : EventInit {\u000a  boolean collapsed = true;\u000a  DOMRectReadOnly? boundingClientRect = null;\u000a  CaretChangedReason reason = \"visibilitychange\";\u000a  boolean caretVisible = false;\u000a  boolean caretVisuallyVisible = false;\u000a  boolean selectionVisible = false;\u000a  boolean selectionEditable = false;\u000a  DOMString selectedTextContent = \"\";\u000a};\u000a\u000a[Constructor(DOMString type, optional CaretStateChangedEventInit eventInit),\u000a ChromeOnly]\u000ainterface CaretStateChangedEvent : Event {\u000a  readonly attribute boolean collapsed;\u000a  readonly attribute DOMRectReadOnly? boundingClientRect;\u000a  readonly attribute CaretChangedReason reason;\u000a  readonly attribute boolean caretVisible;\u000a  readonly attribute boolean caretVisuallyVisible;\u000a  readonly attribute boolean selectionVisible;\u000a  readonly attribute boolean selectionEditable;\u000a  readonly attribute DOMString selectedTextContent;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChannelMergerNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChannelMergerNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary ChannelMergerOptions : AudioNodeOptions {\u000a             unsigned long numberOfInputs = 6;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional ChannelMergerOptions options)]\u000ainterface ChannelMergerNode : AudioNode {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChannelSplitterNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChannelSplitterNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary ChannelSplitterOptions : AudioNodeOptions {\u000a             unsigned long numberOfOutputs = 6;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional ChannelSplitterOptions options)]\u000ainterface ChannelSplitterNode : AudioNode {\u000a\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChannelWrapper.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChannelWrapper.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000ainterface LoadInfo;\u000ainterface MozChannel;\u000ainterface TabParent;\u000ainterface URI;\u000ainterface nsISupports;\u000a\u000a/**\u000a * Load types that correspond to the external types in nsIContentPolicy.idl.\u000a * Please also update that IDL when updating this list.\u000a */\u000aenum MozContentPolicyType {\u000a  \"main_frame\",\u000a  \"sub_frame\",\u000a  \"stylesheet\",\u000a  \"script\",\u000a  \"image\",\u000a  \"object\",\u000a  \"object_subrequest\",\u000a  \"xmlhttprequest\",\u000a  \"fetch\",\u000a  \"xbl\",\u000a  \"xslt\",\u000a  \"ping\",\u000a  \"beacon\",\u000a  \"xml_dtd\",\u000a  \"font\",\u000a  \"media\",\u000a  \"websocket\",\u000a  \"csp_report\",\u000a  \"imageset\",\u000a  \"web_manifest\",\u000a  \"other\"\u000a};\u000a\u000a/**\u000a * A thin wrapper around nsIChannel and nsIHttpChannel that allows JS\u000a * callers to access them without XPConnect overhead.\u000a */\u000a[ChromeOnly, Exposed=System]\u000ainterface ChannelWrapper : EventTarget {\u000a  /**\u000a   * Returns the wrapper instance for the given channel. The same wrapper is\u000a   * always returned for a given channel.\u000a   */\u000a  static ChannelWrapper get(MozChannel channel);\u000a\u000a  /**\u000a   * A unique ID for for the requests which remains constant throughout the\u000a   * redirect chain.\u000a   */\u000a  [Constant, StoreInSlot]\u000a  readonly attribute unsigned long long id;\u000a\u000a  // Not technically pure, since it's backed by a weak reference, but if JS\u000a  // has a reference to the previous value, we can depend on it not being\u000a  // collected.\u000a  [Pure]\u000a  attribute MozChannel? channel;\u000a\u000a\u000a  /**\u000a   * Cancels the request with the given nsresult status code.\u000a   */\u000a  [Throws]\u000a  void cancel(unsigned long result);\u000a\u000a  /**\u000a   * Redirects the wrapped HTTP channel to the given URI. For other channel\u000a   * types, this method will throw. The redirect is an internal redirect, and\u000a   * the behavior is the same as nsIHttpChannel.redirectTo.\u000a   */\u000a  [Throws]\u000a  void redirectTo(URI url);\u000a\u000a  /**\u000a   * Requests an upgrade of the HTTP channel to a secure request. For other channel\u000a   * types, this method will throw. The redirect is an internal redirect, and\u000a   * the behavior is the same as nsIHttpChannel.upgradeToSecure. Setting this\u000a   * flag is only effective during the WebRequest.onBeforeRequest in\u000a   * Web Extensions, calling this at any other point during the request will\u000a   * have no effect. Setting this flag in addition to calling redirectTo\u000a   * results in the redirect happening rather than the upgrade request.\u000a   */\u000a  [Throws]\u000a  void upgradeToSecure();\u000a\u000a  /**\u000a   * The content type of the request, usually as read from the Content-Type\u000a   * header. This should be used in preference to the header to determine the\u000a   * content type of the channel.\u000a   */\u000a  [Pure]\u000a  attribute ByteString contentType;\u000a\u000a\u000a  /**\u000a   * For HTTP requests, the request method (e.g., GET, POST, HEAD). For other\u000a   * request types, returns an empty string.\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute ByteString method;\u000a\u000a  /**\u000a   * For requests with LoadInfo, the content policy type that corresponds to\u000a   * the request. For requests without LoadInfo, returns \"other\".\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute MozContentPolicyType type;\u000a\u000a\u000a  /**\u000a   * When true, the request is currently suspended by the wrapper. When false,\u000a   * the request is not suspended by the wrapper, but may still be suspended\u000a   * by another caller.\u000a   */\u000a  [Pure, SetterThrows]\u000a  attribute boolean suspended;\u000a\u000a\u000a  /**\u000a   * The final URI of the channel (as returned by NS_GetFinalChannelURI) after\u000a   * any redirects have been processed.\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute URI finalURI;\u000a\u000a  /**\u000a   * The string version of finalURI (but cheaper to access than\u000a   * finalURI.spec).\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute DOMString finalURL;\u000a\u000a\u000a  /**\u000a   * Returns true if the request matches the given request filter, and the\u000a   * given extension has permission to access it.\u000a   */\u000a  boolean matches(optional MozRequestFilter filter,\u000a                  optional WebExtensionPolicy? extension = null,\u000a                  optional MozRequestMatchOptions options);\u000a\u000a\u000a  /**\u000a   * Register's this channel as traceable by the given add-on when accessed\u000a   * via the process of the given TabParent.\u000a   */\u000a  void registerTraceableChannel(WebExtensionPolicy extension, TabParent? tabParent);\u000a\u000a  /**\u000a   * The current HTTP status code of the request. This will be 0 if a response\u000a   * has not yet been received, or if the request is not an HTTP request.\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute unsigned long statusCode;\u000a\u000a  /**\u000a   * The HTTP status line for the request (e.g., \"HTTP/1.0 200 Success\"). This\u000a   * will be an empty string if a response has not yet been received, or if\u000a   * the request is not an HTTP request.\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute ByteString statusLine;\u000a\u000a\u000a  /**\u000a   * If the request has failed or been canceled, an opaque string representing\u000a   * the error. For requests that failed at the NSS layer, this is an NSS\u000a   * error message. For requests that failed for any other reason, it is the\u000a   * name of an nsresult error code. For requests which haven't failed, this\u000a   * is null.\u000a   *\u000a   * This string is used in the error message when notifying extension\u000a   * webRequest listeners of failure. The documentation specifically states\u000a   * that this value MUST NOT be parsed, and is only meant to be displayed to\u000a   * humans, but we all know how that works in real life.\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute DOMString? errorString;\u000a\u000a  /**\u000a   * Dispatched when the channel is closed with an error status. Check\u000a   * errorString for the error details.\u000a   */\u000a  attribute EventHandler onerror;\u000a\u000a  /**\u000a   * Checks the request's current status and dispatches an error event if the\u000a   * request has failed and one has not already been dispatched.\u000a   */\u000a  void errorCheck();\u000a\u000a\u000a  /**\u000a   * Dispatched when the channel begins receiving data.\u000a   */\u000a  attribute EventHandler onstart;\u000a\u000a  /**\u000a   * Dispatched when the channel has finished receiving data.\u000a   */\u000a  attribute EventHandler onstop;\u000a\u000a\u000a  /**\u000a   * Information about the proxy server which is handling this request, or\u000a   * null if the request is not proxied.\u000a   */\u000a  [Cached, Frozen, GetterThrows, Pure]\u000a  readonly attribute MozProxyInfo? proxyInfo;\u000a\u000a  /**\u000a   * For HTTP requests, the IP address of the remote server handling the\u000a   * request. For other request types, returns null.\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute ByteString? remoteAddress;\u000a\u000a\u000a  /**\u000a   * The LoadInfo object for this channel, if available. Null for channels\u000a   * without load info, until support for those is removed.\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute LoadInfo? loadInfo;\u000a\u000a  /**\u000a   * True if this load was triggered by a system caller. This currently always\u000a   * false if the request has no LoadInfo or is a top-level document load.\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute boolean isSystemLoad;\u000a\u000a  /**\u000a   * The URL of the principal that triggered this load. This is equivalent to\u000a   * the LoadInfo's triggeringPrincipal, and will only ever be null for\u000a   * requests without LoadInfo.\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute ByteString? originURL;\u000a\u000a  /**\u000a   * The URL of the document loading the content for this request. This is\u000a   * equivalent to the LoadInfo's loadingPrincipal. This may only ever be null\u000a   * for top-level requests and requests without LoadInfo.\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute ByteString? documentURL;\u000a\u000a  /**\u000a   * The URI version of originURL. Will be null only when originURL is null.\u000a   */\u000a  [Pure]\u000a  readonly attribute URI? originURI;\u000a\u000a  /**\u000a   * The URI version of documentURL. Will be null only when documentURL is\u000a   * null.\u000a   */\u000a  [Pure]\u000a  readonly attribute URI? documentURI;\u000a\u000a\u000a  /**\u000a   * True if extensions may modify this request. This is currently false only\u000a   * if the request belongs to a document which has access to the\u000a   * mozAddonManager API.\u000a   */\u000a  [Cached, GetterThrows, Pure]\u000a  readonly attribute boolean canModify;\u000a\u000a\u000a  /**\u000a   * The outer window ID of the frame that the request belongs to, or 0 if it\u000a   * is a top-level load or does not belong to a document.\u000a   */\u000a  [Cached, Constant]\u000a  readonly attribute long long windowId;\u000a\u000a  /**\u000a   * The outer window ID of the parent frame of the window that the request\u000a   * belongs to, 0 if that parent frame is the top-level frame, and -1 if the\u000a   * request belongs to a top-level frame.\u000a   */\u000a  [Cached, Constant]\u000a  readonly attribute long long parentWindowId;\u000a\u000a  /**\u000a   * For cross-process requests, the <browser> or <iframe> element to which the\u000a   * content loading this request belongs. For requests that don't originate\u000a   * from a remote browser, this is null.\u000a   */\u000a  [Cached, Pure]\u000a  readonly attribute nsISupports? browserElement;\u000a\u000a  /**\u000a   * Returns an array of objects that combine the url and frameId from the\u000a   * ancestorPrincipals and ancestorOuterWindowIDs on loadInfo.\u000a   * The immediate parent is the first entry, the last entry is always the top\u000a   * level frame.  It will be an empty list for toplevel window loads and\u000a   * non-subdocument resource loads within a toplevel window.  For the latter,\u000a   * originURL will provide information on what window is doing the load.  It\u000a   * will be null if the request is not associated with a window (e.g. XHR with\u000a   * mozBackgroundRequest = true).\u000a   */\u000a  [Cached, Frozen, GetterThrows, Pure]\u000a  readonly attribute sequence<MozFrameAncestorInfo>? frameAncestors;\u000a\u000a  /**\u000a   * For HTTP requests, returns an array of request headers which will be, or\u000a   * have been, sent with this request.\u000a   *\u000a   * For non-HTTP requests, throws NS_ERROR_UNEXPECTED.\u000a   */\u000a  [Throws]\u000a  sequence<MozHTTPHeader> getRequestHeaders();\u000a\u000a  /**\u000a   * For HTTP requests, returns an array of response headers which were\u000a   * received for this request, in the same format as returned by\u000a   * getRequestHeaders.\u000a\u000a   * Throws NS_ERROR_NOT_AVAILABLE if a response has not yet been received, or\u000a   * NS_ERROR_UNEXPECTED if the channel is not an HTTP channel.\u000a   *\u000a   * Note: The Content-Type header is handled specially. That header is\u000a   * usually not mutable after the request has been received, and the content\u000a   * type must instead be changed via the contentType attribute. If a caller\u000a   * attempts to set the Content-Type header via setRequestHeader, however,\u000a   * that value is assigned to the contentType attribute and its original\u000a   * string value is cached. That original value is returned in place of the\u000a   * actual Content-Type header.\u000a   */\u000a  [Throws]\u000a  sequence<MozHTTPHeader> getResponseHeaders();\u000a\u000a  /**\u000a   * Sets the given request header to the given value, overwriting any\u000a   * previous value. Setting a header to a null string has the effect of\u000a   * removing it.  If merge is true, then the passed value will be merged\u000a   * to any existing value that exists for the header. Otherwise, any prior\u000a   * value for the header will be overwritten. Merge is ignored for headers\u000a   * that cannot be merged.\u000a   *\u000a   * For non-HTTP requests, throws NS_ERROR_UNEXPECTED.\u000a   */\u000a  [Throws]\u000a  void setRequestHeader(ByteString header,\u000a                        ByteString value,\u000a                        optional boolean merge = false);\u000a\u000a  /**\u000a   * Sets the given response header to the given value, overwriting any\u000a   * previous value. Setting a header to a null string has the effect of\u000a   * removing it.  If merge is true, then the passed value will be merged\u000a   * to any existing value that exists for the header (e.g. handling multiple\u000a   * Set-Cookie headers).  Otherwise, any prior value for the header will be\u000a   * overwritten. Merge is ignored for headers that cannot be merged.\u000a   *\u000a   * For non-HTTP requests, throws NS_ERROR_UNEXPECTED.\u000a   *\u000a   * Note: The content type header is handled specially by this function. See\u000a   * getResponseHeaders() for details.\u000a   */\u000a  [Throws]\u000a  void setResponseHeader(ByteString header,\u000a                         ByteString value,\u000a                         optional boolean merge = false);\u000a};\u000a\u000a/**\u000a * Information about the proxy server handing a request. This is approximately\u000a * equivalent to nsIProxyInfo.\u000a */\u000adictionary MozProxyInfo {\u000a  /**\u000a   * The hostname of the server.\u000a   */\u000a  required ByteString host;\u000a  /**\u000a   * The TCP port of the server.\u000a   */\u000a  required long port;\u000a  /**\u000a   * The type of proxy (e.g., HTTP, SOCKS).\u000a   */\u000a  required ByteString type;\u000a\u000a  /**\u000a   * True if the proxy is responsible for DNS lookups.\u000a   */\u000a  required boolean proxyDNS;\u000a\u000a  /**\u000a   * The authentication username for the proxy, if any.\u000a   */\u000a  ByteString? username = null;\u000a\u000a  /**\u000a   * The timeout, in seconds, before the network stack will failover to the\u000a   * next candidate proxy server if it has not received a response.\u000a   */\u000a  unsigned long failoverTimeout;\u000a};\u000a\u000a/**\u000a * MozFrameAncestorInfo combines loadInfo::AncestorPrincipals with\u000a * loadInfo::AncestorOuterWindowIDs for easier access in the WebRequest API.\u000a *\u000a * url represents the parent of the loading window.\u000a * frameId is the outerWindowID for the parent of the loading window.\u000a *\u000a * For further details see nsILoadInfo.idl and nsIDocument::AncestorPrincipals.\u000a */\u000adictionary MozFrameAncestorInfo {\u000a  required ByteString url;\u000a  required unsigned long long frameId;\u000a};\u000a\u000a/**\u000a * Represents an HTTP request or response header.\u000a */\u000adictionary MozHTTPHeader {\u000a  /**\u000a   * The case-insensitive, non-case-normalized header name.\u000a   */\u000a  required ByteString name;\u000a  /**\u000a   * The header value.\u000a   */\u000a  required ByteString value;\u000a};\u000a\u000a/**\u000a * An object used for filtering requests.\u000a */\u000adictionary MozRequestFilter {\u000a  /**\u000a   * If present, the request only matches if its `type` attribute matches one\u000a   * of the given types.\u000a   */\u000a  sequence<MozContentPolicyType>? types = null;\u000a\u000a  /**\u000a   * If present, the request only matches if its finalURI matches the given\u000a   * match pattern set.\u000a   */\u000a  MatchPatternSet? urls = null;\u000a};\u000a\u000adictionary MozRequestMatchOptions {\u000a  /**\u000a   * True if we're matching for the proxy portion of a proxied request.\u000a   */\u000a  boolean isProxy = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CharacterData.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CharacterData.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org/#characterdata\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface CharacterData : Node {\u000a  [TreatNullAs=EmptyString, Pure, SetterThrows]\u000a  attribute DOMString data;\u000a  [Pure]\u000a  readonly attribute unsigned long length;\u000a  [Throws]\u000a  DOMString substringData(unsigned long offset, unsigned long count);\u000a  [Throws]\u000a  void appendData(DOMString data);\u000a  [Throws]\u000a  void insertData(unsigned long offset, DOMString data);\u000a  [Throws]\u000a  void deleteData(unsigned long offset, unsigned long count);\u000a  [Throws]\u000a  void replaceData(unsigned long offset, unsigned long count, DOMString data);\u000a};\u000a\u000aCharacterData implements ChildNode;\u000aCharacterData implements NonDocumentTypeChildNode;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CheckerboardReportService.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CheckerboardReportService.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/*\u000a * This file declares data structures used to communicate checkerboard reports\u000a * from C++ code to about:checkerboard (see bug 1238042). These dictionaries\u000a * are NOT exposed to standard web content.\u000a */\u000a\u000aenum CheckerboardReason {\u000a  \"severe\",\u000a  \"recent\"\u000a};\u000a\u000a// Individual checkerboard report. Contains fields for the severity of the\u000a// checkerboard event, the timestamp at which it was reported, the detailed\u000a// log of the event, and the reason this report was saved (currently either\u000a// \"severe\" or \"recent\").\u000adictionary CheckerboardReport {\u000a  unsigned long severity;\u000a  DOMTimeStamp timestamp; // milliseconds since epoch\u000a  DOMString log;\u000a  CheckerboardReason reason;\u000a};\u000a\u000a// The guard function only allows creation of this interface on the\u000a// about:checkerboard page, and only if it's in the parent process.\u000a[Func=\"mozilla::dom::CheckerboardReportService::IsEnabled\",\u000a Constructor]\u000ainterface CheckerboardReportService {\u000a  /**\u000a   * Gets the available checkerboard reports.\u000a   */\u000a  sequence<CheckerboardReport> getReports();\u000a\u000a  /**\u000a   * Gets the state of the apz.record_checkerboarding pref.\u000a   */\u000a  boolean isRecordingEnabled();\u000a\u000a  /**\u000a   * Sets the state of the apz.record_checkerboarding pref.\u000a   */\u000a  void setRecordingEnabled(boolean aEnabled);\u000a\u000a  /**\u000a   * Flush any in-progress checkerboard reports. Since this happens\u000a   * asynchronously, the caller may register an observer with the observer\u000a   * service to be notified when this operation is complete. The observer should\u000a   * listen for the topic \"APZ:FlushActiveCheckerboard:Done\". Upon receiving\u000a   * this notification, the caller may call getReports() to obtain the flushed\u000a   * reports, along with any other reports that are available.\u000a   */\u000a  void flushActiveReports();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChildNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChildNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org/#interface-childnode\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface ChildNode {\u000a  [CEReactions, Throws, Unscopable]\u000a  void before((Node or DOMString)... nodes);\u000a  [CEReactions, Throws, Unscopable]\u000a  void after((Node or DOMString)... nodes);\u000a  [CEReactions, Throws, Unscopable]\u000a  void replaceWith((Node or DOMString)... nodes);\u000a  [CEReactions, Unscopable]\u000a  void remove();\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface NonDocumentTypeChildNode {\u000a  [Pure]\u000a  readonly attribute Element? previousElementSibling;\u000a  [Pure]\u000a  readonly attribute Element? nextElementSibling;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChromeNodeList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChromeNodeList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor, Func=\"IsChromeOrXBL\"]\u000ainterface ChromeNodeList : NodeList {\u000a  [Throws]\u000a  void append(Node aNode);\u000a  [Throws]\u000a  void remove(Node aNode);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChromeUtils.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ChromeUtils.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * A collection of static utility methods that are only exposed to system code.\u000a * This is exposed in all the system globals where we can expose stuff by\u000a * default, so should only include methods that are **thread-safe**.\u000a */\u000a[ChromeOnly, Exposed=(Window,System,Worker)]\u000anamespace ChromeUtils {\u000a  /**\u000a   * Serialize a snapshot of the heap graph, as seen by |JS::ubi::Node| and\u000a   * restricted by |boundaries|, and write it to the provided file path.\u000a   *\u000a   * @param boundaries        The portion of the heap graph to write.\u000a   *\u000a   * @returns                 The path to the file the heap snapshot was written\u000a   *                          to. This is guaranteed to be within the temp\u000a   *                          directory and its file name will match the regexp\u000a   *                          `\\d+(\\-\\d+)?\\.fxsnapshot`.\u000a   */\u000a  [Throws]\u000a  DOMString saveHeapSnapshot(optional HeapSnapshotBoundaries boundaries);\u000a\u000a  /**\u000a   * This is the same as saveHeapSnapshot, but with a different return value.\u000a   *\u000a   * @returns                 The snapshot ID of the file. This is the file name\u000a   *                          without the temp directory or the trailing\u000a   *                          `.fxsnapshot`.\u000a   */\u000a  [Throws]\u000a  DOMString saveHeapSnapshotGetId(optional HeapSnapshotBoundaries boundaries);\u000a\u000a  /**\u000a   * Deserialize a core dump into a HeapSnapshot.\u000a   *\u000a   * @param filePath          The file path to read the heap snapshot from.\u000a   */\u000a  [Throws, NewObject]\u000a  HeapSnapshot readHeapSnapshot(DOMString filePath);\u000a\u000a  /**\u000a   * Return the keys in a weak map.  This operation is\u000a   * non-deterministic because it is affected by the scheduling of the\u000a   * garbage collector and the cycle collector.\u000a   *\u000a   * @param aMap weak map or other JavaScript value\u000a   * @returns If aMap is a weak map object, return the keys of the weak\u000a   *          map as an array.  Otherwise, return undefined.\u000a   */\u000a  [Throws, NewObject]\u000a  any nondeterministicGetWeakMapKeys(any map);\u000a\u000a  /**\u000a   * Return the keys in a weak set.  This operation is\u000a   * non-deterministic because it is affected by the scheduling of the\u000a   * garbage collector and the cycle collector.\u000a   *\u000a   * @param aSet weak set or other JavaScript value\u000a   * @returns If aSet is a weak set object, return the keys of the weak\u000a   *          set as an array.  Otherwise, return undefined.\u000a   */\u000a  [Throws, NewObject]\u000a  any nondeterministicGetWeakSetKeys(any aSet);\u000a\u000a  /**\u000a   * Converts a buffer to a Base64 URL-encoded string per RFC 4648.\u000a   *\u000a   * @param source The buffer to encode.\u000a   * @param options Additional encoding options.\u000a   * @returns The encoded string.\u000a   */\u000a  [Throws]\u000a  ByteString base64URLEncode(BufferSource source,\u000a                             Base64URLEncodeOptions options);\u000a\u000a  /**\u000a   * Decodes a Base64 URL-encoded string per RFC 4648.\u000a   *\u000a   * @param string The string to decode.\u000a   * @param options Additional decoding options.\u000a   * @returns The decoded buffer.\u000a   */\u000a  [Throws, NewObject]\u000a  ArrayBuffer base64URLDecode(ByteString string,\u000a                              Base64URLDecodeOptions options);\u000a\u000a#ifdef NIGHTLY_BUILD\u000a\u000a  /**\u000a   * If the chrome code has thrown a JavaScript Dev Error\u000a   * in the current JSRuntime. the first such error, or `undefined`\u000a   * otherwise.\u000a   *\u000a   * A JavaScript Dev Error is an exception thrown by JavaScript\u000a   * code that matches both conditions:\u000a   * - it was thrown by chrome code;\u000a   * - it is either a `ReferenceError`, a `TypeError` or a `SyntaxError`.\u000a   *\u000a   * Such errors are stored regardless of whether they have been\u000a   * caught.\u000a   *\u000a   * This mechanism is designed to help ensure that the code of\u000a   * Firefox is free from Dev Errors, even if they are accidentally\u000a   * caught by clients.\u000a   *\u000a   * The object returned is not an exception. It has fields:\u000a   * - DOMString stack\u000a   * - DOMString filename\u000a   * - DOMString lineNumber\u000a   * - DOMString message\u000a   */\u000a  [Throws]\u000a  readonly attribute any recentJSDevError;\u000a\u000a  /**\u000a   * Reset `recentJSDevError` to `undefined` for the current JSRuntime.\u000a   */\u000a  void clearRecentJSDevError();\u000a#endif // NIGHTLY_BUILD\u000a\u000a  /**\u000a   * IF YOU ADD NEW METHODS HERE, MAKE SURE THEY ARE THREAD-SAFE.\u000a   */\u000a};\u000a\u000a/**\u000a * Additional ChromeUtils methods that are _not_ thread-safe, and hence not\u000a * exposed in workers.\u000a */\u000a[Exposed=(Window,System)]\u000apartial namespace ChromeUtils {\u000a  /**\u000a   * A helper that converts OriginAttributesDictionary to a opaque suffix string.\u000a   *\u000a   * @param originAttrs       The originAttributes from the caller.\u000a   */\u000a  ByteString\u000a  originAttributesToSuffix(optional OriginAttributesDictionary originAttrs);\u000a\u000a  /**\u000a   * Returns true if the members of |originAttrs| match the provided members\u000a   * of |pattern|.\u000a   *\u000a   * @param originAttrs       The originAttributes under consideration.\u000a   * @param pattern           The pattern to use for matching.\u000a   */\u000a  boolean\u000a  originAttributesMatchPattern(optional OriginAttributesDictionary originAttrs,\u000a                               optional OriginAttributesPatternDictionary pattern);\u000a\u000a  /**\u000a   * Returns an OriginAttributesDictionary with values from the |origin| suffix\u000a   * and unspecified attributes added and assigned default values.\u000a   *\u000a   * @param origin            The origin URI to create from.\u000a   * @returns                 An OriginAttributesDictionary with values from\u000a   *                          the origin suffix and unspecified attributes\u000a   *                          added and assigned default values.\u000a   */\u000a  [Throws]\u000a  OriginAttributesDictionary\u000a  createOriginAttributesFromOrigin(DOMString origin);\u000a\u000a  /**\u000a   * Returns an OriginAttributesDictionary that is a copy of |originAttrs| with\u000a   * unspecified attributes added and assigned default values.\u000a   *\u000a   * @param originAttrs       The origin attributes to copy.\u000a   * @returns                 An OriginAttributesDictionary copy of |originAttrs|\u000a   *                          with unspecified attributes added and assigned\u000a   *                          default values.\u000a   */\u000a  OriginAttributesDictionary\u000a  fillNonDefaultOriginAttributes(optional OriginAttributesDictionary originAttrs);\u000a\u000a  /**\u000a   * Returns true if the 2 OriginAttributes are equal.\u000a   */\u000a  boolean\u000a  isOriginAttributesEqual(optional OriginAttributesDictionary aA,\u000a                          optional OriginAttributesDictionary aB);\u000a\u000a  /**\u000a   * Loads and compiles the script at the given URL and returns an object\u000a   * which may be used to execute it repeatedly, in different globals, without\u000a   * re-parsing.\u000a   */\u000a  [NewObject]\u000a  Promise<PrecompiledScript>\u000a  compileScript(DOMString url, optional CompileScriptOptionsDictionary options);\u000a\u000a  /**\u000a   * Waive Xray on a given value. Identity op for primitives.\u000a   */\u000a  [Throws]\u000a  any waiveXrays(any val);\u000a\u000a  /**\u000a   * Strip off Xray waivers on a given value. Identity op for primitives.\u000a   */\u000a  [Throws]\u000a  any unwaiveXrays(any val);\u000a\u000a  /**\u000a   * Gets the name of the JSClass of the object.\u000a   *\u000a   * if |unwrap| is true, all wrappers are unwrapped first. Unless you're\u000a   * specifically trying to detect whether the object is a proxy, this is\u000a   * probably what you want.\u000a   */\u000a  DOMString getClassName(object obj, optional boolean unwrap = true);\u000a\u000a  /**\u000a   * Clones the properties of the given object into a new object in the given\u000a   * target compartment (or the caller compartment if no target is provided).\u000a   * Property values themeselves are not cloned.\u000a   *\u000a   * Ignores non-enumerable properties, properties on prototypes, and properties\u000a   * with getters or setters.\u000a   */\u000a  [Throws]\u000a  object shallowClone(object obj, optional object? target = null);\u000a\u000a  /**\u000a   * Dispatches the given callback to the main thread when it would be\u000a   * otherwise idle. Similar to Window.requestIdleCallback, but not bound to a\u000a   * particular DOM windw.\u000a   */\u000a  [Throws]\u000a  void idleDispatch(IdleRequestCallback callback,\u000a                    optional IdleRequestOptions options);\u000a\u000a  /**\u000a   * Synchronously loads and evaluates the js file located at\u000a   * 'aResourceURI' with a new, fully privileged global object.\u000a   *\u000a   * If 'aTargetObj' is specified and null, this method just returns\u000a   * the module's global object. Otherwise (if 'aTargetObj' is not\u000a   * specified, or 'aTargetObj' is != null) looks for a property\u000a   * 'EXPORTED_SYMBOLS' on the new global object. 'EXPORTED_SYMBOLS'\u000a   * is expected to be an array of strings identifying properties on\u000a   * the global object.  These properties will be installed as\u000a   * properties on 'targetObj', or, if 'aTargetObj' is not specified,\u000a   * on the caller's global object. If 'EXPORTED_SYMBOLS' is not\u000a   * found, an error is thrown.\u000a   *\u000a   * @param aResourceURI A resource:// URI string to load the module from.\u000a   * @param aTargetObj the object to install the exported properties on or null.\u000a   * @returns the module code's global object.\u000a   *\u000a   * The implementation maintains a hash of aResourceURI->global obj.\u000a   * Subsequent invocations of import with 'aResourceURI' pointing to\u000a   * the same file will not cause the module to be re-evaluated, but\u000a   * the symbols in EXPORTED_SYMBOLS will be exported into the\u000a   * specified target object and the global object returned as above.\u000a   */\u000a  [Throws]\u000a  object import(DOMString aResourceURI, optional object? aTargetObj);\u000a\u000a  /**\u000a   * Defines a property on the given target which lazily imports a JavaScript\u000a   * module when accessed.\u000a   *\u000a   * The first time the property is accessed, the module at the given URL is\u000a   * imported, and the property is replaced with the module's exported symbol\u000a   * of the same name.\u000a   *\u000a   * Some points to note when using this utility:\u000a   *\u000a   * - The cached module export is always stored on the `this` object that was\u000a   *   used to access the getter. This means that if you define the lazy\u000a   *   getter on a prototype, the module will be re-imported every time the\u000a   *   property is accessed on a new instance.\u000a   *\u000a   * - The getter property may be overwritten by simple assignment, but as\u000a   *   with imports, the new property value is always defined on the `this`\u000a   *   object that the setter is called with.\u000a   *\u000a   * - If the module import fails, the getter will throw an error, and the\u000a   *   property will not be replaced. Each subsequent attempt to access the\u000a   *   getter will attempt to re-import the object, which will likely continue\u000a   *   to result in errors.\u000a   *\u000a   * @param target The target object on which to define the property.\u000a   * @param id The name of the property to define, and of the symbol to\u000a   *           import.\u000a   * @param resourceURI The resource URI of the module, as passed to\u000a   *                    ChromeUtils.import.\u000a   */\u000a  [Throws]\u000a  void defineModuleGetter(object target, DOMString id, DOMString resourceURI);\u000a};\u000a\u000a/**\u000a * Used by principals and the script security manager to represent origin\u000a * attributes. The first dictionary is designed to contain the full set of\u000a * OriginAttributes, the second is used for pattern-matching (i.e. does this\u000a * OriginAttributesDictionary match the non-empty attributes in this pattern).\u000a *\u000a * IMPORTANT: If you add any members here, you need to do the following:\u000a * (1) Add them to both dictionaries.\u000a * (2) Update the methods on mozilla::OriginAttributes, including equality,\u000a *     serialization, deserialization, and inheritance.\u000a * (3) Update the methods on mozilla::OriginAttributesPattern, including matching.\u000a */\u000adictionary OriginAttributesDictionary {\u000a  unsigned long appId = 0;\u000a  unsigned long userContextId = 0;\u000a  boolean inIsolatedMozBrowser = false;\u000a  unsigned long privateBrowsingId = 0;\u000a  DOMString firstPartyDomain = \"\";\u000a};\u000adictionary OriginAttributesPatternDictionary {\u000a  unsigned long appId;\u000a  unsigned long userContextId;\u000a  boolean inIsolatedMozBrowser;\u000a  unsigned long privateBrowsingId;\u000a  DOMString firstPartyDomain;\u000a};\u000a\u000adictionary CompileScriptOptionsDictionary {\u000a  /**\u000a   * The character set from which to decode the script.\u000a   */\u000a  DOMString charset = \"utf-8\";\u000a\u000a  /**\u000a   * If true, certain parts of the script may be parsed lazily, the first time\u000a   * they are used, rather than eagerly parsed at load time.\u000a   */\u000a  boolean lazilyParse = false;\u000a\u000a  /**\u000a   * If true, the script will be compiled so that its last expression will be\u000a   * returned as the value of its execution. This makes certain types of\u000a   * optimization impossible, and disables the JIT in many circumstances, so\u000a   * should not be used when not absolutely necessary.\u000a   */\u000a  boolean hasReturnValue = false;\u000a};\u000a\u000a/**\u000a * A JS object whose properties specify what portion of the heap graph to\u000a * write. The recognized properties are:\u000a *\u000a * * globals: [ global, ... ]\u000a *   Dump only nodes that either:\u000a *   - belong in the compartment of one of the given globals;\u000a *   - belong to no compartment, but do belong to a Zone that contains one of\u000a *     the given globals;\u000a *   - are referred to directly by one of the last two kinds of nodes; or\u000a *   - is the fictional root node, described below.\u000a *\u000a * * debugger: Debugger object\u000a *   Like \"globals\", but use the Debugger's debuggees as the globals.\u000a *\u000a * * runtime: true\u000a *   Dump the entire heap graph, starting with the JSRuntime's roots.\u000a *\u000a * One, and only one, of these properties must exist on the boundaries object.\u000a *\u000a * The root of the dumped graph is a fictional node whose ubi::Node type name is\u000a * \"CoreDumpRoot\". If we are dumping the entire ubi::Node graph, this root node\u000a * has an edge for each of the JSRuntime's roots. If we are dumping a selected\u000a * set of globals, the root has an edge to each global, and an edge for each\u000a * incoming JS reference to the selected Zones.\u000a */\u000adictionary HeapSnapshotBoundaries {\u000a  sequence<object> globals;\u000a  object           debugger;\u000a  boolean          runtime;\u000a};\u000a\u000adictionary Base64URLEncodeOptions {\u000a  /** Specifies whether the output should be padded with \"=\" characters. */\u000a  required boolean pad;\u000a};\u000a\u000aenum Base64URLDecodePadding {\u000a  /**\u000a   * Fails decoding if the input is unpadded. RFC 4648, section 3.2 requires\u000a   * padding, unless the referring specification prohibits it.\u000a   */\u000a  \"require\",\u000a\u000a  /** Tolerates padded and unpadded input. */\u000a  \"ignore\",\u000a\u000a  /**\u000a   * Fails decoding if the input is padded. This follows the strict base64url\u000a   * variant used in JWS (RFC 7515, Appendix C) and HTTP Encrypted\u000a   * Content-Encoding (draft-ietf-httpbis-encryption-encoding-01).\u000a   */\u000a  \"reject\"\u000a};\u000a\u000adictionary Base64URLDecodeOptions {\u000a  /** Specifies the padding mode for decoding the input. */\u000a  required Base64URLDecodePadding padding;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Client.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Client.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/ServiceWorker/#client-interface\u000a *\u000a */\u000a\u000a[Exposed=ServiceWorker]\u000ainterface Client {\u000a  readonly attribute USVString url;\u000a\u000a  // Remove frameType in bug 1290936\u000a  [BinaryName=\"GetFrameType\"]\u000a  readonly attribute FrameType frameType;\u000a\u000a  readonly attribute ClientType type;\u000a  readonly attribute DOMString id;\u000a\u000a  // Implement reserved in bug 1264177\u000a  // readonly attribute boolean reserved;\u000a\u000a  [Throws]\u000a  void postMessage(any message, optional sequence<object> transfer = []);\u000a};\u000a\u000a[Exposed=ServiceWorker]\u000ainterface WindowClient : Client {\u000a  [BinaryName=\"GetVisibilityState\"]\u000a  readonly attribute VisibilityState visibilityState;\u000a  readonly attribute boolean focused;\u000a\u000a  // Implement ancestorOrigins in bug 1264180\u000a  // [SameObject] readonly attribute FrozenArray<USVString> ancestorOrigins;\u000a\u000a  [Throws, NewObject]\u000a  Promise<WindowClient> focus();\u000a\u000a  [Throws, NewObject]\u000a  Promise<WindowClient> navigate(USVString url);\u000a};\u000a\u000a// Remove FrameType in bug 1290936\u000aenum FrameType {\u000a  \"auxiliary\",\u000a  \"top-level\",\u000a  \"nested\",\u000a  \"none\"\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Clients.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Clients.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html\u000a *\u000a */\u000a\u000a[Exposed=ServiceWorker]\u000ainterface Clients {\u000a  // The objects returned will be new instances every time\u000a  [NewObject]\u000a  Promise<any> get(DOMString id);\u000a  [NewObject]\u000a  Promise<sequence<Client>> matchAll(optional ClientQueryOptions options);\u000a  [NewObject]\u000a  Promise<WindowClient?> openWindow(USVString url);\u000a  [NewObject]\u000a  Promise<void> claim();\u000a};\u000a\u000adictionary ClientQueryOptions {\u000a  boolean includeUncontrolled = false;\u000a  ClientType type = \"window\";\u000a};\u000a\u000aenum ClientType {\u000a  \"window\",\u000a  \"worker\",\u000a  \"sharedworker\",\u000a  // https://github.com/w3c/ServiceWorker/issues/1036\u000a  \"serviceworker\",\u000a  \"all\"\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ClipboardEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ClipboardEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface please see\u000a * http://dev.w3.org/2006/webapi/clipops/#x5-clipboard-event-interfaces\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString type, optional ClipboardEventInit eventInitDict)]\u000ainterface ClipboardEvent : Event\u000a{\u000a  readonly attribute DataTransfer? clipboardData;\u000a};\u000a\u000adictionary ClipboardEventInit : EventInit\u000a{\u000a  DOMString data = \"\";\u000a  DOMString dataType = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CloseEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CloseEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The nsIDOMCloseEvent interface is the interface to the event\u000a * close on a WebSocket object.\u000a *\u000a * For more information on this interface, please see\u000a * http://www.whatwg.org/specs/web-apps/current-work/multipage/network.html#closeevent\u000a */\u000a\u000a[Constructor(DOMString type, optional CloseEventInit eventInitDict),LegacyEventInit,\u000a Exposed=(Window,Worker)]\u000ainterface CloseEvent : Event\u000a{\u000a  readonly attribute boolean wasClean;\u000a  readonly attribute unsigned short code;\u000a  readonly attribute DOMString reason;\u000a};\u000a\u000adictionary CloseEventInit : EventInit\u000a{\u000a  boolean wasClean = false;\u000a  unsigned short code = 0;\u000a  DOMString reason = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CommandEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CommandEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Func=\"IsChromeOrXBL\"]\u000ainterface CommandEvent : Event {\u000a  readonly attribute DOMString? command;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Comment.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Comment.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org/#comment\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(optional DOMString data = \"\")]\u000ainterface Comment : CharacterData {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CompositionEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CompositionEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * https://w3c.github.io/uievents/#interface-compositionevent\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString type, optional CompositionEventInit eventInitDict)]\u000ainterface CompositionEvent : UIEvent\u000a{\u000a  readonly attribute DOMString? data;\u000a  // locale is currently non-standard\u000a  readonly attribute DOMString  locale;\u000a\u000a /**\u000a  * ranges is trying to expose TextRangeArray in Gecko so a\u000a  * js-plugin couble be able to know the clauses information\u000a  */\u000a  [ChromeOnly,Cached,Pure]\u000a  readonly attribute sequence<TextClause> ranges;\u000a};\u000a\u000adictionary CompositionEventInit : UIEventInit {\u000a  DOMString data = \"\";\u000a};\u000a\u000apartial interface CompositionEvent\u000a{\u000a  void initCompositionEvent(DOMString typeArg,\u000a                            optional boolean canBubbleArg = false,\u000a                            optional boolean cancelableArg = false,\u000a                            optional Window? viewArg = null,\u000a                            optional DOMString? dataArg = null,\u000a                            optional DOMString localeArg = \"\");\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Console.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Console.webidl"},contents:"/* -*- Mode: IDL; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* vim: set ts=2 et sw=2 tw=80: */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface, please see\u000a * https://console.spec.whatwg.org/#console-namespace\u000a */\u000a\u000a[Exposed=(Window,Worker,WorkerDebugger,Worklet,System),\u000a ClassString=\"Console\",\u000a ProtoObjectHack]\u000anamespace console {\u000a\u000a  // NOTE: if you touch this namespace, remember to update the ConsoleInstance\u000a  // interface as well!\u000a\u000a  // Logging\u000a  void assert(optional boolean condition = false, any... data);\u000a  void clear();\u000a  void count(optional DOMString label = \"default\");\u000a  void debug(any... data);\u000a  void error(any... data);\u000a  void info(any... data);\u000a  void log(any... data);\u000a  void table(any... data); // FIXME: The spec is still unclear about this.\u000a  void trace(any... data);\u000a  void warn(any... data);\u000a  void dir(any... data); // FIXME: This doesn't follow the spec yet.\u000a  void dirxml(any... data);\u000a\u000a  // Grouping\u000a  void group(any... data);\u000a  void groupCollapsed(any... data);\u000a  void groupEnd();\u000a\u000a  // Timing\u000a  void time(optional DOMString label = \"default\");\u000a  void timeEnd(optional DOMString label = \"default\");\u000a\u000a  // Mozilla only or Webcompat methods\u000a\u000a  void _exception(any... data);\u000a  void timeStamp(optional any data);\u000a\u000a  void profile(any... data);\u000a  void profileEnd(any... data);\u000a\u000a  [ChromeOnly]\u000a  const boolean IS_NATIVE_CONSOLE = true;\u000a\u000a  [ChromeOnly, NewObject]\u000a  ConsoleInstance createInstance(optional ConsoleInstanceOptions options);\u000a};\u000a\u000a// This is used to propagate console events to the observers.\u000adictionary ConsoleEvent {\u000a  (unsigned long long or DOMString) ID;\u000a  (unsigned long long or DOMString) innerID;\u000a  DOMString consoleID = \"\";\u000a  DOMString addonId = \"\";\u000a  DOMString level = \"\";\u000a  DOMString filename = \"\";\u000a  unsigned long lineNumber = 0;\u000a  unsigned long columnNumber = 0;\u000a  DOMString functionName = \"\";\u000a  double timeStamp = 0;\u000a  sequence<any> arguments;\u000a  sequence<DOMString?> styles;\u000a  boolean private = false;\u000a  // stacktrace is handled via a getter in some cases so we can construct it\u000a  // lazily.  Note that we're not making this whole thing an interface because\u000a  // consumers expect to see own properties on it, which would mean making the\u000a  // props unforgeable, which means lots of JSFunction allocations.  Maybe we\u000a  // should fix those consumers, of course....\u000a  // sequence<ConsoleStackEntry> stacktrace;\u000a  DOMString groupName = \"\";\u000a  any timer = null;\u000a  any counter = null;\u000a  DOMString prefix = \"\";\u000a};\u000a\u000a// Event for profile operations\u000adictionary ConsoleProfileEvent {\u000a  DOMString action = \"\";\u000a  sequence<any> arguments;\u000a};\u000a\u000a// This dictionary is used to manage stack trace data.\u000adictionary ConsoleStackEntry {\u000a  DOMString filename = \"\";\u000a  unsigned long lineNumber = 0;\u000a  unsigned long columnNumber = 0;\u000a  DOMString functionName = \"\";\u000a  DOMString? asyncCause;\u000a};\u000a\u000adictionary ConsoleTimerStart {\u000a  DOMString name = \"\";\u000a};\u000a\u000adictionary ConsoleTimerEnd {\u000a  DOMString name = \"\";\u000a  double duration = 0;\u000a};\u000a\u000adictionary ConsoleTimerError {\u000a  DOMString error = \"\";\u000a  DOMString name = \"\";\u000a};\u000a\u000adictionary ConsoleCounter {\u000a  DOMString label = \"\";\u000a  unsigned long count = 0;\u000a};\u000a\u000adictionary ConsoleCounterError {\u000a  DOMString error = \"maxCountersExceeded\";\u000a};\u000a\u000a[ChromeOnly,\u000a Exposed=(Window,Worker,WorkerDebugger,Worklet,System)]\u000a// This is basically a copy of the console namespace.\u000ainterface ConsoleInstance {\u000a  // Logging\u000a  void assert(optional boolean condition = false, any... data);\u000a  void clear();\u000a  void count(optional DOMString label = \"default\");\u000a  void debug(any... data);\u000a  void error(any... data);\u000a  void info(any... data);\u000a  void log(any... data);\u000a  void table(any... data); // FIXME: The spec is still unclear about this.\u000a  void trace(any... data);\u000a  void warn(any... data);\u000a  void dir(any... data); // FIXME: This doesn't follow the spec yet.\u000a  void dirxml(any... data);\u000a\u000a  // Grouping\u000a  void group(any... data);\u000a  void groupCollapsed(any... data);\u000a  void groupEnd();\u000a\u000a  // Timing\u000a  void time(optional DOMString label = \"default\");\u000a  void timeEnd(optional DOMString label = \"default\");\u000a\u000a  // Mozilla only or Webcompat methods\u000a\u000a  void _exception(any... data);\u000a  void timeStamp(optional any data);\u000a\u000a  void profile(any... data);\u000a  void profileEnd(any... data);\u000a};\u000a\u000acallback ConsoleInstanceDumpCallback = void (DOMString message);\u000a\u000aenum ConsoleLogLevel {\u000a  \"all\", \"debug\", \"log\", \"info\", \"clear\", \"trace\", \"timeEnd\", \"time\", \"group\",\u000a  \"groupEnd\", \"profile\", \"profileEnd\", \"dir\", \"dirxml\", \"warn\", \"error\", \"off\"\u000a};\u000a\u000adictionary ConsoleInstanceOptions {\u000a  // An optional function to intercept all strings written to stdout.\u000a  ConsoleInstanceDumpCallback dump;\u000a\u000a  // An optional prefix string to be printed before the actual logged message.\u000a  DOMString prefix = \"\";\u000a\u000a  // An ID representing the source of the message. Normally the inner ID of a\u000a  // DOM window.\u000a  DOMString innerID = \"\";\u000a\u000a  // String identified for the console, this will be passed through the console\u000a  // notifications.\u000a  DOMString consoleID = \"\";\u000a\u000a  // Identifier that allows to filter which messages are logged based on their\u000a  // log level.\u000a  ConsoleLogLevel maxLogLevel;\u000a\u000a  // String pref name which contains the level to use for maxLogLevel. If the\u000a  // pref doesn't exist, gets removed or it is used in workers, the maxLogLevel\u000a  // will default to the value passed to this constructor (or \"all\" if it wasn't\u000a  // specified).\u000a  DOMString maxLogLevelPref = \"\";\u000a};\u000a\u000aenum ConsoleLevel { \"log\", \"warning\", \"error\" };\u000a\u000a// this interface is just for testing\u000apartial interface ConsoleInstance {\u000a  [ChromeOnly]\u000a  void reportForServiceWorkerScope(DOMString scope, DOMString message,\u000a                                   DOMString filename, unsigned long lineNumber,\u000a                                   unsigned long columnNumber,\u000a                                   ConsoleLevel level);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ConstantSourceNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ConstantSourceNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary ConstantSourceOptions {\u000a    float offset = 1;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional ConstantSourceOptions options)]\u000ainterface ConstantSourceNode :  AudioScheduledSourceNode {\u000a    readonly        attribute AudioParam   offset;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ContainerBoxObject.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ContainerBoxObject.webidl"},contents:"\u000a/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface ContainerBoxObject : BoxObject {\u000a    [ChromeOnly]\u000a    readonly attribute nsIDocShell? docShell;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ConvolverNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ConvolverNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary ConvolverOptions : AudioNodeOptions {\u000a             AudioBuffer? buffer;\u000a             boolean      disableNormalization = false;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional ConvolverOptions options)]\u000ainterface ConvolverNode : AudioNode {\u000a\u000a      [SetterThrows]\u000a      attribute AudioBuffer? buffer;\u000a      attribute boolean normalize;\u000a\u000a};\u000a\u000a// Mozilla extension\u000aConvolverNode implements AudioNodePassThrough;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Coordinates.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Coordinates.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/geolocation-API\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface Coordinates {\u000a  readonly attribute double latitude;\u000a  readonly attribute double longitude;\u000a  readonly attribute double? altitude;\u000a  readonly attribute double accuracy;\u000a  readonly attribute double? altitudeAccuracy;\u000a  readonly attribute double? heading;\u000a  readonly attribute double? speed;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CreateOfferRequest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CreateOfferRequest.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * This is an internal IDL file\u000a */\u000a\u000a[ChromeOnly,\u000a JSImplementation=\"@mozilla.org/dom/createofferrequest;1\"]\u000ainterface CreateOfferRequest {\u000a  readonly attribute unsigned long long windowID;\u000a  readonly attribute unsigned long long innerWindowID;\u000a  readonly attribute DOMString callID;\u000a  readonly attribute boolean isSecure;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CredentialManagement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CredentialManagement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://www.w3.org/TR/credential-management-1/\u000a */\u000a\u000a[Exposed=Window, SecureContext, Pref=\"security.webauth.webauthn\"]\u000ainterface Credential {\u000a  readonly attribute USVString id;\u000a  readonly attribute DOMString type;\u000a};\u000a\u000a[Exposed=Window, SecureContext, Pref=\"security.webauth.webauthn\"]\u000ainterface CredentialsContainer {\u000a  [Throws]\u000a  Promise<Credential?> get(optional CredentialRequestOptions options);\u000a  [Throws]\u000a  Promise<Credential?> create(optional CredentialCreationOptions options);\u000a  [Throws]\u000a  Promise<Credential> store(Credential credential);\u000a  [Throws]\u000a  Promise<void> preventSilentAccess();\u000a};\u000a\u000adictionary CredentialRequestOptions {\u000a  PublicKeyCredentialRequestOptions publicKey;\u000a  AbortSignal signal;\u000a};\u000a\u000adictionary CredentialCreationOptions {\u000a  PublicKeyCredentialCreationOptions publicKey;\u000a  AbortSignal signal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Crypto.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Crypto.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/webcrypto-api/raw-file/tip/spec/Overview.html#crypto-interface\u000a */\u000a\u000a[NoInterfaceObject, Exposed=(Window,Worker)]\u000ainterface GlobalCrypto {\u000a  [Throws] readonly attribute Crypto crypto;\u000a};\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface Crypto {\u000a  readonly attribute SubtleCrypto subtle;\u000a\u000a  [Throws]\u000a  ArrayBufferView getRandomValues(ArrayBufferView array);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CustomElementRegistry.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CustomElementRegistry.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a// https://html.spec.whatwg.org/#dom-window-customelements\u000a[Func=\"CustomElementRegistry::IsCustomElementEnabled\"]\u000ainterface CustomElementRegistry {\u000a  [CEReactions, Throws]\u000a  void define(DOMString name, Function functionConstructor,\u000a              optional ElementDefinitionOptions options);\u000a  any get(DOMString name);\u000a  [Throws]\u000a  Promise<void> whenDefined(DOMString name);\u000a};\u000a\u000adictionary ElementDefinitionOptions {\u000a  DOMString extends;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CustomEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/CustomEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString type, optional CustomEventInit eventInitDict),\u000a Exposed=(Window, Worker)]\u000ainterface CustomEvent : Event\u000a{\u000a  readonly attribute any detail;\u000a\u000a  // initCustomEvent is a Gecko specific deprecated method.\u000a  [Throws]\u000a  void initCustomEvent(DOMString type,\u000a                       optional boolean canBubble = false,\u000a                       optional boolean cancelable = false,\u000a                       optional any detail = null);\u000a};\u000a\u000adictionary CustomEventInit : EventInit\u000a{\u000a  any detail = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMCursor.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMCursor.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface DOMCursor : EventTarget {\u000a  readonly attribute boolean done;\u000a  [Throws]\u000a  void continue();\u000a};\u000a\u000aDOMCursor implements DOMRequestShared;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMError.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMError.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org/#domerror\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString name, optional DOMString message = \"\"),\u000a Exposed=(Window,Worker,System)]\u000ainterface DOMError {\u000a  [Constant, UseCounter]\u000a  readonly attribute DOMString name;\u000a\u000a  [Constant, UseCounter]\u000a  readonly attribute DOMString message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMException.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMException.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org/#exception-domexception\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a\u000a// This is the WebIDL version of nsIException.  This is mostly legacy stuff.\u000a\u000ainterface StackFrame;\u000a\u000a[NoInterfaceObject,\u000a Exposed=(Window,Worker,System)]\u000ainterface ExceptionMembers\u000a{\u000a  // The nsresult associated with this exception.\u000a  readonly attribute unsigned long           result;\u000a\u000a  // Filename location.  This is the location that caused the\u000a  // error, which may or may not be a source file location.\u000a  // For example, standard language errors would generally have\u000a  // the same location as their top stack entry.  File\u000a  // parsers may put the location of the file they were parsing,\u000a  // etc.\u000a\u000a  // null indicates \"no data\"\u000a  readonly attribute DOMString               filename;\u000a  // Valid line numbers begin at '1'. '0' indicates unknown.\u000a  readonly attribute unsigned long           lineNumber;\u000a  // Valid column numbers begin at 0. \u000a  // We don't have an unambiguous indicator for unknown.\u000a  readonly attribute unsigned long           columnNumber;\u000a\u000a  // A stack trace, if available.  nsIStackFrame does not have classinfo so\u000a  // this was only ever usefully available to chrome JS.\u000a  [ChromeOnly, Exposed=Window]\u000a  readonly attribute StackFrame?             location;\u000a\u000a  // Arbitary data for the implementation.\u000a  [Exposed=Window]\u000a  readonly attribute nsISupports?            data;\u000a\u000a  // Formatted exception stack\u000a  [Replaceable]\u000a  readonly attribute DOMString               stack;\u000a};\u000a\u000a[NoInterfaceObject, Exposed=(Window,Worker)]\u000ainterface Exception {\u000a  // The name of the error code (ie, a string repr of |result|).\u000a  readonly attribute DOMString               name;\u000a  // A custom message set by the thrower.\u000a  readonly attribute DOMString               message;\u000a  // A generic formatter - make it suitable to print, etc.\u000a  stringifier;\u000a};\u000a\u000aException implements ExceptionMembers;\u000a\u000a// XXXkhuey this is an 'exception', not an interface, but we don't have any\u000a// parser or codegen mechanisms for dealing with exceptions.\u000a[ExceptionClass,\u000a Exposed=(Window, Worker,System),\u000a Constructor(optional DOMString message = \"\", optional DOMString name)]\u000ainterface DOMException {\u000a  // The name of the error code (ie, a string repr of |result|).\u000a  readonly attribute DOMString               name;\u000a  // A custom message set by the thrower.\u000a  readonly attribute DOMString               message;\u000a  readonly attribute unsigned short code;\u000a\u000a  const unsigned short INDEX_SIZE_ERR = 1;\u000a  const unsigned short DOMSTRING_SIZE_ERR = 2; // historical\u000a  const unsigned short HIERARCHY_REQUEST_ERR = 3;\u000a  const unsigned short WRONG_DOCUMENT_ERR = 4;\u000a  const unsigned short INVALID_CHARACTER_ERR = 5;\u000a  const unsigned short NO_DATA_ALLOWED_ERR = 6; // historical\u000a  const unsigned short NO_MODIFICATION_ALLOWED_ERR = 7;\u000a  const unsigned short NOT_FOUND_ERR = 8;\u000a  const unsigned short NOT_SUPPORTED_ERR = 9;\u000a  const unsigned short INUSE_ATTRIBUTE_ERR = 10; // historical\u000a  const unsigned short INVALID_STATE_ERR = 11;\u000a  const unsigned short SYNTAX_ERR = 12;\u000a  const unsigned short INVALID_MODIFICATION_ERR = 13;\u000a  const unsigned short NAMESPACE_ERR = 14;\u000a  const unsigned short INVALID_ACCESS_ERR = 15;\u000a  const unsigned short VALIDATION_ERR = 16; // historical\u000a  const unsigned short TYPE_MISMATCH_ERR = 17; // historical; use JavaScript's TypeError instead\u000a  const unsigned short SECURITY_ERR = 18;\u000a  const unsigned short NETWORK_ERR = 19;\u000a  const unsigned short ABORT_ERR = 20;\u000a  const unsigned short URL_MISMATCH_ERR = 21;\u000a  const unsigned short QUOTA_EXCEEDED_ERR = 22;\u000a  const unsigned short TIMEOUT_ERR = 23;\u000a  const unsigned short INVALID_NODE_TYPE_ERR = 24;\u000a  const unsigned short DATA_CLONE_ERR = 25;\u000a};\u000a\u000a// XXXkhuey copy all of Gecko's non-standard stuff onto DOMException, but leave\u000a// the prototype chain sane.\u000aDOMException implements ExceptionMembers;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMImplementation.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMImplementation.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org/#interface-domimplementation\u000a *\u000a * Copyright:\u000a * To the extent possible under law, the editors have waived all copyright and\u000a * related or neighboring rights to this work.\u000a */\u000a\u000ainterface DOMImplementation {\u000a  boolean hasFeature();\u000a\u000a  [Throws]\u000a  DocumentType createDocumentType(DOMString qualifiedName, DOMString publicId,\u000a                                  DOMString systemId);\u000a  [Throws]\u000a  Document createDocument(DOMString? namespace,\u000a                          [TreatNullAs=EmptyString] DOMString qualifiedName,\u000a                          optional DocumentType? doctype = null);\u000a  [Throws]\u000a  Document createHTMLDocument(optional DOMString title);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMMatrix.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMMatrix.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/fxtf/geometry/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"layout.css.DOMMatrix.enabled\"]\u000ainterface DOMMatrixReadOnly {\u000a    // These attributes are simple aliases for certain elements of the 4x4 matrix\u000a    readonly attribute unrestricted double a;\u000a    readonly attribute unrestricted double b;\u000a    readonly attribute unrestricted double c;\u000a    readonly attribute unrestricted double d;\u000a    readonly attribute unrestricted double e;\u000a    readonly attribute unrestricted double f;\u000a\u000a    readonly attribute unrestricted double m11;\u000a    readonly attribute unrestricted double m12;\u000a    readonly attribute unrestricted double m13;\u000a    readonly attribute unrestricted double m14;\u000a    readonly attribute unrestricted double m21;\u000a    readonly attribute unrestricted double m22;\u000a    readonly attribute unrestricted double m23;\u000a    readonly attribute unrestricted double m24;\u000a    readonly attribute unrestricted double m31;\u000a    readonly attribute unrestricted double m32;\u000a    readonly attribute unrestricted double m33;\u000a    readonly attribute unrestricted double m34;\u000a    readonly attribute unrestricted double m41;\u000a    readonly attribute unrestricted double m42;\u000a    readonly attribute unrestricted double m43;\u000a    readonly attribute unrestricted double m44;\u000a\u000a    // Immutable transform methods\u000a    DOMMatrix translate(unrestricted double tx,\u000a                        unrestricted double ty,\u000a                        optional unrestricted double tz = 0);\u000a    DOMMatrix scale(unrestricted double scale,\u000a                    optional unrestricted double originX = 0,\u000a                    optional unrestricted double originY = 0);\u000a    DOMMatrix scale3d(unrestricted double scale,\u000a                      optional unrestricted double originX = 0,\u000a                      optional unrestricted double originY = 0,\u000a                      optional unrestricted double originZ = 0);\u000a    DOMMatrix scaleNonUniform(unrestricted double scaleX,\u000a                              optional unrestricted double scaleY = 1,\u000a                              optional unrestricted double scaleZ = 1,\u000a                              optional unrestricted double originX = 0,\u000a                              optional unrestricted double originY = 0,\u000a                              optional unrestricted double originZ = 0);\u000a    DOMMatrix rotate(unrestricted double angle,\u000a                     optional unrestricted double originX = 0,\u000a                     optional unrestricted double originY = 0);\u000a    DOMMatrix rotateFromVector(unrestricted double x,\u000a                               unrestricted double y);\u000a    DOMMatrix rotateAxisAngle(unrestricted double x,\u000a                              unrestricted double y,\u000a                              unrestricted double z,\u000a                              unrestricted double angle);\u000a    DOMMatrix skewX(unrestricted double sx);\u000a    DOMMatrix skewY(unrestricted double sy);\u000a    DOMMatrix multiply(DOMMatrix other);\u000a    DOMMatrix flipX();\u000a    DOMMatrix flipY();\u000a    DOMMatrix inverse();\u000a\u000a    // Helper methods\u000a    readonly attribute boolean is2D;\u000a    readonly attribute boolean isIdentity;\u000a    DOMPoint                   transformPoint(optional DOMPointInit point);\u000a    [Throws] Float32Array      toFloat32Array();\u000a    [Throws] Float64Array      toFloat64Array();\u000a                               stringifier;\u000a};\u000a\u000a[Pref=\"layout.css.DOMMatrix.enabled\",\u000a Constructor,\u000a Constructor(DOMString transformList),\u000a Constructor(DOMMatrixReadOnly other),\u000a Constructor(Float32Array array32),\u000a Constructor(Float64Array array64),\u000a Constructor(sequence<unrestricted double> numberSequence)]\u000ainterface DOMMatrix : DOMMatrixReadOnly {\u000a    // These attributes are simple aliases for certain elements of the 4x4 matrix\u000a    inherit attribute unrestricted double a;\u000a    inherit attribute unrestricted double b;\u000a    inherit attribute unrestricted double c;\u000a    inherit attribute unrestricted double d;\u000a    inherit attribute unrestricted double e;\u000a    inherit attribute unrestricted double f;\u000a\u000a    inherit attribute unrestricted double m11;\u000a    inherit attribute unrestricted double m12;\u000a    inherit attribute unrestricted double m13;\u000a    inherit attribute unrestricted double m14;\u000a    inherit attribute unrestricted double m21;\u000a    inherit attribute unrestricted double m22;\u000a    inherit attribute unrestricted double m23;\u000a    inherit attribute unrestricted double m24;\u000a    inherit attribute unrestricted double m31;\u000a    inherit attribute unrestricted double m32;\u000a    inherit attribute unrestricted double m33;\u000a    inherit attribute unrestricted double m34;\u000a    inherit attribute unrestricted double m41;\u000a    inherit attribute unrestricted double m42;\u000a    inherit attribute unrestricted double m43;\u000a    inherit attribute unrestricted double m44;\u000a\u000a    // Mutable transform methods\u000a    DOMMatrix multiplySelf(DOMMatrix other);\u000a    DOMMatrix preMultiplySelf(DOMMatrix other);\u000a    DOMMatrix translateSelf(unrestricted double tx,\u000a                            unrestricted double ty,\u000a                            optional unrestricted double tz = 0);\u000a    DOMMatrix scaleSelf(unrestricted double scale,\u000a                        optional unrestricted double originX = 0,\u000a                        optional unrestricted double originY = 0);\u000a    DOMMatrix scale3dSelf(unrestricted double scale,\u000a                          optional unrestricted double originX = 0,\u000a                          optional unrestricted double originY = 0,\u000a                          optional unrestricted double originZ = 0);\u000a    DOMMatrix scaleNonUniformSelf(unrestricted double scaleX,\u000a                                  optional unrestricted double scaleY = 1,\u000a                                  optional unrestricted double scaleZ = 1,\u000a                                  optional unrestricted double originX = 0,\u000a                                  optional unrestricted double originY = 0,\u000a                                  optional unrestricted double originZ = 0);\u000a    DOMMatrix rotateSelf(unrestricted double angle,\u000a                         optional unrestricted double originX = 0,\u000a                         optional unrestricted double originY = 0);\u000a    DOMMatrix rotateFromVectorSelf(unrestricted double x,\u000a                                  unrestricted double y);\u000a    DOMMatrix rotateAxisAngleSelf(unrestricted double x,\u000a                                  unrestricted double y,\u000a                                  unrestricted double z,\u000a                                  unrestricted double angle);\u000a    DOMMatrix skewXSelf(unrestricted double sx);\u000a    DOMMatrix skewYSelf(unrestricted double sy);\u000a    DOMMatrix invertSelf();\u000a    [Throws] DOMMatrix setMatrixValue(DOMString transformList);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMParser.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMParser.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://domparsing.spec.whatwg.org/#the-domparser-interface\u000a */\u000a\u000ainterface Principal;\u000ainterface URI;\u000ainterface InputStream;\u000a\u000aenum SupportedType {\u000a  \"text/html\",\u000a  \"text/xml\",\u000a  \"application/xml\",\u000a  \"application/xhtml+xml\",\u000a  \"image/svg+xml\"\u000a};\u000a\u000a// the latter is Mozilla-specific\u000a[Constructor,\u000a Constructor(Principal? prin, optional URI? documentURI = null,\u000a             optional URI? baseURI = null)]\u000ainterface DOMParser {\u000a  [NewObject, Throws]\u000a  Document parseFromString(DOMString str, SupportedType type);\u000a\u000a  // Mozilla-specific stuff\u000a  // Throws if the passed-in length is greater than the actual sequence length\u000a  [NewObject, Throws, ChromeOnly]\u000a  Document parseFromBuffer(sequence<octet> buf, unsigned long bufLen,\u000a                           SupportedType type);\u000a  // Throws if the passed-in length is greater than the actual typed array length\u000a  [NewObject, Throws, ChromeOnly]\u000a  Document parseFromBuffer(Uint8Array buf, unsigned long bufLen,\u000a                           SupportedType type);\u000a  [NewObject, Throws, ChromeOnly]\u000a  Document parseFromStream(InputStream stream, DOMString? charset,\u000a                           long contentLength, SupportedType type);\u000a  [Throws, ChromeOnly]\u000a  void init(optional Principal? principal = null,\u000a            optional URI? documentURI = null,\u000a            optional URI? baseURI = null);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMPoint.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMPoint.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/fxtf/geometry/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"layout.css.DOMPoint.enabled\"]\u000ainterface DOMPointReadOnly {\u000a    readonly attribute unrestricted double x;\u000a    readonly attribute unrestricted double y;\u000a    readonly attribute unrestricted double z;\u000a    readonly attribute unrestricted double w; \u000a};\u000a\u000a[Pref=\"layout.css.DOMPoint.enabled\",\u000a Constructor(optional DOMPointInit point),\u000a Constructor(unrestricted double x, unrestricted double y,\u000a             optional unrestricted double z = 0, optional unrestricted double w = 1)]\u000ainterface DOMPoint : DOMPointReadOnly {\u000a    inherit attribute unrestricted double x;\u000a    inherit attribute unrestricted double y;\u000a    inherit attribute unrestricted double z;\u000a    inherit attribute unrestricted double w;\u000a};\u000a\u000adictionary DOMPointInit {\u000a    unrestricted double x = 0;\u000a    unrestricted double y = 0;\u000a    unrestricted double z = 0;\u000a    unrestricted double w = 1;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMQuad.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMQuad.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/fxtf/geometry/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"layout.css.DOMQuad.enabled\",\u000a Constructor(optional DOMPointInit p1, optional DOMPointInit p2,\u000a             optional DOMPointInit p3, optional DOMPointInit p4),\u000a Constructor(DOMRectReadOnly rect)]\u000ainterface DOMQuad {\u000a    [SameObject] readonly attribute DOMPoint p1;\u000a    [SameObject] readonly attribute DOMPoint p2;\u000a    [SameObject] readonly attribute DOMPoint p3;\u000a    [SameObject] readonly attribute DOMPoint p4;\u000a    [SameObject] readonly attribute DOMRectReadOnly bounds;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMRect.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMRect.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/fxtf/geometry/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor,\u000a Constructor(unrestricted double x, unrestricted double y,\u000a             unrestricted double width, unrestricted double height)]\u000ainterface DOMRect : DOMRectReadOnly {\u000a    inherit attribute unrestricted double x;\u000a    inherit attribute unrestricted double y;\u000a    inherit attribute unrestricted double width;\u000a    inherit attribute unrestricted double height;\u000a};\u000a\u000a[ProbablyShortLivingWrapper]\u000ainterface DOMRectReadOnly {\u000a    readonly attribute unrestricted double x;\u000a    readonly attribute unrestricted double y;\u000a    readonly attribute unrestricted double width;\u000a    readonly attribute unrestricted double height;\u000a    readonly attribute unrestricted double top;\u000a    readonly attribute unrestricted double right;\u000a    readonly attribute unrestricted double bottom;\u000a    readonly attribute unrestricted double left;\u000a};\u000a\u000adictionary DOMRectInit {\u000a    unrestricted double x = 0;\u000a    unrestricted double y = 0;\u000a    unrestricted double width = 0;\u000a    unrestricted double height = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMRectList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMRectList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[ArrayClass]\u000ainterface DOMRectList {\u000a  readonly attribute unsigned long length;\u000a  getter DOMRect? item(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMRequest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMRequest.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000aenum DOMRequestReadyState { \"pending\", \"done\" };\u000a\u000a[Exposed=(Window,Worker,System), NoInterfaceObject]\u000ainterface DOMRequestShared {\u000a  readonly attribute DOMRequestReadyState readyState;\u000a\u000a  readonly attribute any result;\u000a  readonly attribute DOMException? error;\u000a\u000a  attribute EventHandler onsuccess;\u000a  attribute EventHandler onerror;\u000a};\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface DOMRequest : EventTarget {\u000a  // The [TreatNonCallableAsNull] annotation is required since then() should do\u000a  // nothing instead of throwing errors when non-callable arguments are passed.\u000a  // See documentation for Promise.then to see why we return \"any\".\u000a  [NewObject, Throws]\u000a  any then([TreatNonCallableAsNull] optional AnyCallback? fulfillCallback = null,\u000a           [TreatNonCallableAsNull] optional AnyCallback? rejectCallback = null);\u000a\u000a  [ChromeOnly]\u000a  void fireDetailedError(DOMException aError);\u000a};\u000a\u000aDOMRequest implements DOMRequestShared;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMStringList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMStringList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface DOMStringList {\u000a  readonly attribute unsigned long length;\u000a  getter DOMString? item(unsigned long index);\u000a  boolean contains(DOMString string);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMStringMap.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMStringMap.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/multipage/common-dom-interfaces.html#domstringmap-0\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[OverrideBuiltins]\u000ainterface DOMStringMap {\u000a  getter DOMString (DOMString name);\u000a  [CEReactions, Throws]\u000a  setter void (DOMString name, DOMString value);\u000a  [CEReactions]\u000a  deleter void (DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMTokenList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DOMTokenList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface DOMTokenList {\u000a  readonly attribute unsigned long length;\u000a  getter DOMString? item(unsigned long index);\u000a  boolean contains(DOMString token);\u000a  [CEReactions, Throws]\u000a  void add(DOMString... tokens);\u000a  [CEReactions, Throws]\u000a  void remove(DOMString... tokens);\u000a  [CEReactions, Throws]\u000a  void replace(DOMString token, DOMString newToken);\u000a  [CEReactions, Throws]\u000a  boolean toggle(DOMString token, optional boolean force);\u000a  [Throws]\u000a  boolean supports(DOMString token);\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString value;\u000a  stringifier DOMString ();\u000a  iterable<DOMString?>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DataTransfer.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DataTransfer.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is:\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-datatransfer-interface\u000a */\u000a\u000a[ChromeConstructor(DOMString eventType, boolean isExternal)]\u000ainterface DataTransfer {\u000a           attribute DOMString dropEffect;\u000a           attribute DOMString effectAllowed;\u000a\u000a  readonly attribute DataTransferItemList items;\u000a\u000a  void setDragImage(Element image, long x, long y);\u000a\u000a  // ReturnValueNeedsContainsHack on .types because lots of extension\u000a  // code was expecting .contains() back when it was a DOMStringList.\u000a  [Pure, Cached, Frozen, NeedsCallerType, ReturnValueNeedsContainsHack]\u000a  readonly attribute sequence<DOMString> types;\u000a  [Throws, NeedsSubjectPrincipal]\u000a  DOMString getData(DOMString format);\u000a  [Throws, NeedsSubjectPrincipal]\u000a  void setData(DOMString format, DOMString data);\u000a  [Throws, NeedsSubjectPrincipal]\u000a  void clearData(optional DOMString format);\u000a  [Throws, NeedsSubjectPrincipal]\u000a  readonly attribute FileList? files;\u000a};\u000a\u000apartial interface DataTransfer {\u000a  [Throws, Pref=\"dom.input.dirpicker\", NeedsSubjectPrincipal]\u000a  Promise<sequence<(File or Directory)>> getFilesAndDirectories();\u000a\u000a  [Throws, Pref=\"dom.input.dirpicker\", NeedsSubjectPrincipal]\u000a  Promise<sequence<File>>                getFiles(optional boolean recursiveFlag = false);\u000a};\u000a\u000a// Mozilla specific stuff\u000apartial interface DataTransfer {\u000a  /*\u000a   * Set the drag source. Usually you would not change this, but it will\u000a   * affect which node the drag and dragend events are fired at. The\u000a   * default target is the node that was dragged.\u000a   *\u000a   * @param element drag source to use\u000a   * @throws NO_MODIFICATION_ALLOWED_ERR if the item cannot be modified\u000a   */\u000a  [Throws, UseCounter]\u000a  void addElement(Element element);\u000a\u000a  /**\u000a   * The number of items being dragged.\u000a   */\u000a  [UseCounter]\u000a  readonly attribute unsigned long mozItemCount;\u000a\u000a  /**\u000a   * Sets the drag cursor state. Primarily used to control the cursor during\u000a   * tab drags, but could be expanded to other uses. XXX Currently implemented\u000a   * on Win32 only.\u000a   *\u000a   * Possible values:\u000a   *  auto - use default system behavior.\u000a   *  default - set the cursor to an arrow during the drag operation.\u000a   *\u000a   * Values other than 'default' are indentical to setting mozCursor to\u000a   * 'auto'.\u000a   */\u000a  [UseCounter]\u000a  attribute DOMString mozCursor;\u000a\u000a  /**\u000a   * Holds a list of the format types of the data that is stored for an item\u000a   * at the specified index. If the index is not in the range from 0 to\u000a   * itemCount - 1, an empty string list is returned.\u000a   */\u000a  [Throws, NeedsCallerType, UseCounter]\u000a  DOMStringList mozTypesAt(unsigned long index);\u000a\u000a  /**\u000a   * Remove the data associated with the given format for an item at the\u000a   * specified index. The index is in the range from zero to itemCount - 1.\u000a   *\u000a   * If the last format for the item is removed, the entire item is removed,\u000a   * reducing the itemCount by one.\u000a   *\u000a   * If format is empty, then the data associated with all formats is removed.\u000a   * If the format is not found, then this method has no effect.\u000a   *\u000a   * @param format the format to remove\u000a   * @throws NS_ERROR_DOM_INDEX_SIZE_ERR if index is greater or equal than itemCount\u000a   * @throws NO_MODIFICATION_ALLOWED_ERR if the item cannot be modified\u000a   */\u000a  [Throws, NeedsSubjectPrincipal, UseCounter]\u000a  void mozClearDataAt(DOMString format, unsigned long index);\u000a\u000a  /*\u000a   * A data transfer may store multiple items, each at a given zero-based\u000a   * index. setDataAt may only be called with an index argument less than\u000a   * itemCount in which case an existing item is modified, or equal to\u000a   * itemCount in which case a new item is added, and the itemCount is\u000a   * incremented by one.\u000a   *\u000a   * Data should be added in order of preference, with the most specific\u000a   * format added first and the least specific format added last. If data of\u000a   * the given format already exists, it is replaced in the same position as\u000a   * the old data.\u000a   *\u000a   * The data should be either a string, a primitive boolean or number type\u000a   * (which will be converted into a string) or an nsISupports.\u000a   *\u000a   * @param format the format to add\u000a   * @param data the data to add\u000a   * @throws NS_ERROR_NULL_POINTER if the data is null\u000a   * @throws NS_ERROR_DOM_INDEX_SIZE_ERR if index is greater than itemCount\u000a   * @throws NO_MODIFICATION_ALLOWED_ERR if the item cannot be modified\u000a   */\u000a  [Throws, NeedsSubjectPrincipal, UseCounter]\u000a  void mozSetDataAt(DOMString format, any data, unsigned long index);\u000a\u000a  /**\u000a   * Retrieve the data associated with the given format for an item at the\u000a   * specified index, or null if it does not exist. The index should be in the\u000a   * range from zero to itemCount - 1.\u000a   *\u000a   * @param format the format of the data to look up\u000a   * @returns the data of the given format, or null if it doesn't exist.\u000a   * @throws NS_ERROR_DOM_INDEX_SIZE_ERR if index is greater or equal than itemCount\u000a   */\u000a  [Throws, NeedsSubjectPrincipal, UseCounter]\u000a  any mozGetDataAt(DOMString format, unsigned long index);\u000a\u000a  /**\u000a   * Update the drag image. Arguments are the same as setDragImage. This is only\u000a   * valid within the parent chrome process.\u000a   */\u000a  [ChromeOnly]\u000a  void updateDragImage(Element image, long x, long y);\u000a\u000a  /**\u000a   * Will be true when the user has cancelled the drag (typically by pressing\u000a   * Escape) and when the drag has been cancelled unexpectedly.  This will be\u000a   * false otherwise, including when the drop has been rejected by its target.\u000a   * This property is only relevant for the dragend event.\u000a   */\u000a  [UseCounter]\u000a  readonly attribute boolean mozUserCancelled;\u000a\u000a  /**\u000a   * The node that the mouse was pressed over to begin the drag. For external\u000a   * drags, or if the caller cannot access this node, this will be null.\u000a   */\u000a  [UseCounter]\u000a  readonly attribute Node? mozSourceNode;\u000a\u000a  /**\u000a   * The URI spec of the triggering principal.  This may be different than\u000a   * sourceNode's principal when sourceNode is xul:browser and the drag is\u000a   * triggered in a browsing context inside it.\u000a   */\u000a  [ChromeOnly]\u000a  readonly attribute DOMString mozTriggeringPrincipalURISpec;\u000a\u000a  /**\u000a   * Copy the given DataTransfer for the given event. Used by testing code for\u000a   * creating emulated Drag and Drop events in the UI.\u000a   *\u000a   * NOTE: Don't expose a DataTransfer produced with this method to the web or\u000a   * use this for non-testing purposes. It can easily be used to get the\u000a   * DataTransfer into an invalid state, and is an unstable implementation\u000a   * detail of EventUtils.synthesizeDrag.\u000a   */\u000a  [Throws, ChromeOnly]\u000a  DataTransfer mozCloneForEvent(DOMString event);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DataTransferItem.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DataTransferItem.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is:\u000a * https://html.spec.whatwg.org/multipage/interaction.html#the-datatransferitem-interface\u000a */\u000a\u000ainterface DataTransferItem {\u000a  readonly attribute DOMString kind;\u000a  readonly attribute DOMString type;\u000a  [Throws, NeedsSubjectPrincipal]\u000a  void getAsString(FunctionStringCallback? _callback);\u000a  [Throws, NeedsSubjectPrincipal]\u000a  File? getAsFile();\u000a};\u000a\u000acallback FunctionStringCallback = void (DOMString data);\u000a\u000apartial interface DataTransferItem {\u000a  [Pref=\"dom.webkitBlink.filesystem.enabled\", BinaryName=\"getAsEntry\", Throws,\u000a   NeedsSubjectPrincipal]\u000a  FileSystemEntry? webkitGetAsEntry();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DataTransferItemList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DataTransferItemList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is:\u000a * https://html.spec.whatwg.org/multipage/interaction.html#the-datatransferitemlist-interface\u000a */\u000a\u000ainterface DataTransferItemList {\u000a  readonly attribute unsigned long length;\u000a  getter DataTransferItem (unsigned long index);\u000a  [Throws, NeedsSubjectPrincipal]\u000a  DataTransferItem? add(DOMString data, DOMString type);\u000a  [Throws, NeedsSubjectPrincipal]\u000a  DataTransferItem? add(File data);\u000a  [Throws, NeedsSubjectPrincipal]\u000a  void remove(unsigned long index);\u000a  [Throws, NeedsSubjectPrincipal]\u000a  void clear();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DecoderDoctorNotification.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DecoderDoctorNotification.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000aenum DecoderDoctorNotificationType {\u000a  \"cannot-play\",\u000a  \"platform-decoder-not-found\",\u000a  \"can-play-but-some-missing-decoders\",\u000a  \"cannot-initialize-pulseaudio\",\u000a  \"unsupported-libavcodec\",\u000a  \"decode-error\",\u000a  \"decode-warning\",\u000a};\u000a\u000adictionary DecoderDoctorNotification {\u000a  required DecoderDoctorNotificationType type;\u000a  // True when the issue has been solved.\u000a  required boolean isSolved;\u000a  // Key from dom.properties, used for telemetry and prefs.\u000a  required DOMString decoderDoctorReportId;\u000a  // If provided, formats (or key systems) at issue.\u000a  DOMString formats;\u000a  // If provided, technical details about the decode-error/warning.\u000a  DOMString decodeIssue;\u000a  // If provided, URL of the document where the issue happened.\u000a  DOMString docURL;\u000a  // If provided, URL of the media resource that caused a decode-error/warning.\u000a  DOMString resourceURL;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DedicatedWorkerGlobalScope.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DedicatedWorkerGlobalScope.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html#the-workerglobalscope-common-interface\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and Opera\u000a * Software ASA.\u000a * You are granted a license to use, reproduce and create derivative works of\u000a * this document.\u000a */\u000a\u000a[Global=(Worker,DedicatedWorker),\u000a Exposed=DedicatedWorker]\u000ainterface DedicatedWorkerGlobalScope : WorkerGlobalScope {\u000a  [Replaceable]\u000a  readonly attribute DOMString name;\u000a\u000a  [Throws]\u000a  void postMessage(any message, optional sequence<object> transfer = []);\u000a\u000a  void close();\u000a\u000a  attribute EventHandler onmessage;\u000a  attribute EventHandler onmessageerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DelayNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DelayNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary DelayOptions : AudioNodeOptions {\u000a             double maxDelayTime = 1;\u000a             double delayTime = 0;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional DelayOptions options)]\u000ainterface DelayNode : AudioNode {\u000a\u000a    readonly attribute AudioParam delayTime;\u000a\u000a};\u000a\u000a// Mozilla extension\u000aDelayNode implements AudioNodePassThrough;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DeviceLightEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DeviceLightEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional DeviceLightEventInit eventInitDict)]\u000ainterface DeviceLightEvent : Event\u000a{\u000a  readonly attribute unrestricted double value;\u000a};\u000a\u000adictionary DeviceLightEventInit : EventInit\u000a{\u000a  unrestricted double value = Infinity;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DeviceMotionEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DeviceMotionEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface DeviceAcceleration {\u000a  readonly attribute double? x;\u000a  readonly attribute double? y;\u000a  readonly attribute double? z;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface DeviceRotationRate {\u000a  readonly attribute double? alpha;\u000a  readonly attribute double? beta;\u000a  readonly attribute double? gamma;\u000a};\u000a\u000a[Constructor(DOMString type, optional DeviceMotionEventInit eventInitDict)]\u000ainterface DeviceMotionEvent : Event {\u000a  readonly attribute DeviceAcceleration? acceleration;\u000a  readonly attribute DeviceAcceleration? accelerationIncludingGravity;\u000a  readonly attribute DeviceRotationRate? rotationRate;\u000a  readonly attribute double? interval;\u000a};\u000a\u000adictionary DeviceAccelerationInit {\u000a  double? x = null;\u000a  double? y = null;\u000a  double? z = null;\u000a};\u000a\u000adictionary DeviceRotationRateInit {\u000a  double? alpha = null;\u000a  double? beta = null;\u000a  double? gamma = null;\u000a};\u000a\u000adictionary DeviceMotionEventInit : EventInit {\u000a  DeviceAccelerationInit acceleration;\u000a  DeviceAccelerationInit accelerationIncludingGravity;\u000a  DeviceRotationRateInit rotationRate;\u000a  double? interval = null;\u000a};\u000a\u000a// Mozilla extensions.\u000apartial interface DeviceMotionEvent {\u000a  void initDeviceMotionEvent(DOMString type,\u000a                             optional boolean canBubble = false,\u000a                             optional boolean cancelable = false,\u000a                             optional DeviceAccelerationInit acceleration,\u000a                             optional DeviceAccelerationInit accelerationIncludingGravity,\u000a                             optional DeviceRotationRateInit rotationRate,\u000a                             optional double? interval = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DeviceOrientationEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DeviceOrientationEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional DeviceOrientationEventInit eventInitDict), LegacyEventInit]\u000ainterface DeviceOrientationEvent : Event\u000a{\u000a  readonly attribute double? alpha;\u000a  readonly attribute double? beta;\u000a  readonly attribute double? gamma;\u000a  readonly attribute boolean absolute;\u000a\u000a  // initDeviceOrientationEvent is a Gecko specific deprecated method.\u000a  void initDeviceOrientationEvent(DOMString type,\u000a                                  optional boolean canBubble = false,\u000a                                  optional boolean cancelable = false,\u000a                                  optional double? alpha = null,\u000a                                  optional double? beta = null,\u000a                                  optional double? gamma = null,\u000a                                  optional boolean absolute = false);\u000a};\u000a\u000adictionary DeviceOrientationEventInit : EventInit\u000a{\u000a  double? alpha = null;\u000a  double? beta = null;\u000a  double? gamma = null;\u000a  boolean absolute = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DeviceProximityEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DeviceProximityEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional DeviceProximityEventInit eventInitDict)]\u000ainterface DeviceProximityEvent : Event\u000a{\u000a  readonly attribute double value;\u000a  readonly attribute double min;\u000a  readonly attribute double max;\u000a};\u000a\u000adictionary DeviceProximityEventInit : EventInit\u000a{\u000a  unrestricted double value = Infinity;\u000a  unrestricted double min = -Infinity;\u000a  unrestricted double max = Infinity;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Directory.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Directory.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/*\u000a * All functions on Directory that accept DOMString arguments for file or\u000a * directory names only allow relative path to current directory itself. The\u000a * path should be a descendent path like \"path/to/file.txt\" and not contain a\u000a * segment of \"..\" or \".\". So the paths aren't allowed to walk up the directory\u000a * tree. For example, paths like \"../foo\", \"..\", \"/foo/bar\" or \"foo/../bar\" are\u000a * not allowed.\u000a *\u000a * http://w3c.github.io/filesystem-api/#idl-def-Directory\u000a * https://microsoftedge.github.io/directory-upload/proposal.html#directory-interface\u000a */\u000a\u000a// This chromeConstructor is used by the MockFilePicker for testing only.\u000a[ChromeConstructor(DOMString path),\u000a Exposed=(Window,Worker)]\u000ainterface Directory {\u000a  /*\u000a   * The leaf name of the directory.\u000a   */\u000a  [Throws]\u000a  readonly attribute DOMString name;\u000a};\u000a\u000a[Exposed=(Window,Worker)]\u000apartial interface Directory {\u000a  // Already defined in the main interface declaration:\u000a  //readonly attribute DOMString name;\u000a\u000a  /*\u000a   * The path of the Directory (includes both its basename and leafname).\u000a   * The path begins with the name of the ancestor Directory that was\u000a   * originally exposed to content (say via a directory picker) and traversed\u000a   * to obtain this Directory.  Full filesystem paths are not exposed to\u000a   * unprivilaged content.\u000a   */\u000a  [Throws]\u000a  readonly attribute DOMString path;\u000a\u000a  /*\u000a   * Getter for the immediate children of this directory.\u000a   */\u000a  [Throws]\u000a  Promise<sequence<(File or Directory)>> getFilesAndDirectories();\u000a\u000a  [Throws]\u000a  Promise<sequence<File>> getFiles(optional boolean recursiveFlag = false);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Document.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Document.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * https://dom.spec.whatwg.org/#interface-document\u000a * https://html.spec.whatwg.org/multipage/dom.html#the-document-object\u000a */\u000a\u000ainterface WindowProxy;\u000ainterface nsISupports;\u000ainterface URI;\u000ainterface nsIDocShell;\u000ainterface nsILoadGroup;\u000a\u000aenum VisibilityState { \"hidden\", \"visible\" };\u000a\u000a/* https://dom.spec.whatwg.org/#dictdef-elementcreationoptions */\u000adictionary ElementCreationOptions {\u000a  DOMString is;\u000a\u000a  [ChromeOnly]\u000a  DOMString pseudo;\u000a};\u000a\u000a/* https://dom.spec.whatwg.org/#interface-document */\u000a[Constructor]\u000ainterface Document : Node {\u000a  [Throws]\u000a  readonly attribute DOMImplementation implementation;\u000a  [Pure, Throws, BinaryName=\"documentURIFromJS\", NeedsCallerType]\u000a  readonly attribute DOMString URL;\u000a  [Pure, Throws, BinaryName=\"documentURIFromJS\", NeedsCallerType]\u000a  readonly attribute DOMString documentURI;\u000a  [Pure]\u000a  readonly attribute DOMString compatMode;\u000a  [Pure]\u000a  readonly attribute DOMString characterSet;\u000a  [Pure,BinaryName=\"characterSet\"]\u000a  readonly attribute DOMString charset; // legacy alias of .characterSet\u000a  [Pure,BinaryName=\"characterSet\"]\u000a  readonly attribute DOMString inputEncoding; // legacy alias of .characterSet\u000a  [Pure]\u000a  readonly attribute DOMString contentType;\u000a\u000a  [Pure]\u000a  readonly attribute DocumentType? doctype;\u000a  [Pure]\u000a  readonly attribute Element? documentElement;\u000a  [Pure]\u000a  HTMLCollection getElementsByTagName(DOMString localName);\u000a  [Pure, Throws]\u000a  HTMLCollection getElementsByTagNameNS(DOMString? namespace, DOMString localName);\u000a  [Pure]\u000a  HTMLCollection getElementsByClassName(DOMString classNames);\u000a  [Pure]\u000a  Element? getElementById(DOMString elementId);\u000a\u000a  [CEReactions, NewObject, Throws]\u000a  Element createElement(DOMString localName, optional (ElementCreationOptions or DOMString) options);\u000a  [CEReactions, NewObject, Throws]\u000a  Element createElementNS(DOMString? namespace, DOMString qualifiedName, optional (ElementCreationOptions or DOMString) options);\u000a  [NewObject]\u000a  DocumentFragment createDocumentFragment();\u000a  [NewObject]\u000a  Text createTextNode(DOMString data);\u000a  [NewObject]\u000a  Comment createComment(DOMString data);\u000a  [NewObject, Throws]\u000a  ProcessingInstruction createProcessingInstruction(DOMString target, DOMString data);\u000a\u000a  [CEReactions, Throws]\u000a  Node importNode(Node node, optional boolean deep = false);\u000a  [CEReactions, Throws]\u000a  Node adoptNode(Node node);\u000a\u000a  [NewObject, Throws, NeedsCallerType]\u000a  Event createEvent(DOMString interface);\u000a\u000a  [NewObject, Throws]\u000a  Range createRange();\u000a\u000a  // NodeFilter.SHOW_ALL = 0xFFFFFFFF\u000a  [NewObject, Throws]\u000a  NodeIterator createNodeIterator(Node root, optional unsigned long whatToShow = 0xFFFFFFFF, optional NodeFilter? filter = null);\u000a  [NewObject, Throws]\u000a  TreeWalker createTreeWalker(Node root, optional unsigned long whatToShow = 0xFFFFFFFF, optional NodeFilter? filter = null);\u000a\u000a  // NEW\u000a  // No support for prepend/append yet\u000a  // void prepend((Node or DOMString)... nodes);\u000a  // void append((Node or DOMString)... nodes);\u000a\u000a  // These are not in the spec, but leave them for now for backwards compat.\u000a  // So sort of like Gecko extensions\u000a  [NewObject, Throws]\u000a  CDATASection createCDATASection(DOMString data);\u000a  [NewObject, Throws]\u000a  Attr createAttribute(DOMString name);\u000a  [NewObject, Throws]\u000a  Attr createAttributeNS(DOMString? namespace, DOMString name);\u000a\u000a  // Allows setting innerHTML without automatic sanitization.\u000a  // Do not use this.\u000a  [ChromeOnly]\u000a  attribute boolean allowUnsafeHTML;\u000a};\u000a\u000a// https://html.spec.whatwg.org/multipage/dom.html#the-document-object\u000apartial interface Document {\u000a  [PutForwards=href, Unforgeable] readonly attribute Location? location;\u000a  //(HTML only)         attribute DOMString domain;\u000a  readonly attribute DOMString referrer;\u000a  //(HTML only)         attribute DOMString cookie;\u000a  readonly attribute DOMString lastModified;\u000a  readonly attribute DOMString readyState;\u000a\u000a  // DOM tree accessors\u000a  //(Not proxy yet)getter object (DOMString name);\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString title;\u000a  [CEReactions, Pure]\u000a           attribute DOMString dir;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute HTMLElement? body;\u000a  //(HTML only)readonly attribute HTMLHeadElement? head;\u000a  //(HTML only)readonly attribute HTMLCollection images;\u000a  //(HTML only)readonly attribute HTMLCollection embeds;\u000a  //(HTML only)readonly attribute HTMLCollection plugins;\u000a  //(HTML only)readonly attribute HTMLCollection links;\u000a  //(HTML only)readonly attribute HTMLCollection forms;\u000a  //(HTML only)readonly attribute HTMLCollection scripts;\u000a  [Pure]\u000a  NodeList getElementsByName(DOMString elementName);\u000a  //(Not implemented)readonly attribute DOMElementMap cssElementMap;\u000a\u000a  // dynamic markup insertion\u000a  //(HTML only)Document open(optional DOMString type, optional DOMString replace);\u000a  //(HTML only)WindowProxy open(DOMString url, DOMString name, DOMString features, optional boolean replace);\u000a  //(HTML only)void close();\u000a  //(HTML only)void write(DOMString... text);\u000a  //(HTML only)void writeln(DOMString... text);\u000a\u000a  // user interaction\u000a  [Pure]\u000a  readonly attribute WindowProxy? defaultView;\u000a  [Throws]\u000a  boolean hasFocus();\u000a  //(HTML only)         attribute DOMString designMode;\u000a  //(HTML only)boolean execCommand(DOMString commandId);\u000a  //(HTML only)boolean execCommand(DOMString commandId, boolean showUI);\u000a  //(HTML only)boolean execCommand(DOMString commandId, boolean showUI, DOMString value);\u000a  //(HTML only)boolean queryCommandEnabled(DOMString commandId);\u000a  //(HTML only)boolean queryCommandIndeterm(DOMString commandId);\u000a  //(HTML only)boolean queryCommandState(DOMString commandId);\u000a  //(HTML only)boolean queryCommandSupported(DOMString commandId);\u000a  //(HTML only)DOMString queryCommandValue(DOMString commandId);\u000a  //(Not implemented)readonly attribute HTMLCollection commands;\u000a\u000a  // special event handler IDL attributes that only apply to Document objects\u000a  [LenientThis] attribute EventHandler onreadystatechange;\u000a\u000a  // Gecko extensions?\u000a                attribute EventHandler onbeforescriptexecute;\u000a                attribute EventHandler onafterscriptexecute;\u000a\u000a                [Pref=\"dom.select_events.enabled\"]\u000a                attribute EventHandler onselectionchange;\u000a\u000a  /**\u000a   * True if this document is synthetic : stand alone image, video, audio file,\u000a   * etc.\u000a   */\u000a  [Func=\"IsChromeOrXBL\"] readonly attribute boolean mozSyntheticDocument;\u000a  /**\u000a   * Returns the script element whose script is currently being processed.\u000a   *\u000a   * @see <https://developer.mozilla.org/en/DOM/document.currentScript>\u000a   */\u000a  [Pure]\u000a  readonly attribute Element? currentScript;\u000a  /**\u000a   * Release the current mouse capture if it is on an element within this\u000a   * document.\u000a   *\u000a   * @see <https://developer.mozilla.org/en/DOM/document.releaseCapture>\u000a   */\u000a  void releaseCapture();\u000a  /**\u000a   * Use the given DOM element as the source image of target |-moz-element()|.\u000a   *\u000a   * This function introduces a new special ID (called \"image element ID\"),\u000a   * which is only used by |-moz-element()|, and associates it with the given\u000a   * DOM element.  Image elements ID's have the higher precedence than general\u000a   * HTML id's, so if |document.mozSetImageElement(<id>, <element>)| is called,\u000a   * |-moz-element(#<id>)| uses |<element>| as the source image even if there\u000a   * is another element with id attribute = |<id>|.  To unregister an image\u000a   * element ID |<id>|, call |document.mozSetImageElement(<id>, null)|.\u000a   *\u000a   * Example:\u000a   * <script>\u000a   *   canvas = document.createElement(\"canvas\");\u000a   *   canvas.setAttribute(\"width\", 100);\u000a   *   canvas.setAttribute(\"height\", 100);\u000a   *   // draw to canvas\u000a   *   document.mozSetImageElement(\"canvasbg\", canvas);\u000a   * </script>\u000a   * <div style=\"background-image: -moz-element(#canvasbg);\"></div>\u000a   *\u000a   * @param aImageElementId an image element ID to associate with\u000a   * |aImageElement|\u000a   * @param aImageElement a DOM element to be used as the source image of\u000a   * |-moz-element(#aImageElementId)|. If this is null, the function will\u000a   * unregister the image element ID |aImageElementId|.\u000a   *\u000a   * @see <https://developer.mozilla.org/en/DOM/document.mozSetImageElement>\u000a   */\u000a  void mozSetImageElement(DOMString aImageElementId,\u000a                          Element? aImageElement);\u000a\u000a  [ChromeOnly]\u000a  readonly attribute URI? documentURIObject;\u000a\u000a  /**\u000a   * Current referrer policy - one of the REFERRER_POLICY_* constants\u000a   * from nsIHttpChannel.\u000a   */\u000a  [ChromeOnly]\u000a  readonly attribute unsigned long referrerPolicy;\u000a\u000a};\u000a\u000a// https://fullscreen.spec.whatwg.org/#api\u000apartial interface Document {\u000a  // Note: Per spec the 'S' in these two is lowercase, but the \"Moz\"\u000a  // versions have it uppercase.\u000a  [LenientSetter, Func=\"nsDocument::IsUnprefixedFullscreenEnabled\"]\u000a  readonly attribute boolean fullscreen;\u000a  [BinaryName=\"fullscreen\"]\u000a  readonly attribute boolean mozFullScreen;\u000a  [LenientSetter, Func=\"nsDocument::IsUnprefixedFullscreenEnabled\", NeedsCallerType]\u000a  readonly attribute boolean fullscreenEnabled;\u000a  [BinaryName=\"fullscreenEnabled\", NeedsCallerType]\u000a  readonly attribute boolean mozFullScreenEnabled;\u000a\u000a  [Func=\"nsDocument::IsUnprefixedFullscreenEnabled\"]\u000a  void exitFullscreen();\u000a  [BinaryName=\"exitFullscreen\"]\u000a  void mozCancelFullScreen();\u000a\u000a  // Events handlers\u000a  [Func=\"nsDocument::IsUnprefixedFullscreenEnabled\"]\u000a  attribute EventHandler onfullscreenchange;\u000a  [Func=\"nsDocument::IsUnprefixedFullscreenEnabled\"]\u000a  attribute EventHandler onfullscreenerror;\u000a};\u000a\u000a// https://w3c.github.io/pointerlock/#extensions-to-the-document-interface\u000a// https://w3c.github.io/pointerlock/#extensions-to-the-documentorshadowroot-mixin\u000apartial interface Document {\u000a  void exitPointerLock();\u000a\u000a  // Event handlers\u000a  attribute EventHandler onpointerlockchange;\u000a  attribute EventHandler onpointerlockerror;\u000a};\u000a\u000a// http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/PageVisibility/Overview.html#sec-document-interface\u000a// https://w3c.github.io/page-visibility/#extensions-to-the-document-interface\u000apartial interface Document {\u000a  readonly attribute boolean hidden;\u000a  readonly attribute VisibilityState visibilityState;\u000a           attribute EventHandler onvisibilitychange;\u000a};\u000a\u000a// http://dev.w3.org/csswg/cssom/#extensions-to-the-document-interface\u000apartial interface Document {\u000a    attribute DOMString? selectedStyleSheetSet;\u000a    readonly attribute DOMString? lastStyleSheetSet;\u000a    readonly attribute DOMString? preferredStyleSheetSet;\u000a    [Constant]\u000a    readonly attribute DOMStringList styleSheetSets;\u000a    void enableStyleSheetsForSet (DOMString? name);\u000a};\u000a\u000a// http://dev.w3.org/csswg/cssom-view/#extensions-to-the-document-interface\u000apartial interface Document {\u000a    CaretPosition? caretPositionFromPoint (float x, float y);\u000a\u000a    readonly attribute Element? scrollingElement;\u000a};\u000a\u000a// http://dev.w3.org/2006/webapi/selectors-api2/#interface-definitions\u000apartial interface Document {\u000a  [Throws, Pure]\u000a  Element?  querySelector(DOMString selectors);\u000a  [Throws, Pure]\u000a  NodeList  querySelectorAll(DOMString selectors);\u000a\u000a  //(Not implemented)Element?  find(DOMString selectors, optional (Element or sequence<Node>)? refNodes);\u000a  //(Not implemented)NodeList  findAll(DOMString selectors, optional (Element or sequence<Node>)? refNodes);\u000a};\u000a\u000a// https://drafts.csswg.org/web-animations/#extensions-to-the-document-interface\u000apartial interface Document {\u000a  [Func=\"nsDocument::IsWebAnimationsEnabled\"]\u000a  readonly attribute DocumentTimeline timeline;\u000a  [Func=\"nsDocument::IsWebAnimationsEnabled\"]\u000a  sequence<Animation> getAnimations();\u000a};\u000a\u000a// https://svgwg.org/svg2-draft/struct.html#InterfaceDocumentExtensions\u000apartial interface Document {\u000a  [BinaryName=\"SVGRootElement\"]\u000a  readonly attribute SVGSVGElement? rootElement;\u000a};\u000a\u000a//  Mozilla extensions of various sorts\u000apartial interface Document {\u000a  // XBL support.  Wish we could make these [ChromeOnly], but\u000a  // that would likely break bindings running with the page principal.\u000a  [Func=\"IsChromeOrXBL\"]\u000a  NodeList? getAnonymousNodes(Element elt);\u000a  [Func=\"IsChromeOrXBL\"]\u000a  Element? getAnonymousElementByAttribute(Element elt, DOMString attrName,\u000a                                          DOMString attrValue);\u000a  [Func=\"IsChromeOrXBL\"]\u000a  Element? getBindingParent(Node node);\u000a  [Throws, Func=\"IsChromeOrXBL\", NeedsSubjectPrincipal]\u000a  void loadBindingDocument(DOMString documentURL);\u000a\u000a  // nsIDOMDocumentTouch\u000a  // XXXbz I can't find the sane spec for this stuff, so just cribbing\u000a  // from our xpidl for now.\u000a  [NewObject, Func=\"nsGenericHTMLElement::TouchEventsEnabled\"]\u000a  Touch createTouch(optional Window? view = null,\u000a                    optional EventTarget? target = null,\u000a                    optional long identifier = 0,\u000a                    optional long pageX = 0,\u000a                    optional long pageY = 0,\u000a                    optional long screenX = 0,\u000a                    optional long screenY = 0,\u000a                    optional long clientX = 0,\u000a                    optional long clientY = 0,\u000a                    optional long radiusX = 0,\u000a                    optional long radiusY = 0,\u000a                    optional float rotationAngle = 0,\u000a                    optional float force = 0);\u000a  // XXXbz a hack to get around the fact that we don't support variadics as\u000a  // distinguishing arguments yet.  Once this hack is removed. we can also\u000a  // remove the corresponding overload on nsIDocument, since Touch... and\u000a  // sequence<Touch> look the same in the C++.\u000a  [NewObject, Func=\"nsGenericHTMLElement::TouchEventsEnabled\"]\u000a  TouchList createTouchList(Touch touch, Touch... touches);\u000a  // XXXbz and another hack for the fact that we can't usefully have optional\u000a  // distinguishing arguments but need a working zero-arg form of\u000a  // createTouchList().\u000a  [NewObject, Func=\"nsGenericHTMLElement::TouchEventsEnabled\"]\u000a  TouchList createTouchList();\u000a  [NewObject, Func=\"nsGenericHTMLElement::TouchEventsEnabled\"]\u000a  TouchList createTouchList(sequence<Touch> touches);\u000a\u000a  [ChromeOnly]\u000a  attribute boolean styleSheetChangeEventsEnabled;\u000a\u000a  [ChromeOnly, Throws]\u000a  void obsoleteSheet(URI sheetURI);\u000a  [ChromeOnly, Throws]\u000a  void obsoleteSheet(DOMString sheetURI);\u000a\u000a  [ChromeOnly] readonly attribute nsIDocShell? docShell;\u000a\u000a  [ChromeOnly] readonly attribute DOMString contentLanguage;\u000a\u000a  [ChromeOnly] readonly attribute nsILoadGroup? documentLoadGroup;\u000a\u000a  // Blocks the initial document parser until the given promise is settled.\u000a  [ChromeOnly, Throws]\u000a  Promise<any> blockParsing(Promise<any> promise,\u000a                            optional BlockParsingOptions options);\u000a\u000a  // like documentURI, except that for error pages, it returns the URI we were\u000a  // trying to load when we hit an error, rather than the error page's own URI.\u000a  [ChromeOnly] readonly attribute URI? mozDocumentURIIfNotForErrorPages;\u000a\u000a  // A promise that is resolved, with this document itself, when we have both\u000a  // fired DOMContentLoaded and are ready to start layout.  This is used for the\u000a  // \"document_idle\" webextension script injection point.\u000a  [ChromeOnly, Throws]\u000a  readonly attribute Promise<Document> documentReadyForIdle;\u000a};\u000a\u000adictionary BlockParsingOptions {\u000a  /**\u000a   * If true, blocks script-created parsers (created via document.open()) in\u000a   * addition to network-created parsers.\u000a   */\u000a  boolean blockScriptCreated = true;\u000a};\u000a\u000a// Extension to give chrome JS the ability to determine when a document was\u000a// created to satisfy an iframe with srcdoc attribute.\u000apartial interface Document {\u000a  [ChromeOnly] readonly attribute boolean isSrcdocDocument;\u000a};\u000a\u000a\u000a// Extension to give chrome JS the ability to get the underlying\u000a// sandbox flag attribute\u000apartial interface Document {\u000a  [ChromeOnly] readonly attribute DOMString? sandboxFlagsAsString;\u000a};\u000a\u000a\u000a/**\u000a * Chrome document anonymous content management.\u000a * This is a Chrome-only API that allows inserting fixed positioned anonymous\u000a * content on top of the current page displayed in the document.\u000a * The supplied content is cloned and inserted into the document's CanvasFrame.\u000a * Note that this only works for HTML documents.\u000a */\u000apartial interface Document {\u000a  /**\u000a   * Deep-clones the provided element and inserts it into the CanvasFrame.\u000a   * Returns an AnonymousContent instance that can be used to manipulate the\u000a   * inserted element.\u000a   */\u000a  [ChromeOnly, NewObject, Throws]\u000a  AnonymousContent insertAnonymousContent(Element aElement);\u000a\u000a  /**\u000a   * Removes the element inserted into the CanvasFrame given an AnonymousContent\u000a   * instance.\u000a   */\u000a  [ChromeOnly, Throws]\u000a  void removeAnonymousContent(AnonymousContent aContent);\u000a};\u000a\u000a// http://w3c.github.io/selection-api/#extensions-to-document-interface\u000apartial interface Document {\u000a  [Throws]\u000a  Selection? getSelection();\u000a};\u000a\u000a// Extension to give chrome JS the ability to determine whether\u000a// the user has interacted with the document or not.\u000apartial interface Document {\u000a  [ChromeOnly] readonly attribute boolean userHasInteracted;\u000a};\u000a\u000a// Extension to give chrome JS the ability to simulate activate the docuement\u000a// by user gesture.\u000apartial interface Document {\u000a  [ChromeOnly]\u000a  void notifyUserActivation();\u000a};\u000a\u000a// Extension to give chrome and XBL JS the ability to determine whether\u000a// the document is sandboxed without permission to run scripts\u000a// and whether inline scripts are blocked by the document's CSP.\u000apartial interface Document {\u000a  [Func=\"IsChromeOrXBL\"] readonly attribute boolean hasScriptsBlockedBySandbox;\u000a  [Func=\"IsChromeOrXBL\"] readonly attribute boolean inlineScriptAllowedByCSP;\u000a};\u000a\u000a// For more information on Flash classification, see\u000a// toolkit/components/url-classifier/flash-block-lists.rst\u000aenum FlashClassification {\u000a  \"unclassified\",   // Denotes a classification that has not yet been computed.\u000a                    // Allows for lazy classification.\u000a  \"unknown\",        // Site is not on the whitelist or blacklist\u000a  \"allowed\",        // Site is on the Flash whitelist\u000a  \"denied\"          // Site is on the Flash blacklist\u000a};\u000apartial interface Document {\u000a  [ChromeOnly]\u000a  readonly attribute FlashClassification documentFlashClassification;\u000a};\u000a\u000aDocument implements XPathEvaluator;\u000aDocument implements GlobalEventHandlers;\u000aDocument implements DocumentAndElementEventHandlers;\u000aDocument implements TouchEventHandlers;\u000aDocument implements ParentNode;\u000aDocument implements OnErrorEventHandlerForNodes;\u000aDocument implements GeometryUtils;\u000aDocument implements FontFaceSource;\u000aDocument implements DocumentOrShadowRoot;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DocumentFragment.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DocumentFragment.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120405/#interface-documentfragment\u000a * http://www.w3.org/TR/2012/WD-selectors-api-20120628/#interface-definitions\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor]\u000ainterface DocumentFragment : Node {\u000a  Element? getElementById(DOMString elementId);\u000a};\u000a\u000a// http://www.w3.org/TR/2012/WD-selectors-api-20120628/#interface-definitions\u000apartial interface DocumentFragment {\u000a  [Throws]\u000a  Element?  querySelector(DOMString selectors);\u000a  [Throws]\u000a  NodeList  querySelectorAll(DOMString selectors);\u000a};\u000a\u000aDocumentFragment implements ParentNode;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DocumentOrShadowRoot.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DocumentOrShadowRoot.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dom.spec.whatwg.org/#documentorshadowroot\u000a * http://w3c.github.io/webcomponents/spec/shadow/#extensions-to-the-documentorshadowroot-mixin\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface DocumentOrShadowRoot {\u000a  // Not implemented yet: bug 1430308.\u000a  // Selection? getSelection();\u000a  Element? elementFromPoint (float x, float y);\u000a  sequence<Element> elementsFromPoint (float x, float y);\u000a  // Not implemented yet: bug 1430307.\u000a  // CaretPosition? caretPositionFromPoint (float x, float y);\u000a\u000a  readonly attribute Element? activeElement;\u000a  readonly attribute StyleSheetList styleSheets;\u000a\u000a  readonly attribute Element? pointerLockElement;\u000a  [LenientSetter, Func=\"nsIDocument::IsUnprefixedFullscreenEnabled\"]\u000a  readonly attribute Element? fullscreenElement;\u000a  [BinaryName=\"fullscreenElement\"]\u000a  readonly attribute Element? mozFullScreenElement;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DocumentTimeline.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DocumentTimeline.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/web-animations/#documenttimeline\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary DocumentTimelineOptions {\u000a  DOMHighResTimeStamp originTime = 0;\u000a};\u000a\u000a[Func=\"nsDocument::IsWebAnimationsEnabled\",\u000a Constructor (optional DocumentTimelineOptions options)]\u000ainterface DocumentTimeline : AnimationTimeline {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DocumentType.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DocumentType.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org/#documenttype\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface DocumentType : Node {\u000a  readonly attribute DOMString name;\u000a  readonly attribute DOMString publicId;\u000a  readonly attribute DOMString systemId;\u000a};\u000a\u000aDocumentType implements ChildNode;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DominatorTree.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DominatorTree.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000atypedef unsigned long long NodeId;\u000atypedef unsigned long long NodeSize;\u000a\u000a/**\u000a * In a directed graph with a root node `R`, a node `A` is said to \"dominate\" a\u000a * node `B` iff every path from `R` to `B` contains `A`. A node `A` is said to\u000a * be the \"immediate dominator\" of a node `B` iff it dominates `B`, is not `B`\u000a * itself, and does not dominate any other nodes which also dominate `B` in\u000a * turn.\u000a *\u000a * If we take every node from a graph `G` and create a new graph `T` with edges\u000a * to each node from its immediate dominator, then `T` is a tree (each node has\u000a * only one immediate dominator, or none if it is the root). This tree is called\u000a * a \"dominator tree\".\u000a *\u000a * This interface represents a dominator tree constructed from a HeapSnapshot's\u000a * heap graph. The domination relationship and dominator trees are useful tools\u000a * for analyzing heap graphs because they tell you:\u000a *\u000a *   - Exactly what could be reclaimed by the GC if some node `A` became\u000a *     unreachable: those nodes which are dominated by `A`,\u000a *\u000a *   - The \"retained size\" of a node in the heap graph, in contrast to its\u000a *     \"shallow size\". The \"shallow size\" is the space taken by a node itself,\u000a *     not counting anything it references. The \"retained size\" of a node is its\u000a *     shallow size plus the size of all the things that would be collected if\u000a *     the original node wasn't (directly or indirectly) referencing them. In\u000a *     other words, the retained size is the shallow size of a node plus the\u000a *     shallow sizes of every other node it dominates. For example, the root\u000a *     node in a binary tree might have a small shallow size that does not take\u000a *     up much space itself, but it dominates the rest of the binary tree and\u000a *     its retained size is therefore significant (assuming no external\u000a *     references into the tree).\u000a */\u000a[ChromeOnly, Exposed=(Window,System,Worker)]\u000ainterface DominatorTree {\u000a  /**\u000a   * The `NodeId` for the root of the dominator tree. This is a \"meta-root\" in\u000a   * that it has an edge to each GC root in the heap snapshot this dominator\u000a   * tree was created from.\u000a   */\u000a  readonly attribute NodeId root;\u000a\u000a  /**\u000a   * Get the retained size of the node with the given id. If given an invalid\u000a   * id, null is returned. Throws an error on OOM.\u000a   */\u000a  [Throws]\u000a  NodeSize? getRetainedSize(NodeId node);\u000a\u000a  /**\u000a   * Get the set of ids of nodes immediately dominated by the node with the\u000a   * given id. The resulting array is sorted by greatest to least retained\u000a   * size. If given an invalid id, null is returned. Throws an error on OOM.\u000a   */\u000a  [Throws]\u000a  sequence<NodeId>? getImmediatelyDominated(NodeId node);\u000a\u000a  /**\u000a   * Get the immediate dominator of the node with the given id. Returns null if\u000a   * given an invalid id, or the id of the root node.\u000a   */\u000a  NodeId? getImmediateDominator(NodeId node);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DragEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DragEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional DragEventInit eventInitDict)]\u000ainterface DragEvent : MouseEvent\u000a{\u000a  readonly attribute DataTransfer? dataTransfer;\u000a\u000a  void initDragEvent(DOMString type,\u000a                     optional boolean canBubble = false,\u000a                     optional boolean cancelable = false,\u000a                     optional Window? aView = null,\u000a                     optional long aDetail = 0,\u000a                     optional long aScreenX = 0,\u000a                     optional long aScreenY = 0,\u000a                     optional long aClientX = 0,\u000a                     optional long aClientY = 0,\u000a                     optional boolean aCtrlKey = false,\u000a                     optional boolean aAltKey = false,\u000a                     optional boolean aShiftKey = false,\u000a                     optional boolean aMetaKey = false,\u000a                     optional unsigned short aButton = 0,\u000a                     optional EventTarget? aRelatedTarget = null,\u000a                     optional DataTransfer? aDataTransfer = null);\u000a};\u000a\u000adictionary DragEventInit : MouseEventInit\u000a{\u000a  DataTransfer? dataTransfer = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DynamicsCompressorNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/DynamicsCompressorNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary DynamicsCompressorOptions : AudioNodeOptions {\u000a             float attack = 0.003;\u000a             float knee = 30;\u000a             float ratio = 12;\u000a             float release = 0.25;\u000a             float threshold = -24;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional DynamicsCompressorOptions options)]\u000ainterface DynamicsCompressorNode : AudioNode {\u000a\u000a    readonly attribute AudioParam threshold; // in Decibels\u000a    readonly attribute AudioParam knee; // in Decibels\u000a    readonly attribute AudioParam ratio; // unit-less\u000a    readonly attribute float reduction; // in Decibels\u000a    readonly attribute AudioParam attack; // in Seconds\u000a    readonly attribute AudioParam release; // in Seconds\u000a\u000a};\u000a\u000a// Mozilla extension\u000aDynamicsCompressorNode implements AudioNodePassThrough;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Element.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Element.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org/#element and\u000a * http://domparsing.spec.whatwg.org/ and\u000a * http://dev.w3.org/csswg/cssom-view/ and\u000a * http://www.w3.org/TR/selectors-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface Element : Node {\u000a  [Constant]\u000a  readonly attribute DOMString? namespaceURI;\u000a  [Constant]\u000a  readonly attribute DOMString? prefix;\u000a  [Constant]\u000a  readonly attribute DOMString localName;\u000a\u000a  // Not [Constant] because it depends on which document we're in\u000a  [Pure]\u000a  readonly attribute DOMString tagName;\u000a\u000a  [CEReactions, Pure]\u000a           attribute DOMString id;\u000a  [CEReactions, Pure]\u000a           attribute DOMString className;\u000a  [Constant, PutForwards=value]\u000a  readonly attribute DOMTokenList classList;\u000a\u000a  [SameObject]\u000a  readonly attribute NamedNodeMap attributes;\u000a  [Pure]\u000a  sequence<DOMString> getAttributeNames();\u000a  [Pure]\u000a  DOMString? getAttribute(DOMString name);\u000a  [Pure]\u000a  DOMString? getAttributeNS(DOMString? namespace, DOMString localName);\u000a  [CEReactions, NeedsSubjectPrincipal=NonSystem, Throws]\u000a  void setAttribute(DOMString name, DOMString value);\u000a  [CEReactions, NeedsSubjectPrincipal=NonSystem, Throws]\u000a  void setAttributeNS(DOMString? namespace, DOMString name, DOMString value);\u000a  [CEReactions, Throws]\u000a  void removeAttribute(DOMString name);\u000a  [CEReactions, Throws]\u000a  void removeAttributeNS(DOMString? namespace, DOMString localName);\u000a  [Pure]\u000a  boolean hasAttribute(DOMString name);\u000a  [Pure]\u000a  boolean hasAttributeNS(DOMString? namespace, DOMString localName);\u000a  [Pure]\u000a  boolean hasAttributes();\u000a\u000a  [Throws, Pure]\u000a  Element? closest(DOMString selector);\u000a\u000a  [Throws, Pure]\u000a  boolean matches(DOMString selector);\u000a  [Throws, Pure, BinaryName=\"matches\"]\u000a  boolean webkitMatchesSelector(DOMString selector);\u000a\u000a  [Pure]\u000a  HTMLCollection getElementsByTagName(DOMString localName);\u000a  [Throws, Pure]\u000a  HTMLCollection getElementsByTagNameNS(DOMString? namespace, DOMString localName);\u000a  [Pure]\u000a  HTMLCollection getElementsByClassName(DOMString classNames);\u000a  [ChromeOnly, Pure]\u000a  sequence<Element> getElementsWithGrid();\u000a\u000a  [CEReactions, Throws, Pure]\u000a  Element? insertAdjacentElement(DOMString where, Element element); // historical\u000a\u000a  [Throws]\u000a  void insertAdjacentText(DOMString where, DOMString data); // historical\u000a\u000a  /**\u000a   * The ratio of font-size-inflated text font size to computed font\u000a   * size for this element. This will query the element for its primary frame,\u000a   * and then use this to get font size inflation information about the frame.\u000a   * This will be 1.0 if font size inflation is not enabled, and -1.0 if an\u000a   * error occurred during the retrieval of the font size inflation.\u000a   *\u000a   * @note The font size inflation ratio that is returned is actually the\u000a   *       font size inflation data for the element's _primary frame_, not the\u000a   *       element itself, but for most purposes, this should be sufficient.\u000a   */\u000a  [ChromeOnly]\u000a  readonly attribute float fontSizeInflation;\u000a\u000a  // Selectors API\u000a  /**\u000a   * Returns whether this element would be selected by the given selector\u000a   * string.\u000a   *\u000a   * See <http://dev.w3.org/2006/webapi/selectors-api2/#matchesselector>\u000a   */\u000a  [Throws, Pure, BinaryName=\"matches\"]\u000a  boolean mozMatchesSelector(DOMString selector);\u000a\u000a  // Pointer events methods.\u000a  [Throws, Pref=\"dom.w3c_pointer_events.enabled\"]\u000a  void setPointerCapture(long pointerId);\u000a\u000a  [Throws, Pref=\"dom.w3c_pointer_events.enabled\"]\u000a  void releasePointerCapture(long pointerId);\u000a\u000a  [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a  boolean hasPointerCapture(long pointerId);\u000a\u000a  // Proprietary extensions\u000a  /**\u000a   * Set this during a mousedown event to grab and retarget all mouse events\u000a   * to this element until the mouse button is released or releaseCapture is\u000a   * called. If retargetToElement is true, then all events are targetted at\u000a   * this element. If false, events can also fire at descendants of this\u000a   * element.\u000a   *\u000a   */\u000a  void setCapture(optional boolean retargetToElement = false);\u000a\u000a  /**\u000a   * If this element has captured the mouse, release the capture. If another\u000a   * element has captured the mouse, this method has no effect.\u000a   */\u000a  void releaseCapture();\u000a\u000a  /*\u000a   * Chrome-only version of setCapture that works outside of a mousedown event.\u000a   */\u000a  [ChromeOnly]\u000a  void setCaptureAlways(optional boolean retargetToElement = false);\u000a\u000a  // Mozilla extensions\u000a\u000a  // Obsolete methods.\u000a  Attr? getAttributeNode(DOMString name);\u000a  [CEReactions, Throws]\u000a  Attr? setAttributeNode(Attr newAttr);\u000a  [CEReactions, Throws]\u000a  Attr? removeAttributeNode(Attr oldAttr);\u000a  Attr? getAttributeNodeNS(DOMString? namespaceURI, DOMString localName);\u000a  [CEReactions, Throws]\u000a  Attr? setAttributeNodeNS(Attr newAttr);\u000a\u000a  [ChromeOnly]\u000a  /**\u000a   * Scrolls the element by (dx, dy) CSS pixels without doing any\u000a   * layout flushing.\u000a   */\u000a  boolean scrollByNoFlush(long dx, long dy);\u000a\u000a  // Support reporting of Flexbox properties\u000a  /**\u000a   * If this element has a display:flex or display:inline-flex style,\u000a   * this property returns an object with computed values for flex\u000a   * properties, as well as a property that exposes the flex lines\u000a   * in this container.\u000a   */\u000a  [ChromeOnly, Pure]\u000a  Flex? getAsFlexContainer();\u000a\u000a  // Support reporting of Grid properties\u000a  /**\u000a   * If this element has a display:grid or display:inline-grid style,\u000a   * this property returns an object with computed values for grid\u000a   * tracks and lines.\u000a   */\u000a  [ChromeOnly, Pure]\u000a  sequence<Grid> getGridFragments();\u000a\u000a  [ChromeOnly]\u000a  DOMMatrixReadOnly getTransformToAncestor(Element ancestor);\u000a  [ChromeOnly]\u000a  DOMMatrixReadOnly getTransformToParent();\u000a  [ChromeOnly]\u000a  DOMMatrixReadOnly getTransformToViewport();\u000a};\u000a\u000a// http://dev.w3.org/csswg/cssom-view/\u000aenum ScrollLogicalPosition { \"start\", \"center\", \"end\", \"nearest\" };\u000adictionary ScrollIntoViewOptions : ScrollOptions {\u000a  ScrollLogicalPosition block = \"start\";\u000a  ScrollLogicalPosition inline = \"nearest\";\u000a};\u000a\u000a// http://dev.w3.org/csswg/cssom-view/#extensions-to-the-element-interface\u000apartial interface Element {\u000a  DOMRectList getClientRects();\u000a  DOMRect getBoundingClientRect();\u000a\u000a  // scrolling\u000a  void scrollIntoView(optional (boolean or ScrollIntoViewOptions) arg);\u000a  // None of the CSSOM attributes are [Pure], because they flush\u000a           attribute long scrollTop;   // scroll on setting\u000a           attribute long scrollLeft;  // scroll on setting\u000a  readonly attribute long scrollWidth;\u000a  readonly attribute long scrollHeight;\u000a\u000a  void scroll(unrestricted double x, unrestricted double y);\u000a  void scroll(optional ScrollToOptions options);\u000a  void scrollTo(unrestricted double x, unrestricted double y);\u000a  void scrollTo(optional ScrollToOptions options);\u000a  void scrollBy(unrestricted double x, unrestricted double y);\u000a  void scrollBy(optional ScrollToOptions options);\u000a  // mozScrollSnap is used by chrome to perform scroll snapping after the\u000a  // user performs actions that may affect scroll position\u000a  // mozScrollSnap is deprecated, to be replaced by a web accessible API, such\u000a  // as an extension to the ScrollOptions dictionary.  See bug 1137937.\u000a  [ChromeOnly] void mozScrollSnap();\u000a\u000a  readonly attribute long clientTop;\u000a  readonly attribute long clientLeft;\u000a  readonly attribute long clientWidth;\u000a  readonly attribute long clientHeight;\u000a\u000a  // Mozilla specific stuff\u000a  /* The minimum/maximum offset that the element can be scrolled to\u000a     (i.e., the value that scrollLeft/scrollTop would be clamped to if they were\u000a     set to arbitrarily large values. */\u000a  [ChromeOnly] readonly attribute long scrollTopMin;\u000a               readonly attribute long scrollTopMax;\u000a  [ChromeOnly] readonly attribute long scrollLeftMin;\u000a               readonly attribute long scrollLeftMax;\u000a};\u000a\u000a// http://domparsing.spec.whatwg.org/#extensions-to-the-element-interface\u000apartial interface Element {\u000a  [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, Pure, SetterThrows, TreatNullAs=EmptyString]\u000a  attribute DOMString innerHTML;\u000a  [CEReactions, Pure,SetterThrows,TreatNullAs=EmptyString]\u000a  attribute DOMString outerHTML;\u000a  [CEReactions, Throws]\u000a  void insertAdjacentHTML(DOMString position, DOMString text);\u000a\u000a  /**\u000a   * Like the innerHTML setter, but does not sanitize its values, even in\u000a   * chrome-privileged documents.\u000a   *\u000a   * If you're thinking about using this, don't. You have many, much better\u000a   * options.\u000a   */\u000a  [ChromeOnly, Throws]\u000a  void unsafeSetInnerHTML(DOMString html);\u000a};\u000a\u000a// http://www.w3.org/TR/selectors-api/#interface-definitions\u000apartial interface Element {\u000a  [Throws, Pure]\u000a  Element?  querySelector(DOMString selectors);\u000a  [Throws, Pure]\u000a  NodeList  querySelectorAll(DOMString selectors);\u000a};\u000a\u000a// https://dom.spec.whatwg.org/#dictdef-shadowrootinit\u000adictionary ShadowRootInit {\u000a  required ShadowRootMode mode;\u000a};\u000a\u000a// https://dom.spec.whatwg.org/#element\u000apartial interface Element {\u000a  // Shadow DOM v1\u000a  [Throws, Func=\"nsDocument::IsShadowDOMEnabled\"]\u000a  ShadowRoot attachShadow(ShadowRootInit shadowRootInitDict);\u000a  [BinaryName=\"shadowRootByMode\", Func=\"nsDocument::IsShadowDOMEnabled\"]\u000a  readonly attribute ShadowRoot? shadowRoot;\u000a\u000a  [ChromeOnly, Func=\"nsDocument::IsShadowDOMEnabled\", BinaryName=\"shadowRoot\"]\u000a  readonly attribute ShadowRoot? openOrClosedShadowRoot;\u000a\u000a  [BinaryName=\"assignedSlotByMode\", Func=\"nsDocument::IsShadowDOMEnabled\"]\u000a  readonly attribute HTMLSlotElement? assignedSlot;\u000a  [CEReactions, Unscopable, SetterThrows, Func=\"nsDocument::IsShadowDOMEnabled\"]\u000a           attribute DOMString slot;\u000a\u000a  // [deprecated] Shadow DOM v0\u000a  [Throws, Func=\"nsDocument::IsShadowDOMEnabled\"]\u000a  ShadowRoot createShadowRoot();\u000a};\u000a\u000aElement implements ChildNode;\u000aElement implements NonDocumentTypeChildNode;\u000aElement implements ParentNode;\u000aElement implements Animatable;\u000aElement implements GeometryUtils;\u000a\u000a// https://fullscreen.spec.whatwg.org/#api\u000apartial interface Element {\u000a  [Throws, Func=\"nsDocument::IsUnprefixedFullscreenEnabled\", NeedsCallerType]\u000a  void requestFullscreen();\u000a  [Throws, BinaryName=\"requestFullscreen\", NeedsCallerType]\u000a  void mozRequestFullScreen();\u000a};\u000a\u000a// https://w3c.github.io/pointerlock/#extensions-to-the-element-interface\u000apartial interface Element {\u000a  [NeedsCallerType]\u000a  void requestPointerLock();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ErrorEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ErrorEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Constructor(DOMString type, optional ErrorEventInit eventInitDict),\u000a Exposed=(Window,Worker,System)]\u000ainterface ErrorEvent : Event\u000a{\u000a  readonly attribute DOMString message;\u000a  readonly attribute DOMString filename;\u000a  readonly attribute unsigned long lineno;\u000a  readonly attribute unsigned long colno;\u000a  readonly attribute any error;\u000a};\u000a\u000adictionary ErrorEventInit : EventInit\u000a{\u000a  DOMString message = \"\";\u000a  DOMString filename = \"\";\u000a  unsigned long lineno = 0;\u000a  unsigned long colno = 0;\u000a  any error = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Event.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Event.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString type, optional EventInit eventInitDict),\u000a Exposed=(Window,Worker,System), ProbablyShortLivingWrapper]\u000ainterface Event {\u000a  [Pure]\u000a  readonly attribute DOMString type;\u000a  [Pure]\u000a  readonly attribute EventTarget? target;\u000a  [Pure]\u000a  readonly attribute EventTarget? currentTarget;\u000a\u000a  sequence<EventTarget> composedPath();\u000a\u000a  const unsigned short NONE = 0;\u000a  const unsigned short CAPTURING_PHASE = 1;\u000a  const unsigned short AT_TARGET = 2;\u000a  const unsigned short BUBBLING_PHASE = 3;\u000a  [Pure]\u000a  readonly attribute unsigned short eventPhase;\u000a\u000a  void stopPropagation();\u000a  void stopImmediatePropagation();\u000a\u000a  [Pure]\u000a  readonly attribute boolean bubbles;\u000a  [Pure]\u000a  readonly attribute boolean cancelable;\u000a  [NeedsCallerType]\u000a  void preventDefault();\u000a  [Pure, NeedsCallerType]\u000a  readonly attribute boolean defaultPrevented;\u000a  [ChromeOnly, Pure]\u000a  readonly attribute boolean defaultPreventedByChrome;\u000a  [ChromeOnly, Pure]\u000a  readonly attribute boolean defaultPreventedByContent;\u000a  [Pure]\u000a  readonly attribute boolean composed;\u000a\u000a  [Unforgeable, Pure]\u000a  readonly attribute boolean isTrusted;\u000a  [Pure]\u000a  readonly attribute DOMHighResTimeStamp timeStamp;\u000a\u000a  void initEvent(DOMString type,\u000a                 optional boolean bubbles = false,\u000a                 optional boolean cancelable = false);\u000a  attribute boolean cancelBubble;\u000a};\u000a\u000a// Mozilla specific legacy stuff.\u000apartial interface Event {\u000a  const long ALT_MASK     = 0x00000001;\u000a  const long CONTROL_MASK = 0x00000002;\u000a  const long SHIFT_MASK   = 0x00000004;\u000a  const long META_MASK    = 0x00000008;\u000a\u000a  readonly attribute EventTarget? originalTarget;\u000a  readonly attribute EventTarget? explicitOriginalTarget;\u000a  [ChromeOnly] readonly attribute EventTarget? composedTarget;\u000a  [ChromeOnly] readonly attribute boolean multipleActionsPrevented;\u000a  [ChromeOnly] readonly attribute boolean isSynthesized;\u000a};\u000a\u000adictionary EventInit {\u000a  boolean bubbles = false;\u000a  boolean cancelable = false;\u000a  boolean composed = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/EventHandler.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/EventHandler.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#eventhandler\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a[TreatNonObjectAsNull]\u000acallback EventHandlerNonNull = any (Event event);\u000atypedef EventHandlerNonNull? EventHandler;\u000a\u000a[TreatNonObjectAsNull]\u000acallback OnBeforeUnloadEventHandlerNonNull = DOMString? (Event event);\u000atypedef OnBeforeUnloadEventHandlerNonNull? OnBeforeUnloadEventHandler;\u000a\u000a[TreatNonObjectAsNull]\u000acallback OnErrorEventHandlerNonNull = any ((Event or DOMString) event, optional DOMString source, optional unsigned long lineno, optional unsigned long column, optional any error);\u000atypedef OnErrorEventHandlerNonNull? OnErrorEventHandler;\u000a\u000a[NoInterfaceObject]\u000ainterface GlobalEventHandlers {\u000a           attribute EventHandler onabort;\u000a           attribute EventHandler onblur;\u000a// We think the spec is wrong here. See OnErrorEventHandlerForNodes/Window\u000a// below.\u000a//         attribute OnErrorEventHandler onerror;\u000a           attribute EventHandler onfocus;\u000a           //(Not implemented)attribute EventHandler oncancel;\u000a           attribute EventHandler onauxclick;\u000a           attribute EventHandler oncanplay;\u000a           attribute EventHandler oncanplaythrough;\u000a           attribute EventHandler onchange;\u000a           attribute EventHandler onclick;\u000a           attribute EventHandler onclose;\u000a           attribute EventHandler oncontextmenu;\u000a           //(Not implemented)attribute EventHandler oncuechange;\u000a           attribute EventHandler ondblclick;\u000a           attribute EventHandler ondrag;\u000a           attribute EventHandler ondragend;\u000a           attribute EventHandler ondragenter;\u000a           attribute EventHandler ondragexit;\u000a           attribute EventHandler ondragleave;\u000a           attribute EventHandler ondragover;\u000a           attribute EventHandler ondragstart;\u000a           attribute EventHandler ondrop;\u000a           attribute EventHandler ondurationchange;\u000a           attribute EventHandler onemptied;\u000a           attribute EventHandler onended;\u000a           attribute EventHandler oninput;\u000a           attribute EventHandler oninvalid;\u000a           attribute EventHandler onkeydown;\u000a           attribute EventHandler onkeypress;\u000a           attribute EventHandler onkeyup;\u000a           attribute EventHandler onload;\u000a           attribute EventHandler onloadeddata;\u000a           attribute EventHandler onloadedmetadata;\u000a           attribute EventHandler onloadend;\u000a           attribute EventHandler onloadstart;\u000a           attribute EventHandler onmousedown;\u000a  [LenientThis] attribute EventHandler onmouseenter;\u000a  [LenientThis] attribute EventHandler onmouseleave;\u000a           attribute EventHandler onmousemove;\u000a           attribute EventHandler onmouseout;\u000a           attribute EventHandler onmouseover;\u000a           attribute EventHandler onmouseup;\u000a           attribute EventHandler onwheel;\u000a           attribute EventHandler onpause;\u000a           attribute EventHandler onplay;\u000a           attribute EventHandler onplaying;\u000a           attribute EventHandler onprogress;\u000a           attribute EventHandler onratechange;\u000a           attribute EventHandler onreset;\u000a           attribute EventHandler onresize;\u000a           attribute EventHandler onscroll;\u000a           attribute EventHandler onseeked;\u000a           attribute EventHandler onseeking;\u000a           attribute EventHandler onselect;\u000a           attribute EventHandler onshow;\u000a           //(Not implemented)attribute EventHandler onsort;\u000a           attribute EventHandler onstalled;\u000a           attribute EventHandler onsubmit;\u000a           attribute EventHandler onsuspend;\u000a           attribute EventHandler ontimeupdate;\u000a           attribute EventHandler onvolumechange;\u000a           attribute EventHandler onwaiting;\u000a\u000a           [Pref=\"dom.select_events.enabled\"]\u000a           attribute EventHandler onselectstart;\u000a\u000a           attribute EventHandler ontoggle;\u000a\u000a           // Pointer events handlers\u000a           [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a           attribute EventHandler onpointercancel;\u000a           [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a           attribute EventHandler onpointerdown;\u000a           [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a           attribute EventHandler onpointerup;\u000a           [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a           attribute EventHandler onpointermove;\u000a           [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a           attribute EventHandler onpointerout;\u000a           [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a           attribute EventHandler onpointerover;\u000a           [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a           attribute EventHandler onpointerenter;\u000a           [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a           attribute EventHandler onpointerleave;\u000a           [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a           attribute EventHandler ongotpointercapture;\u000a           [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a           attribute EventHandler onlostpointercapture;\u000a\u000a           // Mozilla-specific handlers. Unprefixed handlers live in\u000a           // Document rather than here.\u000a           attribute EventHandler onmozfullscreenchange;\u000a           attribute EventHandler onmozfullscreenerror;\u000a\u000a           // CSS-Animation and CSS-Transition handlers.\u000a           attribute EventHandler onanimationcancel;\u000a           attribute EventHandler onanimationend;\u000a           attribute EventHandler onanimationiteration;\u000a           attribute EventHandler onanimationstart;\u000a           attribute EventHandler ontransitioncancel;\u000a           attribute EventHandler ontransitionend;\u000a           attribute EventHandler ontransitionrun;\u000a           attribute EventHandler ontransitionstart;\u000a\u000a           // CSS-Animation and CSS-Transition legacy handlers.\u000a           // This handler isn't standard.\u000a           attribute EventHandler onwebkitanimationend;\u000a           attribute EventHandler onwebkitanimationiteration;\u000a           attribute EventHandler onwebkitanimationstart;\u000a           attribute EventHandler onwebkittransitionend;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WindowEventHandlers {\u000a           attribute EventHandler onafterprint;\u000a           attribute EventHandler onbeforeprint;\u000a           attribute OnBeforeUnloadEventHandler onbeforeunload;\u000a           attribute EventHandler onhashchange;\u000a           attribute EventHandler onlanguagechange;\u000a           attribute EventHandler onmessage;\u000a           attribute EventHandler onmessageerror;\u000a           attribute EventHandler onoffline;\u000a           attribute EventHandler ononline;\u000a           attribute EventHandler onpagehide;\u000a           attribute EventHandler onpageshow;\u000a           attribute EventHandler onpopstate;\u000a           attribute EventHandler onstorage;\u000a           attribute EventHandler onunload;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface DocumentAndElementEventHandlers {\u000a  attribute EventHandler oncopy;\u000a  attribute EventHandler oncut;\u000a  attribute EventHandler onpaste;\u000a};\u000a\u000a// The spec has |attribute OnErrorEventHandler onerror;| on\u000a// GlobalEventHandlers, and calls the handler differently depending on\u000a// whether an ErrorEvent was fired. We don't do that, and until we do we'll\u000a// need to distinguish between onerror on Window or on nodes.\u000a\u000a[NoInterfaceObject]\u000ainterface OnErrorEventHandlerForNodes {\u000a           attribute EventHandler onerror;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface OnErrorEventHandlerForWindow {\u000a           attribute OnErrorEventHandler onerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/EventListener.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/EventListener.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000acallback interface EventListener {\u000a  void handleEvent(Event event);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/EventSource.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/EventSource.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://html.spec.whatwg.org/multipage/comms.html#the-eventsource-interface\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[Exposed=(Window,DedicatedWorker,SharedWorker),\u000a Constructor(USVString url, optional EventSourceInit eventSourceInitDict)]\u000ainterface EventSource : EventTarget {\u000a  [Constant]\u000a  readonly attribute DOMString url;\u000a  [Constant]\u000a  readonly attribute boolean withCredentials;\u000a\u000a  // ready state\u000a  const unsigned short CONNECTING = 0;\u000a  const unsigned short OPEN = 1;\u000a  const unsigned short CLOSED = 2;\u000a  readonly attribute unsigned short readyState;\u000a\u000a  // networking\u000a  attribute EventHandler onopen;\u000a  attribute EventHandler onmessage;\u000a  attribute EventHandler onerror;\u000a  void close();\u000a};\u000a\u000adictionary EventSourceInit {\u000a  boolean withCredentials = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/EventTarget.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/EventTarget.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a\u000adictionary EventListenerOptions {\u000a  boolean capture = false;\u000a  /* Setting to true make the listener be added to the system group. */\u000a  [Func=\"ThreadSafeIsChromeOrXBL\"]\u000a  boolean mozSystemGroup = false;\u000a};\u000a\u000adictionary AddEventListenerOptions : EventListenerOptions {\u000a  boolean passive = false;\u000a  boolean once = false;\u000a};\u000a\u000a[Constructor,\u000a Exposed=(Window,Worker,WorkerDebugger,System)]\u000ainterface EventTarget {\u000a  /* Passing null for wantsUntrusted means \"default behavior\", which\u000a     differs in content and chrome.  In content that default boolean\u000a     value is true, while in chrome the default boolean value is\u000a     false. */\u000a  [Throws]\u000a  void addEventListener(DOMString type,\u000a                        EventListener? listener,\u000a                        optional (AddEventListenerOptions or boolean) options,\u000a                        optional boolean? wantsUntrusted = null);\u000a  [Throws]\u000a  void removeEventListener(DOMString type,\u000a                           EventListener? listener,\u000a                           optional (EventListenerOptions or boolean) options);\u000a  [Throws, NeedsCallerType]\u000a  boolean dispatchEvent(Event event);\u000a};\u000a\u000a// Mozilla extensions for use by JS-implemented event targets to\u000a// implement on* properties.\u000apartial interface EventTarget {\u000a  // The use of [TreatNonCallableAsNull] here is a bit of a hack: it just makes\u000a  // the codegen check whether the type involved is either\u000a  // [TreatNonCallableAsNull] or [TreatNonObjectAsNull] and if it is handle it\u000a  // accordingly.  In particular, it will NOT actually treat a non-null\u000a  // non-callable object as null here.\u000a  [ChromeOnly, Throws]\u000a  void setEventHandler(DOMString type,\u000a                       [TreatNonCallableAsNull] EventHandler handler);\u000a\u000a  [ChromeOnly]\u000a  EventHandler getEventHandler(DOMString type);\u000a};\u000a\u000a// Mozilla extension to make firing events on event targets from\u000a// chrome easier.  This returns the window which can be used to create\u000a// events to fire at this EventTarget, or null if there isn't one.\u000apartial interface EventTarget {\u000a  [ChromeOnly, Exposed=(Window,System), BinaryName=\"ownerGlobalForBindings\"]\u000a  readonly attribute WindowProxy? ownerGlobal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ExtendableEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ExtendableEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface, please see\u000a * http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html\u000a */\u000a\u000a[Constructor(DOMString type, optional ExtendableEventInit eventInitDict),\u000a Exposed=ServiceWorker]\u000ainterface ExtendableEvent : Event {\u000a  // https://github.com/slightlyoff/ServiceWorker/issues/261\u000a  [Throws]\u000a  void waitUntil(Promise<any> p);\u000a};\u000a\u000adictionary ExtendableEventInit : EventInit {\u000a  // Defined for the forward compatibility across the derived events\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ExtendableMessageEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ExtendableMessageEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface, please see\u000a * https://w3c.github.io/ServiceWorker/#extendablemessage-event-section\u000a */\u000a\u000a[Constructor(DOMString type, optional ExtendableMessageEventInit eventInitDict),\u000a Exposed=(ServiceWorker)]\u000ainterface ExtendableMessageEvent : ExtendableEvent {\u000a  /**\u000a   * Custom data associated with this event.\u000a   */\u000a  [GetterThrows]\u000a  readonly attribute any data;\u000a\u000a  /**\u000a   * The origin of the site from which this event originated.\u000a   */\u000a  readonly attribute DOMString origin;\u000a\u000a  /**\u000a   * The last event ID string of the event source.\u000a   */\u000a  readonly attribute DOMString lastEventId;\u000a\u000a  /**\u000a   * The client, service worker or port which originated this event.\u000a   */\u000a  readonly attribute (Client or ServiceWorker or MessagePort)? source;\u000a\u000a  [Constant, Cached, Frozen]\u000a  readonly attribute sequence<MessagePort> ports;\u000a};\u000a\u000adictionary ExtendableMessageEventInit : ExtendableEventInit {\u000a  any data = null;\u000a  DOMString origin = \"\";\u000a  DOMString lastEventId = \"\";\u000a  (Client or ServiceWorker or MessagePort)? source = null;\u000a  sequence<MessagePort> ports = [];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/External.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/External.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[NoInterfaceObject, JSImplementation=\"@mozilla.org/sidebar;1\"]\u000ainterface External\u000a{\u000a  void AddSearchProvider(DOMString aDescriptionURL);\u000a  unsigned long IsSearchProviderInstalled(DOMString aSearchURL);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FakePluginTagInit.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FakePluginTagInit.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * A fake plugin is fundamentally identified by its handlerURI.\u000a *\u000a * In addition to that, a fake plugin registration needs to provide at least one\u000a * FakePluginMimeEntry so we'll know what types(s) the plugin is registered for.\u000a * Other information is optional, though having usable niceName is highly\u000a * recommended.\u000a */\u000adictionary FakePluginTagInit {\u000a  required DOMString handlerURI;\u000a  required sequence<FakePluginMimeEntry> mimeEntries;\u000a\u000a  // The niceName should really be provided, and be unique, if possible; it can\u000a  // be used as a key to persist state for this plug-in.\u000a  DOMString niceName = \"\";\u000a\u000a  // Other things can be provided but don't really matter that much.\u000a  DOMString fullPath = \"\";\u000a  DOMString name = \"\";\u000a  DOMString description = \"\";\u000a  DOMString fileName = \"\";\u000a  DOMString version = \"\";\u000a\u000a  /**\u000a   * Optional script to run in a sandbox when instantiating a plugin. The script\u000a   * runs in a sandbox with system principal in the process that contains the\u000a   * element that instantiates the plugin (ie the EMBED or OBJECT element). The\u000a   * sandbox global has a 'pluginElement' property that the script can use to\u000a   * access the element that instantiates the plugin.\u000a   */\u000a  DOMString sandboxScript = \"\";\u000a};\u000a\u000a/**\u000a * A single MIME entry for the fake plugin.\u000a */\u000adictionary FakePluginMimeEntry {\u000a  required DOMString type;\u000a  DOMString description = \"\";\u000a  DOMString extension = \"\";\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Fetch.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Fetch.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://fetch.spec.whatwg.org/\u000a */\u000a\u000atypedef object JSON;\u000atypedef (Blob or BufferSource or FormData or URLSearchParams or USVString) BodyInit;\u000a\u000a[NoInterfaceObject, Exposed=(Window,Worker)]\u000ainterface Body {\u000a  readonly attribute boolean bodyUsed;\u000a  [Throws]\u000a  Promise<ArrayBuffer> arrayBuffer();\u000a  [Throws]\u000a  Promise<Blob> blob();\u000a  [Throws]\u000a  Promise<FormData> formData();\u000a  [Throws]\u000a  Promise<JSON> json();\u000a  [Throws]\u000a  Promise<USVString> text();\u000a};\u000a\u000a// These are helper dictionaries for the parsing of a\u000a// getReader().read().then(data) parsing.\u000a// See more about how these 2 helpers are used in\u000a// dom/fetch/FetchStreamReader.cpp\u000adictionary FetchReadableStreamReadDataDone {\u000a  boolean done = false;\u000a};\u000a\u000adictionary FetchReadableStreamReadDataArray {\u000a  Uint8Array value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FetchEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FetchEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface, please see\u000a * http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html\u000a */\u000a\u000a[Constructor(DOMString type, FetchEventInit eventInitDict),\u000a Func=\"ServiceWorkerVisible\",\u000a Exposed=(ServiceWorker)]\u000ainterface FetchEvent : ExtendableEvent {\u000a  [SameObject] readonly attribute Request request;\u000a  readonly attribute DOMString? clientId;\u000a  readonly attribute boolean isReload;\u000a\u000a  [Throws]\u000a  void respondWith(Promise<Response> r);\u000a};\u000a\u000adictionary FetchEventInit : EventInit {\u000a  required Request request;\u000a  DOMString? clientId = null;\u000a  boolean isReload = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FetchObserver.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FetchObserver.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000acallback interface ObserverCallback {\u000a  void handleEvent(FetchObserver observer);\u000a};\u000a\u000aenum FetchState {\u000a  // Pending states\u000a  \"requesting\", \"responding\",\u000a  // Final states\u000a  \"aborted\", \"errored\", \"complete\"\u000a};\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::DOMPrefs::FetchObserverEnabled\"]\u000ainterface FetchObserver : EventTarget {\u000a  readonly attribute FetchState state;\u000a\u000a  // Events\u000a  attribute EventHandler onstatechange;\u000a  attribute EventHandler onrequestprogress;\u000a  attribute EventHandler onresponseprogress;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/File.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/File.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/FileAPI/#file\u000a */\u000a\u000ainterface nsIFile;\u000a\u000a[Constructor(sequence<BlobPart> fileBits,\u000a             USVString fileName, optional FilePropertyBag options),\u000a Exposed=(Window,Worker)]\u000ainterface File : Blob {\u000a  readonly attribute DOMString name;\u000a\u000a  [GetterThrows]\u000a  readonly attribute long long lastModified;\u000a};\u000a\u000adictionary FilePropertyBag {\u000a  DOMString type = \"\";\u000a  long long lastModified;\u000a};\u000a\u000adictionary ChromeFilePropertyBag : FilePropertyBag {\u000a  DOMString name = \"\";\u000a  boolean existenceCheck = true;\u000a};\u000a\u000a// Mozilla extensions\u000apartial interface File {\u000a  [GetterThrows, Deprecated=\"FileLastModifiedDate\"]\u000a  readonly attribute Date lastModifiedDate;\u000a\u000a  [BinaryName=\"relativePath\", Func=\"mozilla::dom::DOMPrefs::WebkitBlinkDirectoryPickerEnabled\"]\u000a  readonly attribute USVString webkitRelativePath;\u000a\u000a  [GetterThrows, ChromeOnly, NeedsCallerType]\u000a  readonly attribute DOMString mozFullPath;\u000a};\u000a\u000a// Mozilla extensions\u000a// These 2 methods can be used only in these conditions:\u000a// - the main-thread\u000a// - parent process OR file process OR, only for testing, with pref\u000a//   `dom.file.createInChild' set to true.\u000a[Exposed=(Window)]\u000apartial interface File {\u000a  [ChromeOnly, Throws, NeedsCallerType]\u000a  static Promise<File> createFromNsIFile(nsIFile file,\u000a                                         optional ChromeFilePropertyBag options);\u000a\u000a  [ChromeOnly, Throws, NeedsCallerType]\u000a  static Promise<File> createFromFileName(USVString fileName,\u000a                                          optional ChromeFilePropertyBag options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2006/webapi/FileAPI/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface FileList {\u000a  getter File? item(unsigned long index);\u000a  readonly attribute unsigned long length;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileMode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileMode.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000aenum FileMode { \"readonly\", \"readwrite\" };\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileReader.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileReader.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/FileAPI/#APIASynch\u000a *\u000a * Copyright © 2013 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor,\u000a Exposed=(Window,Worker,System)]\u000ainterface FileReader : EventTarget {\u000a  // async read methods\u000a  [Throws]\u000a  void readAsArrayBuffer(Blob blob);\u000a  [Throws]\u000a  void readAsBinaryString(Blob filedata);\u000a  [Throws]\u000a  void readAsText(Blob blob, optional DOMString label);\u000a  [Throws]\u000a  void readAsDataURL(Blob blob);\u000a\u000a  void abort();\u000a\u000a  // states\u000a  const unsigned short EMPTY = 0;\u000a  const unsigned short LOADING = 1;\u000a  const unsigned short DONE = 2;\u000a\u000a\u000a  readonly attribute unsigned short readyState;\u000a\u000a  // File or Blob data\u000a  // bug 858217: readonly attribute (DOMString or ArrayBuffer)? result;\u000a  [Throws]\u000a  readonly attribute any result;\u000a\u000a  readonly attribute DOMException? error;\u000a\u000a  // event handler attributes\u000a  attribute EventHandler onloadstart;\u000a  attribute EventHandler onprogress;\u000a  attribute EventHandler onload;\u000a  attribute EventHandler onabort;\u000a  attribute EventHandler onerror;\u000a  attribute EventHandler onloadend;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileReaderSync.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileReaderSync.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2006/webapi/FileAPI/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor,\u000a Exposed=Worker]\u000ainterface FileReaderSync {\u000a\u000a  // Synchronously return strings\u000a\u000a  [Throws]\u000a  ArrayBuffer readAsArrayBuffer(Blob blob);\u000a  [Throws]\u000a  DOMString readAsBinaryString(Blob blob);\u000a  [Throws]\u000a  DOMString readAsText(Blob blob, optional DOMString encoding);\u000a  [Throws]\u000a  DOMString readAsDataURL(Blob blob);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileSystem.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileSystem.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a\u000adictionary FileSystemFlags {\u000a    boolean create = false;\u000a    boolean exclusive = false;\u000a};\u000a\u000acallback interface FileSystemEntryCallback {\u000a    void handleEvent(FileSystemEntry entry);\u000a};\u000a\u000acallback interface VoidCallback {\u000a    void handleEvent();\u000a};\u000a\u000acallback interface ErrorCallback {\u000a    void handleEvent(DOMException err);\u000a};\u000a\u000ainterface FileSystem {\u000a    readonly    attribute USVString name;\u000a    readonly    attribute FileSystemDirectoryEntry root;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileSystemDirectoryEntry.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileSystemDirectoryEntry.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface FileSystemDirectoryEntry : FileSystemEntry {\u000a    FileSystemDirectoryReader createReader();\u000a\u000a    void getFile(optional USVString? path,\u000a                 optional FileSystemFlags options,\u000a                 optional FileSystemEntryCallback successCallback,\u000a                 optional ErrorCallback errorCallback);\u000a\u000a    void getDirectory(optional USVString? path,\u000a                      optional FileSystemFlags options,\u000a                      optional FileSystemEntryCallback successCallback,\u000a                      optional ErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileSystemDirectoryReader.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileSystemDirectoryReader.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000acallback interface FileSystemEntriesCallback {\u000a    void handleEvent(sequence<FileSystemEntry> entries);\u000a};\u000a\u000ainterface FileSystemDirectoryReader {\u000a\u000a    // readEntries can be called just once. The second time it returns no data.\u000a\u000a    [Throws]\u000a    void readEntries(FileSystemEntriesCallback successCallback,\u000a                     optional ErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileSystemEntry.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileSystemEntry.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface FileSystemEntry {\u000a    readonly attribute boolean isFile;\u000a    readonly attribute boolean isDirectory;\u000a\u000a    [GetterThrows]\u000a    readonly attribute USVString name;\u000a\u000a    [GetterThrows]\u000a    readonly attribute USVString fullPath;\u000a\u000a    readonly attribute FileSystem filesystem;\u000a\u000a    void getParent(optional FileSystemEntryCallback successCallback,\u000a                   optional ErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileSystemFileEntry.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FileSystemFileEntry.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000acallback interface FileCallback {\u000a    void handleEvent(File file);\u000a};\u000a\u000ainterface FileSystemFileEntry : FileSystemEntry {\u000a    [BinaryName=\"GetFile\"]\u000a    void file (FileCallback successCallback,\u000a               optional ErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Flex.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Flex.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * These objects support visualization of flex containers by the\u000a * dev tools.\u000a */\u000a\u000a[ChromeOnly]\u000ainterface Flex\u000a{\u000a  sequence<FlexLine> getLines();\u000a};\u000a\u000a/**\u000a * Lines with items that have been shrunk are shrinking; with items\u000a * that have grown are growing, and all others are unchanged.\u000a */\u000aenum FlexLineGrowthState { \"unchanged\", \"shrinking\", \"growing\" };\u000a\u000a[ChromeOnly]\u000ainterface FlexLine\u000a{\u000a  readonly attribute FlexLineGrowthState growthState;\u000a  readonly attribute double crossStart;\u000a  readonly attribute double crossSize;\u000a\u000a  // firstBaselineOffset measures from flex-start edge.\u000a  readonly attribute double firstBaselineOffset;\u000a\u000a  // lastBaselineOffset measures from flex-end edge.\u000a  readonly attribute double lastBaselineOffset;\u000a\u000a  /**\u000a   * getItems() returns FlexItems only for the Elements in this Flex\u000a   * container -- ignoring struts and abs-pos Elements.\u000a   */\u000a  sequence<FlexItem> getItems();\u000a};\u000a\u000a[ChromeOnly]\u000ainterface FlexItem\u000a{\u000a  readonly attribute Node? node;\u000a  readonly attribute double mainBaseSize;\u000a  readonly attribute double mainDeltaSize;\u000a  readonly attribute double mainMinSize;\u000a  readonly attribute double mainMaxSize;\u000a  readonly attribute double crossMinSize;\u000a  readonly attribute double crossMaxSize;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FocusEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FocusEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface please see\u000a * http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString typeArg, optional FocusEventInit focusEventInitDict)]\u000ainterface FocusEvent : UIEvent {\u000a  // Introduced in DOM Level 3:\u000a  readonly attribute EventTarget?   relatedTarget;\u000a};\u000a\u000adictionary FocusEventInit : UIEventInit {\u000a    EventTarget? relatedTarget = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FontFace.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FontFace.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/css-font-loading/#fontface-interface\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000atypedef (ArrayBuffer or ArrayBufferView) BinaryData;\u000a\u000adictionary FontFaceDescriptors {\u000a  DOMString style = \"normal\";\u000a  DOMString weight = \"normal\";\u000a  DOMString stretch = \"normal\";\u000a  DOMString unicodeRange = \"U+0-10FFFF\";\u000a  DOMString variant = \"normal\";\u000a  DOMString featureSettings = \"normal\";\u000a  DOMString variationSettings = \"normal\";\u000a  DOMString display = \"auto\";\u000a};\u000a\u000aenum FontFaceLoadStatus { \"unloaded\", \"loading\", \"loaded\", \"error\" };\u000a\u000a// Bug 1072107 is for exposing this in workers.\u000a// [Exposed=(Window,Worker)]\u000a[Constructor(DOMString family,\u000a             (DOMString or BinaryData) source,\u000a             optional FontFaceDescriptors descriptors),\u000a Pref=\"layout.css.font-loading-api.enabled\"]\u000ainterface FontFace {\u000a  [SetterThrows] attribute DOMString family;\u000a  [SetterThrows] attribute DOMString style;\u000a  [SetterThrows] attribute DOMString weight;\u000a  [SetterThrows] attribute DOMString stretch;\u000a  [SetterThrows] attribute DOMString unicodeRange;\u000a  [SetterThrows] attribute DOMString variant;\u000a  [SetterThrows] attribute DOMString featureSettings;\u000a  [SetterThrows, Pref=\"layout.css.font-variations.enabled\"] attribute DOMString variationSettings;\u000a  [SetterThrows, Pref=\"layout.css.font-display.enabled\"] attribute DOMString display;\u000a\u000a  readonly attribute FontFaceLoadStatus status;\u000a\u000a  [Throws]\u000a  Promise<FontFace> load();\u000a\u000a  [Throws]\u000a  readonly attribute Promise<FontFace> loaded;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FontFaceSet.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FontFaceSet.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/css-font-loading/#FontFaceSet-interface\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a// To implement FontFaceSet's iterator until we can use setlike.\u000adictionary FontFaceSetIteratorResult\u000a{\u000a  required any value;\u000a  required boolean done;\u000a};\u000a\u000a// To implement FontFaceSet's iterator until we can use setlike.\u000a[NoInterfaceObject]\u000ainterface FontFaceSetIterator {\u000a  [Throws] FontFaceSetIteratorResult next();\u000a};\u000a\u000acallback FontFaceSetForEachCallback = void (FontFace value, FontFace key, FontFaceSet set);\u000a\u000aenum FontFaceSetLoadStatus { \"loading\", \"loaded\" };\u000a\u000a// Bug 1072762 is for the FontFaceSet constructor.\u000a// [Constructor(sequence<FontFace> initialFaces)]\u000a[Pref=\"layout.css.font-loading-api.enabled\"]\u000ainterface FontFaceSet : EventTarget {\u000a\u000a  // Emulate setlike behavior until we can use that directly.\u000a  readonly attribute unsigned long size;\u000a  [Throws] void add(FontFace font);\u000a  boolean has(FontFace font);\u000a  boolean delete(FontFace font);\u000a  void clear();\u000a  [NewObject] FontFaceSetIterator entries();\u000a  // Iterator keys();\u000a  [NewObject, Alias=keys, Alias=\"@@iterator\"] FontFaceSetIterator values();\u000a  [Throws] void forEach(FontFaceSetForEachCallback cb, optional any thisArg);\u000a\u000a  // -- events for when loading state changes\u000a  attribute EventHandler onloading;\u000a  attribute EventHandler onloadingdone;\u000a  attribute EventHandler onloadingerror;\u000a\u000a  // check and start loads if appropriate\u000a  // and fulfill promise when all loads complete\u000a  [NewObject] Promise<sequence<FontFace>> load(DOMString font, optional DOMString text = \" \");\u000a\u000a  // return whether all fonts in the fontlist are loaded\u000a  // (does not initiate load if not available)\u000a  [Throws] boolean check(DOMString font, optional DOMString text = \" \");\u000a\u000a  // async notification that font loading and layout operations are done\u000a  [Throws] readonly attribute Promise<void> ready;\u000a\u000a  // loading state, \"loading\" while one or more fonts loading, \"loaded\" otherwise\u000a  readonly attribute FontFaceSetLoadStatus status;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FontFaceSetLoadEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FontFaceSetLoadEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/css-font-loading/#FontFaceSet-interface\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary FontFaceSetLoadEventInit : EventInit {\u000a  sequence<FontFace> fontfaces = [];\u000a};\u000a\u000a[Constructor(DOMString type, optional FontFaceSetLoadEventInit eventInitDict),\u000a Pref=\"layout.css.font-loading-api.enabled\"]\u000ainterface FontFaceSetLoadEvent : Event {\u000a  [Cached, Constant, Frozen] readonly attribute sequence<FontFace> fontfaces;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FontFaceSource.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FontFaceSource.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/css-font-loading/#font-face-source\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface FontFaceSource {\u000a\u000a  [Pref=\"layout.css.font-loading-api.enabled\"]\u000a  readonly attribute FontFaceSet fonts;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FormData.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FormData.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://xhr.spec.whatwg.org\u000a */\u000a\u000atypedef (Blob or Directory or USVString) FormDataEntryValue;\u000a\u000a[Constructor(optional HTMLFormElement form),\u000a Exposed=(Window,Worker)]\u000ainterface FormData {\u000a  [Throws]\u000a  void append(USVString name, Blob value, optional USVString filename);\u000a  [Throws]\u000a  void append(USVString name, USVString value);\u000a  void delete(USVString name);\u000a  FormDataEntryValue? get(USVString name);\u000a  sequence<FormDataEntryValue> getAll(USVString name);\u000a  boolean has(USVString name);\u000a  [Throws]\u000a  void set(USVString name, Blob value, optional USVString filename);\u000a  [Throws]\u000a  void set(USVString name, USVString value);\u000a  iterable<USVString, FormDataEntryValue>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FrameLoader.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FrameLoader.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface LoadContext;\u000ainterface TabParent;\u000ainterface URI;\u000ainterface nsIDocShell;\u000ainterface nsIMessageSender;\u000ainterface nsIPrintSettings;\u000ainterface nsIWebBrowserPersistDocumentReceiver;\u000ainterface nsIWebProgressListener;\u000a\u000a[ChromeOnly]\u000ainterface FrameLoader {\u000a  /**\u000a   * Get the docshell from the frame loader.\u000a   */\u000a  [GetterThrows]\u000a  readonly attribute nsIDocShell? docShell;\u000a\u000a  /**\u000a   * Get this frame loader's TabParent, if it has a remote frame.  Otherwise,\u000a   * returns null.\u000a   */\u000a  readonly attribute TabParent? tabParent;\u000a\u000a  /**\u000a   * Get an nsILoadContext for the top-level docshell. For remote\u000a   * frames, a shim is returned that contains private browsing and app\u000a   * information.\u000a   */\u000a  readonly attribute LoadContext loadContext;\u000a\u000a  /**\u000a   * Start loading the frame. This method figures out what to load\u000a   * from the owner content in the frame loader.\u000a   */\u000a  [Throws]\u000a  void loadFrame(optional boolean originalSrc = false);\u000a\u000a  /**\u000a   * Loads the specified URI in this frame. Behaves identically to loadFrame,\u000a   * except that this method allows specifying the URI to load.\u000a   */\u000a  [Throws]\u000a  void loadURI(URI aURI, optional boolean originalSrc = false);\u000a\u000a  /**\u000a   * Adds a blocking promise for the current cross process navigation.\u000a   * This method can only be called while the \"BrowserWillChangeProcess\" event\u000a   * is being fired.\u000a   */\u000a  [Throws]\u000a  void addProcessChangeBlockingPromise(Promise<any> aPromise);\u000a\u000a  /**\u000a   * Destroy the frame loader and everything inside it. This will\u000a   * clear the weak owner content reference.\u000a   */\u000a  [Throws]\u000a  void destroy();\u000a\u000a  /**\u000a   * Find out whether the loader's frame is at too great a depth in\u000a   * the frame tree.  This can be used to decide what operations may\u000a   * or may not be allowed on the loader's docshell.\u000a   */\u000a  [Pure]\u000a  readonly attribute boolean depthTooGreat;\u000a\u000a  /**\u000a   * Activate remote frame.\u000a   * Throws an exception with non-remote frames.\u000a   */\u000a  [Throws]\u000a  void activateRemoteFrame();\u000a\u000a  /**\u000a   * Deactivate remote frame.\u000a   * Throws an exception with non-remote frames.\u000a   */\u000a  [Throws]\u000a  void deactivateRemoteFrame();\u000a\u000a  /**\u000a   * @see nsIDOMWindowUtils sendMouseEvent.\u000a   */\u000a  [Throws]\u000a  void sendCrossProcessMouseEvent(DOMString aType,\u000a                                  float aX,\u000a                                  float aY,\u000a                                  long aButton,\u000a                                  long aClickCount,\u000a                                  long aModifiers,\u000a                                  optional boolean aIgnoreRootScrollFrame = false);\u000a\u000a  /**\u000a   * Activate event forwarding from client (remote frame) to parent.\u000a   */\u000a  [Throws]\u000a  void activateFrameEvent(DOMString aType, boolean capture);\u000a\u000a  // Note, when frameloaders are swapped, also messageManagers are swapped.\u000a  readonly attribute nsIMessageSender? messageManager;\u000a\u000a  /**\u000a   * Request that the next time a remote layer transaction has been\u000a   * received by the Compositor, a MozAfterRemoteFrame event be sent\u000a   * to the window.\u000a   */\u000a  [Throws]\u000a  void requestNotifyAfterRemotePaint();\u000a\u000a  /**\u000a   * Close the window through the ownerElement.\u000a   */\u000a  [Throws]\u000a  void requestFrameLoaderClose();\u000a\u000a  /**\u000a   * Force a remote browser to recompute its dimension and screen position.\u000a   */\u000a  [Throws]\u000a  void requestUpdatePosition();\u000a\u000a  /**\u000a   * Print the current document.\u000a   *\u000a   * @param aOuterWindowID the ID of the outer window to print\u000a   * @param aPrintSettings optional print settings to use; printSilent can be\u000a   *                       set to prevent prompting.\u000a   * @param aProgressListener optional print progress listener.\u000a   */\u000a  [Throws]\u000a  void print(unsigned long long aOuterWindowID,\u000a             nsIPrintSettings aPrintSettings,\u000a             optional nsIWebProgressListener? aProgressListener = null);\u000a\u000a  /**\u000a   * The default event mode automatically forwards the events\u000a   * handled in EventStateManager::HandleCrossProcessEvent to\u000a   * the child content process when these events are targeted to\u000a   * the remote browser element.\u000a   *\u000a   * Used primarly for input events (mouse, keyboard)\u000a   */\u000a  const unsigned long EVENT_MODE_NORMAL_DISPATCH = 0x00000000;\u000a\u000a  /**\u000a   * With this event mode, it's the application's responsability to\u000a   * convert and forward events to the content process\u000a   */\u000a  const unsigned long EVENT_MODE_DONT_FORWARD_TO_CHILD = 0x00000001;\u000a\u000a  [Pure]\u000a  attribute unsigned long eventMode;\u000a\u000a  /**\u000a   * If false, then the subdocument is not clipped to its CSS viewport, and the\u000a   * subdocument's viewport scrollbar(s) are not rendered.\u000a   * Defaults to true.\u000a   */\u000a  attribute boolean clipSubdocument;\u000a\u000a  /**\u000a   * If false, then the subdocument's scroll coordinates will not be clamped\u000a   * to their scroll boundaries.\u000a   * Defaults to true.\u000a   */\u000a  attribute boolean clampScrollPosition;\u000a\u000a  /**\u000a   * The element which owns this frame loader.\u000a   *\u000a   * For example, if this is a frame loader for an <iframe>, this attribute\u000a   * returns the iframe element.\u000a   */\u000a  [Pure]\u000a  readonly attribute Element? ownerElement;\u000a\u000a\u000a  /**\u000a   * Cached childID of the ContentParent owning the TabParent in this frame\u000a   * loader. This can be used to obtain the childID after the TabParent died.\u000a   */\u000a  [Pure]\u000a  readonly attribute unsigned long long childID;\u000a\u000a  /**\u000a   * Find out whether the owner content really is a mozbrowser. <xul:browser>\u000a   * is not considered to be a mozbrowser frame.\u000a   */\u000a  [Pure]\u000a  readonly attribute boolean ownerIsMozBrowserFrame;\u000a\u000a  /**\u000a   * The last known width of the frame. Reading this property will not trigger\u000a   * a reflow, and therefore may not reflect the current state of things. It\u000a   * should only be used in asynchronous APIs where values are not guaranteed\u000a   * to be up-to-date when received.\u000a   */\u000a  [Pure]\u000a  readonly attribute unsigned long lazyWidth;\u000a\u000a  /**\u000a   * The last known height of the frame. Reading this property will not trigger\u000a   * a reflow, and therefore may not reflect the current state of things. It\u000a   * should only be used in asynchronous APIs where values are not guaranteed\u000a   * to be up-to-date when received.\u000a   */\u000a  [Pure]\u000a  readonly attribute unsigned long lazyHeight;\u000a\u000a  /**\u000a   * Is `true` if the frameloader is dead (destroy has been called on it)\u000a   */\u000a  [Pure]\u000a  readonly attribute boolean isDead;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WebBrowserPersistable\u000a{\u000a  [Throws]\u000a  void startPersistence(unsigned long long aOuterWindowID,\u000a                        nsIWebBrowserPersistDocumentReceiver aRecv);\u000a};\u000a\u000aFrameLoader implements WebBrowserPersistable;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Function.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Function.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#functiocn\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000acallback Function = any(any... arguments);\u000a\u000acallback VoidFunction = void ();\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FuzzingFunctions.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/FuzzingFunctions.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/*\u000a * Various functions useful for automated fuzzing that are enabled\u000a * only in --enable-fuzzing builds, because they may be dangerous to\u000a * enable on untrusted pages.\u000a*/\u000a\u000a[Pref=\"fuzzing.enabled\"]\u000ainterface FuzzingFunctions {\u000a  /**\u000a   * Synchronously perform a garbage collection.\u000a   */\u000a  static void garbageCollect();\u000a\u000a  /**\u000a   * Synchronously perform a cycle collection.\u000a   */\u000a  static void cycleCollect();\u000a\u000a  /**\u000a   * Enable accessibility.\u000a   */\u000a  [Throws]\u000a  static void enableAccessibility();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GainNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GainNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary GainOptions : AudioNodeOptions {\u000a             float gain = 1.0;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional GainOptions options)]\u000ainterface GainNode : AudioNode {\u000a\u000a    readonly attribute AudioParam gain;\u000a\u000a};\u000a\u000a// Mozilla extension\u000aGainNode implements AudioNodePassThrough;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Gamepad.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Gamepad.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/gamepad/\u000a * https://w3c.github.io/gamepad/extensions.html\u000a * https://w3c.github.io/webvr/spec/1.1/#interface-gamepad\u000a */\u000a\u000a[Pref=\"dom.gamepad.enabled\"]\u000ainterface GamepadButton {\u000a  readonly    attribute boolean pressed;\u000a  readonly    attribute boolean touched;\u000a  readonly    attribute double  value;\u000a};\u000a\u000aenum GamepadHand {\u000a  \"\",\u000a  \"left\",\u000a  \"right\"\u000a};\u000a\u000aenum GamepadMappingType {\u000a  \"\",\u000a  \"standard\"\u000a};\u000a\u000a[Pref=\"dom.gamepad.enabled\"]\u000ainterface Gamepad {\u000a  /**\u000a   * An identifier, unique per type of device.\u000a   */\u000a  readonly attribute DOMString id;\u000a\u000a  /**\u000a   * The game port index for the device. Unique per device\u000a   * attached to this system.\u000a   */\u000a  readonly attribute unsigned long index;\u000a\u000a  /**\u000a   * The mapping in use for this device. The empty string\u000a   * indicates that no mapping is in use.\u000a   */\u000a  readonly attribute GamepadMappingType mapping;\u000a\u000a  /**\u000a   * The hand in use for this device. The empty string\u000a   * indicates that unknown, both hands, or not applicable\u000a   */\u000a  [Pref=\"dom.gamepad.extensions.enabled\"]\u000a  readonly attribute GamepadHand hand;\u000a\u000a  /**\u000a   * The displayId in use for as an association point in the VRDisplay API\u000a   * to identify which VRDisplay that the gamepad is associated with.\u000a   */\u000a  [Pref=\"dom.vr.enabled\"]\u000a  readonly attribute unsigned long displayId;\u000a\u000a  /**\u000a   * true if this gamepad is currently connected to the system.\u000a   */\u000a  readonly attribute boolean connected;\u000a\u000a  /**\u000a   * The current state of all buttons on the device, an\u000a   * array of GamepadButton.\u000a   */\u000a  [Pure, Cached, Frozen]\u000a  readonly attribute sequence<GamepadButton> buttons;\u000a\u000a  /**\u000a   * The current position of all axes on the device, an\u000a   * array of doubles.\u000a   */\u000a  [Pure, Cached, Frozen]\u000a  readonly attribute sequence<double> axes;\u000a\u000a  /**\u000a   * Timestamp from when the data of this device was last updated.\u000a   */\u000a  readonly attribute DOMHighResTimeStamp timestamp;\u000a\u000a  /**\u000a   * The current pose of the device, a GamepadPose.\u000a   */\u000a  [Pref=\"dom.gamepad.extensions.enabled\"]\u000a  readonly attribute GamepadPose? pose;\u000a\u000a  /**\u000a   * The current haptic actuator of the device, an array of\u000a   * GamepadHapticActuator.\u000a   */\u000a  [Constant, Cached, Frozen, Pref=\"dom.gamepad.extensions.enabled\"]\u000a  readonly attribute sequence<GamepadHapticActuator> hapticActuators;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadAxisMoveEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadAxisMoveEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Pref=\"dom.gamepad.non_standard_events.enabled\",\u000a Constructor(DOMString type, optional GamepadAxisMoveEventInit eventInitDict)]\u000ainterface GamepadAxisMoveEvent : GamepadEvent\u000a{\u000a  readonly attribute unsigned long axis;\u000a  readonly attribute double value;\u000a};\u000a\u000adictionary GamepadAxisMoveEventInit : GamepadEventInit\u000a{\u000a  unsigned long axis = 0;\u000a  double value = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadButtonEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadButtonEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Pref=\"dom.gamepad.non_standard_events.enabled\",\u000a Constructor(DOMString type, optional GamepadButtonEventInit eventInitDict)]\u000ainterface GamepadButtonEvent : GamepadEvent\u000a{\u000a  readonly attribute unsigned long button;\u000a};\u000a\u000adictionary GamepadButtonEventInit : GamepadEventInit\u000a{\u000a  unsigned long button = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Pref=\"dom.gamepad.enabled\",\u000a Constructor(DOMString type, optional GamepadEventInit eventInitDict)]\u000ainterface GamepadEvent : Event\u000a{\u000a  readonly attribute Gamepad? gamepad;\u000a};\u000a\u000adictionary GamepadEventInit : EventInit\u000a{\u000a  Gamepad? gamepad = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadHapticActuator.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadHapticActuator.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/gamepad/extensions.html#gamepadhapticactuator-interface\u000a */\u000a\u000aenum GamepadHapticActuatorType {\u000a  \"vibration\"\u000a};\u000a\u000a[Pref=\"dom.gamepad.extensions.enabled\",\u000a  HeaderFile=\"mozilla/dom/GamepadHapticActuator.h\"]\u000ainterface GamepadHapticActuator\u000a{\u000a  readonly attribute GamepadHapticActuatorType type;\u000a  [Throws, NewObject]\u000a  Promise<boolean> pulse(double value, double duration);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadPose.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadPose.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/gamepad/extensions.html#gamepadpose-interface\u000a */\u000a\u000a[Pref=\"dom.gamepad.extensions.enabled\"]\u000ainterface GamepadPose\u000a{\u000a  readonly attribute boolean hasOrientation;\u000a  readonly attribute boolean hasPosition;\u000a\u000a  /**\u000a   * position, linearVelocity, and linearAcceleration are 3-component vectors.\u000a   * position is relative to a sitting space. Transforming this point with\u000a   * VRStageParameters.sittingToStandingTransform converts this to standing space.\u000a   */\u000a  [Constant, Throws] readonly attribute Float32Array? position;\u000a  [Constant, Throws] readonly attribute Float32Array? linearVelocity;\u000a  [Constant, Throws] readonly attribute Float32Array? linearAcceleration;\u000a\u000a  /* orientation is a 4-entry array representing the components of a quaternion. */\u000a  [Constant, Throws] readonly attribute Float32Array? orientation;\u000a  /* angularVelocity and angularAcceleration are the components of 3-dimensional vectors. */\u000a  [Constant, Throws] readonly attribute Float32Array? angularVelocity;\u000a  [Constant, Throws] readonly attribute Float32Array? angularAcceleration;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadServiceTest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GamepadServiceTest.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Pref=\"dom.gamepad.test.enabled\"]\u000ainterface GamepadServiceTest\u000a{\u000a  readonly attribute GamepadMappingType noMapping;\u000a  readonly attribute GamepadMappingType standardMapping;\u000a  readonly attribute GamepadHand noHand;\u000a  readonly attribute GamepadHand leftHand;\u000a  readonly attribute GamepadHand rightHand;\u000a\u000a  [Throws]\u000a  Promise<unsigned long> addGamepad(DOMString id,\u000a                                    GamepadMappingType mapping,\u000a                                    GamepadHand hand,\u000a                                    unsigned long numButtons,\u000a                                    unsigned long numAxes,\u000a                                    unsigned long numHaptics);\u000a\u000a  void removeGamepad(unsigned long index);\u000a\u000a  void newButtonEvent(unsigned long index,\u000a                      unsigned long button,\u000a                      boolean pressed,\u000a                      boolean touched);\u000a\u000a  void newButtonValueEvent(unsigned long index,\u000a                           unsigned long button,\u000a                           boolean pressed,\u000a                           boolean touched,\u000a                           double value);\u000a\u000a  void newAxisMoveEvent(unsigned long index,\u000a                        unsigned long axis,\u000a                        double value);\u000a  void newPoseMove(unsigned long index,\u000a                   Float32Array? orient,\u000a                   Float32Array? pos,\u000a                   Float32Array? angVelocity,\u000a                   Float32Array? angAcceleration,\u000a                   Float32Array? linVelocity,\u000a                   Float32Array? linAcceleration);\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Geolocation.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Geolocation.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/geolocation-API\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary PositionOptions {\u000a  boolean enableHighAccuracy = false;\u000a  [Clamp] unsigned long timeout = 0x7fffffff;\u000a  [Clamp] unsigned long maximumAge = 0;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface Geolocation {\u000a  [Throws, NeedsCallerType]\u000a  void getCurrentPosition(PositionCallback successCallback,\u000a                          optional PositionErrorCallback? errorCallback = null,\u000a                          optional PositionOptions options);\u000a\u000a  [Throws, NeedsCallerType]\u000a  long watchPosition(PositionCallback successCallback,\u000a                     optional PositionErrorCallback? errorCallback = null,\u000a                     optional PositionOptions options);\u000a\u000a  void clearWatch(long watchId);\u000a};\u000a\u000acallback PositionCallback = void (Position position);\u000a\u000acallback PositionErrorCallback = void (PositionError positionError);\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GeometryUtils.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GeometryUtils.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/cssom-view/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum CSSBoxType { \"margin\", \"border\", \"padding\", \"content\" };\u000adictionary BoxQuadOptions {\u000a  CSSBoxType box = \"border\";\u000a  GeometryNode relativeTo;\u000a};\u000a\u000adictionary ConvertCoordinateOptions {\u000a  CSSBoxType fromBox = \"border\";\u000a  CSSBoxType toBox = \"border\";\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface GeometryUtils {\u000a  [Throws, Func=\"nsINode::HasBoxQuadsSupport\", NeedsCallerType]\u000a  sequence<DOMQuad> getBoxQuads(optional BoxQuadOptions options);\u000a  [Throws, Pref=\"layout.css.convertFromNode.enabled\", NeedsCallerType]\u000a  DOMQuad convertQuadFromNode(DOMQuad quad, GeometryNode from, optional ConvertCoordinateOptions options);\u000a  [Throws, Pref=\"layout.css.convertFromNode.enabled\", NeedsCallerType]\u000a  DOMQuad convertRectFromNode(DOMRectReadOnly rect, GeometryNode from, optional ConvertCoordinateOptions options);\u000a  [Throws, Pref=\"layout.css.convertFromNode.enabled\", NeedsCallerType]\u000a  DOMPoint convertPointFromNode(DOMPointInit point, GeometryNode from, optional ConvertCoordinateOptions options);\u000a};\u000a\u000a// PseudoElement implements GeometryUtils;\u000a\u000atypedef (Text or Element /* or PseudoElement */ or Document) GeometryNode;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GetUserMediaRequest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GetUserMediaRequest.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * This is an internal IDL file\u000a */\u000a\u000a// for gUM request start (getUserMedia:request) notification,\u000a// rawID and mediaSource won't be set.\u000a// for gUM request stop (recording-device-stopped) notification due to page reload,\u000a// only windowID will be set.\u000a// for gUM request stop (recording-device-stopped) notification due to track stop,\u000a// only windowID, rawID and mediaSource will be set\u000a\u000a[NoInterfaceObject]\u000ainterface GetUserMediaRequest {\u000a  readonly attribute unsigned long long windowID;\u000a  readonly attribute unsigned long long innerWindowID;\u000a  readonly attribute DOMString callID;\u000a  readonly attribute DOMString rawID;\u000a  readonly attribute DOMString mediaSource;\u000a  MediaStreamConstraints getConstraints();\u000a  readonly attribute boolean isSecure;\u000a  readonly attribute boolean isHandlingUserInput;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Grid.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Grid.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/* These objects support visualization of a css-grid by the dev tools. */\u000a\u000a/**\u000a * Explicit and implicit types apply to tracks, lines, and areas.\u000a * https://drafts.csswg.org/css-grid/#explicit-grids\u000a * https://drafts.csswg.org/css-grid/#implicit-grids\u000a */\u000aenum GridDeclaration { \"explicit\", \"implicit\" };\u000a\u000a/**\u000a * Tracks expanded from auto-fill are repeat , auto-fits with elements are\u000a * also repeat, auto-fits with no elements are removed, other tracks are static.\u000a */\u000aenum GridTrackState { \"static\", \"repeat\", \"removed\" };\u000a\u000a[ChromeOnly]\u000ainterface Grid\u000a{\u000a  readonly attribute GridDimension rows;\u000a  readonly attribute GridDimension cols;\u000a  [Cached, Constant]\u000a  readonly attribute sequence<GridArea> areas;\u000a};\u000a\u000a[ChromeOnly]\u000ainterface GridDimension\u000a{\u000a  readonly attribute GridLines lines;\u000a  readonly attribute GridTracks tracks;\u000a};\u000a\u000a[ChromeOnly]\u000ainterface GridLines\u000a{\u000a  readonly attribute unsigned long length;\u000a\u000a  /**\u000a   * This accessor method allows array-like access to lines.\u000a   * @param index A 0-indexed value.\u000a   */\u000a  getter GridLine? item(unsigned long index);\u000a};\u000a\u000a[ChromeOnly]\u000ainterface GridLine\u000a{\u000a  /**\u000a   * Names include both explicit names and implicit names, which will be\u000a   * assigned if the line contributes to a named area.\u000a   * https://drafts.csswg.org/css-grid/#implicit-named-lines\u000a   */\u000a  [Cached, Constant]\u000a  readonly attribute sequence<DOMString> names;\u000a\u000a  readonly attribute double start;\u000a\u000a  /**\u000a   * Breadth is the gap between the start of this line and the start of the\u000a   * next track in flow direction. It primarily is set by use of the -gap\u000a   * properties.\u000a   * https://drafts.csswg.org/css-grid/#gutters\u000a   */\u000a  readonly attribute double breadth;\u000a\u000a  readonly attribute GridDeclaration type;\u000a\u000a  /**\u000a   * Number is the 1-indexed index of the line in flow order. The\u000a   * first explicit line has number 1, and numbers increment by 1 for\u000a   * each line after that. Lines before the first explicit line\u000a   * have number 0, which is not a valid addressable line number, and\u000a   * should be filtered out by callers.\u000a   */\u000a  readonly attribute unsigned long number;\u000a\u000a  /**\u000a   * NegativeNumber is the 1-indexed index of the line in reverse\u000a   * flow order. The last explicit line has negativeNumber -1, and\u000a   * negativeNumbers decrement by 1 for each line before that.\u000a   * Lines after the last explicit line have negativeNumber 0, which\u000a   * is not a valid addressable line number, and should be filtered\u000a   * out by callers.\u000a   */\u000a  readonly attribute long negativeNumber;\u000a};\u000a\u000a[ChromeOnly]\u000ainterface GridTracks\u000a{\u000a  readonly attribute unsigned long length;\u000a\u000a  /**\u000a   * This accessor method allows array-like access to tracks.\u000a   * @param index A 0-indexed value.\u000a   */\u000a  getter GridTrack? item(unsigned long index);\u000a};\u000a\u000a[ChromeOnly]\u000ainterface GridTrack\u000a{\u000a  readonly attribute double start;\u000a  readonly attribute double breadth;\u000a  readonly attribute GridDeclaration type;\u000a  readonly attribute GridTrackState state;\u000a};\u000a\u000a[ChromeOnly]\u000ainterface GridArea\u000a{\u000a  readonly attribute DOMString name;\u000a  readonly attribute GridDeclaration type;\u000a\u000a  /**\u000a   * These values are 1-indexed line numbers bounding the area.\u000a   */\u000a  readonly attribute unsigned long rowStart;\u000a  readonly attribute unsigned long rowEnd;\u000a  readonly attribute unsigned long columnStart;\u000a  readonly attribute unsigned long columnEnd;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GroupedHistoryEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/GroupedHistoryEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[ChromeOnly,\u000a Constructor(DOMString type, optional GroupedHistoryEventInit eventInitDict)]\u000ainterface GroupedHistoryEvent : Event\u000a{\u000a  readonly attribute Element? otherBrowser;\u000a};\u000a\u000adictionary GroupedHistoryEventInit : EventInit\u000a{\u000a  Element? otherBrowser = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLAllCollection.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLAllCollection.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/* Emulates undefined through Codegen.py. */\u000a[LegacyUnenumerableNamedProperties]\u000ainterface HTMLAllCollection {\u000a  readonly attribute unsigned long length;\u000a  getter Node? (unsigned long index);\u000a  Node? item(unsigned long index);\u000a  (Node or HTMLCollection)? item(DOMString name);\u000a  legacycaller (Node or HTMLCollection)? (DOMString name);\u000a  getter (Node or HTMLCollection)? namedItem(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLAnchorElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLAnchorElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-a-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-a-element\u000a[HTMLConstructor]\u000ainterface HTMLAnchorElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString target;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString download;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString ping;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString rel;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString referrerPolicy;\u000a           [PutForwards=value]\u000a  readonly attribute DOMTokenList relList;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString hreflang;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString type;\u000a\u000a           [CEReactions, Throws]\u000a           attribute DOMString text;\u000a};\u000a\u000aHTMLAnchorElement implements HTMLHyperlinkElementUtils;\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLAnchorElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString coords;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString charset;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString name;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString rev;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString shape;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLAreaElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLAreaElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-area-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a &\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-area-element\u000a[HTMLConstructor]\u000ainterface HTMLAreaElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString alt;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString coords;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString shape;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString target;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString download;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString ping;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString rel;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString referrerPolicy;\u000a           [PutForwards=value]\u000a  readonly attribute DOMTokenList relList;\u000a};\u000a\u000aHTMLAreaElement implements HTMLHyperlinkElementUtils;\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLAreaElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean noHref;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLAudioElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLAudioElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-audio-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor, NamedConstructor=Audio(optional DOMString src)]\u000ainterface HTMLAudioElement : HTMLMediaElement {};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLBRElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLBRElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-br-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-br-element\u000a[HTMLConstructor]\u000ainterface HTMLBRElement : HTMLElement {};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLBRElement {\u000a             [CEReactions, SetterThrows]\u000a             attribute DOMString clear;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLBaseElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLBaseElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-base-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-base-element\u000a[HTMLConstructor]\u000ainterface HTMLBaseElement : HTMLElement {\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString href;\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString target;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLBodyElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLBodyElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLBodyElement : HTMLElement {\u000a};\u000a\u000apartial interface HTMLBodyElement {\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a  attribute DOMString text;\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a  attribute DOMString link;\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a  attribute DOMString vLink;\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a  attribute DOMString aLink;\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a  attribute DOMString bgColor;\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString background;\u000a};\u000a\u000aHTMLBodyElement implements WindowEventHandlers;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLButtonElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLButtonElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-button-element\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-button-element\u000a[HTMLConstructor]\u000ainterface HTMLButtonElement : HTMLElement {\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean autofocus;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean disabled;\u000a  [Pure]\u000a  readonly attribute HTMLFormElement? form;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString formAction;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString formEnctype;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString formMethod;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean formNoValidate;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString formTarget;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString name;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString type;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString value;\u000a\u000a  readonly attribute boolean willValidate;\u000a  readonly attribute ValidityState validity;\u000a  [Throws]\u000a  readonly attribute DOMString validationMessage;\u000a  boolean checkValidity();\u000a  boolean reportValidity();\u000a  void setCustomValidity(DOMString error);\u000a\u000a  readonly attribute NodeList labels;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLCanvasElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLCanvasElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-canvas-element\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000ainterface nsISupports;\u000ainterface Variant;\u000a\u000a[HTMLConstructor]\u000ainterface HTMLCanvasElement : HTMLElement {\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute unsigned long width;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute unsigned long height;\u000a\u000a  [Throws]\u000a  nsISupports? getContext(DOMString contextId, optional any contextOptions = null);\u000a\u000a  [Throws]\u000a  DOMString toDataURL(optional DOMString type = \"\",\u000a                      optional any encoderOptions);\u000a  [Throws]\u000a  void toBlob(BlobCallback _callback,\u000a              optional DOMString type = \"\",\u000a              optional any encoderOptions);\u000a};\u000a\u000a// Mozilla specific bits\u000apartial interface HTMLCanvasElement {\u000a  [Pure, SetterThrows]\u000a           attribute boolean mozOpaque;\u000a  [Throws, NeedsCallerType]\u000a  File mozGetAsFile(DOMString name, optional DOMString? type = null);\u000a  // A Mozilla-only extension to get a canvas context backed by double-buffered\u000a  // shared memory. Only privileged callers can call this.\u000a  [ChromeOnly, Throws]\u000a  nsISupports? MozGetIPCContext(DOMString contextId);\u000a\u000a           attribute PrintCallback? mozPrintCallback;\u000a\u000a  [Throws, Pref=\"canvas.capturestream.enabled\"]\u000a  CanvasCaptureMediaStream captureStream(optional double frameRate);\u000a};\u000a\u000a// For OffscreenCanvas\u000a// Reference: https://wiki.whatwg.org/wiki/OffscreenCanvas\u000apartial interface HTMLCanvasElement {\u000a  [Pref=\"gfx.offscreencanvas.enabled\", Throws]\u000a  OffscreenCanvas transferControlToOffscreen();\u000a};\u000a\u000a[ChromeOnly]\u000ainterface MozCanvasPrintState\u000a{\u000a  // A canvas rendering context.\u000a  readonly attribute nsISupports context;\u000a\u000a  // To be called when rendering to the context is done.\u000a  void done();\u000a};\u000a\u000acallback PrintCallback = void(MozCanvasPrintState ctx);\u000a\u000acallback BlobCallback = void(Blob? blob);\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLCollection.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLCollection.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[LegacyUnenumerableNamedProperties]\u000ainterface HTMLCollection {\u000a  readonly attribute unsigned long length;\u000a  getter Element? item(unsigned long index);\u000a  getter Element? namedItem(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDListElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDListElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-dl-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-dl-element\u000a[HTMLConstructor]\u000ainterface HTMLDListElement : HTMLElement {\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLDListElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean compact;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDataElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDataElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-data-element\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLDataElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDataListElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDataListElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLDataListElement : HTMLElement {\u000a  readonly attribute HTMLCollection options;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDetailsElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDetailsElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://html.spec.whatwg.org/multipage/forms.html#the-details-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLDetailsElement : HTMLElement {\u000a  [CEReactions, SetterThrows]\u000a  attribute boolean open;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDialogElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDialogElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://html.spec.whatwg.org/multipage/forms.html#the-dialog-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[Pref=\"dom.dialog_element.enabled\"]\u000ainterface HTMLDialogElement : HTMLElement {\u000a  [CEReactions, SetterThrows]\u000a  attribute boolean open;\u000a  attribute DOMString returnValue;\u000a  [CEReactions]\u000a  void show();\u000a  [CEReactions, Throws]\u000a  void showModal();\u000a  [CEReactions]\u000a  void close(optional DOMString returnValue);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDirectoryElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDirectoryElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a[HTMLConstructor]\u000ainterface HTMLDirectoryElement : HTMLElement {\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute boolean compact;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDivElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDivElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLDivElement : HTMLElement {};\u000a\u000apartial interface HTMLDivElement {\u000a  [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDocument.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLDocument.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[OverrideBuiltins]\u000ainterface HTMLDocument : Document {\u000a           [SetterThrows]\u000a           attribute DOMString? domain;\u000a           [Throws]\u000a           attribute DOMString cookie;\u000a  // DOM tree accessors\u000a  [Throws]\u000a  getter object (DOMString name);\u000a  [Pure]\u000a  readonly attribute HTMLHeadElement? head;\u000a  [Pure]\u000a  readonly attribute HTMLCollection images;\u000a  [Pure]\u000a  readonly attribute HTMLCollection embeds;\u000a  [Pure]\u000a  readonly attribute HTMLCollection plugins;\u000a  [Pure]\u000a  readonly attribute HTMLCollection links;\u000a  [Pure]\u000a  readonly attribute HTMLCollection forms;\u000a  [Pure]\u000a  readonly attribute HTMLCollection scripts;\u000a\u000a  // dynamic markup insertion\u000a  [CEReactions, Throws]\u000a  Document open(optional DOMString type = \"text/html\", optional DOMString replace = \"\");\u000a  [CEReactions, Throws]\u000a  WindowProxy? open(DOMString url, DOMString name, DOMString features, optional boolean replace = false);\u000a  [CEReactions, Throws]\u000a  void close();\u000a  [CEReactions, Throws]\u000a  void write(DOMString... text);\u000a  [CEReactions, Throws]\u000a  void writeln(DOMString... text);\u000a\u000a  [CEReactions, SetterThrows, SetterNeedsSubjectPrincipal]\u000a           attribute DOMString designMode;\u000a  [CEReactions, Throws, NeedsSubjectPrincipal]\u000a  boolean execCommand(DOMString commandId, optional boolean showUI = false,\u000a                      optional DOMString value = \"\");\u000a  [Throws, NeedsSubjectPrincipal]\u000a  boolean queryCommandEnabled(DOMString commandId);\u000a  [Throws]\u000a  boolean queryCommandIndeterm(DOMString commandId);\u000a  [Throws]\u000a  boolean queryCommandState(DOMString commandId);\u000a  [NeedsCallerType]\u000a  boolean queryCommandSupported(DOMString commandId);\u000a  [Throws]\u000a  DOMString queryCommandValue(DOMString commandId);\u000a\u000a  [CEReactions, TreatNullAs=EmptyString] attribute DOMString fgColor;\u000a  [CEReactions, TreatNullAs=EmptyString] attribute DOMString linkColor;\u000a  [CEReactions, TreatNullAs=EmptyString] attribute DOMString vlinkColor;\u000a  [CEReactions, TreatNullAs=EmptyString] attribute DOMString alinkColor;\u000a  [CEReactions, TreatNullAs=EmptyString] attribute DOMString bgColor;\u000a\u000a  [Pure]\u000a  readonly attribute HTMLCollection anchors;\u000a  [Pure]\u000a  readonly attribute HTMLCollection applets;\u000a\u000a  void clear();\u000a\u000a  readonly attribute HTMLAllCollection all;\u000a\u000a  // @deprecated These are old Netscape 4 methods. Do not use,\u000a  //             the implementation is no-op.\u000a  // XXXbz do we actually need these anymore?\u000a  void                      captureEvents();\u000a  void                      releaseEvents();\u000a};\u000a\u000apartial interface HTMLDocument {\u000a  /*\u000a   * Number of nodes that have been blocked by\u000a   * the Safebrowsing API to prevent tracking.\u000a   */\u000a  [ChromeOnly, Pure]\u000a  readonly attribute long blockedTrackingNodeCount;\u000a\u000a  /*\u000a   * List of nodes that have been blocked by\u000a   * the Safebrowsing API to prevent tracking.\u000a   */\u000a  [ChromeOnly, Pure]\u000a  readonly attribute NodeList blockedTrackingNodes;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/ and\u000a * http://dev.w3.org/csswg/cssom-view/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLElement : Element {\u000a  // metadata attributes\u000a  [CEReactions]\u000a           attribute DOMString title;\u000a  [CEReactions]\u000a           attribute DOMString lang;\u000a  //         attribute boolean translate;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString dir;\u000a  [Constant]\u000a  readonly attribute DOMStringMap dataset;\u000a\u000a  [CEReactions, GetterThrows, Pure, TreatNullAs=EmptyString]\u000a           attribute DOMString innerText;\u000a\u000a  // user interaction\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean hidden;\u000a  [NeedsCallerType]\u000a  void click();\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute long tabIndex;\u000a  [Throws]\u000a  void focus();\u000a  [Throws]\u000a  void blur();\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString accessKey;\u000a  [Pure]\u000a  readonly attribute DOMString accessKeyLabel;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean draggable;\u000a  //[PutForwards=value] readonly attribute DOMTokenList dropzone;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString contentEditable;\u000a  [Pure]\u000a  readonly attribute boolean isContentEditable;\u000a  [Pure]\u000a  readonly attribute HTMLMenuElement? contextMenu;\u000a  //[SetterThrows]\u000a  //         attribute HTMLMenuElement? contextMenu;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean spellcheck;\u000a\u000a  // command API\u000a  //readonly attribute DOMString? commandType;\u000a  //readonly attribute DOMString? commandLabel;\u000a  //readonly attribute DOMString? commandIcon;\u000a  //readonly attribute boolean? commandHidden;\u000a  //readonly attribute boolean? commandDisabled;\u000a  //readonly attribute boolean? commandChecked;\u000a\u000a  // styling\u000a  [PutForwards=cssText, Constant]\u000a  readonly attribute CSSStyleDeclaration style;\u000a};\u000a\u000a// http://dev.w3.org/csswg/cssom-view/#extensions-to-the-htmlelement-interface\u000apartial interface HTMLElement {\u000a  // CSSOM things are not [Pure] because they can flush\u000a  readonly attribute Element? offsetParent;\u000a  readonly attribute long offsetTop;\u000a  readonly attribute long offsetLeft;\u000a  readonly attribute long offsetWidth;\u000a  readonly attribute long offsetHeight;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface TouchEventHandlers {\u000a  [Func=\"nsGenericHTMLElement::TouchEventsEnabled\"]\u000a           attribute EventHandler ontouchstart;\u000a  [Func=\"nsGenericHTMLElement::TouchEventsEnabled\"]\u000a           attribute EventHandler ontouchend;\u000a  [Func=\"nsGenericHTMLElement::TouchEventsEnabled\"]\u000a           attribute EventHandler ontouchmove;\u000a  [Func=\"nsGenericHTMLElement::TouchEventsEnabled\"]\u000a           attribute EventHandler ontouchcancel;\u000a};\u000a\u000aHTMLElement implements GlobalEventHandlers;\u000aHTMLElement implements DocumentAndElementEventHandlers;\u000aHTMLElement implements TouchEventHandlers;\u000aHTMLElement implements OnErrorEventHandlerForNodes;\u000a\u000ainterface HTMLUnknownElement : HTMLElement {};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLEmbedElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLEmbedElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-embed-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#HTMLEmbedElement-partial\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-embed-element\u000a[HTMLConstructor, NeedResolve]\u000ainterface HTMLEmbedElement : HTMLElement {\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString src;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString type;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString width;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString height;\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#HTMLEmbedElement-partial\u000apartial interface HTMLEmbedElement {\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString align;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString name;\u000a};\u000a\u000apartial interface HTMLEmbedElement {\u000a  // GetSVGDocument\u000a  [NeedsSubjectPrincipal]\u000a  Document? getSVGDocument();\u000a};\u000a\u000aHTMLEmbedElement implements MozImageLoadingContent;\u000aHTMLEmbedElement implements MozFrameLoaderOwner;\u000aHTMLEmbedElement implements MozObjectLoadingContent;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFieldSetElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFieldSetElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-fieldset-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLFieldSetElement : HTMLElement {\u000a  [CEReactions, SetterThrows]\u000a           attribute boolean disabled;\u000a  readonly attribute HTMLFormElement? form;\u000a  [CEReactions, SetterThrows]\u000a           attribute DOMString name;\u000a\u000a  readonly attribute DOMString type;\u000a\u000a  readonly attribute HTMLCollection elements;\u000a\u000a  readonly attribute boolean willValidate;\u000a  readonly attribute ValidityState validity;\u000a  [Throws]\u000a  readonly attribute DOMString validationMessage;\u000a\u000a  boolean checkValidity();\u000a  boolean reportValidity();\u000a\u000a  void setCustomValidity(DOMString error);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFontElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFontElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLFontElement : HTMLElement {\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows] attribute DOMString color;\u000a  [CEReactions, SetterThrows]                          attribute DOMString face;\u000a  [CEReactions, SetterThrows]                          attribute DOMString size;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFormControlsCollection.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFormControlsCollection.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#htmlformcontrolscollection\u000a *\u000a * © Copyright 2004-2013 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000ainterface HTMLFormControlsCollection : HTMLCollection {\u000a  // inherits length and item()\u000a  /* legacycaller */ getter (RadioNodeList or Element)? namedItem(DOMString name); // shadows inherited namedItem()\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFormElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFormElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#htmlformelement\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[OverrideBuiltins, LegacyUnenumerableNamedProperties, HTMLConstructor]\u000ainterface HTMLFormElement : HTMLElement {\u000a           [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString acceptCharset;\u000a           [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString action;\u000a           [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString autocomplete;\u000a           [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString enctype;\u000a           [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString encoding;\u000a           [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString method;\u000a           [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString name;\u000a           [CEReactions, Pure, SetterThrows]\u000a           attribute boolean noValidate;\u000a           [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString target;\u000a\u000a  [Constant]\u000a  readonly attribute HTMLCollection elements;\u000a  [Pure]\u000a  readonly attribute long length;\u000a\u000a  getter Element (unsigned long index);\u000a  // TODO this should be: getter (RadioNodeList or HTMLInputElement or HTMLImageElement) (DOMString name);\u000a  getter nsISupports (DOMString name);\u000a\u000a  [Throws]\u000a  void submit();\u000a  [CEReactions]\u000a  void reset();\u000a  boolean checkValidity();\u000a  boolean reportValidity();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFrameElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFrameElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#htmlframeelement\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#htmlframeelement\u000a[HTMLConstructor]\u000ainterface HTMLFrameElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString name;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString scrolling;\u000a           [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows]\u000a           attribute DOMString src;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString frameBorder;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString longDesc;\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean noResize;\u000a  [NeedsSubjectPrincipal]\u000a  readonly attribute Document? contentDocument;\u000a  readonly attribute WindowProxy? contentWindow;\u000a\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a  attribute DOMString marginHeight;\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a  attribute DOMString marginWidth;\u000a};\u000a\u000aHTMLFrameElement implements MozFrameLoaderOwner;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFrameSetElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLFrameSetElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLFrameSetElement : HTMLElement {\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString cols;\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString rows;\u000a};\u000a\u000aHTMLFrameSetElement implements WindowEventHandlers;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLHRElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLHRElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-hr-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-hr-element\u000a[HTMLConstructor]\u000ainterface HTMLHRElement : HTMLElement {\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLHRElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString color;\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean noShade;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString size;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString width;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLHeadElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLHeadElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-head-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-head-element\u000a[HTMLConstructor]\u000ainterface HTMLHeadElement : HTMLElement {};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLHeadingElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLHeadingElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements\u000a[HTMLConstructor]\u000ainterface HTMLHeadingElement : HTMLElement {\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLHeadingElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLHtmlElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLHtmlElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-html-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-html-element\u000a[HTMLConstructor]\u000ainterface HTMLHtmlElement : HTMLElement {};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLHtmlElement {\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString version;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLHyperlinkElementUtils.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLHyperlinkElementUtils.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://html.spec.whatwg.org/multipage/semantics.html#htmlhyperlinkelementutils\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface HTMLHyperlinkElementUtils {\u000a  // Bug 824857: no support for stringifier attributes yet.\u000a  //  stringifier attribute USVString href;\u000a\u000a  // Bug 824857 should remove this.\u000a  stringifier;\u000a\u000a  [CEReactions, SetterThrows]\u000a           attribute USVString href;\u000a\u000a  readonly attribute USVString origin;\u000a  [CEReactions]\u000a           attribute USVString protocol;\u000a  [CEReactions]\u000a           attribute USVString username;\u000a  [CEReactions]\u000a           attribute USVString password;\u000a  [CEReactions]\u000a           attribute USVString host;\u000a  [CEReactions]\u000a           attribute USVString hostname;\u000a  [CEReactions]\u000a           attribute USVString port;\u000a  [CEReactions]\u000a           attribute USVString pathname;\u000a  [CEReactions]\u000a           attribute USVString search;\u000a  [CEReactions]\u000a           attribute USVString hash;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLIFrameElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLIFrameElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-iframe-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLIFrameElement : HTMLElement {\u000a  [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows, Pure]\u000a           attribute DOMString src;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString srcdoc;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString name;\u000a  [PutForwards=value] readonly attribute DOMTokenList sandbox;\u000a           // attribute boolean seamless;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean allowFullscreen;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean allowPaymentRequest;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString width;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString height;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString referrerPolicy;\u000a  [NeedsSubjectPrincipal]\u000a  readonly attribute Document? contentDocument;\u000a  readonly attribute WindowProxy? contentWindow;\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLIFrameElement {\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString align;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString scrolling;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString frameBorder;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString longDesc;\u000a\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows, Pure]\u000a           attribute DOMString marginHeight;\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows, Pure]\u000a           attribute DOMString marginWidth;\u000a};\u000a\u000apartial interface HTMLIFrameElement {\u000a  // GetSVGDocument\u000a  [NeedsSubjectPrincipal]\u000a  Document? getSVGDocument();\u000a};\u000a\u000apartial interface HTMLIFrameElement {\u000a  // nsIDOMMozBrowserFrame\u000a  [ChromeOnly,SetterThrows]\u000a           attribute boolean mozbrowser;\u000a};\u000a\u000aHTMLIFrameElement implements MozFrameLoaderOwner;\u000aHTMLIFrameElement implements BrowserElement;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLImageElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLImageElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#htmlimageelement\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000ainterface imgINotificationObserver;\u000ainterface imgIRequest;\u000ainterface URI;\u000ainterface nsIStreamListener;\u000a\u000a[HTMLConstructor,\u000a NamedConstructor=Image(optional unsigned long width, optional unsigned long height)]\u000ainterface HTMLImageElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString alt;\u000a           [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows]\u000a           attribute DOMString src;\u000a           [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows]\u000a           attribute DOMString srcset;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString? crossOrigin;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString useMap;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString referrerPolicy;\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean isMap;\u000a           [CEReactions, SetterThrows]\u000a           attribute unsigned long width;\u000a           [CEReactions, SetterThrows]\u000a           attribute unsigned long height;\u000a  readonly attribute unsigned long naturalWidth;\u000a  readonly attribute unsigned long naturalHeight;\u000a  readonly attribute boolean complete;\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLImageElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString name;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a           [CEReactions, SetterThrows]\u000a           attribute unsigned long hspace;\u000a           [CEReactions, SetterThrows]\u000a           attribute unsigned long vspace;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString longDesc;\u000a\u000a  [CEReactions, TreatNullAs=EmptyString,SetterThrows] attribute DOMString border;\u000a};\u000a\u000a// [Update me: not in whatwg spec yet]\u000a// http://picture.responsiveimages.org/#the-img-element\u000apartial interface HTMLImageElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString sizes;\u000a  readonly attribute DOMString currentSrc;\u000a};\u000a\u000a// Mozilla extensions.\u000apartial interface HTMLImageElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString lowsrc;\u000a\u000a  // These attributes are offsets from the closest view (to mimic\u000a  // NS4's \"offset-from-layer\" behavior).\u000a  readonly attribute long x;\u000a  readonly attribute long y;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface MozImageLoadingContent {\u000a  // Mirrored chrome-only nsIImageLoadingContent methods.  Please make sure\u000a  // to update this list if nsIImageLoadingContent changes.\u000a  [ChromeOnly]\u000a  const long UNKNOWN_REQUEST = -1;\u000a  [ChromeOnly]\u000a  const long CURRENT_REQUEST = 0;\u000a  [ChromeOnly]\u000a  const long PENDING_REQUEST = 1;\u000a\u000a  [ChromeOnly]\u000a  attribute boolean loadingEnabled;\u000a  [ChromeOnly]\u000a  readonly attribute short imageBlockingStatus;\u000a  /**\u000a   * Same as addNativeObserver but intended for scripted observers or observers\u000a   * from another or without a document.\u000a   */\u000a  [ChromeOnly]\u000a  void addObserver(imgINotificationObserver aObserver);\u000a  /**\u000a   * Same as removeNativeObserver but intended for scripted observers or\u000a   * observers from another or without a document.\u000a   */\u000a  [ChromeOnly]\u000a  void removeObserver(imgINotificationObserver aObserver);\u000a  [ChromeOnly,Throws]\u000a  imgIRequest? getRequest(long aRequestType);\u000a  [ChromeOnly,Throws]\u000a  long getRequestType(imgIRequest aRequest);\u000a  [ChromeOnly,Throws]\u000a  readonly attribute URI? currentURI;\u000a  // Gets the final URI of the current request, if available.\u000a  // Otherwise, returns null.\u000a  [ChromeOnly]\u000a  readonly attribute URI? currentRequestFinalURI;\u000a  /**\u000a   * forceReload forces reloading of the image pointed to by currentURI\u000a   *\u000a   * @param aNotify request should notify\u000a   * @throws NS_ERROR_NOT_AVAILABLE if there is no current URI to reload\u000a   */\u000a  [ChromeOnly,Throws]\u000a  void forceReload(optional boolean aNotify = true);\u000a  [ChromeOnly]\u000a  void forceImageState(boolean aForce, unsigned long long aState);\u000a};\u000a\u000aHTMLImageElement implements MozImageLoadingContent;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLInputElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLInputElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-input-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000aenum SelectionMode {\u000a  \"select\",\u000a  \"start\",\u000a  \"end\",\u000a  \"preserve\",\u000a};\u000a\u000ainterface XULControllers;\u000a\u000a[HTMLConstructor]\u000ainterface HTMLInputElement : HTMLElement {\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString accept;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString alt;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString autocomplete;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute boolean autofocus;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute boolean defaultChecked;\u000a  [Pure]\u000a           attribute boolean checked;\u000a           // Bug 850337 - attribute DOMString dirName;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute boolean disabled;\u000a  readonly attribute HTMLFormElement? form;\u000a  [Pure]\u000a           attribute FileList? files;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString formAction;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString formEnctype;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString formMethod;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute boolean formNoValidate;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString formTarget;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute unsigned long height;\u000a  [Pure]\u000a           attribute boolean indeterminate;\u000a  [CEReactions, Pure, SetterThrows, Pref=\"dom.forms.inputmode\"]\u000a           attribute DOMString inputMode;\u000a  [Pure]\u000a  readonly attribute HTMLElement? list;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString max;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute long maxLength;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString min;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute long minLength;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute boolean multiple;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString name;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString pattern;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString placeholder;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute boolean readOnly;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute boolean required;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute unsigned long size;\u000a  [CEReactions, Pure, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows]\u000a           attribute DOMString src;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString step;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString type;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString defaultValue;\u000a  [CEReactions, Pure, TreatNullAs=EmptyString, SetterThrows, NeedsCallerType]\u000a           attribute DOMString value;\u000a  [Throws, Func=\"HTMLInputElement::ValueAsDateEnabled\"]\u000a           attribute Date? valueAsDate;\u000a  [Pure, SetterThrows]\u000a           attribute unrestricted double valueAsNumber;\u000a  [CEReactions, SetterThrows]\u000a           attribute unsigned long width;\u000a\u000a  [Throws]\u000a  void stepUp(optional long n = 1);\u000a  [Throws]\u000a  void stepDown(optional long n = 1);\u000a\u000a  [Pure]\u000a  readonly attribute boolean willValidate;\u000a  [Pure]\u000a  readonly attribute ValidityState validity;\u000a  [Throws]\u000a  readonly attribute DOMString validationMessage;\u000a  boolean checkValidity();\u000a  boolean reportValidity();\u000a  void setCustomValidity(DOMString error);\u000a\u000a  readonly attribute NodeList? labels;\u000a\u000a  void select();\u000a\u000a  [Throws]\u000a           attribute unsigned long? selectionStart;\u000a  [Throws]\u000a           attribute unsigned long? selectionEnd;\u000a  [Throws]\u000a           attribute DOMString? selectionDirection;\u000a  [Throws]\u000a  void setRangeText(DOMString replacement);\u000a  [Throws]\u000a  void setRangeText(DOMString replacement, unsigned long start,\u000a    unsigned long end, optional SelectionMode selectionMode = \"preserve\");\u000a  [Throws]\u000a  void setSelectionRange(unsigned long start, unsigned long end, optional DOMString direction);\u000a\u000a  // also has obsolete members\u000a};\u000a\u000apartial interface HTMLInputElement {\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString align;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString useMap;\u000a};\u000a\u000a// Mozilla extensions\u000a\u000apartial interface HTMLInputElement {\u000a  [GetterThrows, ChromeOnly]\u000a  readonly attribute XULControllers        controllers;\u000a  // Binaryname because we have a FragmentOrElement function named \"TextLength()\".\u000a  [NeedsCallerType, BinaryName=\"inputTextLength\"]\u000a  readonly attribute long                  textLength;\u000a\u000a  [Throws, ChromeOnly]\u000a  sequence<DOMString> mozGetFileNameArray();\u000a\u000a  [ChromeOnly, Throws]\u000a  void mozSetFileNameArray(sequence<DOMString> fileNames);\u000a\u000a  [ChromeOnly]\u000a  void mozSetFileArray(sequence<File> files);\u000a\u000a  // This method is meant to use for testing only.\u000a  [ChromeOnly, Throws]\u000a  void mozSetDirectory(DOMString directoryPath);\u000a\u000a  // This method is meant to use for testing only.\u000a  [ChromeOnly]\u000a  void mozSetDndFilesAndDirectories(sequence<(File or Directory)> list);\u000a\u000a  // Number controls (<input type=number>) have an anonymous text control\u000a  // (<input type=text>) in the anonymous shadow tree that they contain. On\u000a  // such an anonymous text control this property provides access to the\u000a  // number control that owns the text control. This is useful, for example,\u000a  // in code that looks at the currently focused element to make decisions\u000a  // about which IME to bring up. Such code needs to be able to check for any\u000a  // owning number control since it probably wants to bring up a number pad\u000a  // instead of the standard keyboard, even when the anonymous text control has\u000a  // focus.\u000a  [ChromeOnly]\u000a  readonly attribute HTMLInputElement? ownerNumberControl;\u000a\u000a  boolean mozIsTextField(boolean aExcludePassword);\u000a\u000a  [ChromeOnly]\u000a  // This function will return null if @autocomplete is not defined for the\u000a  // current @type\u000a  AutocompleteInfo? getAutocompleteInfo();\u000a};\u000a\u000apartial interface HTMLInputElement {\u000a  // Mirrored chrome-only nsIDOMNSEditableElement methods.  Please make sure\u000a  // to update this list if nsIDOMNSEditableElement changes.\u000a\u000a  [Pure, ChromeOnly]\u000a  readonly attribute nsIEditor? editor;\u000a\u000a  // This is similar to set .value on nsIDOMInput/TextAreaElements, but handling\u000a  // of the value change is closer to the normal user input, so 'change' event\u000a  // for example will be dispatched when focusing out the element.\u000a  [Func=\"IsChromeOrXBL\", NeedsSubjectPrincipal]\u000a  void setUserInput(DOMString input);\u000a};\u000a\u000apartial interface HTMLInputElement {\u000a  [Pref=\"dom.input.dirpicker\", SetterThrows]\u000a  attribute boolean allowdirs;\u000a\u000a  [Pref=\"dom.input.dirpicker\"]\u000a  readonly attribute boolean isFilesAndDirectoriesSupported;\u000a\u000a  [Throws, Pref=\"dom.input.dirpicker\"]\u000a  Promise<sequence<(File or Directory)>> getFilesAndDirectories();\u000a\u000a  [Throws, Pref=\"dom.input.dirpicker\"]\u000a  Promise<sequence<File>> getFiles(optional boolean recursiveFlag = false);\u000a\u000a  [Throws, Pref=\"dom.input.dirpicker\"]\u000a  void chooseDirectory();\u000a};\u000a\u000aHTMLInputElement implements MozImageLoadingContent;\u000a\u000a// Webkit/Blink\u000apartial interface HTMLInputElement {\u000a  [Pref=\"dom.webkitBlink.filesystem.enabled\", Frozen, Cached, Pure]\u000a  readonly attribute sequence<FileSystemEntry> webkitEntries;\u000a\u000a  [Pref=\"dom.webkitBlink.dirPicker.enabled\", BinaryName=\"WebkitDirectoryAttr\", SetterThrows]\u000a          attribute boolean webkitdirectory;\u000a};\u000a\u000adictionary DateTimeValue {\u000a  long hour;\u000a  long minute;\u000a  long year;\u000a  long month;\u000a  long day;\u000a};\u000a\u000apartial interface HTMLInputElement {\u000a  [Pref=\"dom.forms.datetime\", ChromeOnly]\u000a  DateTimeValue getDateTimeInputBoxValue();\u000a\u000a  [Pref=\"dom.forms.datetime\", ChromeOnly]\u000a  void updateDateTimeInputBox(optional DateTimeValue value);\u000a\u000a  [Pref=\"dom.forms.datetime\", ChromeOnly]\u000a  void setDateTimePickerState(boolean open);\u000a\u000a  [Pref=\"dom.forms.datetime\", ChromeOnly,\u000a   BinaryName=\"getMinimumAsDouble\"]\u000a  double getMinimum();\u000a\u000a  [Pref=\"dom.forms.datetime\", ChromeOnly,\u000a   BinaryName=\"getMaximumAsDouble\"]\u000a  double getMaximum();\u000a\u000a  [Pref=\"dom.forms.datetime\", Func=\"IsChromeOrXBL\"]\u000a  void openDateTimePicker(optional DateTimeValue initialValue);\u000a\u000a  [Pref=\"dom.forms.datetime\", Func=\"IsChromeOrXBL\"]\u000a  void updateDateTimePicker(optional DateTimeValue value);\u000a\u000a  [Pref=\"dom.forms.datetime\", Func=\"IsChromeOrXBL\"]\u000a  void closeDateTimePicker();\u000a\u000a  [Pref=\"dom.forms.datetime\", Func=\"IsChromeOrXBL\"]\u000a  void setFocusState(boolean aIsFocused);\u000a\u000a  [Pref=\"dom.forms.datetime\", Func=\"IsChromeOrXBL\"]\u000a  void updateValidityState();\u000a\u000a  [Pref=\"dom.forms.datetime\", Func=\"IsChromeOrXBL\",\u000a   BinaryName=\"getStepAsDouble\"]\u000a  double getStep();\u000a\u000a  [Pref=\"dom.forms.datetime\", Func=\"IsChromeOrXBL\",\u000a   BinaryName=\"getStepBaseAsDouble\"]\u000a  double getStepBase();\u000a};\u000a\u000apartial interface HTMLInputElement {\u000a  [ChromeOnly]\u000a  attribute DOMString previewValue;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLLIElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLLIElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-li-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-li-element\u000a[HTMLConstructor]\u000ainterface HTMLLIElement : HTMLElement {\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute long value;\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLLIElement {\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLLabelElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLLabelElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLLabelElement : HTMLElement {\u000a  readonly attribute HTMLFormElement? form;\u000a  [CEReactions]\u000a           attribute DOMString htmlFor;\u000a  readonly attribute HTMLElement? control;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLLegendElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLLegendElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-legend-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-legend-element\u000a[HTMLConstructor]\u000ainterface HTMLLegendElement : HTMLElement {\u000a  readonly attribute HTMLFormElement? form;\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLLegendElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLLinkElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLLinkElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-link-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-link-element\u000a[HTMLConstructor]\u000ainterface HTMLLinkElement : HTMLElement {\u000a  [Pure]\u000a           attribute boolean disabled;\u000a  [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows, Pure]\u000a           attribute DOMString href;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString? crossOrigin;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString rel;\u000a  [PutForwards=value]\u000a  readonly attribute DOMTokenList relList;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString media;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString hreflang;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString type;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString referrerPolicy;\u000a  [PutForwards=value] readonly attribute DOMTokenList sizes;\u000a};\u000aHTMLLinkElement implements LinkStyle;\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLLinkElement {\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString charset;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString rev;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString target;\u000a};\u000a\u000a// https://w3c.github.io/webappsec/specs/subresourceintegrity/#htmllinkelement-1\u000apartial interface HTMLLinkElement {\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString integrity;\u000a};\u000a\u000a//https://w3c.github.io/preload/\u000apartial interface HTMLLinkElement {\u000a  [SetterThrows, Pure]\u000a           attribute DOMString as;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMapElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMapElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-map-element\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-map-element\u000a[HTMLConstructor]\u000ainterface HTMLMapElement : HTMLElement {\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString name;\u000a  [Constant]\u000a  readonly attribute HTMLCollection areas;\u000a  // Not supported yet.\u000a  //readonly attribute HTMLCollection images;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMediaElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMediaElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#media-elements\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000ainterface HTMLMediaElement : HTMLElement {\u000a\u000a  // error state\u000a  readonly attribute MediaError? error;\u000a\u000a  // network state\u000a  [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows]\u000a           attribute DOMString src;\u000a  readonly attribute DOMString currentSrc;\u000a\u000a  [CEReactions, SetterThrows]\u000a           attribute DOMString? crossOrigin;\u000a  const unsigned short NETWORK_EMPTY = 0;\u000a  const unsigned short NETWORK_IDLE = 1;\u000a  const unsigned short NETWORK_LOADING = 2;\u000a  const unsigned short NETWORK_NO_SOURCE = 3;\u000a  readonly attribute unsigned short networkState;\u000a  [CEReactions, SetterThrows]\u000a           attribute DOMString preload;\u000a  [NewObject]\u000a  readonly attribute TimeRanges buffered;\u000a  void load();\u000a  DOMString canPlayType(DOMString type);\u000a\u000a  // ready state\u000a  const unsigned short HAVE_NOTHING = 0;\u000a  const unsigned short HAVE_METADATA = 1;\u000a  const unsigned short HAVE_CURRENT_DATA = 2;\u000a  const unsigned short HAVE_FUTURE_DATA = 3;\u000a  const unsigned short HAVE_ENOUGH_DATA = 4;\u000a  readonly attribute unsigned short readyState;\u000a  readonly attribute boolean seeking;\u000a\u000a  // playback state\u000a  [SetterThrows]\u000a           attribute double currentTime;\u000a  [Throws]\u000a  void fastSeek(double time);\u000a  readonly attribute unrestricted double duration;\u000a  [ChromeOnly]\u000a  readonly attribute boolean isEncrypted;\u000a  // TODO: Bug 847376 - readonly attribute any startDate;\u000a  readonly attribute boolean paused;\u000a  [SetterThrows]\u000a           attribute double defaultPlaybackRate;\u000a  [SetterThrows]\u000a           attribute double playbackRate;\u000a  [NewObject]\u000a  readonly attribute TimeRanges played;\u000a  [NewObject]\u000a  readonly attribute TimeRanges seekable;\u000a  readonly attribute boolean ended;\u000a  [CEReactions, SetterThrows]\u000a           attribute boolean autoplay;\u000a  [CEReactions, SetterThrows]\u000a           attribute boolean loop;\u000a  [Throws]\u000a  Promise<void> play();\u000a  [Throws]\u000a  void pause();\u000a\u000a  // TODO: Bug 847377 - mediaGroup and MediaController\u000a  // media controller\u000a  //         attribute DOMString mediaGroup;\u000a  //         attribute MediaController? controller;\u000a\u000a  // controls\u000a  [CEReactions, SetterThrows]\u000a           attribute boolean controls;\u000a  [SetterThrows]\u000a           attribute double volume;\u000a           attribute boolean muted;\u000a  [CEReactions, SetterThrows]\u000a           attribute boolean defaultMuted;\u000a\u000a  // TODO: Bug 847379\u000a  // tracks\u000a  [Pref=\"media.track.enabled\"]\u000a  readonly attribute AudioTrackList audioTracks;\u000a  [Pref=\"media.track.enabled\"]\u000a  readonly attribute VideoTrackList videoTracks;\u000a  readonly attribute TextTrackList? textTracks;\u000a  TextTrack addTextTrack(TextTrackKind kind,\u000a                         optional DOMString label = \"\",\u000a                         optional DOMString language = \"\");\u000a};\u000a\u000a// Mozilla extensions:\u000apartial interface HTMLMediaElement {\u000a  [Func=\"HasDebuggerOrTabsPrivilege\"]\u000a  readonly attribute MediaSource? mozMediaSourceObject;\u000a  [Func=\"HasDebuggerOrTabsPrivilege\"]\u000a  readonly attribute DOMString mozDebugReaderData;\u000a  [Func=\"HasDebuggerOrTabsPrivilege\", NewObject]\u000a  Promise<DOMString> mozRequestDebugInfo();\u000a\u000a  [Func=\"HasDebuggerOrTabsPrivilege\", NewObject]\u000a  static void mozEnableDebugLog();\u000a  [Func=\"HasDebuggerOrTabsPrivilege\", NewObject]\u000a  Promise<DOMString> mozRequestDebugLog();\u000a\u000a  [Pref=\"media.test.dumpDebugInfo\"]\u000a  Promise<void> mozDumpDebugInfo();\u000a\u000a  attribute MediaStream? srcObject;\u000a\u000a  attribute boolean mozPreservesPitch;\u000a\u000a  // NB: for internal use with the video controls:\u000a  [Func=\"IsChromeOrXBL\"] attribute boolean mozAllowCasting;\u000a  [Func=\"IsChromeOrXBL\"] attribute boolean mozIsCasting;\u000a\u000a  // Mozilla extension: stream capture\u000a  [Throws]\u000a  MediaStream mozCaptureStream();\u000a  [Throws]\u000a  MediaStream mozCaptureStreamUntilEnded();\u000a  readonly attribute boolean mozAudioCaptured;\u000a\u000a  // Mozilla extension: return embedded metadata from the stream as a\u000a  // JSObject with key:value pairs for each tag. This can be used by\u000a  // player interfaces to display the song title, artist, etc.\u000a  [Throws]\u000a  object? mozGetMetadata();\u000a\u000a  // Mozilla extension: provides access to the fragment end time if\u000a  // the media element has a fragment URI for the currentSrc, otherwise\u000a  // it is equal to the media duration.\u000a  readonly attribute double mozFragmentEnd;\u000a\u000a  [ChromeOnly]\u000a  void reportCanPlayTelemetry();\u000a};\u000a\u000a// Encrypted Media Extensions\u000apartial interface HTMLMediaElement {\u000a  readonly attribute MediaKeys? mediaKeys;\u000a\u000a  // void, not any: https://www.w3.org/Bugs/Public/show_bug.cgi?id=26457\u000a  [NewObject]\u000a  Promise<void> setMediaKeys(MediaKeys? mediaKeys);\u000a\u000a  attribute EventHandler onencrypted;\u000a\u000a  attribute EventHandler onwaitingforkey;\u000a};\u000a\u000a// This is just for testing\u000apartial interface HTMLMediaElement {\u000a  [Pref=\"media.useAudioChannelService.testing\"]\u000a  readonly attribute double computedVolume;\u000a  [Pref=\"media.useAudioChannelService.testing\"]\u000a  readonly attribute boolean computedMuted;\u000a  [Pref=\"media.useAudioChannelService.testing\"]\u000a  readonly attribute unsigned long computedSuspended;\u000a};\u000a\u000a/*\u000a * HTMLMediaElement::seekToNextFrame() is a Mozilla experimental feature.\u000a *\u000a * The SeekToNextFrame() method provides a way to access a video element's video\u000a * frames one by one without going through the realtime playback. So, it lets\u000a * authors use \"frame\" as unit to access the video element's underlying data,\u000a * instead of \"time\".\u000a *\u000a * The SeekToNextFrame() is a kind of seek operation, so normally, once it is\u000a * invoked, a \"seeking\" event is dispatched. However, if the media source has no\u000a * video data or is not seekable, the operation is ignored without filing the\u000a * \"seeking\" event.\u000a *\u000a * Once the SeekToNextFrame() is done, a \"seeked\" event should always be filed\u000a * and a \"ended\" event might also be filed depends on where the media element's\u000a * position before seeking was. There are two cases:\u000a * Assume the media source has n+1 video frames where n is a non-negative\u000a * integers and the frame sequence is indexed from zero.\u000a * (1) If the currentTime is at anywhere smaller than the n-th frame's beginning\u000a *     time, say the currentTime is now pointing to a position which is smaller\u000a *     than the x-th frame's beginning time and larger or equal to the (x-1)-th\u000a *     frame's beginning time, where x belongs to [1, n], then the\u000a *     SeekToNextFrame() operation seeks the media to the x-th frame, sets the\u000a *     media's currentTime to the x-th frame's beginning time and dispatches a\u000a *     \"seeked\" event.\u000a * (2) Otherwise, if the currentTime is larger or equal to the n-th frame's\u000a *     beginning time, then the SeekToNextFrame() operation sets the media's\u000a *     currentTime to the duration of the media source and dispatches a \"seeked\"\u000a *     event and an \"ended\" event.\u000a */\u000apartial interface HTMLMediaElement {\u000a  [Throws, Pref=\"media.seekToNextFrame.enabled\"]\u000a  Promise<void> seekToNextFrame();\u000a};\u000a\u000a/*\u000a * This is an API for simulating visibility changes to help debug and write\u000a * tests about suspend-video-decoding.\u000a *\u000a * - SetVisible() is for simulating visibility changes.\u000a * - HasSuspendTaint() is for querying that the element's decoder cannot suspend\u000a *   video decoding because it has been tainted by an operation, such as\u000a *   drawImage().\u000a */\u000apartial interface HTMLMediaElement {\u000a  [Pref=\"media.test.video-suspend\"]\u000a  void setVisible(boolean aVisible);\u000a\u000a  [Pref=\"media.test.video-suspend\"]\u000a  boolean hasSuspendTaint();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMenuElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMenuElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-menu-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000ainterface MenuBuilder;\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-menu-element\u000a[HTMLConstructor]\u000ainterface HTMLMenuElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString type;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString label;\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLMenuElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean compact;\u000a};\u000a\u000a// Mozilla specific stuff\u000apartial interface HTMLMenuElement {\u000a  /**\u000a   * Creates and dispatches a trusted event named \"show\".\u000a   * The event is not cancelable and does not bubble.\u000a   * See http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\u000a   */\u000a  [ChromeOnly]\u000a  void sendShowEvent();\u000a\u000a  /**\u000a   * Creates a native menu builder. The builder type is dependent on menu type.\u000a   * Currently, it returns the @mozilla.org/content/html-menu-builder;1\u000a   * component. Toolbar menus are not yet supported (the method returns null).\u000a   */\u000a  [ChromeOnly]\u000a  MenuBuilder? createBuilder();\u000a\u000a  /*\u000a   * Builds a menu by iterating over menu children.\u000a   * See http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#building-menus-and-toolbars\u000a   * The caller can use a native builder by calling createBuilder() or provide\u000a   * a custom builder that implements the nsIMenuBuilder interface.\u000a   * A custom builder can be used for example to build native context menus\u000a   * that are not defined using <menupopup>.\u000a   */\u000a  [ChromeOnly]\u000a  void build(MenuBuilder aBuilder);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMenuItemElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMenuItemElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-menuitem-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-menuitem-element\u000a[HTMLConstructor]\u000ainterface HTMLMenuItemElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString type;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString label;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString icon;\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean disabled;\u000a           [CEReactions]\u000a           attribute boolean checked;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString radiogroup;\u000a\u000a           // This should be 'default' but in the IDL implementation\u000a           // this has been renamed 'defaultChecked'.\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean defaultChecked;\u000a\u000a           // Currently not implemented.\u000a//  readonly attribute HTMLElement? command;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMetaElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMetaElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-meta-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-meta-element\u000a[HTMLConstructor]\u000ainterface HTMLMetaElement : HTMLElement {\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString name;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString httpEquiv;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString content;\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLMetaElement {\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString scheme;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMeterElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLMeterElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-meter-element\u0009\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-meter-element\u000a[HTMLConstructor]\u000ainterface HTMLMeterElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute double value;\u000a           [CEReactions, SetterThrows]\u000a           attribute double min;\u000a           [CEReactions, SetterThrows]\u000a           attribute double max;\u000a           [CEReactions, SetterThrows]\u000a           attribute double low;\u000a           [CEReactions, SetterThrows]\u000a           attribute double high;\u000a           [CEReactions, SetterThrows]\u000a           attribute double optimum;\u000a           readonly attribute NodeList labels;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLModElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLModElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#attributes-common-to-ins-and-del-elements\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#attributes-common-to-ins-and-del-elements\u000a[HTMLConstructor]\u000ainterface HTMLModElement : HTMLElement {\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString cite;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString dateTime;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLOListElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLOListElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-ol-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-ol-element\u000a[HTMLConstructor]\u000ainterface HTMLOListElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean reversed;\u000a           [CEReactions, SetterThrows]\u000a           attribute long start;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString type;\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLOListElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean compact;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLObjectElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLObjectElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-object-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#HTMLObjectElement-partial\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-object-element\u000a[HTMLConstructor, NeedResolve]\u000ainterface HTMLObjectElement : HTMLElement {\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString data;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString type;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute boolean typeMustMatch;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString name;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString useMap;\u000a  [Pure]\u000a  readonly attribute HTMLFormElement? form;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString width;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString height;\u000a  // Not pure: can trigger about:blank instantiation\u000a  [NeedsSubjectPrincipal]\u000a  readonly attribute Document? contentDocument;\u000a  // Not pure: can trigger about:blank instantiation\u000a  [NeedsSubjectPrincipal]\u000a  readonly attribute WindowProxy? contentWindow;\u000a\u000a  readonly attribute boolean willValidate;\u000a  readonly attribute ValidityState validity;\u000a  [Throws]\u000a  readonly attribute DOMString validationMessage;\u000a  boolean checkValidity();\u000a  boolean reportValidity();\u000a  void setCustomValidity(DOMString error);\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#HTMLObjectElement-partial\u000apartial interface HTMLObjectElement {\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString align;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString archive;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString code;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute boolean declare;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute unsigned long hspace;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString standby;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute unsigned long vspace;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString codeBase;\u000a  [CEReactions, Pure, SetterThrows]\u000a           attribute DOMString codeType;\u000a\u000a  [CEReactions, TreatNullAs=EmptyString, Pure, SetterThrows]\u000a           attribute DOMString border;\u000a};\u000a\u000apartial interface HTMLObjectElement {\u000a  // GetSVGDocument\u000a  [NeedsSubjectPrincipal]\u000a  Document? getSVGDocument();\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface MozObjectLoadingContent {\u000a  // Mirrored chrome-only scriptable nsIObjectLoadingContent methods.  Please\u000a  // make sure to update this list if nsIObjectLoadingContent changes.  Also,\u000a  // make sure everything on here is [ChromeOnly].\u000a  [ChromeOnly]\u000a  const unsigned long TYPE_LOADING     = 0;\u000a  [ChromeOnly]\u000a  const unsigned long TYPE_IMAGE       = 1;\u000a  [ChromeOnly]\u000a  const unsigned long TYPE_PLUGIN      = 2;\u000a  [ChromeOnly]\u000a  const unsigned long TYPE_FAKE_PLUGIN = 3;\u000a  [ChromeOnly]\u000a  const unsigned long TYPE_DOCUMENT    = 4;\u000a  [ChromeOnly]\u000a  const unsigned long TYPE_NULL        = 5;\u000a\u000a  // The content type is not supported (e.g. plugin not installed)\u000a  [ChromeOnly]\u000a  const unsigned long PLUGIN_UNSUPPORTED          = 0;\u000a  // Showing alternate content\u000a  [ChromeOnly]\u000a  const unsigned long PLUGIN_ALTERNATE            = 1;\u000a  // The plugin exists, but is disabled\u000a  [ChromeOnly]\u000a  const unsigned long PLUGIN_DISABLED             = 2;\u000a  // The plugin is blocklisted and disabled\u000a  [ChromeOnly]\u000a  const unsigned long PLUGIN_BLOCKLISTED          = 3;\u000a  // The plugin is considered outdated, but not disabled\u000a  [ChromeOnly]\u000a  const unsigned long PLUGIN_OUTDATED             = 4;\u000a  // The plugin has crashed\u000a  [ChromeOnly]\u000a  const unsigned long PLUGIN_CRASHED              = 5;\u000a  // Suppressed by security policy\u000a  [ChromeOnly]\u000a  const unsigned long PLUGIN_SUPPRESSED           = 6;\u000a  // Blocked by content policy\u000a  [ChromeOnly]\u000a  const unsigned long PLUGIN_USER_DISABLED        = 7;\u000a  /// ** All values >= PLUGIN_CLICK_TO_PLAY are plugin placeholder types that\u000a  ///    would be replaced by a real plugin if activated (playPlugin())\u000a  /// ** Furthermore, values >= PLUGIN_CLICK_TO_PLAY and\u000a  ///    <= PLUGIN_VULNERABLE_NO_UPDATE are click-to-play types.\u000a  // The plugin is disabled until the user clicks on it\u000a  [ChromeOnly]\u000a  const unsigned long PLUGIN_CLICK_TO_PLAY        = 8;\u000a  // The plugin is vulnerable (update available)\u000a  [ChromeOnly]\u000a  const unsigned long PLUGIN_VULNERABLE_UPDATABLE = 9;\u000a  // The plugin is vulnerable (no update available)\u000a  [ChromeOnly]\u000a  const unsigned long PLUGIN_VULNERABLE_NO_UPDATE = 10;\u000a\u000a  /**\u000a   * The actual mime type (the one we got back from the network\u000a   * request) for the element.\u000a   */\u000a  [ChromeOnly]\u000a  readonly attribute DOMString actualType;\u000a\u000a  /**\u000a   * Gets the type of the content that's currently loaded. See\u000a   * the constants above for the list of possible values.\u000a   */\u000a  [ChromeOnly]\u000a  readonly attribute unsigned long displayedType;\u000a\u000a  /**\u000a   * Gets the content type that corresponds to the give MIME type.  See the\u000a   * constants above for the list of possible values.  If nothing else fits,\u000a   * TYPE_NULL will be returned.\u000a   */\u000a  [ChromeOnly]\u000a  unsigned long getContentTypeForMIMEType(DOMString aMimeType);\u000a\u000a\u000a  [ChromeOnly]\u000a  sequence<MozPluginParameter> getPluginAttributes();\u000a\u000a  [ChromeOnly]\u000a  sequence<MozPluginParameter> getPluginParameters();\u000a\u000a  /**\u000a   * This method will play a plugin that has been stopped by the click-to-play\u000a   * feature.\u000a   */\u000a  [ChromeOnly, Throws, NeedsCallerType]\u000a  void playPlugin();\u000a\u000a  /**\u000a   * Forces a re-evaluation and reload of the tag, optionally invalidating its\u000a   * click-to-play state.  This can be used when the MIME type that provides a\u000a   * type has changed, for instance, to force the tag to re-evalulate the\u000a   * handler to use.\u000a   */\u000a  [ChromeOnly, Throws]\u000a  void reload(boolean aClearActivation);\u000a\u000a  /**\u000a   * This attribute will return true if the current content type has been\u000a   * activated, either explicitly or by passing checks that would have it be\u000a   * click-to-play.\u000a   */\u000a  [ChromeOnly]\u000a  readonly attribute boolean activated;\u000a\u000a  /**\u000a   * The URL of the data/src loaded in the object. This may be null (i.e.\u000a   * an <embed> with no src).\u000a   */\u000a  [ChromeOnly]\u000a  readonly attribute URI? srcURI;\u000a\u000a  [ChromeOnly]\u000a  readonly attribute unsigned long defaultFallbackType;\u000a\u000a  [ChromeOnly]\u000a  readonly attribute unsigned long pluginFallbackType;\u000a\u000a  /**\u000a   * If this object currently owns a running plugin, regardless of whether or\u000a   * not one is pending spawn/despawn.\u000a   */\u000a  [ChromeOnly]\u000a  readonly attribute boolean hasRunningPlugin;\u000a\u000a  /**\u000a   * Disable the use of fake plugins and reload the tag if necessary\u000a   */\u000a  [ChromeOnly, Throws]\u000a  void skipFakePlugins();\u000a\u000a  [ChromeOnly, Throws, NeedsCallerType]\u000a  readonly attribute unsigned long runID;\u000a};\u000a\u000a/**\u000a * Name:Value pair type used for passing parameters to NPAPI or javascript\u000a * plugins.\u000a */\u000adictionary MozPluginParameter {\u000a  DOMString name = \"\";\u000a  DOMString value = \"\";\u000a};\u000a\u000aHTMLObjectElement implements MozImageLoadingContent;\u000aHTMLObjectElement implements MozFrameLoaderOwner;\u000aHTMLObjectElement implements MozObjectLoadingContent;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLOptGroupElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLOptGroupElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-optgroup-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLOptGroupElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean disabled;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString label;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLOptionElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLOptionElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-option-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor, NamedConstructor=Option(optional DOMString text = \"\", optional DOMString value, optional boolean defaultSelected = false, optional boolean selected = false)]\u000ainterface HTMLOptionElement : HTMLElement {\u000a  [CEReactions, SetterThrows]\u000a  attribute boolean disabled;\u000a  readonly attribute HTMLFormElement? form;\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString label;\u000a  [CEReactions, SetterThrows]\u000a  attribute boolean defaultSelected;\u000a  attribute boolean selected;\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString value;\u000a\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString text;\u000a  readonly attribute long index;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLOptionsCollection.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLOptionsCollection.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-html5-20120329/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface HTMLOptionsCollection : HTMLCollection {\u000a  [CEReactions, SetterThrows]\u000a  attribute unsigned long length;\u000a  [CEReactions, Throws]\u000a  setter void (unsigned long index, HTMLOptionElement? option);\u000a  [CEReactions, Throws]\u000a  void add((HTMLOptionElement or HTMLOptGroupElement) element, optional (HTMLElement or long)? before = null);\u000a  [CEReactions, Throws]\u000a  void remove(long index);\u000a  [Throws]\u000a  attribute long selectedIndex;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLOutputElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLOutputElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-output-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-output-element\u000a[HTMLConstructor]\u000ainterface HTMLOutputElement : HTMLElement {\u000a  [PutForwards=value, Constant]\u000a  readonly attribute DOMTokenList htmlFor;\u000a  readonly attribute HTMLFormElement? form;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString name;\u000a\u000a  [Constant]\u000a  readonly attribute DOMString type;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString defaultValue;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString value;\u000a\u000a  readonly attribute boolean willValidate;\u000a  readonly attribute ValidityState validity;\u000a  [Throws]\u000a  readonly attribute DOMString validationMessage;\u000a  boolean checkValidity();\u000a  boolean reportValidity();\u000a  void setCustomValidity(DOMString error);\u000a\u000a  readonly attribute NodeList labels;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLPreElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLPreElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-pre-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-pre-element\u000a[HTMLConstructor]\u000ainterface HTMLPreElement : HTMLElement {\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLPreElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute long width;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLProgressElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLProgressElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-progress-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLProgressElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute double value;\u000a           [CEReactions, SetterThrows]\u000a           attribute double max;\u000a  readonly attribute double position;\u000a  readonly attribute NodeList labels;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLQuoteElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLQuoteElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-blockquote-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-blockquote-element\u000a[HTMLConstructor]\u000ainterface HTMLQuoteElement : HTMLElement {\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString cite;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLScriptElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLScriptElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-script-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLScriptElement : HTMLElement {\u000a  [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows]\u000a  attribute DOMString src;\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString type;\u000a  [CEReactions, SetterThrows, Pref=\"dom.moduleScripts.enabled\"]\u000a  attribute boolean noModule;\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString charset;\u000a  [CEReactions, SetterThrows]\u000a  attribute boolean async;\u000a  [CEReactions, SetterThrows]\u000a  attribute boolean defer;\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString? crossOrigin;\u000a  [CEReactions, Throws]\u000a  attribute DOMString text;\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLScriptElement {\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString event;\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString htmlFor;\u000a};\u000a\u000a// https://w3c.github.io/webappsec/specs/subresourceintegrity/#htmlscriptelement-1\u000apartial interface HTMLScriptElement {\u000a  [CEReactions, SetterThrows]\u000a  attribute DOMString integrity;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLSelectElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLSelectElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/html/#the-select-element\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLSelectElement : HTMLElement {\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute boolean autofocus;\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute DOMString autocomplete;\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute boolean disabled;\u000a  [Pure]\u000a  readonly attribute HTMLFormElement? form;\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute boolean multiple;\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute DOMString name;\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute boolean required;\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute unsigned long size;\u000a\u000a  [Pure]\u000a  readonly attribute DOMString type;\u000a\u000a  [Constant]\u000a  readonly attribute HTMLOptionsCollection options;\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute unsigned long length;\u000a  getter Element? item(unsigned long index);\u000a  HTMLOptionElement? namedItem(DOMString name);\u000a  [CEReactions, Throws]\u000a  void add((HTMLOptionElement or HTMLOptGroupElement) element, optional (HTMLElement or long)? before = null);\u000a  [CEReactions]\u000a  void remove(long index);\u000a  [CEReactions, Throws]\u000a  setter void (unsigned long index, HTMLOptionElement? option);\u000a\u000a  readonly attribute HTMLCollection selectedOptions;\u000a  [SetterThrows, Pure]\u000a  attribute long selectedIndex;\u000a  [Pure]\u000a  attribute DOMString value;\u000a\u000a  readonly attribute boolean willValidate;\u000a  readonly attribute ValidityState validity;\u000a  [Throws]\u000a  readonly attribute DOMString validationMessage;\u000a  boolean checkValidity();\u000a  boolean reportValidity();\u000a  void setCustomValidity(DOMString error);\u000a\u000a  readonly attribute NodeList labels;\u000a\u000a  // https://www.w3.org/Bugs/Public/show_bug.cgi?id=20720\u000a  [CEReactions]\u000a  void remove();\u000a};\u000a\u000a// Chrome only interface\u000a\u000apartial interface HTMLSelectElement {\u000a  [ChromeOnly]\u000a  attribute boolean openInParentProcess;\u000a  [ChromeOnly]\u000a  AutocompleteInfo getAutocompleteInfo();\u000a  [ChromeOnly]\u000a  attribute DOMString previewValue;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLSlotElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLSlotElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://html.spec.whatwg.org/multipage/forms.html#the-dialog-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[Func=\"nsDocument::IsShadowDOMEnabled\", Exposed=Window, HTMLConstructor]\u000ainterface HTMLSlotElement : HTMLElement {\u000a  [CEReactions, SetterThrows] attribute DOMString name;\u000a  sequence<Node> assignedNodes(optional AssignedNodesOptions options);\u000a};\u000a\u000adictionary AssignedNodesOptions {\u000a  boolean flatten = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLSourceElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLSourceElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-source-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLSourceElement : HTMLElement {\u000a           [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows]\u000a           attribute DOMString src;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString type;\u000a};\u000a\u000apartial interface HTMLSourceElement {\u000a           [CEReactions, SetterNeedsSubjectPrincipal=NonSystem, SetterThrows]\u000a           attribute DOMString srcset;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString sizes;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString media;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLSpanElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLSpanElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-span-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-span-element\u000a[HTMLConstructor]\u000ainterface HTMLSpanElement : HTMLElement {};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLStyleElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLStyleElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-style-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLStyleElement : HTMLElement {\u000a           [Pure]\u000a           attribute boolean disabled;\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString media;\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString type;\u000a           [SetterThrows, Pure, Pref=\"layout.css.scoped-style.enabled\"]\u000a           attribute boolean scoped;\u000a};\u000aHTMLStyleElement implements LinkStyle;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableCaptionElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableCaptionElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTableCaptionElement : HTMLElement {};\u000a\u000apartial interface HTMLTableCaptionElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableCellElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableCellElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTableCellElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute unsigned long colSpan;\u000a           [CEReactions, SetterThrows]\u000a           attribute unsigned long rowSpan;\u000a  //[PutForwards=value] readonly attribute DOMTokenList headers;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString headers;\u000a  readonly attribute long cellIndex;\u000a\u000a  // Mozilla-specific extensions\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString abbr;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString scope;\u000a};\u000a\u000apartial interface HTMLTableCellElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString axis;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString height;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString width;\u000a\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString ch;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString chOff;\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean noWrap;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString vAlign;\u000a\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a           attribute DOMString bgColor;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableColElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableColElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTableColElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute unsigned long span;\u000a};\u000a\u000apartial interface HTMLTableColElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString ch;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString chOff;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString vAlign;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString width;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTableElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute HTMLTableCaptionElement? caption;\u000a  HTMLElement createCaption();\u000a  [CEReactions]\u000a  void deleteCaption();\u000a           [CEReactions, SetterThrows]\u000a           attribute HTMLTableSectionElement? tHead;\u000a  HTMLElement createTHead();\u000a  [CEReactions]\u000a  void deleteTHead();\u000a           [CEReactions, SetterThrows]\u000a           attribute HTMLTableSectionElement? tFoot;\u000a  HTMLElement createTFoot();\u000a  [CEReactions]\u000a  void deleteTFoot();\u000a  readonly attribute HTMLCollection tBodies;\u000a  HTMLElement createTBody();\u000a  readonly attribute HTMLCollection rows;\u000a  [Throws]\u000a  HTMLElement insertRow(optional long index = -1);\u000a  [CEReactions, Throws]\u000a  void deleteRow(long index);\u000a  //         attribute boolean sortable;\u000a  //void stopSorting();\u000a};\u000a\u000apartial interface HTMLTableElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString border;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString frame;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString rules;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString summary;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString width;\u000a\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a           attribute DOMString bgColor;\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a           attribute DOMString cellPadding;\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a           attribute DOMString cellSpacing;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableRowElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableRowElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTableRowElement : HTMLElement {\u000a  readonly attribute long rowIndex;\u000a  readonly attribute long sectionRowIndex;\u000a  readonly attribute HTMLCollection cells;\u000a  [Throws]\u000a  HTMLElement insertCell(optional long index = -1);\u000a  [CEReactions, Throws]\u000a  void deleteCell(long index);\u000a};\u000a\u000apartial interface HTMLTableRowElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString ch;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString chOff;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString vAlign;\u000a\u000a  [CEReactions, TreatNullAs=EmptyString, SetterThrows]\u000a           attribute DOMString bgColor;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableSectionElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTableSectionElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTableSectionElement : HTMLElement {\u000a  readonly attribute HTMLCollection rows;\u000a  [Throws]\u000a  HTMLElement insertRow(optional long index = -1);\u000a  [CEReactions, Throws]\u000a  void deleteRow(long index);\u000a};\u000a\u000apartial interface HTMLTableSectionElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString ch;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString chOff;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString vAlign;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTemplateElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTemplateElement.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTemplateElement : HTMLElement {\u000a    readonly attribute DocumentFragment content;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTextAreaElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTextAreaElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-textarea-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000ainterface nsIEditor;\u000ainterface XULControllers;\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTextAreaElement : HTMLElement {\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString autocomplete;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean autofocus;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute unsigned long cols;\u000a           // attribute DOMString dirName;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean disabled;\u000a  [Pure]\u000a  readonly attribute HTMLFormElement? form;\u000a           // attribute DOMString inputMode;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute long maxLength;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute long minLength;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString name;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString placeholder;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean readOnly;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute boolean required;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute unsigned long rows;\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString wrap;\u000a\u000a  [Constant]\u000a  readonly attribute DOMString type;\u000a  [CEReactions, Throws, Pure]\u000a           attribute DOMString defaultValue;\u000a  [CEReactions, SetterThrows, TreatNullAs=EmptyString] attribute DOMString value;\u000a  readonly attribute unsigned long textLength;\u000a\u000a  readonly attribute boolean willValidate;\u000a  readonly attribute ValidityState validity;\u000a  [Throws]\u000a  readonly attribute DOMString validationMessage;\u000a  boolean checkValidity();\u000a  boolean reportValidity();\u000a  void setCustomValidity(DOMString error);\u000a\u000a  readonly attribute NodeList labels;\u000a\u000a  void select();\u000a  [Throws]\u000a           attribute unsigned long? selectionStart;\u000a  [Throws]\u000a           attribute unsigned long? selectionEnd;\u000a  [Throws]\u000a           attribute DOMString? selectionDirection;\u000a  [Throws]\u000a  void setRangeText(DOMString replacement);\u000a  [Throws]\u000a  void setRangeText(DOMString replacement, unsigned long start,\u000a    unsigned long end, optional SelectionMode selectionMode = \"preserve\");\u000a  [Throws]\u000a  void setSelectionRange(unsigned long start, unsigned long end, optional DOMString direction);\u000a};\u000a\u000apartial interface HTMLTextAreaElement {\u000a  // Chrome-only Mozilla extensions\u000a\u000a  [Throws, ChromeOnly]\u000a  readonly attribute XULControllers controllers;\u000a};\u000a\u000apartial interface HTMLTextAreaElement {\u000a  // Mirrored chrome-only nsIDOMNSEditableElement methods.  Please make sure\u000a  // to update this list if nsIDOMNSEditableElement changes.\u000a\u000a  [ChromeOnly]\u000a  readonly attribute nsIEditor? editor;\u000a\u000a  // This is similar to set .value on nsIDOMInput/TextAreaElements, but\u000a  // handling of the value change is closer to the normal user input, so\u000a  // 'change' event for example will be dispatched when focusing out the\u000a  // element.\u000a  [ChromeOnly]\u000a  void setUserInput(DOMString input);\u000a};\u000a\u000apartial interface HTMLTextAreaElement {\u000a  [ChromeOnly]\u000a  attribute DOMString previewValue;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTimeElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTimeElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-time-element\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTimeElement : HTMLElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString dateTime;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTitleElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTitleElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-title-element\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTitleElement : HTMLElement {\u000a           [CEReactions, Throws]\u000a           attribute DOMString text;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTrackElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLTrackElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-track-element\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTrackElement : HTMLElement {\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute DOMString kind;\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute DOMString src;\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute DOMString srclang;\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute DOMString label;\u000a  [CEReactions, SetterThrows, Pure]\u000a  attribute boolean default;\u000a\u000a  const unsigned short NONE = 0;\u000a  const unsigned short LOADING = 1;\u000a  const unsigned short LOADED = 2;\u000a  const unsigned short ERROR = 3;\u000a  readonly attribute unsigned short readyState;\u000a\u000a  readonly attribute TextTrack? track;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLUListElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLUListElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-ul-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-ul-element\u000a[HTMLConstructor]\u000ainterface HTMLUListElement : HTMLElement {\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLUListElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute boolean compact;\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLVideoElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLVideoElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-video-element\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLVideoElement : HTMLMediaElement {\u000a  [CEReactions, SetterThrows]\u000a           attribute unsigned long width;\u000a  [CEReactions, SetterThrows]\u000a           attribute unsigned long height;\u000a  readonly attribute unsigned long videoWidth;\u000a  readonly attribute unsigned long videoHeight;\u000a  [CEReactions, SetterThrows]\u000a           attribute DOMString poster;\u000a};\u000a\u000apartial interface HTMLVideoElement {\u000a  // A count of the number of video frames that have demuxed from the media\u000a  // resource. If we were playing perfectly, we'd be able to paint this many\u000a  // frames.\u000a  readonly attribute unsigned long mozParsedFrames;\u000a\u000a  // A count of the number of frames that have been decoded. We may drop\u000a  // frames if the decode is taking too much time.\u000a  readonly attribute unsigned long mozDecodedFrames;\u000a\u000a  // A count of the number of frames that have been presented to the rendering\u000a  // pipeline. We may drop frames if they arrive late at the renderer.\u000a  readonly attribute unsigned long mozPresentedFrames;\u000a\u000a  // Number of presented frames which were painted on screen.\u000a  readonly attribute unsigned long mozPaintedFrames;\u000a\u000a  // Time which the last painted video frame was late by, in seconds.\u000a  readonly attribute double mozFrameDelay;\u000a\u000a  // True if the video has an audio track available.\u000a  readonly attribute boolean mozHasAudio;\u000a\u000a  // Attributes for builtin video controls to lock screen orientation.\u000a  // True if video controls should lock orientation when fullscreen.\u000a  [Pref=\"media.videocontrols.lock-video-orientation\", Func=\"IsChromeOrXBL\"]\u000a    readonly attribute boolean mozOrientationLockEnabled;\u000a  // True if screen orientation is locked by video controls.\u000a  [Pref=\"media.videocontrols.lock-video-orientation\", Func=\"IsChromeOrXBL\"]\u000a    attribute boolean mozIsOrientationLocked;\u000a};\u000a\u000a// https://dvcs.w3.org/hg/html-media/raw-file/default/media-source/media-source.html#idl-def-HTMLVideoElement\u000apartial interface HTMLVideoElement {\u000a  [Func=\"mozilla::dom::MediaSource::Enabled\", NewObject]\u000a  VideoPlaybackQuality getVideoPlaybackQuality();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HashChangeEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HashChangeEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional HashChangeEventInit eventInitDict), LegacyEventInit]\u000ainterface HashChangeEvent : Event\u000a{\u000a  readonly attribute DOMString oldURL;\u000a  readonly attribute DOMString newURL;\u000a\u000a  void initHashChangeEvent(DOMString typeArg,\u000a                           optional boolean canBubbleArg = false,\u000a                           optional boolean cancelableArg = false,\u000a                           optional DOMString oldURLArg = \"\",\u000a                           optional DOMString newURLArg = \"\");\u000a};\u000a\u000adictionary HashChangeEventInit : EventInit\u000a{\u000a  DOMString oldURL = \"\";\u000a  DOMString newURL = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Headers.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Headers.webidl"},contents:"/* -*- Mode: IDL; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* vim: set ts=8 sts=2 et sw=2 tw=80: */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://fetch.spec.whatwg.org/#headers-class\u000a */\u000a\u000atypedef (Headers or sequence<sequence<ByteString>> or record<ByteString, ByteString>) HeadersInit;\u000a\u000aenum HeadersGuardEnum {\u000a  \"none\",\u000a  \"request\",\u000a  \"request-no-cors\",\u000a  \"response\",\u000a  \"immutable\"\u000a};\u000a\u000a[Constructor(optional HeadersInit init),\u000a Exposed=(Window,Worker)]\u000ainterface Headers {\u000a  [Throws] void append(ByteString name, ByteString value);\u000a  [Throws] void delete(ByteString name);\u000a  [Throws] ByteString? get(ByteString name);\u000a  [Throws] boolean has(ByteString name);\u000a  [Throws] void set(ByteString name, ByteString value);\u000a  iterable<ByteString, ByteString>;\u000a\u000a  // Used to test different guard states from mochitest.\u000a  // Note: Must be set prior to populating headers or will throw.\u000a  [ChromeOnly, SetterThrows] attribute HeadersGuardEnum guard;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HeapSnapshot.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HeapSnapshot.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * A HeapSnapshot represents a snapshot of the heap graph\u000a */\u000a[ChromeOnly, Exposed=(Window,System,Worker)]\u000ainterface HeapSnapshot {\u000a  /**\u000a   * A time stamp of when the heap snapshot was taken, if available. Units are\u000a   * microseconds since midnight (00:00:00) 1 January 1970 UTC.\u000a   */\u000a  readonly attribute unsigned long long? creationTime;\u000a\u000a  /**\u000a   * Take a census of the heap snapshot.\u000a   *\u000a   * This is the same as |Debugger.Memory.prototype.takeCensus|, but operates on\u000a   * the offline heap snapshot's serialized heap graph rather than the live heap\u000a   * graph. The same optional configuration options that can be passed to that\u000a   * function can be passed here.\u000a   *\u000a   * The returned value is determined by the `\"breakdown\"` option used, and is\u000a   * usually a `Map`, `Object`, or `Array`. For example, the following breakdown\u000a   *\u000a   *     {\u000a   *       by: \"coarseType\",\u000a   *       objects: { by: \"objectClass\" },\u000a   *       other:   { by: \"internalType\" }\u000a   *     }\u000a   *\u000a   * produces a result like this:\u000a   *\u000a   *     {\u000a   *       \"objects\": {\u000a   *         \"Function\":         { \"count\": 404, \"bytes\": 37328 },\u000a   *         \"Object\":           { \"count\": 11,  \"bytes\": 1264 },\u000a   *         \"Debugger\":         { \"count\": 1,   \"bytes\": 416 },\u000a   *         \"ScriptSource\":     { \"count\": 1,   \"bytes\": 64 },\u000a   *         // ... omitted for brevity...\u000a   *       },\u000a   *       \"scripts\":            { \"count\": 1,   \"bytes\": 0 },\u000a   *       \"strings\":            { \"count\": 701, \"bytes\": 49080 },\u000a   *       \"other\": {\u000a   *         \"js::Shape\":        { \"count\": 450, \"bytes\": 0 },\u000a   *         \"js::BaseShape\":    { \"count\": 21,  \"bytes\": 0 },\u000a   *         \"js::ObjectGroup\":  { \"count\": 17,  \"bytes\": 0 }\u000a   *       }\u000a   *     }\u000a   *\u000a   * See the `takeCensus` section of the `js/src/doc/Debugger/Debugger.Memory.md`\u000a   * file for detailed documentation.\u000a   */\u000a  [Throws]\u000a  any takeCensus(object? options);\u000a\u000a  /**\u000a   * Describe `node` with the specified `breakdown`. See the comment above\u000a   * `takeCensus` or `js/src/doc/Debugger/Debugger.Memory.md` for detailed\u000a   * documentation on breakdowns.\u000a   *\u000a   * Throws an error when `node` is not the id of a node in the heap snapshot,\u000a   * or if the breakdown is invalid.\u000a   */\u000a  [Throws]\u000a  any describeNode(object breakdown, NodeId node);\u000a\u000a  /**\u000a   * Compute the dominator tree for this heap snapshot.\u000a   *\u000a   * @see DominatorTree.webidl\u000a   */\u000a  [Throws]\u000a  DominatorTree computeDominatorTree();\u000a\u000a  /**\u000a   * Find the shortest retaining paths from the node associated with the ID\u000a   * `start` to each node associated with the IDs in `targets`. Find at most\u000a   * `maxNumPaths` retaining paths for each target node.\u000a   *\u000a   * The return value is a Map object mapping from each target node ID to an\u000a   * array of retaining paths. The array may be empty if we did not find any\u000a   * retaining paths.\u000a   *\u000a   * A path is an array of objects of the form:\u000a   *\u000a   *     {\u000a   *         predecessor: <node ID>,\u000a   *         edge: <string or null>,\u000a   *     }\u000a   *\u000a   * The first `predecessor` will always be `start`. The last edge in the path\u000a   * leads to the `target` node that is mapped to the path; the `target` does\u000a   * not appear as a `predecessor` in the path.\u000a   *\u000a   * Throws when `start` or any of the elements of `targets` are not an ID of a\u000a   * node in the snapshot, or if we encounter an out of memory exception.\u000a   */\u000a  [Throws]\u000a  object computeShortestPaths(NodeId start, sequence<NodeId> targets,\u000a                              unsigned long long maxNumPaths);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HiddenPluginEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HiddenPluginEvent.webidl"},contents:"interface PluginTag;\u000d\u000a\u000d\u000a[Constructor(DOMString type, optional HiddenPluginEventInit eventInit), ChromeOnly]\u000d\u000ainterface HiddenPluginEvent : Event\u000d\u000a{\u000d\u000a  readonly attribute PluginTag? tag;\u000d\u000a};\u000d\u000a\u000d\u000adictionary HiddenPluginEventInit : EventInit\u000d\u000a{\u000d\u000a  PluginTag? tag = null;\u000d\u000a};\u000d\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/History.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/History.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-history-interface\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000aenum ScrollRestoration { \"auto\", \"manual\" };\u000a\u000ainterface History {\u000a  [Throws]\u000a  readonly attribute unsigned long length;\u000a  [Throws]\u000a  attribute ScrollRestoration scrollRestoration;\u000a  [Throws]\u000a  readonly attribute any state;\u000a  [Throws]\u000a  void go(optional long delta = 0);\u000a  [Throws]\u000a  void back();\u000a  [Throws]\u000a  void forward();\u000a  [Throws]\u000a  void pushState(any data, DOMString title, optional DOMString? url = null);\u000a  [Throws]\u000a  void replaceState(any data, DOMString title, optional DOMString? url = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBCursor.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBCursor.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBCursorDirection\u000a */\u000a\u000aenum IDBCursorDirection {\u000a    \"next\",\u000a    \"nextunique\",\u000a    \"prev\",\u000a    \"prevunique\"\u000a};\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface IDBCursor {\u000a    readonly    attribute (IDBObjectStore or IDBIndex) source;\u000a\u000a    readonly    attribute IDBCursorDirection           direction;\u000a\u000a    [Throws]\u000a    readonly    attribute any                          key;\u000a\u000a    [Throws]\u000a    readonly    attribute any                          primaryKey;\u000a\u000a    [Throws]\u000a    IDBRequest update (any value);\u000a\u000a    [Throws]\u000a    void       advance ([EnforceRange] unsigned long count);\u000a\u000a    [Throws]\u000a    void       continue (optional any key);\u000a\u000a    [Throws]\u000a    void       continuePrimaryKey(any key, any primaryKey);\u000a\u000a    [Throws]\u000a    IDBRequest delete ();\u000a};\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface IDBCursorWithValue : IDBCursor {\u000a    [Throws]\u000a    readonly    attribute any value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBDatabase.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBDatabase.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBObjectStoreParameters\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface IDBDatabase : EventTarget {\u000a    readonly    attribute DOMString          name;\u000a    readonly    attribute unsigned long long version;\u000a\u000a    readonly    attribute DOMStringList      objectStoreNames;\u000a\u000a    [Throws]\u000a    IDBObjectStore createObjectStore (DOMString name, optional IDBObjectStoreParameters optionalParameters);\u000a\u000a    [Throws]\u000a    void           deleteObjectStore (DOMString name);\u000a\u000a    [Throws]\u000a    IDBTransaction transaction ((DOMString or sequence<DOMString>) storeNames,\u000a                                optional IDBTransactionMode mode = \"readonly\");\u000a\u000a    void           close ();\u000a\u000a                attribute EventHandler       onabort;\u000a                attribute EventHandler       onclose;\u000a                attribute EventHandler       onerror;\u000a                attribute EventHandler       onversionchange;\u000a};\u000a\u000apartial interface IDBDatabase {\u000a    [Func=\"mozilla::dom::IndexedDatabaseManager::ExperimentalFeaturesEnabled\"]\u000a    readonly    attribute StorageType        storage;\u000a\u000a    [Exposed=Window, Throws, UseCounter]\u000a    IDBRequest createMutableFile (DOMString name, optional DOMString type);\u000a\u000a    // this is deprecated due to renaming in the spec\u000a    [Exposed=Window, Throws, UseCounter]\u000a    IDBRequest mozCreateFileHandle (DOMString name, optional DOMString type); // now createMutableFile\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBFactory.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBFactory.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBFactory\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface Principal;\u000a\u000adictionary IDBOpenDBOptions\u000a{\u000a  [EnforceRange] unsigned long long version;\u000a  StorageType storage;\u000a};\u000a\u000a/**\u000a * Interface that defines the indexedDB property on a window.  See\u000a * http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBFactory\u000a * for more information.\u000a */\u000a[Exposed=(Window,Worker,System)]\u000ainterface IDBFactory {\u000a  [Throws, NeedsCallerType]\u000a  IDBOpenDBRequest\u000a  open(DOMString name,\u000a       [EnforceRange] unsigned long long version);\u000a\u000a  [Throws, NeedsCallerType]\u000a  IDBOpenDBRequest\u000a  open(DOMString name,\u000a       optional IDBOpenDBOptions options);\u000a\u000a  [Throws, NeedsCallerType]\u000a  IDBOpenDBRequest\u000a  deleteDatabase(DOMString name,\u000a                 optional IDBOpenDBOptions options);\u000a\u000a  [Throws]\u000a  short\u000a  cmp(any first,\u000a      any second);\u000a\u000a  [Throws, ChromeOnly, NeedsCallerType]\u000a  IDBOpenDBRequest\u000a  openForPrincipal(Principal principal,\u000a                   DOMString name,\u000a                   [EnforceRange] unsigned long long version);\u000a\u000a  [Throws, ChromeOnly, NeedsCallerType]\u000a  IDBOpenDBRequest\u000a  openForPrincipal(Principal principal,\u000a                   DOMString name,\u000a                   optional IDBOpenDBOptions options);\u000a\u000a  [Throws, ChromeOnly, NeedsCallerType]\u000a  IDBOpenDBRequest\u000a  deleteForPrincipal(Principal principal,\u000a                     DOMString name,\u000a                     optional IDBOpenDBOptions options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBFileHandle.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBFileHandle.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtaone at http://mozilla.org/MPL/2.0/. */\u000a\u000adictionary IDBFileMetadataParameters\u000a{\u000a  boolean size = true;\u000a  boolean lastModified = true;\u000a};\u000a\u000a[Exposed=(Window,System)]\u000ainterface IDBFileHandle : EventTarget\u000a{\u000a  readonly attribute IDBMutableFile? mutableFile;\u000a  // this is deprecated due to renaming in the spec\u000a  readonly attribute IDBMutableFile? fileHandle; // now mutableFile\u000a  readonly attribute FileMode mode;\u000a  readonly attribute boolean active;\u000a  attribute unsigned long long? location;\u000a\u000a  [Throws]\u000a  IDBFileRequest? getMetadata(optional IDBFileMetadataParameters parameters);\u000a  [Throws]\u000a  IDBFileRequest? readAsArrayBuffer(unsigned long long size);\u000a  [Throws]\u000a  IDBFileRequest? readAsText(unsigned long long size,\u000a                             optional DOMString? encoding = null);\u000a\u000a  [Throws]\u000a  IDBFileRequest? write((DOMString or ArrayBuffer or ArrayBufferView or Blob) value);\u000a  [Throws]\u000a  IDBFileRequest? append((DOMString or ArrayBuffer or ArrayBufferView or Blob) value);\u000a  [Throws]\u000a  IDBFileRequest? truncate(optional unsigned long long size);\u000a  [Throws]\u000a  IDBFileRequest? flush();\u000a  [Throws]\u000a  void abort();\u000a\u000a  attribute EventHandler oncomplete;\u000a  attribute EventHandler onabort;\u000a  attribute EventHandler onerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBFileRequest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBFileRequest.webidl"},contents:"/* -*- Mode: IDL; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* vim: set ts=2 et sw=2 tw=80: */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Exposed=(Window,System)]\u000ainterface IDBFileRequest : DOMRequest {\u000a  readonly attribute IDBFileHandle? fileHandle;\u000a  // this is deprecated due to renaming in the spec\u000a  readonly attribute IDBFileHandle? lockedFile; // now fileHandle\u000a\u000a  attribute EventHandler onprogress;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBIndex.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBIndex.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBIndexParameters\u000a */\u000a\u000adictionary IDBIndexParameters {\u000a    boolean unique = false;\u000a    boolean multiEntry = false;\u000a    // <null>:   Not locale-aware, uses normal JS sorting.\u000a    // <string>: Always sorted based on the rules of the specified\u000a    //           locale (e.g. \"en-US\", etc.).\u000a    // \"auto\":   Sorted by the platform default, may change based on\u000a    //           user agent options.\u000a    DOMString? locale = null;\u000a};\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface IDBIndex {\u000a    [SetterThrows]\u000a    attribute DOMString name;\u000a\u000a    readonly    attribute IDBObjectStore objectStore;\u000a\u000a    [Throws]\u000a    readonly    attribute any            keyPath;\u000a\u000a    readonly    attribute boolean        multiEntry;\u000a    readonly    attribute boolean        unique;\u000a\u000a    // <null>:   Not locale-aware, uses normal JS sorting.\u000a    // <string>: Sorted based on the rules of the specified locale.\u000a    //           Note: never returns \"auto\", only the current locale.\u000a    [Func=\"mozilla::dom::IndexedDatabaseManager::ExperimentalFeaturesEnabled\"]\u000a    readonly attribute DOMString? locale;\u000a\u000a    [Func=\"mozilla::dom::IndexedDatabaseManager::ExperimentalFeaturesEnabled\"]\u000a    readonly attribute boolean isAutoLocale;\u000a\u000a    [Throws]\u000a    IDBRequest openCursor (optional any range, optional IDBCursorDirection direction = \"next\");\u000a\u000a    [Throws]\u000a    IDBRequest openKeyCursor (optional any range, optional IDBCursorDirection direction = \"next\");\u000a\u000a    [Throws]\u000a    IDBRequest get (any key);\u000a\u000a    [Throws]\u000a    IDBRequest getKey (any key);\u000a\u000a    [Throws]\u000a    IDBRequest count (optional any key);\u000a};\u000a\u000apartial interface IDBIndex {\u000a    [Throws]\u000a    IDBRequest mozGetAll (optional any key, [EnforceRange] optional unsigned long limit);\u000a\u000a    [Throws]\u000a    IDBRequest mozGetAllKeys (optional any key, [EnforceRange] optional unsigned long limit);\u000a\u000a    [Throws]\u000a    IDBRequest getAll (optional any key, [EnforceRange] optional unsigned long limit);\u000a\u000a    [Throws]\u000a    IDBRequest getAllKeys (optional any key, [EnforceRange] optional unsigned long limit);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBKeyRange.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBKeyRange.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a/*\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface IDBKeyRange {\u000a  [Throws]\u000a  readonly attribute any     lower;\u000a  [Throws]\u000a  readonly attribute any     upper;\u000a  [Constant]\u000a  readonly attribute boolean lowerOpen;\u000a  [Constant]\u000a  readonly attribute boolean upperOpen;\u000a  [Throws]\u000a  boolean includes(any key);\u000a\u000a\u000a  [NewObject, Throws]\u000a  static IDBKeyRange only (any value);\u000a  [NewObject, Throws]\u000a  static IDBKeyRange lowerBound (any lower, optional boolean open = false);\u000a  [NewObject, Throws]\u000a  static IDBKeyRange upperBound (any upper, optional boolean open = false);\u000a  [NewObject, Throws]\u000a  static IDBKeyRange bound (any lower, any upper, optional boolean lowerOpen = false, optional boolean upperOpen = false);\u000a};\u000a\u000a[Exposed=(Window,Worker,System),\u000a Func=\"mozilla::dom::IndexedDatabaseManager::ExperimentalFeaturesEnabled\"]\u000ainterface IDBLocaleAwareKeyRange : IDBKeyRange {\u000a  [NewObject, Throws]\u000a  static IDBLocaleAwareKeyRange bound (any lower, any upper, optional boolean lowerOpen = false, optional boolean upperOpen = false);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBMutableFile.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBMutableFile.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Exposed=(Window,System)]\u000ainterface IDBMutableFile : EventTarget {\u000a  readonly attribute DOMString name;\u000a  readonly attribute DOMString type;\u000a\u000a  readonly attribute IDBDatabase database;\u000a\u000a  [Throws, UseCounter]\u000a  IDBFileHandle open(optional FileMode mode = \"readonly\");\u000a\u000a  [Throws, UseCounter]\u000a  DOMRequest getFile();\u000a\u000a  attribute EventHandler onabort;\u000a  attribute EventHandler onerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBObjectStore.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBObjectStore.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBObjectStore\u000a */\u000a\u000adictionary IDBObjectStoreParameters {\u000a    (DOMString or sequence<DOMString>)? keyPath = null;\u000a    boolean                             autoIncrement = false;\u000a};\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface IDBObjectStore {\u000a    [SetterThrows]\u000a    attribute DOMString name;\u000a\u000a    [Throws]\u000a    readonly    attribute any            keyPath;\u000a\u000a    readonly    attribute DOMStringList  indexNames;\u000a    readonly    attribute IDBTransaction transaction;\u000a    readonly    attribute boolean        autoIncrement;\u000a\u000a    [Throws]\u000a    IDBRequest put (any value, optional any key);\u000a\u000a    [Throws]\u000a    IDBRequest add (any value, optional any key);\u000a\u000a    [Throws]\u000a    IDBRequest delete (any key);\u000a\u000a    [Throws]\u000a    IDBRequest get (any key);\u000a\u000a    [Throws]\u000a    IDBRequest getKey (any key);\u000a\u000a    [Throws]\u000a    IDBRequest clear ();\u000a\u000a    [Throws]\u000a    IDBRequest openCursor (optional any range, optional IDBCursorDirection direction = \"next\");\u000a\u000a    [Throws]\u000a    IDBIndex   createIndex (DOMString name, (DOMString or sequence<DOMString>) keyPath, optional IDBIndexParameters optionalParameters);\u000a\u000a    [Throws]\u000a    IDBIndex   index (DOMString name);\u000a\u000a    [Throws]\u000a    void       deleteIndex (DOMString indexName);\u000a\u000a    [Throws]\u000a    IDBRequest count (optional any key);\u000a};\u000a\u000apartial interface IDBObjectStore {\u000a    // Success fires IDBTransactionEvent, result == array of values for given keys\u000a    [Throws]\u000a    IDBRequest mozGetAll (optional any key, [EnforceRange] optional unsigned long limit);\u000a\u000a    [Throws]\u000a    IDBRequest getAll (optional any key, [EnforceRange] optional unsigned long limit);\u000a\u000a    [Throws]\u000a    IDBRequest getAllKeys (optional any key, [EnforceRange] optional unsigned long limit);\u000a\u000a    [Throws]\u000a    IDBRequest openKeyCursor (optional any range, optional IDBCursorDirection direction = \"next\");\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBOpenDBRequest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBOpenDBRequest.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBOpenDBRequest\u000a */\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface IDBOpenDBRequest : IDBRequest {\u000a                attribute EventHandler onblocked;\u000a\u000a                attribute EventHandler onupgradeneeded;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBRequest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBRequest.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBRequest\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBRequestReadyState\u000a */\u000a\u000aenum IDBRequestReadyState {\u000a    \"pending\",\u000a    \"done\"\u000a};\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface IDBRequest : EventTarget {\u000a    [Throws]\u000a    readonly    attribute any                  result;\u000a\u000a    [Throws]\u000a    readonly    attribute DOMException?        error;\u000a\u000a    readonly    attribute (IDBObjectStore or IDBIndex or IDBCursor)? source;\u000a    readonly    attribute IDBTransaction?      transaction;\u000a    readonly    attribute IDBRequestReadyState readyState;\u000a\u000a                attribute EventHandler         onsuccess;\u000a\u000a                attribute EventHandler         onerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBTransaction.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBTransaction.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBTransaction\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBTransactionMode\u000a */\u000a\u000aenum IDBTransactionMode {\u000a    \"readonly\",\u000a    \"readwrite\",\u000a    // The \"readwriteflush\" mode is only available when the\u000a    // |IndexedDatabaseManager::ExperimentalFeaturesEnabled()| function returns\u000a    // true. This mode is not yet part of the standard.\u000a    \"readwriteflush\",\u000a    \"cleanup\",\u000a    \"versionchange\"\u000a};\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface IDBTransaction : EventTarget {\u000a    [Throws]\u000a    readonly    attribute IDBTransactionMode mode;\u000a    readonly    attribute IDBDatabase        db;\u000a\u000a    readonly    attribute DOMException?      error;\u000a\u000a    [Throws]\u000a    IDBObjectStore objectStore (DOMString name);\u000a\u000a    [Throws]\u000a    void           abort();\u000a\u000a                attribute EventHandler       onabort;\u000a                attribute EventHandler       oncomplete;\u000a                attribute EventHandler       onerror;\u000a};\u000a\u000a// This seems to be custom\u000apartial interface IDBTransaction {\u000a    readonly    attribute DOMStringList objectStoreNames;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBVersionChangeEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IDBVersionChangeEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBVersionChangeEvent\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary IDBVersionChangeEventInit : EventInit {\u000a    unsigned long long  oldVersion = 0;\u000a    unsigned long long? newVersion = null;\u000a};\u000a\u000a[Constructor(DOMString type, optional IDBVersionChangeEventInit eventInitDict),\u000a Exposed=(Window,Worker,System)]\u000ainterface IDBVersionChangeEvent : Event {\u000a    readonly    attribute unsigned long long  oldVersion;\u000a    readonly    attribute unsigned long long? newVersion;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IIRFilterNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IIRFilterNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is https://www.w3.org/TR/webaudio\u000a *\u000a * Copyright © 2016 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary IIRFilterOptions : AudioNodeOptions {\u000a    required sequence<double> feedforward;\u000a    required sequence<double> feedback;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000aConstructor(BaseAudioContext context, IIRFilterOptions options)]\u000ainterface IIRFilterNode : AudioNode {\u000a    void getFrequencyResponse(Float32Array frequencyHz, Float32Array magResponse, Float32Array phaseResponse);\u000a};\u000a\u000a// Mozilla extension\u000aIIRFilterNode implements AudioNodePassThrough;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IdleDeadline.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IdleDeadline.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is:\u000a * https://w3c.github.io/requestidlecallback/\u000a */\u000a\u000a[Exposed=(Window,System),\u000a Func=\"nsGlobalWindowInner::IsRequestIdleCallbackEnabled\"]\u000ainterface IdleDeadline {\u000a  DOMHighResTimeStamp timeRemaining();\u000a  readonly attribute boolean didTimeout;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageBitmap.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageBitmap.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://html.spec.whatwg.org/multipage/webappapis.html#images\u000a *\u000a * The origin of the extended IDL file is\u000a * http://w3c.github.io/mediacapture-worker/#imagebitmap-extensions\u000a */\u000a\u000a// Extensions\u000a// Bug 1141979 - [FoxEye] Extend ImageBitmap with interfaces to access its\u000a// underlying image data\u000a//\u000a// Note:\u000a// Our overload resolution implementation doesn't deal with a union as the\u000a// distinguishing argument which means we cannot overload functions via union\u000a// types, a.k.a. we cannot overload createImageBitmap() via ImageBitmapSource\u000a// and BufferSource. Here, we work around this issue by adding the BufferSource\u000a// into ImageBitmapSource.\u000a\u000atypedef (HTMLImageElement or\u000a         HTMLVideoElement or\u000a         HTMLCanvasElement or\u000a         Blob or\u000a         ImageData or\u000a         CanvasRenderingContext2D or\u000a         ImageBitmap or\u000a         BufferSource) ImageBitmapSource;\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface ImageBitmap {\u000a  [Constant]\u000a  readonly attribute unsigned long width;\u000a  [Constant]\u000a  readonly attribute unsigned long height;\u000a};\u000a\u000a// It's crucial that there be a way to explicitly dispose of ImageBitmaps\u000a// since they refer to potentially large graphics resources. Some uses\u000a// of this API proposal will result in repeated allocations of ImageBitmaps,\u000a// and garbage collection will not reliably reclaim them quickly enough.\u000a// Here we reuse close(), which also exists on another Transferable type,\u000a// MessagePort. Potentially, all Transferable types should inherit from a\u000a// new interface type \"Closeable\".\u000apartial interface ImageBitmap {\u000a  // Dispose of all graphical resources associated with this ImageBitmap.\u000a  void close();\u000a};\u000a\u000a// ImageBitmap-extensions\u000a// Bug 1141979 - [FoxEye] Extend ImageBitmap with interfaces to access its\u000a// underlying image data\u000a\u000a/*\u000a * An image or a video frame is conceptually a two-dimensional array of data and\u000a * each element in the array is called a pixel. The pixels are usually stored in\u000a * a one-dimensional array and could be arranged in a variety of image formats.\u000a * Developers need to know how the pixels are formatted so that they are able to\u000a * process them.\u000a *\u000a * The image format describes how pixels in an image are arranged. A single\u000a * pixel has at least one, but usually multiple pixel values. The range of a\u000a * pixel value varies, which means different image formats use different data\u000a * types to store a single pixel value.\u000a *\u000a * The most frequently used data type is 8-bit unsigned integer whose range is\u000a * from 0 to 255, others could be 16-bit integer or 32-bit floating points and\u000a * so forth. The number of pixel values of a single pixel is called the number\u000a * of channels of the image format. Multiple pixel values of a pixel are used\u000a * together to describe the captured property which could be color or depth\u000a * information. For example, if the data is a color image in RGB color space,\u000a * then it is a three-channel image format and a pixel is described by R, G and\u000a * B three pixel values with range from 0 to 255. As another example, if the\u000a * data is a gray image, then it is a single-channel image format with 8-bit\u000a * unsigned integer data type and the pixel value describes the gray scale. For\u000a * depth data, it is a single channel image format too, but the data type is\u000a * 16-bit unsigned integer and the pixel value is the depth level.\u000a *\u000a * For those image formats whose pixels contain multiple pixel values, the pixel\u000a * values might be arranged in one of the following ways:\u000a * 1) Planar pixel layout:\u000a *    each channel has its pixel values stored consecutively in separated\u000a *    buffers (a.k.a. planes) and then all channel buffers are stored\u000a *    consecutively in memory.\u000a *    (Ex: RRRRRR......GGGGGG......BBBBBB......)\u000a * 2) Interleaving pixel layout:\u000a *    each pixel has its pixel values from all channels stored together and\u000a *    interleaves all channels.\u000a *    (Ex: RGBRGBRGBRGBRGB......)\u000a */\u000a\u000a\u000a/*\u000a * The ImageBitmap extensions use this enumeration to negotiate the image format\u000a * while 1) accessing the underlying data of an ImageBitmap and\u000a *       2) creating a new ImageBitmap.\u000a *\u000a * For each format in this enumeration, we use a 2x2 small image (4 pixels) as\u000a * example to illustrate the pixel layout.\u000a *\u000a * 2x2 image:   +--------+--------+\u000a *              | pixel1 | pixel2 |\u000a *              +--------+--------+\u000a *              | pixel3 | pixel4 |\u000a *              +--------+--------+\u000a *\u000a */\u000aenum ImageBitmapFormat {\u000a  /*\u000a   * Channel order: R, G, B, A\u000a   * Channel size: full rgba-chennels\u000a   * Pixel layout: interleaving rgba-channels\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: R1 G1 B1 A1 R2 G2 B2 A2 R3 G3 B3 A3 R4 G4 B4 A4\u000a   * Data type: 8-bit unsigned integer\u000a   */\u000a  \"RGBA32\",\u000a\u000a  /*\u000a   * Channel order: B, G, R, A\u000a   * Channel size: full bgra-channels\u000a   * Pixel layout: interleaving bgra-channels\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: B1 G1 R1 A1 B2 G2 R2 A2 B3 G3 R3 A3 B4 G4 R4 A4\u000a   * Data type: 8-bit unsigned integer\u000a   */\u000a  \"BGRA32\",\u000a\u000a  /*\u000a   * Channel order: R, G, B\u000a   * Channel size: full rgb-channels\u000a   * Pixel layout: interleaving rgb-channels\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: R1 G1 B1 R2 G2 B2 R3 G3 B3 R4 G4 B4\u000a   * Data type: 8-bit unsigned integer\u000a   */\u000a  \"RGB24\",\u000a\u000a  /*\u000a   * Channel order: B, G, R\u000a   * Channel size: full bgr-channels\u000a   * Pixel layout: interleaving bgr-channels\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: B1 G1 R1 B2 G2 R2 B3 G3 R3 B4 G4 R4\u000a   * Data type: 8-bit unsigned integer\u000a   */\u000a  \"BGR24\",\u000a\u000a  /*\u000a   * Channel order: GRAY\u000a   * Channel size: full gray-channel\u000a   * Pixel layout: planar gray-channel\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: GRAY1 GRAY2 GRAY3 GRAY4\u000a   * Data type: 8-bit unsigned integer\u000a   */\u000a  \"GRAY8\",\u000a\u000a  /*\u000a   * Channel order: Y, U, V\u000a   * Channel size: full yuv-channels\u000a   * Pixel layout: planar yuv-channels\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: Y1 Y2 Y3 Y4\u000a   *   [Plane2]: U1 U2 U3 U4\u000a   *   [Plane3]: V1 V2 V3 V4\u000a   * Data type: 8-bit unsigned integer\u000a   */\u000a  \"YUV444P\",\u000a\u000a  /*\u000a   * Channel order: Y, U, V\u000a   * Channel size: full y-channel, half uv-channels\u000a   * Pixel layout: planar yuv-channels\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: Y1 Y2 Y3 Y4\u000a   *   [Plane2]: U1 U3\u000a   *   [Plane3]: V1 V3\u000a   * Data type: 8-bit unsigned integer\u000a   */\u000a  \"YUV422P\",\u000a\u000a  /*\u000a   * Channel order: Y, U, V\u000a   * Channel size: full y-channel, quarter uv-channels\u000a   * Pixel layout: planar yuv-channels\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: Y1 Y2 Y3 Y4\u000a   *   [Plane2]: U1\u000a   *   [Plane3]: V1\u000a   * Data type: 8-bit unsigned integer\u000a   */\u000a  \"YUV420P\",\u000a\u000a  /*\u000a   * Channel order: Y, U, V\u000a   * Channel size: full y-channel, quarter uv-channels\u000a   * Pixel layout: planar y-channel, interleaving uv-channels\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: Y1 Y2 Y3 Y4\u000a   *   [Plane2]: U1 V1\u000a   * Data type: 8-bit unsigned integer\u000a   */\u000a  \"YUV420SP_NV12\",\u000a\u000a  /*\u000a   * Channel order: Y, V, U\u000a   * Channel size: full y-channel, quarter vu-channels\u000a   * Pixel layout: planar y-channel, interleaving vu-channels\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: Y1 Y2 Y3 Y4\u000a   *   [Plane2]: V1 U1\u000a   * Data type: 8-bit unsigned integer\u000a   */\u000a  \"YUV420SP_NV21\",\u000a\u000a  /*\u000a   * Channel order: H, S, V\u000a   * Channel size: full hsv-channels\u000a   * Pixel layout: interleaving hsv-channels\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: H1 S1 V1 H2 S2 V2 H3 S3 V3\u000a   * Data type: 32-bit floating point value\u000a   */\u000a  \"HSV\",\u000a\u000a  /*\u000a   * Channel order: l, a, b\u000a   * Channel size: full lab-channels\u000a   * Pixel layout: interleaving lab-channels\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: l1 a1 b1 l2 a2 b2 l3 a3 b3\u000a   * Data type: 32-bit floating point value\u000a   */\u000a  \"Lab\",\u000a\u000a  /*\u000a   * Channel order: DEPTH\u000a   * Channel size: full depth-channel\u000a   * Pixel layout: planar depth-channel\u000a   * Pixel layout illustration:\u000a   *   [Plane1]: DEPTH1 DEPTH2 DEPTH3 DEPTH4\u000a   * Data type: 16-bit unsigned integer\u000a   */\u000a  \"DEPTH\",\u000a};\u000a\u000aenum ChannelPixelLayoutDataType {\u000a  \"uint8\",\u000a  \"int8\",\u000a  \"uint16\",\u000a  \"int16\",\u000a  \"uint32\",\u000a  \"int32\",\u000a  \"float32\",\u000a  \"float64\"\u000a};\u000a\u000a/*\u000a * Two concepts, ImagePixelLayout and ChannelPixelLayout, together generalize\u000a * the variety of pixel layouts among image formats.\u000a *\u000a * The ChannelPixelLayout represents the pixel layout of a single channel in a\u000a * certain image format and the ImagePixelLayout is just the collection of\u000a * ChannelPixelLayouts. So, the ChannelPixelLayout is defined as a dictionary\u000a * type with properties to describe the layout and the ImagePixelLayout is just\u000a * an alias name to a sequence of ChannelPixelLayout objects.\u000a *\u000a * Since an image format is composed of at least one channel, an\u000a * ImagePixelLayout object contains at least one ChannelPixelLayout object.\u000a *\u000a * Although an image or a video frame is a two-dimensional structure, its data\u000a * is usually stored in a one-dimensional array in the row-major way and the\u000a * ChannelPixelLayout objects use the following properties to describe the\u000a * layout of pixel values in the buffer.\u000a *\u000a * 1) offset:\u000a *    denotes the beginning position of the channel's data relative to the\u000a *    beginning position of the one-dimensional array.\u000a * 2) width & height:\u000a *    denote the width and height of the channel respectively. Each channel in\u000a *    an image format may have different height and width.\u000a * 3) data type:\u000a *    denotes the format used to store one single pixel value.\u000a * 4) stride:\u000a *    the number of bytes between the beginning two consecutive rows in memory.\u000a *    (The total bytes of each row plus the padding bytes of each raw.)\u000a * 5) skip value:\u000a *    the value is zero for the planar pixel layout, and a positive integer for\u000a *    the interleaving pixel layout. (Describes how many bytes there are between\u000a *    two adjacent pixel values in this channel.)\u000a */\u000a\u000a/*\u000a * Example1: RGBA image, width = 620, height = 480, stride = 2560\u000a *\u000a * chanel_r: offset = 0, width = 620, height = 480, data type = uint8, stride = 2560, skip = 3\u000a * chanel_g: offset = 1, width = 620, height = 480, data type = uint8, stride = 2560, skip = 3\u000a * chanel_b: offset = 2, width = 620, height = 480, data type = uint8, stride = 2560, skip = 3\u000a * chanel_a: offset = 3, width = 620, height = 480, data type = uint8, stride = 2560, skip = 3\u000a *\u000a *         <---------------------------- stride ---------------------------->\u000a *         <---------------------- width x 4 ---------------------->\u000a * [index] 01234   8   12  16  20  24  28                           2479    2559\u000a *         |||||---|---|---|---|---|---|----------------------------|-------|\u000a * [data]  RGBARGBARGBARGBARGBAR___R___R...                         A%%%%%%%%\u000a * [data]  RGBARGBARGBARGBARGBAR___R___R...                         A%%%%%%%%\u000a * [data]  RGBARGBARGBARGBARGBAR___R___R...                         A%%%%%%%%\u000a *              ^^^\u000a *              r-skip\u000a */\u000a\u000a/*\u000a * Example2: YUV420P image, width = 620, height = 480, stride = 640\u000a *\u000a * chanel_y: offset = 0, width = 620, height = 480, stride = 640, skip = 0\u000a * chanel_u: offset = 307200, width = 310, height = 240, data type = uint8, stride = 320, skip = 0\u000a * chanel_v: offset = 384000, width = 310, height = 240, data type = uint8, stride = 320, skip = 0\u000a *\u000a *         <--------------------------- y-stride --------------------------->\u000a *         <----------------------- y-width ----------------------->\u000a * [index] 012345                                                  619      639\u000a *         ||||||--------------------------------------------------|--------|\u000a * [data]  YYYYYYYYYYYYYYYYYYYYYYYYYYYYY...                        Y%%%%%%%%%\u000a * [data]  YYYYYYYYYYYYYYYYYYYYYYYYYYYYY...                        Y%%%%%%%%%\u000a * [data]  YYYYYYYYYYYYYYYYYYYYYYYYYYYYY...                        Y%%%%%%%%%\u000a * [data]  ......\u000a *         <-------- u-stride ---------->\u000a *         <----- u-width ----->\u000a * [index] 307200              307509   307519\u000a *         |-------------------|--------|\u000a * [data]  UUUUUUUUUU...       U%%%%%%%%%\u000a * [data]  UUUUUUUUUU...       U%%%%%%%%%\u000a * [data]  UUUUUUUUUU...       U%%%%%%%%%\u000a * [data]  ......\u000a *         <-------- v-stride ---------->\u000a *         <- --- v-width ----->\u000a * [index] 384000              384309   384319\u000a *         |-------------------|--------|\u000a * [data]  VVVVVVVVVV...       V%%%%%%%%%\u000a * [data]  VVVVVVVVVV...       V%%%%%%%%%\u000a * [data]  VVVVVVVVVV...       V%%%%%%%%%\u000a * [data]  ......\u000a */\u000a\u000a/*\u000a * Example3: YUV420SP_NV12 image, width = 620, height = 480, stride = 640\u000a *\u000a * chanel_y: offset = 0, width = 620, height = 480, stride = 640, skip = 0\u000a * chanel_u: offset = 307200, width = 310, height = 240, data type = uint8, stride = 640, skip = 1\u000a * chanel_v: offset = 307201, width = 310, height = 240, data type = uint8, stride = 640, skip = 1\u000a *\u000a *         <--------------------------- y-stride -------------------------->\u000a *         <----------------------- y-width ---------------------->\u000a * [index] 012345                                                 619      639\u000a *         ||||||-------------------------------------------------|--------|\u000a * [data]  YYYYYYYYYYYYYYYYYYYYYYYYYYYYY...                       Y%%%%%%%%%\u000a * [data]  YYYYYYYYYYYYYYYYYYYYYYYYYYYYY...                       Y%%%%%%%%%\u000a * [data]  YYYYYYYYYYYYYYYYYYYYYYYYYYYYY...                       Y%%%%%%%%%\u000a * [data]  ......\u000a *         <--------------------- u-stride / v-stride -------------------->\u000a *         <------------------ u-width + v-width ----------------->\u000a * [index] 307200(u-offset)                                       307819  307839\u000a *         |------------------------------------------------------|-------|\u000a * [index] |307201(v-offset)                                      |307820 |\u000a *         ||-----------------------------------------------------||------|\u000a * [data]  UVUVUVUVUVUVUVUVUVUVUVUVUVUVUV...                      UV%%%%%%%\u000a * [data]  UVUVUVUVUVUVUVUVUVUVUVUVUVUVUV...                      UV%%%%%%%\u000a * [data]  UVUVUVUVUVUVUVUVUVUVUVUVUVUVUV...                      UV%%%%%%%\u000a *          ^            ^\u000a *         u-skip        v-skip\u000a */\u000a\u000a/*\u000a * Example4: DEPTH image, width = 640, height = 480, stride = 1280\u000a *\u000a * chanel_d: offset = 0, width = 640, height = 480, data type = uint16, stride = 1280, skip = 0\u000a *\u000a * note: each DEPTH value uses two bytes\u000a *\u000a *         <----------------------- d-stride ---------------------->\u000a *         <----------------------- d-width ----------------------->\u000a * [index] 02468                                                   1278\u000a *         |||||---------------------------------------------------|\u000a * [data]  DDDDDDDDDDDDDDDDDDDDDDDDDDDDD...                        D\u000a * [data]  DDDDDDDDDDDDDDDDDDDDDDDDDDDDD...                        D\u000a * [data]  DDDDDDDDDDDDDDDDDDDDDDDDDDDDD...                        D\u000a * [data]  ......\u000a */\u000a\u000adictionary ChannelPixelLayout {\u000a    required unsigned long              offset;\u000a    required unsigned long              width;\u000a    required unsigned long              height;\u000a    required ChannelPixelLayoutDataType dataType;\u000a    required unsigned long              stride;\u000a    required unsigned long              skip;\u000a};\u000a\u000atypedef sequence<ChannelPixelLayout> ImagePixelLayout;\u000a\u000apartial interface ImageBitmap {\u000a    [Throws, Func=\"mozilla::dom::DOMPrefs::ImageBitmapExtensionsEnabled\"]\u000a    ImageBitmapFormat               findOptimalFormat (optional sequence<ImageBitmapFormat> aPossibleFormats);\u000a    [Throws, Func=\"mozilla::dom::DOMPrefs::ImageBitmapExtensionsEnabled\"]\u000a    long                            mappedDataLength (ImageBitmapFormat aFormat);\u000a    [Throws, Func=\"mozilla::dom::DOMPrefs::ImageBitmapExtensionsEnabled\"]\u000a    Promise<ImagePixelLayout> mapDataInto (ImageBitmapFormat aFormat, BufferSource aBuffer, long aOffset);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageBitmapRenderingContext.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageBitmapRenderingContext.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://wiki.whatwg.org/wiki/OffscreenCanvas\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// The new ImageBitmapRenderingContext is a canvas rendering context\u000a// which only provides the functionality to replace the canvas's\u000a// contents with the given ImageBitmap. Its context id (the first argument\u000a// to getContext) is \"bitmaprenderer\".\u000a[Exposed=(Window,Worker)]\u000ainterface ImageBitmapRenderingContext {\u000a  // Displays the given ImageBitmap in the canvas associated with this\u000a  // rendering context. Ownership of the ImageBitmap is transferred to\u000a  // the canvas. The caller may not use its reference to the ImageBitmap\u000a  // after making this call. (This semantic is crucial to enable prompt\u000a  // reclamation of expensive graphics resources, rather than relying on\u000a  // garbage collection to do so.)\u000a  //\u000a  // The ImageBitmap conceptually replaces the canvas's bitmap, but\u000a  // it does not change the canvas's intrinsic width or height.\u000a  //\u000a  // The ImageBitmap, when displayed, is clipped to the rectangle\u000a  // defined by the canvas's instrinsic width and height. Pixels that\u000a  // would be covered by the canvas's bitmap which are not covered by\u000a  // the supplied ImageBitmap are rendered transparent black. Any CSS\u000a  // styles affecting the display of the canvas are applied as usual.\u000a  void transferFromImageBitmap(ImageBitmap bitmap);\u000a\u000a  // Deprecated version of transferFromImageBitmap\u000a  [Deprecated=\"ImageBitmapRenderingContext_TransferImageBitmap\"]\u000a  void transferImageBitmap(ImageBitmap bitmap);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageCapture.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageCapture.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/ImageCapture.html\u000a *\u000a * Copyright © 2012-2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"dom.imagecapture.enabled\", Constructor(VideoStreamTrack track)]\u000ainterface ImageCapture : EventTarget {\u000a  // readonly attribute PhotoSettingsOptions photoSettingsOptions;\u000a  readonly attribute VideoStreamTrack videoStreamTrack;\u000a  attribute EventHandler onphoto;\u000a  attribute EventHandler onerror;\u000a  // attribute EventHandler onphotosettingschange;\u000a  // attribute EventHandler onframegrab;\u000a\u000a  // [Throws]\u000a  // void setOptions (PhotoSettings? photoSettings);\u000a  [Throws]\u000a  void takePhoto();\u000a  // [Throws]\u000a  // void getFrame();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageCaptureErrorEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageCaptureErrorEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/ImageCapture.html\u000a *\u000a * Copyright © 2012-2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"dom.imagecapture.enabled\",\u000aConstructor(DOMString type, optional ImageCaptureErrorEventInit imageCaptureErrorInitDict)]\u000ainterface ImageCaptureErrorEvent : Event {\u000a  readonly attribute ImageCaptureError? imageCaptureError;\u000a};\u000a\u000adictionary ImageCaptureErrorEventInit : EventInit {\u000a  ImageCaptureError? imageCaptureError = null;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface ImageCaptureError {\u000a  const unsigned short FRAME_GRAB_ERROR = 1;\u000a  const unsigned short SETTINGS_ERROR = 2;\u000a  const unsigned short PHOTO_ERROR = 3;\u000a  const unsigned short ERROR_UNKNOWN = 4;\u000a  readonly attribute unsigned short code;\u000a  readonly attribute DOMString message;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageData.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageData.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#imagedata\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and Opera Software ASA.\u000a * You are granted a license to use, reproduce and create derivative works of this document.\u000a */\u000a\u000a[Constructor(unsigned long sw, unsigned long sh),\u000a Constructor(Uint8ClampedArray data, unsigned long sw, optional unsigned long sh),\u000a Exposed=(Window,Worker)]\u000ainterface ImageData {\u000a [Constant]\u000a readonly attribute unsigned long width;\u000a [Constant]\u000a readonly attribute unsigned long height;\u000a [Constant, StoreInSlot]\u000a readonly attribute Uint8ClampedArray data;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageDocument.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ImageDocument.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is:\u000a * dom/html/public/nsIImageDocument.idl\u000a */\u000a\u000ainterface imgIRequest;\u000a\u000a[ChromeOnly, OverrideBuiltins]\u000ainterface ImageDocument : HTMLDocument {\u000a  /* Whether the image is overflowing visible area. */\u000a  readonly attribute boolean imageIsOverflowing;\u000a\u000a  /* Whether the image has been resized to fit visible area. */\u000a  readonly attribute boolean imageIsResized;\u000a\u000a  /* The image request being displayed in the content area */\u000a  [Throws]\u000a  readonly attribute imgIRequest? imageRequest;\u000a\u000a  /* Resize the image to fit visible area. */\u000a  void shrinkToFit();\u000a\u000a  /* Restore image original size. */\u000a  void restoreImage();\u000a\u000a  /* Restore the image, trying to keep a certain pixel in the same position.\u000a   * The coordinate system is that of the shrunken image.\u000a   */\u000a  void restoreImageTo(long x, long y);\u000a\u000a  /* A helper method for switching between states.\u000a   * The switching logic is as follows. If the image has been resized\u000a   * restore image original size, otherwise if the image is overflowing\u000a   * current visible area resize the image to fit the area.\u000a   */\u000a  void toggleImageSize();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/InputEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/InputEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional InputEventInit eventInitDict)]\u000ainterface InputEvent : UIEvent\u000a{\u000a  readonly attribute boolean       isComposing;\u000a};\u000a\u000adictionary InputEventInit : UIEventInit\u000a{\u000a  boolean isComposing = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/InspectorUtils.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/InspectorUtils.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * A collection of utility methods for use by devtools.\u000a *\u000a * See InspectorUtils.h for documentation on these methods.\u000a */\u000a[ChromeOnly]\u000anamespace InspectorUtils {\u000a  sequence<StyleSheet> getAllStyleSheets(Document document);\u000a  sequence<CSSRule> getCSSStyleRules(\u000a    Element element,\u000a    [TreatNullAs=EmptyString] optional DOMString pseudo = \"\");\u000a  unsigned long getRuleLine(CSSRule rule);\u000a  unsigned long getRuleColumn(CSSRule rule);\u000a  unsigned long getRelativeRuleLine(CSSRule rule);\u000a  boolean hasRulesModifiedByCSSOM(CSSStyleSheet sheet);\u000a  [NewObject] CSSLexer getCSSLexer(DOMString text);\u000a  unsigned long getSelectorCount(CSSStyleRule rule);\u000a  [Throws] DOMString getSelectorText(CSSStyleRule rule,\u000a                                     unsigned long selectorIndex);\u000a  [Throws] unsigned long long getSpecificity(CSSStyleRule rule,\u000a                                             unsigned long selectorIndex);\u000a  [Throws] boolean selectorMatchesElement(\u000a      Element element,\u000a      CSSStyleRule rule,\u000a      unsigned long selectorIndex,\u000a      [TreatNullAs=EmptyString] optional DOMString pseudo = \"\");\u000a  boolean isInheritedProperty(DOMString property);\u000a  sequence<DOMString> getCSSPropertyNames(optional PropertyNamesOptions options);\u000a  [Throws] sequence<DOMString> getCSSValuesForProperty(DOMString property);\u000a  [Throws] DOMString rgbToColorName(octet r, octet g, octet b);\u000a  InspectorRGBATuple? colorToRGBA(DOMString colorString);\u000a  boolean isValidCSSColor(DOMString colorString);\u000a  [Throws] sequence<DOMString> getSubpropertiesForCSSProperty(DOMString property);\u000a  [Throws] boolean cssPropertyIsShorthand(DOMString property);\u000a\u000a  // TODO: Change this to use an enum.\u000a  const unsigned long TYPE_LENGTH = 0;\u000a  const unsigned long TYPE_PERCENTAGE = 1;\u000a  const unsigned long TYPE_COLOR = 2;\u000a  const unsigned long TYPE_URL = 3;\u000a  const unsigned long TYPE_ANGLE = 4;\u000a  const unsigned long TYPE_FREQUENCY = 5;\u000a  const unsigned long TYPE_TIME = 6;\u000a  const unsigned long TYPE_GRADIENT = 7;\u000a  const unsigned long TYPE_TIMING_FUNCTION = 8;\u000a  const unsigned long TYPE_IMAGE_RECT = 9;\u000a  const unsigned long TYPE_NUMBER = 10;\u000a  [Throws] boolean cssPropertySupportsType(DOMString property, unsigned long type);\u000a\u000a  boolean isIgnorableWhitespace(CharacterData dataNode);\u000a  Node? getParentForNode(Node node, boolean showingAnonymousContent);\u000a  [NewObject] NodeList getChildrenForNode(Node node,\u000a                                          boolean showingAnonymousContent);\u000a  sequence<DOMString> getBindingURLs(Element element);\u000a  [Throws] boolean setContentState(Element element, unsigned long long state);\u000a  [Throws] boolean removeContentState(\u000a      Element element,\u000a      unsigned long long state,\u000a      optional boolean clearActiveDocument = false);\u000a  unsigned long long getContentState(Element element);\u000a\u000a  // Get the font face(s) actually used to render the text in /range/,\u000a  // as a collection of InspectorFontFace objects (below).\u000a  // If /maxRanges/ is greater than zero, each InspectorFontFace will record\u000a  // up to /maxRanges/ fragments of content that used the face, for the caller\u000a  // to access via its .ranges attribute.\u000a  [NewObject, Throws] sequence<InspectorFontFace> getUsedFontFaces(\u000a      Range range,\u000a      optional unsigned long maxRanges = 0);\u000a\u000a  sequence<DOMString> getCSSPseudoElementNames();\u000a  void addPseudoClassLock(Element element,\u000a                          DOMString pseudoClass,\u000a                          optional boolean enabled = true);\u000a  void removePseudoClassLock(Element element, DOMString pseudoClass);\u000a  boolean hasPseudoClassLock(Element element, DOMString pseudoClass);\u000a  void clearPseudoClassLocks(Element element);\u000a  [Throws] void parseStyleSheet(CSSStyleSheet sheet, DOMString input);\u000a  void scrollElementIntoView(Element element);\u000a};\u000a\u000adictionary PropertyNamesOptions {\u000a  boolean includeAliases = false;\u000a};\u000a\u000adictionary InspectorRGBATuple {\u000a  /*\u000a   * NOTE: This tuple is in the normal 0-255-sized RGB space but can be\u000a   * fractional and may extend outside the 0-255 range.\u000a   *\u000a   * a is in the range 0 - 1.\u000a   */\u000a  double r = 0;\u000a  double g = 0;\u000a  double b = 0;\u000a  double a = 1;\u000a};\u000a\u000adictionary InspectorVariationAxis {\u000a  required DOMString tag;\u000a  required DOMString name;\u000a  required float minValue;\u000a  required float maxValue;\u000a  required float defaultValue;\u000a};\u000a\u000adictionary InspectorVariationValue {\u000a  required DOMString axis;\u000a  required float value;\u000a};\u000a\u000adictionary InspectorVariationInstance {\u000a  required DOMString name;\u000a  required sequence<InspectorVariationValue> values;\u000a};\u000a\u000adictionary InspectorFontFeature {\u000a  required DOMString tag;\u000a  required DOMString script;\u000a  required DOMString languageSystem;\u000a};\u000a\u000a[ChromeOnly]\u000ainterface InspectorFontFace {\u000a  // An indication of how we found this font during font-matching.\u000a  // Note that the same physical font may have been found in multiple ways within a range.\u000a  readonly attribute boolean fromFontGroup;\u000a  readonly attribute boolean fromLanguagePrefs;\u000a  readonly attribute boolean fromSystemFallback;\u000a\u000a  // available for all fonts\u000a  readonly attribute DOMString name; // full font name as obtained from the font resource\u000a  readonly attribute DOMString CSSFamilyName; // a family name that could be used in CSS font-family\u000a                                              // (not necessarily the actual name that was used,\u000a                                              // due to aliases, generics, localized names, etc)\u000a\u000a  [NewObject,Throws] sequence<InspectorVariationAxis> getVariationAxes();\u000a  [NewObject,Throws] sequence<InspectorVariationInstance> getVariationInstances();\u000a  [NewObject,Throws] sequence<InspectorFontFeature> getFeatures();\u000a\u000a  // A list of Ranges of text rendered with this face.\u000a  // This will list the first /maxRanges/ ranges found when InspectorUtils.getUsedFontFaces\u000a  // was called (so it will be empty unless a non-zero maxRanges argument was passed).\u000a  // Note that this indicates how the document was rendered at the time of calling\u000a  // getUsedFontFaces; it does not reflect any subsequent modifications, so if styles\u000a  // have been modified since calling getUsedFontFaces, it may no longer be accurate.\u000a  [Constant,Cached]  readonly attribute sequence<Range> ranges;\u000a\u000a  // meaningful only when the font is a user font defined using @font-face\u000a  readonly attribute CSSFontFaceRule? rule; // null if no associated @font-face rule\u000a  readonly attribute long srcIndex; // index in the rule's src list, -1 if no @font-face rule\u000a  readonly attribute DOMString URI; // empty string if not a downloaded font, i.e. local\u000a  readonly attribute DOMString localName; // empty string  if not a src:local(...) rule\u000a  readonly attribute DOMString format; // as per http://www.w3.org/TR/css3-webfonts/#referencing\u000a  readonly attribute DOMString metadata; // XML metadata from WOFF file (if any)\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/InstallTrigger.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/InstallTrigger.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a\u000a/**\u000a * A callback function that webpages can implement to be notified when triggered\u000a * installs complete.\u000a */\u000acallback InstallTriggerCallback = void(DOMString url, short status);\u000a\u000adictionary InstallTriggerData {\u000a  DOMString URL;\u000a  DOMString? IconURL;\u000a  DOMString? Hash;\u000a};\u000a\u000a/**\u000a * The interface for the InstallTrigger object available to all websites.\u000a */\u000a[ChromeOnly,\u000a JSImplementation=\"@mozilla.org/addons/installtrigger;1\"]\u000ainterface InstallTriggerImpl {\u000a  /**\u000a   * Retained for backwards compatibility.\u000a   */\u000a  const unsigned short SKIN = 1;\u000a  const unsigned short LOCALE = 2;\u000a  const unsigned short CONTENT = 4;\u000a  const unsigned short PACKAGE = 7;\u000a\u000a  /**\u000a   * Tests if installation is enabled.\u000a   */\u000a  boolean enabled();\u000a\u000a  /**\u000a   * Tests if installation is enabled.\u000a   *\u000a   * @deprecated Use \"enabled\" in the future.\u000a   */\u000a  boolean updateEnabled();\u000a\u000a  /**\u000a   * Starts a new installation of a set of add-ons.\u000a   *\u000a   * @param  aArgs\u000a   *         The add-ons to install. This should be a JS object, each property\u000a   *         is the name of an add-on to be installed. The value of the\u000a   *         property should either be a string URL, or an object with the\u000a   *         following properties:\u000a   *          * URL for the add-on's URL\u000a   *          * IconURL for an icon for the add-on\u000a   *          * Hash for a hash of the add-on\u000a   * @param  aCallback\u000a   *         A callback to call as each installation succeeds or fails\u000a   * @return true if the installations were successfully started\u000a   */\u000a  boolean install(record<DOMString, (DOMString or InstallTriggerData)> installs,\u000a                  optional InstallTriggerCallback callback);\u000a\u000a  /**\u000a   * Starts installing a new add-on.\u000a   *\u000a   * @deprecated use \"install\" in the future.\u000a   *\u000a   * @param  aType\u000a   *         Unused, retained for backwards compatibility\u000a   * @param  aUrl\u000a   *         The URL of the add-on\u000a   * @param  aSkin\u000a   *         Unused, retained for backwards compatibility\u000a   * @return true if the installation was successfully started\u000a   */\u000a  boolean installChrome(unsigned short type, DOMString url, DOMString skin);\u000a\u000a  /**\u000a   * Starts installing a new add-on.\u000a   *\u000a   * @deprecated use \"install\" in the future.\u000a   *\u000a   * @param  aUrl\u000a   *         The URL of the add-on\u000a   * @param  aFlags\u000a   *         Unused, retained for backwards compatibility\u000a   * @return true if the installation was successfully started\u000a   */\u000a  boolean startSoftwareUpdate(DOMString url, optional unsigned short flags);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IntersectionObserver.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IntersectionObserver.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://wicg.github.io/IntersectionObserver/\u000a */\u000a\u000a[ProbablyShortLivingWrapper, Pref=\"dom.IntersectionObserver.enabled\"]\u000ainterface IntersectionObserverEntry {\u000a  [Constant]\u000a  readonly attribute DOMHighResTimeStamp time;\u000a  [Constant]\u000a  readonly attribute DOMRectReadOnly? rootBounds;\u000a  [Constant]\u000a  readonly attribute DOMRectReadOnly boundingClientRect;\u000a  [Constant]\u000a  readonly attribute DOMRectReadOnly intersectionRect;\u000a  [Constant]\u000a  readonly attribute boolean isIntersecting;\u000a  [Constant]\u000a  readonly attribute double intersectionRatio;\u000a  [Constant]\u000a  readonly attribute Element target;\u000a};\u000a\u000a[Constructor(IntersectionCallback intersectionCallback,\u000a             optional IntersectionObserverInit options),\u000a Pref=\"dom.IntersectionObserver.enabled\"]\u000ainterface IntersectionObserver {\u000a  [Constant]\u000a  readonly attribute Element? root;\u000a  [Constant]\u000a  readonly attribute DOMString rootMargin;\u000a  [Constant,Cached]\u000a  readonly attribute sequence<double> thresholds;\u000a  void observe(Element target);\u000a  void unobserve(Element target);\u000a  void disconnect();\u000a  sequence<IntersectionObserverEntry> takeRecords();\u000a\u000a  [ChromeOnly]\u000a  readonly attribute IntersectionCallback intersectionCallback;\u000a};\u000a\u000acallback IntersectionCallback =\u000a  void (sequence<IntersectionObserverEntry> entries, IntersectionObserver observer);\u000a\u000adictionary IntersectionObserverEntryInit {\u000a  required DOMHighResTimeStamp time;\u000a  required DOMRectInit rootBounds;\u000a  required DOMRectInit boundingClientRect;\u000a  required DOMRectInit intersectionRect;\u000a  required Element target;\u000a};\u000a\u000adictionary IntersectionObserverInit {\u000a  Element?  root = null;\u000a  DOMString rootMargin = \"0px\";\u000a  (double or sequence<double>) threshold = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IntlUtils.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IntlUtils.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000adictionary DisplayNameOptions {\u000a  DOMString style;\u000a  sequence<DOMString> keys;\u000a};\u000a\u000adictionary DisplayNameResult {\u000a  DOMString locale;\u000a  DOMString style;\u000a  record<DOMString, DOMString> values;\u000a};\u000a\u000adictionary LocaleInfo {\u000a  DOMString locale;\u000a  DOMString direction;\u000a};\u000a\u000a/**\u000a * The IntlUtils interface provides helper functions for localization.\u000a */\u000a[NoInterfaceObject]\u000ainterface IntlUtils {\u000a  /**\u000a   * Helper function to retrieve the localized values for a list of requested\u000a   * keys.\u000a   *\u000a   * The function takes two arguments - locales which is a list of locale\u000a   * strings and options which is an object with two optional properties:\u000a   *\u000a   *   keys:\u000a   *     an Array of string values that are paths to individual terms\u000a   *\u000a   *   style:\u000a   *     a String with a value \"long\", \"short\" or \"narrow\"\u000a   *\u000a   * It returns an object with properties:\u000a   *\u000a   *   locale:\u000a   *     a negotiated locale string\u000a   *\u000a   *   style:\u000a   *     negotiated style\u000a   *\u000a   *   values:\u000a   *     a key-value pair list of requested keys and corresponding translated\u000a   *     values\u000a   *\u000a   */\u000a  [Throws]\u000a  DisplayNameResult getDisplayNames(sequence<DOMString> locales,\u000a                                    optional DisplayNameOptions options);\u000a\u000a  /**\u000a   * Helper function to retrieve useful information about a locale.\u000a   *\u000a   * The function takes one argument - locales which is a list of locale\u000a   * strings.\u000a   *\u000a   * It returns an object with properties:\u000a   *\u000a   *   locale:\u000a   *     a negotiated locale string\u000a   *\u000a   *   direction:\u000a   *     text direction, \"ltr\" or \"rtl\"\u000a   *\u000a   */\u000a  [Throws]\u000a  LocaleInfo getLocaleInfo(sequence<DOMString> locales);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IterableIterator.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/IterableIterator.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000adictionary IterableKeyOrValueResult {\u000a  any value;\u000a  boolean done = false;\u000a};\u000a\u000adictionary IterableKeyAndValueResult {\u000a  sequence<any> value = [];\u000a  boolean done = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyAlgorithm.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyAlgorithm.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/WebCryptoAPI/\u000a */\u000a\u000adictionary KeyAlgorithm {\u000a  required DOMString name;\u000a};\u000a\u000adictionary AesKeyAlgorithm : KeyAlgorithm {\u000a  required unsigned short length;\u000a};\u000a\u000adictionary EcKeyAlgorithm : KeyAlgorithm {\u000a  required DOMString namedCurve;\u000a};\u000a\u000adictionary HmacKeyAlgorithm : KeyAlgorithm {\u000a  required KeyAlgorithm hash;\u000a  required unsigned long length;\u000a};\u000a\u000adictionary RsaHashedKeyAlgorithm : KeyAlgorithm {\u000a  required unsigned short modulusLength;\u000a  required Uint8Array publicExponent;\u000a  required KeyAlgorithm hash;\u000a};\u000a\u000adictionary DhKeyAlgorithm : KeyAlgorithm {\u000a  required Uint8Array prime;\u000a  required Uint8Array generator;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a// http://www.w3.org/TR/1999/WD-DOM-Level-2-19990923/events.html#Events-KeyEvent\u000ainterface KeyEvent\u000a{\u000a  const unsigned long DOM_VK_CANCEL         = 0x03;\u000a  const unsigned long DOM_VK_HELP           = 0x06;\u000a  const unsigned long DOM_VK_BACK_SPACE     = 0x08;\u000a  const unsigned long DOM_VK_TAB            = 0x09;\u000a  const unsigned long DOM_VK_CLEAR          = 0x0C;\u000a  const unsigned long DOM_VK_RETURN         = 0x0D;\u000a  // DOM_VK_ENTER has been never used for representing native key events.\u000a  // Therefore, it's removed for preventing developers being confused.\u000a  // const unsigned long DOM_VK_ENTER          = 0x0E;\u000a  const unsigned long DOM_VK_SHIFT          = 0x10;\u000a  const unsigned long DOM_VK_CONTROL        = 0x11;\u000a  const unsigned long DOM_VK_ALT            = 0x12;\u000a  const unsigned long DOM_VK_PAUSE          = 0x13;\u000a  const unsigned long DOM_VK_CAPS_LOCK      = 0x14;\u000a  const unsigned long DOM_VK_KANA           = 0x15;\u000a  const unsigned long DOM_VK_HANGUL         = 0x15;\u000a  const unsigned long DOM_VK_EISU           = 0x16; // Japanese Mac keyboard only\u000a  const unsigned long DOM_VK_JUNJA          = 0x17;\u000a  const unsigned long DOM_VK_FINAL          = 0x18;\u000a  const unsigned long DOM_VK_HANJA          = 0x19;\u000a  const unsigned long DOM_VK_KANJI          = 0x19;\u000a  const unsigned long DOM_VK_ESCAPE         = 0x1B;\u000a  const unsigned long DOM_VK_CONVERT        = 0x1C;\u000a  const unsigned long DOM_VK_NONCONVERT     = 0x1D;\u000a  const unsigned long DOM_VK_ACCEPT         = 0x1E;\u000a  const unsigned long DOM_VK_MODECHANGE     = 0x1F;\u000a  const unsigned long DOM_VK_SPACE          = 0x20;\u000a  const unsigned long DOM_VK_PAGE_UP        = 0x21;\u000a  const unsigned long DOM_VK_PAGE_DOWN      = 0x22;\u000a  const unsigned long DOM_VK_END            = 0x23;\u000a  const unsigned long DOM_VK_HOME           = 0x24;\u000a  const unsigned long DOM_VK_LEFT           = 0x25;\u000a  const unsigned long DOM_VK_UP             = 0x26;\u000a  const unsigned long DOM_VK_RIGHT          = 0x27;\u000a  const unsigned long DOM_VK_DOWN           = 0x28;\u000a  const unsigned long DOM_VK_SELECT         = 0x29;\u000a  const unsigned long DOM_VK_PRINT          = 0x2A;\u000a  const unsigned long DOM_VK_EXECUTE        = 0x2B;\u000a  const unsigned long DOM_VK_PRINTSCREEN    = 0x2C;\u000a  const unsigned long DOM_VK_INSERT         = 0x2D;\u000a  const unsigned long DOM_VK_DELETE         = 0x2E;\u000a\u000a  // DOM_VK_0 - DOM_VK_9 match their ascii values\u000a  const unsigned long DOM_VK_0              = 0x30;\u000a  const unsigned long DOM_VK_1              = 0x31;\u000a  const unsigned long DOM_VK_2              = 0x32;\u000a  const unsigned long DOM_VK_3              = 0x33;\u000a  const unsigned long DOM_VK_4              = 0x34;\u000a  const unsigned long DOM_VK_5              = 0x35;\u000a  const unsigned long DOM_VK_6              = 0x36;\u000a  const unsigned long DOM_VK_7              = 0x37;\u000a  const unsigned long DOM_VK_8              = 0x38;\u000a  const unsigned long DOM_VK_9              = 0x39;\u000a\u000a  const unsigned long DOM_VK_COLON          = 0x3A;\u000a  const unsigned long DOM_VK_SEMICOLON      = 0x3B;\u000a  const unsigned long DOM_VK_LESS_THAN      = 0x3C;\u000a  const unsigned long DOM_VK_EQUALS         = 0x3D;\u000a  const unsigned long DOM_VK_GREATER_THAN   = 0x3E;\u000a  const unsigned long DOM_VK_QUESTION_MARK  = 0x3F;\u000a  const unsigned long DOM_VK_AT             = 0x40;\u000a\u000a  // DOM_VK_A - DOM_VK_Z match their ascii values\u000a  const unsigned long DOM_VK_A              = 0x41;\u000a  const unsigned long DOM_VK_B              = 0x42;\u000a  const unsigned long DOM_VK_C              = 0x43;\u000a  const unsigned long DOM_VK_D              = 0x44;\u000a  const unsigned long DOM_VK_E              = 0x45;\u000a  const unsigned long DOM_VK_F              = 0x46;\u000a  const unsigned long DOM_VK_G              = 0x47;\u000a  const unsigned long DOM_VK_H              = 0x48;\u000a  const unsigned long DOM_VK_I              = 0x49;\u000a  const unsigned long DOM_VK_J              = 0x4A;\u000a  const unsigned long DOM_VK_K              = 0x4B;\u000a  const unsigned long DOM_VK_L              = 0x4C;\u000a  const unsigned long DOM_VK_M              = 0x4D;\u000a  const unsigned long DOM_VK_N              = 0x4E;\u000a  const unsigned long DOM_VK_O              = 0x4F;\u000a  const unsigned long DOM_VK_P              = 0x50;\u000a  const unsigned long DOM_VK_Q              = 0x51;\u000a  const unsigned long DOM_VK_R              = 0x52;\u000a  const unsigned long DOM_VK_S              = 0x53;\u000a  const unsigned long DOM_VK_T              = 0x54;\u000a  const unsigned long DOM_VK_U              = 0x55;\u000a  const unsigned long DOM_VK_V              = 0x56;\u000a  const unsigned long DOM_VK_W              = 0x57;\u000a  const unsigned long DOM_VK_X              = 0x58;\u000a  const unsigned long DOM_VK_Y              = 0x59;\u000a  const unsigned long DOM_VK_Z              = 0x5A;\u000a\u000a  const unsigned long DOM_VK_WIN            = 0x5B;\u000a  const unsigned long DOM_VK_CONTEXT_MENU   = 0x5D;\u000a  const unsigned long DOM_VK_SLEEP          = 0x5F;\u000a\u000a  // Numpad keys\u000a  const unsigned long DOM_VK_NUMPAD0        = 0x60;\u000a  const unsigned long DOM_VK_NUMPAD1        = 0x61;\u000a  const unsigned long DOM_VK_NUMPAD2        = 0x62;\u000a  const unsigned long DOM_VK_NUMPAD3        = 0x63;\u000a  const unsigned long DOM_VK_NUMPAD4        = 0x64;\u000a  const unsigned long DOM_VK_NUMPAD5        = 0x65;\u000a  const unsigned long DOM_VK_NUMPAD6        = 0x66;\u000a  const unsigned long DOM_VK_NUMPAD7        = 0x67;\u000a  const unsigned long DOM_VK_NUMPAD8        = 0x68;\u000a  const unsigned long DOM_VK_NUMPAD9        = 0x69;\u000a  const unsigned long DOM_VK_MULTIPLY       = 0x6A;\u000a  const unsigned long DOM_VK_ADD            = 0x6B;\u000a  const unsigned long DOM_VK_SEPARATOR      = 0x6C;\u000a  const unsigned long DOM_VK_SUBTRACT       = 0x6D;\u000a  const unsigned long DOM_VK_DECIMAL        = 0x6E;\u000a  const unsigned long DOM_VK_DIVIDE         = 0x6F;\u000a\u000a  const unsigned long DOM_VK_F1             = 0x70;\u000a  const unsigned long DOM_VK_F2             = 0x71;\u000a  const unsigned long DOM_VK_F3             = 0x72;\u000a  const unsigned long DOM_VK_F4             = 0x73;\u000a  const unsigned long DOM_VK_F5             = 0x74;\u000a  const unsigned long DOM_VK_F6             = 0x75;\u000a  const unsigned long DOM_VK_F7             = 0x76;\u000a  const unsigned long DOM_VK_F8             = 0x77;\u000a  const unsigned long DOM_VK_F9             = 0x78;\u000a  const unsigned long DOM_VK_F10            = 0x79;\u000a  const unsigned long DOM_VK_F11            = 0x7A;\u000a  const unsigned long DOM_VK_F12            = 0x7B;\u000a  const unsigned long DOM_VK_F13            = 0x7C;\u000a  const unsigned long DOM_VK_F14            = 0x7D;\u000a  const unsigned long DOM_VK_F15            = 0x7E;\u000a  const unsigned long DOM_VK_F16            = 0x7F;\u000a  const unsigned long DOM_VK_F17            = 0x80;\u000a  const unsigned long DOM_VK_F18            = 0x81;\u000a  const unsigned long DOM_VK_F19            = 0x82;\u000a  const unsigned long DOM_VK_F20            = 0x83;\u000a  const unsigned long DOM_VK_F21            = 0x84;\u000a  const unsigned long DOM_VK_F22            = 0x85;\u000a  const unsigned long DOM_VK_F23            = 0x86;\u000a  const unsigned long DOM_VK_F24            = 0x87;\u000a\u000a  const unsigned long DOM_VK_NUM_LOCK       = 0x90;\u000a  const unsigned long DOM_VK_SCROLL_LOCK    = 0x91;\u000a\u000a  // OEM specific virtual keyCode of Windows should pass through DOM keyCode\u000a  // for compatibility with the other web browsers on Windows.\u000a  const unsigned long DOM_VK_WIN_OEM_FJ_JISHO   = 0x92;\u000a  const unsigned long DOM_VK_WIN_OEM_FJ_MASSHOU = 0x93;\u000a  const unsigned long DOM_VK_WIN_OEM_FJ_TOUROKU = 0x94;\u000a  const unsigned long DOM_VK_WIN_OEM_FJ_LOYA    = 0x95;\u000a  const unsigned long DOM_VK_WIN_OEM_FJ_ROYA    = 0x96;\u000a\u000a  const unsigned long DOM_VK_CIRCUMFLEX     = 0xA0;\u000a  const unsigned long DOM_VK_EXCLAMATION    = 0xA1;\u000a  const unsigned long DOM_VK_DOUBLE_QUOTE   = 0xA2;\u000a  const unsigned long DOM_VK_HASH           = 0xA3;\u000a  const unsigned long DOM_VK_DOLLAR         = 0xA4;\u000a  const unsigned long DOM_VK_PERCENT        = 0xA5;\u000a  const unsigned long DOM_VK_AMPERSAND      = 0xA6;\u000a  const unsigned long DOM_VK_UNDERSCORE     = 0xA7;\u000a  const unsigned long DOM_VK_OPEN_PAREN     = 0xA8;\u000a  const unsigned long DOM_VK_CLOSE_PAREN    = 0xA9;\u000a  const unsigned long DOM_VK_ASTERISK       = 0xAA;\u000a  const unsigned long DOM_VK_PLUS           = 0xAB;\u000a  const unsigned long DOM_VK_PIPE           = 0xAC;\u000a  const unsigned long DOM_VK_HYPHEN_MINUS   = 0xAD;\u000a\u000a  const unsigned long DOM_VK_OPEN_CURLY_BRACKET  = 0xAE;\u000a  const unsigned long DOM_VK_CLOSE_CURLY_BRACKET = 0xAF;\u000a\u000a  const unsigned long DOM_VK_TILDE          = 0xB0;\u000a\u000a  const unsigned long DOM_VK_VOLUME_MUTE    = 0xB5;\u000a  const unsigned long DOM_VK_VOLUME_DOWN    = 0xB6;\u000a  const unsigned long DOM_VK_VOLUME_UP      = 0xB7;\u000a\u000a  const unsigned long DOM_VK_COMMA          = 0xBC;\u000a  const unsigned long DOM_VK_PERIOD         = 0xBE;\u000a  const unsigned long DOM_VK_SLASH          = 0xBF;\u000a  const unsigned long DOM_VK_BACK_QUOTE     = 0xC0;\u000a  const unsigned long DOM_VK_OPEN_BRACKET   = 0xDB; // square bracket\u000a  const unsigned long DOM_VK_BACK_SLASH     = 0xDC;\u000a  const unsigned long DOM_VK_CLOSE_BRACKET  = 0xDD; // square bracket\u000a  const unsigned long DOM_VK_QUOTE          = 0xDE; // Apostrophe\u000a\u000a  const unsigned long DOM_VK_META           = 0xE0;\u000a  const unsigned long DOM_VK_ALTGR          = 0xE1;\u000a\u000a  // OEM specific virtual keyCode of Windows should pass through DOM keyCode\u000a  // for compatibility with the other web browsers on Windows.\u000a  const unsigned long DOM_VK_WIN_ICO_HELP    = 0xE3;\u000a  const unsigned long DOM_VK_WIN_ICO_00      = 0xE4;\u000a  const unsigned long DOM_VK_WIN_ICO_CLEAR   = 0xE6;\u000a  const unsigned long DOM_VK_WIN_OEM_RESET   = 0xE9;\u000a  const unsigned long DOM_VK_WIN_OEM_JUMP    = 0xEA;\u000a  const unsigned long DOM_VK_WIN_OEM_PA1     = 0xEB;\u000a  const unsigned long DOM_VK_WIN_OEM_PA2     = 0xEC;\u000a  const unsigned long DOM_VK_WIN_OEM_PA3     = 0xED;\u000a  const unsigned long DOM_VK_WIN_OEM_WSCTRL  = 0xEE;\u000a  const unsigned long DOM_VK_WIN_OEM_CUSEL   = 0xEF;\u000a  const unsigned long DOM_VK_WIN_OEM_ATTN    = 0xF0;\u000a  const unsigned long DOM_VK_WIN_OEM_FINISH  = 0xF1;\u000a  const unsigned long DOM_VK_WIN_OEM_COPY    = 0xF2;\u000a  const unsigned long DOM_VK_WIN_OEM_AUTO    = 0xF3;\u000a  const unsigned long DOM_VK_WIN_OEM_ENLW    = 0xF4;\u000a  const unsigned long DOM_VK_WIN_OEM_BACKTAB = 0xF5;\u000a\u000a  // Following keys are not used on most keyboards.  However, for compatibility\u000a  // with other browsers on Windows, we should define them.\u000a  const unsigned long DOM_VK_ATTN           = 0xF6;\u000a  const unsigned long DOM_VK_CRSEL          = 0xF7;\u000a  const unsigned long DOM_VK_EXSEL          = 0xF8;\u000a  const unsigned long DOM_VK_EREOF          = 0xF9;\u000a  const unsigned long DOM_VK_PLAY           = 0xFA;\u000a  const unsigned long DOM_VK_ZOOM           = 0xFB;\u000a  const unsigned long DOM_VK_PA1            = 0xFD;\u000a\u000a  // OEM specific virtual keyCode of Windows should pass through DOM keyCode\u000a  // for compatibility with the other web browsers on Windows.\u000a  const unsigned long DOM_VK_WIN_OEM_CLEAR  = 0xFE;\u000a\u000a  void initKeyEvent(DOMString type,\u000a                    optional boolean canBubble = false,\u000a                    optional boolean cancelable = false,\u000a                    optional Window? view = null,\u000a                    optional boolean ctrlKey = false,\u000a                    optional boolean altKey = false,\u000a                    optional boolean shiftKey = false,\u000a                    optional boolean metaKey = false,\u000a                    optional unsigned long keyCode = 0,\u000a                    optional unsigned long charCode = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyIdsInitData.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyIdsInitData.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a// \"KeyIds\" EME init data format definition/parser, as defined by\u000a// https://w3c.github.io/encrypted-media/format-registry/initdata/keyids.html\u000adictionary KeyIdsInitData {\u000a  required sequence<DOMString> kids;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyboardEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyboardEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString typeArg, optional KeyboardEventInit keyboardEventInitDict)]\u000ainterface KeyboardEvent : UIEvent\u000a{\u000a  readonly attribute unsigned long    charCode;\u000a  [NeedsCallerType]\u000a  readonly attribute unsigned long    keyCode;\u000a\u000a  [NeedsCallerType]\u000a  readonly attribute boolean          altKey;\u000a  [NeedsCallerType]\u000a  readonly attribute boolean          ctrlKey;\u000a  [NeedsCallerType]\u000a  readonly attribute boolean          shiftKey;\u000a  readonly attribute boolean          metaKey;\u000a\u000a  [NeedsCallerType]\u000a  boolean getModifierState(DOMString key);\u000a\u000a  const unsigned long DOM_KEY_LOCATION_STANDARD = 0x00;\u000a  const unsigned long DOM_KEY_LOCATION_LEFT     = 0x01;\u000a  const unsigned long DOM_KEY_LOCATION_RIGHT    = 0x02;\u000a  const unsigned long DOM_KEY_LOCATION_NUMPAD   = 0x03;\u000a\u000a  readonly attribute unsigned long location;\u000a  readonly attribute boolean       repeat;\u000a  readonly attribute boolean       isComposing;\u000a\u000a  readonly attribute DOMString key;\u000a  [NeedsCallerType]\u000a  readonly attribute DOMString code;\u000a\u000a  [Throws]\u000a  void initKeyboardEvent(DOMString typeArg,\u000a                         optional boolean bubblesArg = false,\u000a                         optional boolean cancelableArg = false,\u000a                         optional Window? viewArg = null,\u000a                         optional DOMString keyArg = \"\",\u000a                         optional unsigned long locationArg = 0,\u000a                         optional boolean ctrlKey = false,\u000a                         optional boolean altKey = false,\u000a                         optional boolean shiftKey = false,\u000a                         optional boolean metaKey = false);\u000a\u000a  // This returns the initialized dictionary for generating a\u000a  // same-type keyboard event\u000a  [Cached, ChromeOnly, Constant]\u000a  readonly attribute KeyboardEventInit initDict;\u000a};\u000a\u000adictionary KeyboardEventInit : EventModifierInit\u000a{\u000a  DOMString      key           = \"\";\u000a  DOMString      code          = \"\";\u000a  unsigned long  location      = 0;\u000a  boolean        repeat        = false;\u000a  boolean        isComposing   = false;\u000a\u000a  // legacy attributes\u000a  unsigned long  charCode      = 0;\u000a  unsigned long  keyCode       = 0;\u000a  unsigned long  which         = 0;\u000a};\u000a\u000a// Mozilla extensions\u000aKeyboardEvent implements KeyEvent;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyframeAnimationOptions.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyframeAnimationOptions.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/fxtf/web-animations/#the-animatable-interface\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a// This typedef is off in its own file, because of bug 995352.\u000atypedef (unrestricted double or KeyframeAnimationOptions) UnrestrictedDoubleOrKeyframeAnimationOptions;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyframeEffect.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/KeyframeEffect.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/web-animations/#the-keyframeeffect-interfaces\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum IterationCompositeOperation {\u000a  \"replace\",\u000a  \"accumulate\"\u000a};\u000a\u000adictionary KeyframeEffectOptions : AnimationEffectTimingProperties {\u000a  IterationCompositeOperation iterationComposite = \"replace\";\u000a  CompositeOperation          composite = \"replace\";\u000a};\u000a\u000a// KeyframeEffectReadOnly should run in the caller's compartment to do custom\u000a// processing on the `keyframes` object.\u000a[Func=\"nsDocument::IsWebAnimationsEnabled\",\u000a RunConstructorInCallerCompartment,\u000a Constructor ((Element or CSSPseudoElement)? target,\u000a              object? keyframes,\u000a              optional (unrestricted double or KeyframeEffectOptions) options),\u000a Constructor (KeyframeEffectReadOnly source)]\u000ainterface KeyframeEffectReadOnly : AnimationEffectReadOnly {\u000a  readonly attribute (Element or CSSPseudoElement)?  target;\u000a  readonly attribute IterationCompositeOperation iterationComposite;\u000a  readonly attribute CompositeOperation          composite;\u000a\u000a  // We use object instead of ComputedKeyframe so that we can put the\u000a  // property-value pairs on the object.\u000a  [Throws] sequence<object> getKeyframes();\u000a};\u000a\u000a// Non-standard extensions\u000adictionary AnimationPropertyValueDetails {\u000a  required double             offset;\u000a           DOMString          value;\u000a           DOMString          easing;\u000a  required CompositeOperation composite;\u000a};\u000a\u000adictionary AnimationPropertyDetails {\u000a  required DOMString                               property;\u000a  required boolean                                 runningOnCompositor;\u000a           DOMString                               warning;\u000a  required sequence<AnimationPropertyValueDetails> values;\u000a};\u000a\u000apartial interface KeyframeEffectReadOnly {\u000a  [ChromeOnly, Throws] sequence<AnimationPropertyDetails> getProperties();\u000a};\u000a\u000a// KeyframeEffect should run in the caller's compartment to do custom\u000a// processing on the `keyframes` object.\u000a[Func=\"nsDocument::IsWebAnimationsEnabled\",\u000a RunConstructorInCallerCompartment,\u000a Constructor ((Element or CSSPseudoElement)? target,\u000a              object? keyframes,\u000a              optional (unrestricted double or KeyframeEffectOptions) options),\u000a Constructor (KeyframeEffectReadOnly source)]\u000ainterface KeyframeEffect : KeyframeEffectReadOnly {\u000a  inherit attribute (Element or CSSPseudoElement)? target;\u000a  [NeedsCallerType]\u000a  inherit attribute IterationCompositeOperation    iterationComposite;\u000a  inherit attribute CompositeOperation          composite;\u000a  [Throws]\u000a  void setKeyframes (object? keyframes);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/LegacyQueryInterface.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/LegacyQueryInterface.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface nsISupports;\u000ainterface IID;\u000a\u000a[NoInterfaceObject,\u000a // Need Exposed here, because this is a mixin onto things like Event\u000a // that are exposed in workers.\u000a Exposed=(Window,Worker,System)]\u000ainterface LegacyQueryInterface {\u000a  // Legacy QueryInterface, only exposed to chrome or XBL code on the\u000a  // main thread.\u000a  [Exposed=Window]\u000a  nsISupports queryInterface(IID iid);\u000a};\u000a\u000aAttr implements LegacyQueryInterface;\u000aBarProp implements LegacyQueryInterface;\u000aBoxObject implements LegacyQueryInterface;\u000aCaretPosition implements LegacyQueryInterface;\u000aComment implements LegacyQueryInterface;\u000aCrypto implements LegacyQueryInterface;\u000aCSSMozDocumentRule implements LegacyQueryInterface;\u000aCSSPrimitiveValue implements LegacyQueryInterface;\u000aCSSStyleDeclaration implements LegacyQueryInterface;\u000aCSSStyleRule implements LegacyQueryInterface;\u000aCSSValueList implements LegacyQueryInterface;\u000aDOMImplementation implements LegacyQueryInterface;\u000aDOMParser implements LegacyQueryInterface;\u000aDOMStringMap implements LegacyQueryInterface;\u000aDOMTokenList implements LegacyQueryInterface;\u000aDocument implements LegacyQueryInterface;\u000aDocumentFragment implements LegacyQueryInterface;\u000aDocumentType implements LegacyQueryInterface;\u000aElement implements LegacyQueryInterface;\u000aEvent implements LegacyQueryInterface;\u000aEventSource implements LegacyQueryInterface;\u000aFileList implements LegacyQueryInterface;\u000aFrameLoader implements LegacyQueryInterface;\u000aFormData implements LegacyQueryInterface;\u000aHTMLCollection implements LegacyQueryInterface;\u000aHistory implements LegacyQueryInterface;\u000aMimeTypeArray implements LegacyQueryInterface;\u000aNamedNodeMap implements LegacyQueryInterface;\u000aMutationObserver implements LegacyQueryInterface;\u000aMutationRecord implements LegacyQueryInterface;\u000aNavigator implements LegacyQueryInterface;\u000aNodeIterator implements LegacyQueryInterface;\u000aNodeList implements LegacyQueryInterface;\u000aNotification implements LegacyQueryInterface;\u000aOfflineResourceList implements LegacyQueryInterface;\u000aPaintRequest implements LegacyQueryInterface;\u000aPaintRequestList implements LegacyQueryInterface;\u000aPerformance implements LegacyQueryInterface;\u000aPlugin implements LegacyQueryInterface;\u000aPluginArray implements LegacyQueryInterface;\u000aProcessingInstruction implements LegacyQueryInterface;\u000aRange implements LegacyQueryInterface;\u000aRect implements LegacyQueryInterface;\u000aSelection implements LegacyQueryInterface;\u000aSVGAnimatedEnumeration implements LegacyQueryInterface;\u000aSVGAnimatedInteger implements LegacyQueryInterface;\u000aSVGAnimatedNumber implements LegacyQueryInterface;\u000aSVGAnimatedNumberList implements LegacyQueryInterface;\u000aSVGAnimatedPreserveAspectRatio implements LegacyQueryInterface;\u000aSVGAnimatedString implements LegacyQueryInterface;\u000aSVGLengthList implements LegacyQueryInterface;\u000aSVGNumberList implements LegacyQueryInterface;\u000aSVGPathSegList implements LegacyQueryInterface;\u000aSVGPoint implements LegacyQueryInterface;\u000aSVGPointList implements LegacyQueryInterface;\u000aSVGPreserveAspectRatio implements LegacyQueryInterface;\u000aSVGRect implements LegacyQueryInterface;\u000aSVGStringList implements LegacyQueryInterface;\u000aSVGTransformList implements LegacyQueryInterface;\u000aScreen implements LegacyQueryInterface;\u000aStyleSheet implements LegacyQueryInterface;\u000aText implements LegacyQueryInterface;\u000aTouch implements LegacyQueryInterface;\u000aTouchList implements LegacyQueryInterface;\u000aTreeColumns implements LegacyQueryInterface;\u000aTreeContentView implements LegacyQueryInterface;\u000aTreeWalker implements LegacyQueryInterface;\u000aValidityState implements LegacyQueryInterface;\u000aWebSocket implements LegacyQueryInterface;\u000aWindow implements LegacyQueryInterface;\u000aXMLHttpRequest implements LegacyQueryInterface;\u000aXMLHttpRequestUpload implements LegacyQueryInterface;\u000aXMLSerializer implements LegacyQueryInterface;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/LinkStyle.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/LinkStyle.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/cssom/#the-linkstyle-interface\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface LinkStyle {\u000a      readonly attribute StyleSheet? sheet;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ListBoxObject.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ListBoxObject.webidl"},contents:"\u000a/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface ListBoxObject : BoxObject {\u000a\u000a  long getRowCount();\u000a  long getRowHeight();\u000a  long getNumberOfVisibleRows();\u000a  long getIndexOfFirstVisibleRow();\u000a\u000a  void ensureIndexIsVisible(long rowIndex);\u000a  void scrollToIndex(long rowIndex);\u000a  void scrollByLines(long numLines);\u000a\u000a  Element? getItemAtIndex(long index);\u000a  long getIndexOfItem(Element item);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/LocalMediaStream.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/LocalMediaStream.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origins of this IDL file are\u000a * http://dev.w3.org/2011/webrtc/editor/getusermedia.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface LocalMediaStream : MediaStream {\u000a    void stop();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Location.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Location.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-location-interface\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a[Unforgeable, NonOrdinaryGetPrototypeOf]\u000ainterface Location {\u000a  // Bug 824857: no support for stringifier attributes yet.\u000a  //  stringifier attribute USVString href;\u000a\u000a  // Bug 824857 should remove this.\u000a  [Throws, NeedsSubjectPrincipal]\u000a  stringifier;\u000a\u000a  [Throws, CrossOriginWritable, GetterNeedsSubjectPrincipal]\u000a           attribute USVString href;\u000a  [Throws, NeedsSubjectPrincipal]\u000a  readonly attribute USVString origin;\u000a  [Throws, NeedsSubjectPrincipal]\u000a           attribute USVString protocol;\u000a  [Throws, NeedsSubjectPrincipal]\u000a           attribute USVString host;\u000a  [Throws, NeedsSubjectPrincipal]\u000a           attribute USVString hostname;\u000a  [Throws, NeedsSubjectPrincipal]\u000a           attribute USVString port;\u000a  [Throws, NeedsSubjectPrincipal]\u000a           attribute USVString pathname;\u000a  [Throws, NeedsSubjectPrincipal]\u000a           attribute USVString search;\u000a  [Throws, NeedsSubjectPrincipal]\u000a           attribute USVString hash;\u000a\u000a  [Throws, NeedsSubjectPrincipal]\u000a  void assign(USVString url);\u000a\u000a  [Throws, CrossOriginCallable, NeedsSubjectPrincipal]\u000a  void replace(USVString url);\u000a\u000a  // XXXbz there is no forceget argument in the spec!  See bug 1037721.\u000a  [Throws, NeedsSubjectPrincipal]\u000a  void reload(optional boolean forceget = false);\u000a\u000a  // Bug 1085214 [SameObject] readonly attribute USVString[] ancestorOrigins;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MatchGlob.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MatchGlob.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/**\u000a * Represents a simple glob pattern matcher. Any occurrence of \"*\" in the glob\u000a * pattern matches any literal string of characters in the string being\u000a * compared. Additionally, if created with `allowQuestion = true`, any\u000a * occurrence of \"?\" in the glob matches any single literal character.\u000a */\u000a[Constructor(DOMString glob, optional boolean allowQuestion = true),\u000a ChromeOnly, Exposed=(Window,System)]\u000ainterface MatchGlob {\u000a  /**\u000a   * Returns true if the string matches the glob.\u000a   */\u000a  boolean matches(DOMString string);\u000a\u000a  /**\u000a   * The glob string this MatchGlob represents.\u000a   */\u000a  [Constant]\u000a  readonly attribute DOMString glob;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MatchPattern.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MatchPattern.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000ainterface Cookie;\u000ainterface URI;\u000a\u000a/**\u000a * A URL match pattern as used by the WebExtension and Chrome extension APIs.\u000a *\u000a * A match pattern is a string with one of the following formats:\u000a *\u000a *  - \"<all_urls>\"\u000a *    The literal string \"<all_urls>\" matches any URL with a supported\u000a *    protocol.\u000a *\u000a *  - <proto>://<host>/<path>\u000a *    A URL pattern with the following placeholders:\u000a *\u000a *    - <proto>\u000a *      The protocol to match, or \"*\" to match either \"http\" or \"https\".\u000a *    - <host>\u000a *      The hostname to match. May be either a complete, literal hostname to\u000a *      match a specific host, the wildcard character \"*\", to match any host,\u000a *      or a subdomain pattern, with \"*.\" followed by a domain name, to match\u000a *      that domain name or any subdomain thereof.\u000a *    - <path>\u000a *      A glob pattern for paths to match. A \"*\" may appear anywhere within\u000a *      the path, and will match any string of characters. If no \"*\" appears,\u000a *      the URL path must exactly match the pattern path.\u000a */\u000a[Constructor(DOMString pattern, optional MatchPatternOptions options),\u000a ChromeOnly, Exposed=(Window,System)]\u000ainterface MatchPattern {\u000a  /**\u000a   * Returns true if the given URI matches the pattern.\u000a   *\u000a   * If explicit is true, only explicit domain matches, without wildcards, are\u000a   * considered.\u000a   */\u000a  [Throws]\u000a  boolean matches(URI uri, optional boolean explicit = false);\u000a\u000a  [Throws]\u000a  boolean matches(DOMString url, optional boolean explicit = false);\u000a\u000a  /**\u000a   * Returns true if a URL exists which a) would be able to access the given\u000a   * cookie, and b) would be matched by this match pattern.\u000a   */\u000a  boolean matchesCookie(Cookie cookie);\u000a\u000a  /**\u000a   * Returns true if this pattern will match any host which would be matched\u000a   * by the given pattern.\u000a   */\u000a  boolean subsumes(MatchPattern pattern);\u000a\u000a  /**\u000a   * Returns true if there is any host which would be matched by both this\u000a   * pattern and the given pattern.\u000a   */\u000a  boolean overlaps(MatchPattern pattern);\u000a\u000a  /**\u000a   * The match pattern string represented by this pattern.\u000a   */\u000a  [Constant]\u000a  readonly attribute DOMString pattern;\u000a};\u000a\u000a/**\u000a * A set of MatchPattern objects, which implements the MatchPattern API and\u000a * matches when any of its sub-patterns matches.\u000a */\u000a[Constructor(sequence<(DOMString or MatchPattern)> patterns, optional MatchPatternOptions options),\u000a ChromeOnly, Exposed=(Window,System)]\u000ainterface MatchPatternSet {\u000a  /**\u000a   * Returns true if the given URI matches any sub-pattern.\u000a   *\u000a   * If explicit is true, only explicit domain matches, without wildcards, are\u000a   * considered.\u000a   */\u000a  [Throws]\u000a  boolean matches(URI uri, optional boolean explicit = false);\u000a\u000a  [Throws]\u000a  boolean matches(DOMString url, optional boolean explicit = false);\u000a\u000a  /**\u000a   * Returns true if any sub-pattern matches the given cookie.\u000a   */\u000a  boolean matchesCookie(Cookie cookie);\u000a\u000a  /**\u000a   * Returns true if any sub-pattern subsumes the given pattern.\u000a   */\u000a  boolean subsumes(MatchPattern pattern);\u000a\u000a  /**\u000a   * Returns true if any sub-pattern overlaps the given pattern.\u000a   */\u000a  boolean overlaps(MatchPattern pattern);\u000a\u000a  /**\u000a   * Returns true if any sub-pattern overlaps any sub-pattern the given\u000a   * pattern set.\u000a   */\u000a  boolean overlaps(MatchPatternSet patternSet);\u000a\u000a  /**\u000a   * Returns true if any sub-pattern overlaps *every* sub-pattern in the given\u000a   * pattern set.\u000a   */\u000a  boolean overlapsAll(MatchPatternSet patternSet);\u000a\u000a  [Cached, Constant, Frozen]\u000a  readonly attribute sequence<MatchPattern> patterns;\u000a};\u000a\u000adictionary MatchPatternOptions {\u000a  /**\u000a   * If true, the path portion of the pattern is ignored, and replaced with a\u000a   * wildcard. The `pattern` property is updated to reflect this.\u000a   */\u000a  boolean ignorePath = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaDeviceInfo.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaDeviceInfo.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/getusermedia.html\u000a */\u000a\u000aenum MediaDeviceKind {\u000a  \"audioinput\",\u000a  \"audiooutput\",\u000a  \"videoinput\"\u000a};\u000a\u000a[Func=\"Navigator::HasUserMediaSupport\"]\u000ainterface MediaDeviceInfo {\u000a  readonly attribute DOMString       deviceId;\u000a  readonly attribute MediaDeviceKind kind;\u000a  readonly attribute DOMString       label;\u000a  readonly attribute DOMString       groupId;\u000a\u000a  jsonifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaDevices.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaDevices.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/getusermedia.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Func=\"Navigator::HasUserMediaSupport\"]\u000ainterface MediaDevices : EventTarget {\u000a  [Pref=\"media.ondevicechange.enabled\"]\u000a  attribute EventHandler ondevicechange;\u000a  MediaTrackSupportedConstraints getSupportedConstraints();\u000a\u000a  [Throws, NeedsCallerType]\u000a  Promise<sequence<MediaDeviceInfo>> enumerateDevices();\u000a\u000a  [Throws, NeedsCallerType]\u000a  Promise<MediaStream> getUserMedia(optional MediaStreamConstraints constraints);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaElementAudioSourceNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaElementAudioSourceNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary MediaElementAudioSourceOptions {\u000a    required HTMLMediaElement mediaElement;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(AudioContext context, MediaElementAudioSourceOptions options)]\u000ainterface MediaElementAudioSourceNode : AudioNode {\u000a\u000a};\u000a\u000a// Mozilla extensions\u000aMediaElementAudioSourceNode implements AudioNodePassThrough;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaEncryptedEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaEncryptedEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/html-media/raw-file/default/encrypted-media/encrypted-media.html\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString type, optional MediaKeyNeededEventInit eventInitDict)]\u000ainterface MediaEncryptedEvent : Event {\u000a  readonly attribute DOMString initDataType;\u000a  [Throws]\u000a  readonly attribute ArrayBuffer? initData;\u000a};\u000a\u000adictionary MediaKeyNeededEventInit : EventInit {\u000a  DOMString initDataType = \"\";\u000a  ArrayBuffer? initData = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaError.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaError.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/html/#mediaerror\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000ainterface MediaError {\u000a  // Keep these constants in sync with the ones defined in HTMLMediaElement.h\u000a  const unsigned short MEDIA_ERR_ABORTED = 1;\u000a  const unsigned short MEDIA_ERR_NETWORK = 2;\u000a  const unsigned short MEDIA_ERR_DECODE = 3;\u000a  const unsigned short MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\u000a\u000a  [Constant]\u000a  readonly attribute unsigned short code;\u000a  readonly attribute DOMString message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeyError.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeyError.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/html-media/raw-file/default/encrypted-media/encrypted-media.html\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000a// According to the spec, \"The future of error events and MediaKeyError\u000a// is uncertain.\"\u000a// https://www.w3.org/Bugs/Public/show_bug.cgi?id=21798\u000ainterface MediaKeyError : Event {\u000a  readonly attribute unsigned long systemCode;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeyMessageEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeyMessageEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/html-media/raw-file/default/encrypted-media/encrypted-media.html\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000aenum MediaKeyMessageType {\u000a  \"license-request\",\u000a  \"license-renewal\",\u000a  \"license-release\",\u000a  \"individualization-request\"\u000a};\u000a\u000a[Constructor(DOMString type, MediaKeyMessageEventInit eventInitDict)]\u000ainterface MediaKeyMessageEvent : Event {\u000a  readonly attribute MediaKeyMessageType messageType;\u000a  [Throws]\u000a  readonly attribute ArrayBuffer message;\u000a};\u000a\u000adictionary MediaKeyMessageEventInit : EventInit {\u000a  required MediaKeyMessageType messageType;\u000a  required ArrayBuffer message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeySession.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeySession.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/html-media/raw-file/default/encrypted-media/encrypted-media.html\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface MediaKeySession : EventTarget {\u000a  // error state\u000a  readonly attribute MediaKeyError? error;\u000a\u000a  // session properties\u000a  readonly attribute DOMString sessionId;\u000a\u000a  readonly attribute unrestricted double expiration;\u000a\u000a  readonly attribute Promise<void> closed;\u000a\u000a  readonly attribute MediaKeyStatusMap keyStatuses;\u000a\u000a  attribute EventHandler onkeystatuseschange;\u000a\u000a  attribute EventHandler onmessage;\u000a\u000a  [NewObject]\u000a  Promise<void> generateRequest(DOMString initDataType, BufferSource initData);\u000a\u000a  [NewObject]\u000a  Promise<boolean> load(DOMString sessionId);\u000a\u000a  // session operations\u000a  [NewObject]\u000a  Promise<void> update(BufferSource response);\u000a\u000a  [NewObject]\u000a  Promise<void> close();\u000a\u000a  [NewObject]\u000a  Promise<void> remove();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeyStatusMap.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeyStatusMap.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/html-media/raw-file/default/encrypted-media/encrypted-media.html\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000aenum MediaKeyStatus {\u000a  \"usable\",\u000a  \"expired\",\u000a  \"released\",\u000a  \"output-restricted\",\u000a  \"output-downscaled\",\u000a  \"status-pending\",\u000a  \"internal-error\"\u000a};\u000a\u000ainterface MediaKeyStatusMap {\u000a  iterable<ArrayBuffer,MediaKeyStatus>;\u000a  readonly attribute unsigned long size;\u000a  boolean has (BufferSource keyId);\u000a  [Throws]\u000a  any get (BufferSource keyId);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeySystemAccess.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeySystemAccess.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/html-media/raw-file/default/encrypted-media/encrypted-media.html\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000aenum MediaKeysRequirement {\u000a  \"required\",\u000a  \"optional\",\u000a  \"not-allowed\"\u000a};\u000a\u000adictionary MediaKeySystemMediaCapability {\u000a   DOMString contentType = \"\";\u000a   DOMString robustness = \"\";\u000a};\u000a\u000adictionary MediaKeySystemConfiguration {\u000a  DOMString                               label = \"\";\u000a  sequence<DOMString>                     initDataTypes = [];\u000a  sequence<MediaKeySystemMediaCapability> audioCapabilities = [];\u000a  sequence<MediaKeySystemMediaCapability> videoCapabilities = [];\u000a  MediaKeysRequirement                    distinctiveIdentifier = \"optional\";\u000a  MediaKeysRequirement                    persistentState = \"optional\";\u000a  sequence<DOMString>                     sessionTypes;\u000a};\u000a\u000ainterface MediaKeySystemAccess {\u000a  readonly    attribute DOMString keySystem;\u000a  [NewObject]\u000a  MediaKeySystemConfiguration getConfiguration();\u000a  [NewObject]\u000a  Promise<MediaKeys> createMediaKeys();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeys.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeys.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/html-media/raw-file/default/encrypted-media/encrypted-media.html\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000a// Note: \"persistent-usage-record\" session type is unsupported yet, as\u000a// it's marked as \"at risk\" in the spec, and Chrome doesn't support it. \u000aenum MediaKeySessionType {\u000a  \"temporary\",\u000a  \"persistent-license\",\u000a  // persistent-usage-record,\u000a};\u000a\u000a// https://github.com/WICG/media-capabilities/blob/master/eme-extension-policy-check.md\u000adictionary MediaKeysPolicy {\u000a  DOMString minHdcpVersion = \"\";\u000a};\u000a\u000ainterface MediaKeys {\u000a  readonly attribute DOMString keySystem;\u000a\u000a  [NewObject, Throws]\u000a  MediaKeySession createSession(optional MediaKeySessionType sessionType = \"temporary\");\u000a\u000a  [NewObject]\u000a  Promise<void> setServerCertificate(BufferSource serverCertificate);\u000a\u000a  [Pref=\"media.eme.hdcp-policy-check.enabled\", NewObject]\u000a  Promise<MediaKeyStatus> getStatusForPolicy(optional MediaKeysPolicy policy);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeysRequestStatus.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaKeysRequestStatus.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000aenum MediaKeySystemStatus {\u000a  \"available\",\u000a  \"api-disabled\",\u000a  \"cdm-disabled\",\u000a  \"cdm-not-supported\",\u000a  \"cdm-not-installed\",\u000a  \"cdm-created\",\u000a};\u000a\u000a/* Note: This dictionary and enum is only used by Gecko to convey messages\u000a * to chrome JS code. It is not exposed to the web.\u000a */\u000a\u000adictionary RequestMediaKeySystemAccessNotification {\u000a  required DOMString keySystem;\u000a  required MediaKeySystemStatus status;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a// http://dev.w3.org/csswg/cssom/#the-medialist-interface\u000a\u000a[ArrayClass]\u000ainterface MediaList {\u000a  [TreatNullAs=EmptyString]\u000a           attribute DOMString        mediaText;\u000a\u000a  readonly attribute unsigned long    length;\u000a  getter DOMString?  item(unsigned long index);\u000a  [Throws]\u000a  void               deleteMedium(DOMString oldMedium);\u000a  [Throws]\u000a  void               appendMedium(DOMString newMedium);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaQueryList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaQueryList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.csswg.org/cssom-view/#mediaquerylist\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface MediaQueryList : EventTarget {\u000a  readonly attribute DOMString media;\u000a  readonly attribute boolean matches;\u000a\u000a  [Throws]\u000a  void addListener(EventListener? listener);\u000a\u000a  [Throws]\u000a  void removeListener(EventListener? listener);\u000a\u000a           attribute EventHandler onchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Node.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Node.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface Principal;\u000ainterface URI;\u000a\u000ainterface Node : EventTarget {\u000a  const unsigned short ELEMENT_NODE = 1;\u000a  const unsigned short ATTRIBUTE_NODE = 2; // historical\u000a  const unsigned short TEXT_NODE = 3;\u000a  const unsigned short CDATA_SECTION_NODE = 4; // historical\u000a  const unsigned short ENTITY_REFERENCE_NODE = 5; // historical\u000a  const unsigned short ENTITY_NODE = 6; // historical\u000a  const unsigned short PROCESSING_INSTRUCTION_NODE = 7;\u000a  const unsigned short COMMENT_NODE = 8;\u000a  const unsigned short DOCUMENT_NODE = 9;\u000a  const unsigned short DOCUMENT_TYPE_NODE = 10;\u000a  const unsigned short DOCUMENT_FRAGMENT_NODE = 11;\u000a  const unsigned short NOTATION_NODE = 12; // historical\u000a  [Constant]\u000a  readonly attribute unsigned short nodeType;\u000a  [Pure]\u000a  readonly attribute DOMString nodeName;\u000a\u000a  [Pure, Throws, NeedsCallerType, BinaryName=\"baseURIFromJS\"]\u000a  readonly attribute DOMString? baseURI;\u000a\u000a  [Pure, BinaryName=getComposedDoc]\u000a  readonly attribute boolean isConnected;\u000a  [Pure]\u000a  readonly attribute Document? ownerDocument;\u000a  [Pure]\u000a  Node getRootNode(optional GetRootNodeOptions options);\u000a  [Pure]\u000a  readonly attribute Node? parentNode;\u000a  [Pure]\u000a  readonly attribute Element? parentElement;\u000a  [Pure]\u000a  boolean hasChildNodes();\u000a  [SameObject]\u000a  readonly attribute NodeList childNodes;\u000a  [Pure]\u000a  readonly attribute Node? firstChild;\u000a  [Pure]\u000a  readonly attribute Node? lastChild;\u000a  [Pure]\u000a  readonly attribute Node? previousSibling;\u000a  [Pure]\u000a  readonly attribute Node? nextSibling;\u000a\u000a  [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString? nodeValue;\u000a  [CEReactions, SetterThrows, GetterCanOOM,\u000a   SetterNeedsSubjectPrincipal=NonSystem, Pure]\u000a           attribute DOMString? textContent;\u000a  [CEReactions, Throws]\u000a  Node insertBefore(Node node, Node? child);\u000a  [CEReactions, Throws]\u000a  Node appendChild(Node node);\u000a  [CEReactions, Throws]\u000a  Node replaceChild(Node node, Node child);\u000a  [CEReactions, Throws]\u000a  Node removeChild(Node child);\u000a  [CEReactions]\u000a  void normalize();\u000a\u000a  [CEReactions, Throws]\u000a  Node cloneNode(optional boolean deep = false);\u000a  [Pure]\u000a  boolean isSameNode(Node? node);\u000a  [Pure]\u000a  boolean isEqualNode(Node? node);\u000a\u000a  const unsigned short DOCUMENT_POSITION_DISCONNECTED = 0x01;\u000a  const unsigned short DOCUMENT_POSITION_PRECEDING = 0x02;\u000a  const unsigned short DOCUMENT_POSITION_FOLLOWING = 0x04;\u000a  const unsigned short DOCUMENT_POSITION_CONTAINS = 0x08;\u000a  const unsigned short DOCUMENT_POSITION_CONTAINED_BY = 0x10;\u000a  const unsigned short DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 0x20; // historical\u000a  [Pure]\u000a  unsigned short compareDocumentPosition(Node other);\u000a  [Pure]\u000a  boolean contains(Node? other);\u000a\u000a  [Pure]\u000a  DOMString? lookupPrefix(DOMString? namespace);\u000a  [Pure]\u000a  DOMString? lookupNamespaceURI(DOMString? prefix);\u000a  [Pure]\u000a  boolean isDefaultNamespace(DOMString? namespace);\u000a\u000a  // Mozilla-specific stuff\u000a  [Throws, Func=\"IsChromeOrXBL\"]\u000a  any setUserData(DOMString key, any data);\u000a  [Throws, Func=\"IsChromeOrXBL\"]\u000a  any getUserData(DOMString key);\u000a  [ChromeOnly]\u000a  readonly attribute Principal nodePrincipal;\u000a  [ChromeOnly]\u000a  readonly attribute URI? baseURIObject;\u000a  [ChromeOnly]\u000a  sequence<MutationObserver> getBoundMutationObservers();\u000a  [ChromeOnly]\u000a  DOMString generateXPath();\u000a\u000a#ifdef ACCESSIBILITY\u000a  [Pref=\"accessibility.AOM.enabled\"]\u000a  readonly attribute AccessibleNode? accessibleNode;\u000a#endif\u000a};\u000a\u000adictionary GetRootNodeOptions {\u000a  boolean composed = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaQueryListEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaQueryListEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * https://drafts.csswg.org/cssom-view/#mediaquerylistevent\u000a */\u000a\u000a[Constructor(DOMString type, optional MediaQueryListEventInit eventInitDict)]\u000ainterface MediaQueryListEvent : Event {\u000a  readonly attribute DOMString media;\u000a  readonly attribute boolean matches;\u000a};\u000a\u000adictionary MediaQueryListEventInit : EventInit {\u000a  DOMString media = \"\";\u000a  boolean matches = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaRecorder.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaRecorder.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/MediaRecorder.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum RecordingState { \"inactive\", \"recording\", \"paused\" };\u000a\u000a[Constructor(MediaStream stream, optional MediaRecorderOptions options),\u000a Constructor(AudioNode node, optional unsigned long output = 0,\u000a             optional MediaRecorderOptions options)]\u000ainterface MediaRecorder : EventTarget {\u000a\u000a  readonly attribute MediaStream stream;\u000a\u000a  readonly attribute RecordingState state;\u000a\u000a  readonly attribute DOMString mimeType;\u000a\u000a  attribute EventHandler ondataavailable;\u000a\u000a  attribute EventHandler onerror;\u000a\u000a  attribute EventHandler onstart;\u000a\u000a  attribute EventHandler onstop;\u000a\u000a  attribute EventHandler onwarning;\u000a\u000a  [Throws]\u000a  void start(optional long timeSlice);\u000a\u000a  [Throws]\u000a  void stop();\u000a\u000a  [Throws]\u000a  void pause();\u000a\u000a  [Throws]\u000a  void resume();\u000a\u000a  [Throws]\u000a  void requestData();\u000a\u000a  static boolean isTypeSupported(DOMString type);\u000a};\u000a\u000adictionary MediaRecorderOptions {\u000a  DOMString mimeType = \"\"; // Default encoding mimeType.\u000a  unsigned long audioBitsPerSecond;\u000a  unsigned long videoBitsPerSecond;\u000a  unsigned long bitsPerSecond;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaRecorderErrorEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaRecorderErrorEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000d\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000d\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000d\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000d\u000a *\u000d\u000a * The origin of this IDL file is\u000d\u000a * https://w3c.github.io/mediacapture-record/\u000d\u000a *\u000d\u000a * Copyright © 2017 W3C® (MIT, ERCIM, Keio, Beihang). W3C liability, trademark\u000d\u000a * and document use rules apply.\u000d\u000a */\u000d\u000a\u000d\u000adictionary MediaRecorderErrorEventInit : EventInit {\u000d\u000a  required DOMException error;\u000d\u000a};\u000d\u000a\u000d\u000a[Exposed=Window,\u000d\u000a  Constructor(DOMString type, MediaRecorderErrorEventInit eventInitDict)]\u000d\u000ainterface MediaRecorderErrorEvent : Event {\u000d\u000a  [SameObject] readonly attribute DOMException error;\u000d\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaSource.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaSource.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/html-media/raw-file/default/media-source/media-source.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum MediaSourceReadyState {\u000a  \"closed\",\u000a  \"open\",\u000a  \"ended\"\u000a};\u000a\u000aenum MediaSourceEndOfStreamError {\u000a  \"network\",\u000a  \"decode\"\u000a};\u000a\u000a[Constructor, Func=\"mozilla::dom::MediaSource::Enabled\"]\u000ainterface MediaSource : EventTarget {\u000a  readonly attribute SourceBufferList sourceBuffers;\u000a  readonly attribute SourceBufferList activeSourceBuffers;\u000a  readonly attribute MediaSourceReadyState readyState;\u000a  [SetterThrows]\u000a  attribute unrestricted double duration;\u000a  attribute EventHandler onsourceopen;\u000a  attribute EventHandler onsourceended;\u000a  attribute EventHandler onsourceclosed;\u000a  [NewObject, Throws]\u000a  SourceBuffer addSourceBuffer(DOMString type);\u000a  [Throws]\u000a  void removeSourceBuffer(SourceBuffer sourceBuffer);\u000a  [Throws]\u000a  void endOfStream(optional MediaSourceEndOfStreamError error);\u000a  [Throws]\u000a  void setLiveSeekableRange(double start, double end);\u000a  [Throws]\u000a  void clearLiveSeekableRange();\u000a  static boolean isTypeSupported(DOMString type);\u000a  [ChromeOnly]\u000a  readonly attribute DOMString mozDebugReaderData;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStream.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStream.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origins of this IDL file are\u000a * http://dev.w3.org/2011/webrtc/editor/getusermedia.html\u000a *\u000a * Copyright � 2012 W3C� (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a// These dictionaries need to be in a separate file from their\u000a// MediaTrackConstraints* counterparts due to a webidl compiler limitation.\u000a\u000adictionary MediaStreamConstraints {\u000a    (boolean or MediaTrackConstraints) audio = false;\u000a    (boolean or MediaTrackConstraints) video = false;\u000a    boolean picture = false; // Mozilla legacy\u000a    boolean fake;       // For testing purpose. Generates frames of solid\u000a                        // colors if video is enabled, and sound of 1Khz sine\u000a                        // wave if audio is enabled.\u000a    DOMString? peerIdentity = null;\u000a};\u000a\u000a[Exposed=Window,\u000a Constructor,\u000a Constructor (MediaStream stream),\u000a Constructor (sequence<MediaStreamTrack> tracks)]\u000ainterface MediaStream : EventTarget {\u000a    readonly    attribute DOMString    id;\u000a    sequence<AudioStreamTrack> getAudioTracks ();\u000a    sequence<VideoStreamTrack> getVideoTracks ();\u000a    sequence<MediaStreamTrack> getTracks ();\u000a    MediaStreamTrack?          getTrackById (DOMString trackId);\u000a    void                       addTrack (MediaStreamTrack track);\u000a    void                       removeTrack (MediaStreamTrack track);\u000a    MediaStream                clone ();\u000a    readonly    attribute boolean      active;\u000a                attribute EventHandler onaddtrack;\u000a                attribute EventHandler onremovetrack;\u000a    readonly attribute double currentTime;\u000a\u000a    [ChromeOnly, Throws]\u000a    static Promise<long> countUnderlyingStreams();\u000a\u000a    // Webrtc allows the remote side to name a stream whatever it wants, and we\u000a    // need to surface this to content.\u000a    [ChromeOnly]\u000a    void assignId(DOMString id);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamAudioDestinationNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamAudioDestinationNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(AudioContext context, optional AudioNodeOptions options)]\u000ainterface MediaStreamAudioDestinationNode : AudioNode {\u000a    readonly attribute MediaStream stream;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamAudioSourceNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamAudioSourceNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary MediaStreamAudioSourceOptions {\u000a    required MediaStream mediaStream;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(AudioContext context, MediaStreamAudioSourceOptions options)]\u000ainterface MediaStreamAudioSourceNode : AudioNode {\u000a\u000a};\u000a\u000a// Mozilla extensions\u000aMediaStreamAudioSourceNode implements AudioNodePassThrough;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamError.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamError.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://w3c.github.io/mediacapture-main/getusermedia.html#idl-def-MediaStreamError\u000a */\u000a\u000a// The future of MediaStreamError is uncertain.\u000a// https://www.w3.org/Bugs/Public/show_bug.cgi?id=26776\u000a\u000a// TODO: This is an 'exception', not an interface, by virtue of needing to be\u000a// passed as a promise rejection-reason. Revisit if DOMException grows a customArg\u000a\u000a[ExceptionClass, NoInterfaceObject]\u000ainterface MediaStreamError {\u000a  readonly attribute DOMString  name;\u000a  readonly attribute DOMString? message;\u000a  readonly attribute DOMString? constraint;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/webrtc.html#mediastreamevent\u000a */\u000a\u000adictionary MediaStreamEventInit : EventInit {\u000a    MediaStream? stream = null;\u000a};\u000a\u000a[Pref=\"media.peerconnection.enabled\",\u000a Constructor(DOMString type, optional MediaStreamEventInit eventInitDict)]\u000ainterface MediaStreamEvent : Event {\u000a  readonly attribute MediaStream? stream;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamTrack.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamTrack.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/getusermedia.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a// These two enums are in the spec even though they're not used directly in the\u000a// API due to https://www.w3.org/Bugs/Public/show_bug.cgi?id=19936\u000a// Their binding code is used in the implementation.\u000a\u000aenum VideoFacingModeEnum {\u000a    \"user\",\u000a    \"environment\",\u000a    \"left\",\u000a    \"right\"\u000a};\u000a\u000aenum MediaSourceEnum {\u000a    \"camera\",\u000a    \"screen\",\u000a    \"application\",\u000a    \"window\",\u000a    \"browser\",\u000a    \"microphone\",\u000a    \"audioCapture\",\u000a    \"other\"\u000a    // If values are added, adjust n_values in Histograms.json (2 places)\u000a};\u000a\u000atypedef (long or ConstrainLongRange) ConstrainLong;\u000atypedef (double or ConstrainDoubleRange) ConstrainDouble;\u000atypedef (boolean or ConstrainBooleanParameters) ConstrainBoolean;\u000atypedef (DOMString or sequence<DOMString> or ConstrainDOMStringParameters) ConstrainDOMString;\u000a\u000a// Note: When adding new constraints, remember to update the SelectSettings()\u000a// function in MediaManager.cpp to make OverconstrainedError's constraint work!\u000a\u000adictionary MediaTrackConstraintSet {\u000a    ConstrainLong width;\u000a    ConstrainLong height;\u000a    ConstrainDouble frameRate;\u000a    ConstrainDOMString facingMode;\u000a    DOMString mediaSource = \"camera\";\u000a    long long browserWindow;\u000a    boolean scrollWithPage;\u000a    ConstrainDOMString deviceId;\u000a    ConstrainLong viewportOffsetX;\u000a    ConstrainLong viewportOffsetY;\u000a    ConstrainLong viewportWidth;\u000a    ConstrainLong viewportHeight;\u000a    ConstrainBoolean echoCancellation;\u000a    ConstrainBoolean noiseSuppression;\u000a    ConstrainBoolean autoGainControl;\u000a    ConstrainLong channelCount;\u000a\u000a    // Deprecated with warnings:\u000a    ConstrainBoolean mozNoiseSuppression;\u000a    ConstrainBoolean mozAutoGainControl;\u000a};\u000a\u000adictionary MediaTrackConstraints : MediaTrackConstraintSet {\u000a    sequence<MediaTrackConstraintSet> advanced;\u000a};\u000a\u000aenum MediaStreamTrackState {\u000a    \"live\",\u000a    \"ended\"\u000a};\u000a\u000a[Exposed=Window]\u000ainterface MediaStreamTrack : EventTarget {\u000a    readonly    attribute DOMString             kind;\u000a    readonly    attribute DOMString             id;\u000a    [NeedsCallerType]\u000a    readonly    attribute DOMString             label;\u000a                attribute boolean               enabled;\u000a    readonly    attribute boolean               muted;\u000a                attribute EventHandler          onmute;\u000a                attribute EventHandler          onunmute;\u000a    readonly    attribute MediaStreamTrackState readyState;\u000a                attribute EventHandler          onended;\u000a    MediaStreamTrack       clone ();\u000a    void                   stop ();\u000a//  MediaTrackCapabilities getCapabilities ();\u000a    MediaTrackConstraints  getConstraints ();\u000a    [NeedsCallerType]\u000a    MediaTrackSettings     getSettings ();\u000a\u000a    [Throws, NeedsCallerType]\u000a    Promise<void>          applyConstraints (optional MediaTrackConstraints constraints);\u000a//              attribute EventHandler          onoverconstrained;\u000a\u000a    [ChromeOnly]\u000a    void mutedChanged(boolean muted);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamTrackEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaStreamTrackEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/webrtc.html#mediastreamevent\u000a */\u000a\u000adictionary MediaStreamTrackEventInit : EventInit {\u000a    required MediaStreamTrack track;\u000a};\u000a\u000a[Exposed=Window,\u000a Constructor (DOMString type, MediaStreamTrackEventInit eventInitDict)]\u000ainterface MediaStreamTrackEvent : Event {\u000a    [SameObject]\u000a    readonly        attribute MediaStreamTrack track;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaTrackConstraintSet.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaTrackConstraintSet.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/getusermedia.html\u000a */\u000a\u000a// These dictionaries need to be in a separate file from their use in unions\u000a// in MediaSreamTrack.webidl due to a webidl compiler limitation:\u000a//\u000a// TypeError: Dictionary contains a union that contains a dictionary in the same\u000a// WebIDL file.  This won't compile.  Move the inner dictionary to a different file.\u000a\u000adictionary ConstrainLongRange {\u000a    long min;\u000a    long max;\u000a    long exact;\u000a    long ideal;\u000a};\u000a\u000adictionary ConstrainDoubleRange {\u000a    double min;\u000a    double max;\u000a    double exact;\u000a    double ideal;\u000a};\u000a\u000adictionary ConstrainBooleanParameters {\u000a    boolean exact;\u000a    boolean ideal;\u000a};\u000a\u000adictionary ConstrainDOMStringParameters {\u000a    (DOMString or sequence<DOMString>) exact;\u000a    (DOMString or sequence<DOMString>) ideal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaTrackSettings.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaTrackSettings.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://w3c.github.io/mediacapture-main/getusermedia.html\u000a */\u000a\u000adictionary MediaTrackSettings {\u000a    long      width;\u000a    long      height;\u000a    double    frameRate;\u000a    DOMString facingMode;\u000a    DOMString deviceId;\u000a    boolean echoCancellation;\u000a    boolean noiseSuppression;\u000a    boolean autoGainControl;\u000a    long      channelCount;\u000a\u000a    // Mozilla-specific extensions:\u000a\u000a    // http://fluffy.github.io/w3c-screen-share/#screen-based-video-constraints\u000a    // OBE by http://w3c.github.io/mediacapture-screen-share\u000a\u000a    DOMString mediaSource;\u000a\u000a    // Experimental https://bugzilla.mozilla.org/show_bug.cgi?id=1131568#c3\u000a    //              https://bugzilla.mozilla.org/show_bug.cgi?id=1193075\u000a\u000a    long long browserWindow;\u000a    boolean scrollWithPage;\u000a    long viewportOffsetX;\u000a    long viewportOffsetY;\u000a    long viewportWidth;\u000a    long viewportHeight;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaTrackSupportedConstraints.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MediaTrackSupportedConstraints.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/getusermedia.html\u000a */\u000a\u000adictionary MediaTrackSupportedConstraints {\u000a    boolean width = true;\u000a    boolean height = true;\u000a    boolean aspectRatio;        // to be supported\u000a    boolean frameRate = true;\u000a    boolean facingMode = true;\u000a    boolean volume;             // to be supported\u000a    boolean sampleRate;         // to be supported\u000a    boolean sampleSize;         // to be supported\u000a    boolean echoCancellation = true;\u000a    boolean noiseSuppression = true;\u000a    boolean autoGainControl = true;\u000a    boolean latency;            // to be supported\u000a    boolean channelCount = true;\u000a    boolean deviceId = true;\u000a    boolean groupId;            // to be supported\u000a\u000a    // Mozilla-specific extensions:\u000a\u000a    // http://fluffy.github.io/w3c-screen-share/#screen-based-video-constraints\u000a    // OBE by http://w3c.github.io/mediacapture-screen-share\u000a\u000a    boolean mediaSource = true;\u000a\u000a    // Experimental https://bugzilla.mozilla.org/show_bug.cgi?id=1131568#c3\u000a    //              https://bugzilla.mozilla.org/show_bug.cgi?id=1193075\u000a\u000a    boolean browserWindow = true;\u000a    boolean scrollWithPage = true;\u000a    boolean viewportOffsetX = true;\u000a    boolean viewportOffsetY = true;\u000a    boolean viewportWidth = true;\u000a    boolean viewportHeight = true;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MenuBoxObject.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MenuBoxObject.webidl"},contents:"\u000a/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Func=\"IsChromeOrXBL\"]\u000ainterface MenuBoxObject : BoxObject {\u000a\u000a  void openMenu(boolean openFlag);\u000a\u000a  attribute Element? activeChild;\u000a\u000a  boolean handleKeyPress(KeyboardEvent keyEvent);\u000a\u000a  readonly attribute boolean openedWithKey;\u000a\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MessageChannel.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MessageChannel.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface, please see\u000a * http://www.whatwg.org/specs/web-apps/current-work/#channel-messaging\u000a */\u000a\u000a[Constructor, Exposed=(Window,Worker)]\u000ainterface MessageChannel {\u000a  readonly attribute MessagePort port1;\u000a  readonly attribute MessagePort port2;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MessageEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MessageEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface, please see\u000a * https://html.spec.whatwg.org/#messageevent\u000a */\u000a\u000a[Constructor(DOMString type, optional MessageEventInit eventInitDict),\u000a Exposed=(Window,Worker,System)]\u000ainterface MessageEvent : Event {\u000a  /**\u000a   * Custom data associated with this event.\u000a   */\u000a  [GetterThrows]\u000a  readonly attribute any data;\u000a\u000a  /**\u000a   * The origin of the site from which this event originated, which is the\u000a   * scheme, \":\", and if the URI has a host, \"//\" followed by the\u000a   * host, and if the port is not the default for the given scheme,\u000a   * \":\" followed by that port.  This value does not have a trailing slash.\u000a   */\u000a  readonly attribute USVString origin;\u000a\u000a  /**\u000a   * The last event ID string of the event source, for server-sent DOM events; this\u000a   * value is the empty string for cross-origin messaging.\u000a   */\u000a  readonly attribute DOMString lastEventId;\u000a\u000a  /**\u000a   * The window or port which originated this event.\u000a   */\u000a  readonly attribute MessageEventSource? source;\u000a\u000a  /**\u000a   * Initializes this event with the given data, in a manner analogous to\u000a   * the similarly-named method on the nsIDOMEvent interface, also setting the\u000a   * data, origin, source, and lastEventId attributes of this appropriately.\u000a   */\u000a  [Pure, Cached, Frozen]\u000a  readonly attribute sequence<MessagePort> ports;\u000a\u000a  void initMessageEvent(DOMString type,\u000a                        optional boolean bubbles = false,\u000a                        optional boolean cancelable = false,\u000a                        optional any data = null,\u000a                        optional DOMString origin = \"\",\u000a                        optional DOMString lastEventId = \"\",\u000a                        optional MessageEventSource? source = null,\u000a                        optional sequence<MessagePort> ports = []);\u000a};\u000a\u000adictionary MessageEventInit : EventInit {\u000a  any data = null;\u000a  DOMString origin = \"\";\u000a  DOMString lastEventId = \"\";\u000a  MessageEventSource? source = null;\u000a  sequence<MessagePort> ports = [];\u000a};\u000a\u000atypedef (WindowProxy or MessagePort or ServiceWorker) MessageEventSource;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MessagePort.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MessagePort.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface, please see\u000a * http://www.whatwg.org/specs/web-apps/current-work/#channel-messaging\u000a */\u000a\u000a[Exposed=(Window,Worker,System)]\u000ainterface MessagePort : EventTarget {\u000a  [Throws]\u000a  void postMessage(any message, optional sequence<object> transferable = []);\u000a\u000a  void start();\u000a  void close();\u000a\u000a  // event handlers\u000a  attribute EventHandler onmessage;\u000a  attribute EventHandler onmessageerror;\u000a};\u000a// MessagePort implements Transferable;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MimeType.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MimeType.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface MimeType {\u000a  readonly attribute DOMString description;\u000a  readonly attribute Plugin? enabledPlugin;\u000a  readonly attribute DOMString suffixes;\u000a  readonly attribute DOMString type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MimeTypeArray.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MimeTypeArray.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[LegacyUnenumerableNamedProperties]\u000ainterface MimeTypeArray {\u000a  [NeedsCallerType]\u000a  readonly attribute unsigned long length;\u000a\u000a  [NeedsCallerType]\u000a  getter MimeType? item(unsigned long index);\u000a  [NeedsCallerType]\u000a  getter MimeType? namedItem(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MouseEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MouseEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface please see\u000a * http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString typeArg, optional MouseEventInit mouseEventInitDict)]\u000ainterface MouseEvent : UIEvent {\u000a  [NeedsCallerType]\u000a  readonly attribute long           screenX;\u000a  [NeedsCallerType]\u000a  readonly attribute long           screenY;\u000a  readonly attribute long           clientX;\u000a  readonly attribute long           clientY;\u000a  [BinaryName=\"clientX\"]\u000a  readonly attribute long           x;\u000a  [BinaryName=\"clientY\"]\u000a  readonly attribute long           y;\u000a  readonly attribute long           offsetX;\u000a  readonly attribute long           offsetY;\u000a  readonly attribute boolean        ctrlKey;\u000a  readonly attribute boolean        shiftKey;\u000a  readonly attribute boolean        altKey;\u000a  readonly attribute boolean        metaKey;\u000a  readonly attribute short          button;\u000a  readonly attribute unsigned short buttons;\u000a  readonly attribute EventTarget?   relatedTarget;\u000a  readonly attribute DOMString?     region;\u000a\u000a  // Pointer Lock\u000a  readonly attribute long           movementX;\u000a  readonly attribute long           movementY;\u000a\u000a  // Deprecated in DOM Level 3:\u000avoid initMouseEvent(DOMString typeArg,\u000a                    optional boolean canBubbleArg = false,\u000a                    optional boolean cancelableArg = false,\u000a                    optional Window? viewArg = null,\u000a                    optional long detailArg = 0,\u000a                    optional long screenXArg = 0,\u000a                    optional long screenYArg = 0,\u000a                    optional long clientXArg = 0,\u000a                    optional long clientYArg = 0,\u000a                    optional boolean ctrlKeyArg = false,\u000a                    optional boolean altKeyArg = false,\u000a                    optional boolean shiftKeyArg = false,\u000a                    optional boolean metaKeyArg = false,\u000a                    optional short buttonArg = 0,\u000a                    optional EventTarget? relatedTargetArg = null);\u000a  // Introduced in DOM Level 3:\u000a  boolean                           getModifierState(DOMString keyArg);\u000a};\u000a\u000a// Suggested initMouseEvent replacement initializer:\u000adictionary MouseEventInit : EventModifierInit {\u000a  // Attributes for MouseEvent:\u000a  long           screenX       = 0;\u000a  long           screenY       = 0;\u000a  long           clientX       = 0;\u000a  long           clientY       = 0;\u000a  short          button        = 0;\u000a  // Note: \"buttons\" was not previously initializable through initMouseEvent!\u000a  unsigned short buttons       = 0;\u000a  EventTarget?   relatedTarget = null;\u000a\u000a  // Pointer Lock\u000a  long           movementX = 0;\u000a  long           movementY = 0;\u000a};\u000a\u000a// Mozilla extensions\u000apartial interface MouseEvent\u000a{\u000a  // Finger or touch pressure event value\u000a  // ranges between 0.0 and 1.0\u000a  readonly attribute float mozPressure;\u000a\u000a  const unsigned short    MOZ_SOURCE_UNKNOWN    = 0;\u000a  const unsigned short    MOZ_SOURCE_MOUSE      = 1;\u000a  const unsigned short    MOZ_SOURCE_PEN        = 2;\u000a  const unsigned short    MOZ_SOURCE_ERASER     = 3;\u000a  const unsigned short    MOZ_SOURCE_CURSOR     = 4;\u000a  const unsigned short    MOZ_SOURCE_TOUCH      = 5;\u000a  const unsigned short    MOZ_SOURCE_KEYBOARD   = 6;\u000a\u000a  readonly attribute unsigned short mozInputSource;\u000a\u000a  void initNSMouseEvent(DOMString typeArg,\u000a                        optional boolean canBubbleArg = false,\u000a                        optional boolean cancelableArg = false,\u000a                        optional Window? viewArg = null,\u000a                        optional long detailArg = 0,\u000a                        optional long screenXArg = 0,\u000a                        optional long screenYArg = 0,\u000a                        optional long clientXArg = 0,\u000a                        optional long clientYArg = 0,\u000a                        optional boolean ctrlKeyArg = false,\u000a                        optional boolean altKeyArg = false,\u000a                        optional boolean shiftKeyArg = false,\u000a                        optional boolean metaKeyArg = false,\u000a                        optional short buttonArg = 0,\u000a                        optional EventTarget? relatedTargetArg = null,\u000a                        optional float pressure = 0,\u000a                        optional unsigned short inputSourceArg = 0);\u000a  [ChromeOnly]\u000a  readonly attribute boolean hitCluster; // True when touch occurs in a cluster of links\u000a\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MouseScrollEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MouseScrollEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface MouseScrollEvent : MouseEvent\u000a{\u000a  const long HORIZONTAL_AXIS = 1;\u000a  const long VERTICAL_AXIS = 2;\u000a\u000a  readonly attribute long axis;\u000a\u000a  void initMouseScrollEvent(DOMString type,\u000a                            optional boolean canBubble = false,\u000a                            optional boolean cancelable = false,\u000a                            optional Window? view = null,\u000a                            optional long detail = 0,\u000a                            optional long screenX = 0,\u000a                            optional long screenY = 0,\u000a                            optional long clientX = 0,\u000a                            optional long clientY = 0,\u000a                            optional boolean ctrlKey = false,\u000a                            optional boolean altKey = false,\u000a                            optional boolean shiftKey = false,\u000a                            optional boolean metaKey = false,\u000a                            optional short button = 0,\u000a                            optional EventTarget? relatedTarget = null,\u000a                            optional long axis = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MozApplicationEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MozApplicationEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional MozApplicationEventInit eventInitDict), ChromeOnly]\u000ainterface MozApplicationEvent : Event\u000a{\u000a  readonly attribute DOMApplication? application;\u000a};\u000a\u000adictionary MozApplicationEventInit : EventInit\u000a{\u000a  DOMApplication? application = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MozStorageAsyncStatementParams.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MozStorageAsyncStatementParams.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[ChromeOnly]\u000ainterface MozStorageAsyncStatementParams\u000a{\u000a  readonly attribute unsigned long length;\u000a\u000a  [Throws]\u000a  getter any(unsigned long index);\u000a\u000a  [Throws]\u000a  getter any(DOMString name);\u000a\u000a  [Throws]\u000a  setter void(unsigned long index, any arg);\u000a\u000a  [Throws]\u000a  setter void(DOMString name, any arg);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MozStorageStatementParams.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MozStorageStatementParams.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[ChromeOnly]\u000ainterface MozStorageStatementParams\u000a{\u000a  readonly attribute unsigned long length;\u000a\u000a  [Throws]\u000a  getter any(unsigned long index);\u000a\u000a  [Throws]\u000a  getter any(DOMString name);\u000a\u000a  [Throws]\u000a  setter void(unsigned long index, any arg);\u000a\u000a  [Throws]\u000a  setter void(DOMString name, any arg);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MozStorageStatementRow.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MozStorageStatementRow.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[ChromeOnly]\u000ainterface MozStorageStatementRow\u000a{\u000a  [Throws]\u000a  getter any(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MutationEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MutationEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000ainterface MutationEvent : Event\u000a{\u000a  const unsigned short MODIFICATION = 1;\u000a  const unsigned short ADDITION     = 2;\u000a  const unsigned short REMOVAL      = 3;\u000a  [ChromeOnly]\u000a  const unsigned short SMIL         = 4;\u000a\u000a  readonly attribute Node?          relatedNode;\u000a  readonly attribute DOMString      prevValue;\u000a  readonly attribute DOMString      newValue;\u000a  readonly attribute DOMString      attrName;\u000a  readonly attribute unsigned short attrChange;\u000a\u000a  [Throws]\u000a  void initMutationEvent(DOMString type,\u000a                         optional boolean canBubble = false,\u000a                         optional boolean cancelable = false,\u000a                         optional Node? relatedNode = null,\u000a                         optional DOMString prevValue = \"\",\u000a                         optional DOMString newValue = \"\",\u000a                         optional DOMString attrName = \"\",\u000a                         optional unsigned short attrChange = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MutationObserver.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/MutationObserver.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org\u000a */\u000a\u000a[ProbablyShortLivingWrapper]\u000ainterface MutationRecord {\u000a  [Constant]\u000a  readonly attribute DOMString type;\u000a  // .target is not nullable per the spec, but in order to prevent crashes,\u000a  // if there are GC/CC bugs in Gecko, we let the property to be null.\u000a  [Constant]\u000a  readonly attribute Node? target;\u000a  [Constant]\u000a  readonly attribute NodeList addedNodes;\u000a  [Constant]\u000a  readonly attribute NodeList removedNodes;\u000a  [Constant]\u000a  readonly attribute Node? previousSibling;\u000a  [Constant]\u000a  readonly attribute Node? nextSibling;\u000a  [Constant]\u000a  readonly attribute DOMString? attributeName;\u000a  [Constant]\u000a  readonly attribute DOMString? attributeNamespace;\u000a  [Constant]\u000a  readonly attribute DOMString? oldValue;\u000a  [Constant,Cached,ChromeOnly]\u000a  readonly attribute sequence<Animation> addedAnimations;\u000a  [Constant,Cached,ChromeOnly]\u000a  readonly attribute sequence<Animation> changedAnimations;\u000a  [Constant,Cached,ChromeOnly]\u000a  readonly attribute sequence<Animation> removedAnimations;\u000a};\u000a\u000a[Constructor(MutationCallback mutationCallback)]\u000ainterface MutationObserver {\u000a  [Throws]\u000a  void observe(Node target, optional MutationObserverInit options);\u000a  void disconnect();\u000a  sequence<MutationRecord> takeRecords();\u000a\u000a  [ChromeOnly, Throws]\u000a  sequence<MutationObservingInfo?> getObservingInfo();\u000a  [ChromeOnly]\u000a  readonly attribute MutationCallback mutationCallback;\u000a  [ChromeOnly]\u000a  attribute boolean mergeAttributeRecords;\u000a};\u000a\u000acallback MutationCallback = void (sequence<MutationRecord> mutations, MutationObserver observer);\u000a\u000adictionary MutationObserverInit {\u000a  boolean childList = false;\u000a  boolean attributes;\u000a  boolean characterData;\u000a  boolean subtree = false;\u000a  boolean attributeOldValue;\u000a  boolean characterDataOldValue;\u000a  [ChromeOnly]\u000a  boolean nativeAnonymousChildList = false;\u000a  [ChromeOnly]\u000a  boolean animations = false;\u000a  sequence<DOMString> attributeFilter;\u000a};\u000a\u000adictionary MutationObservingInfo : MutationObserverInit\u000a{\u000a  Node? observedNode = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NamedNodeMap.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NamedNodeMap.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[LegacyUnenumerableNamedProperties]\u000ainterface NamedNodeMap {\u000a  getter Attr? getNamedItem(DOMString name);\u000a  [CEReactions, Throws, BinaryName=\"setNamedItemNS\"]\u000a  Attr? setNamedItem(Attr arg);\u000a  [CEReactions, Throws]\u000a  Attr removeNamedItem(DOMString name);\u000a\u000a  getter Attr? item(unsigned long index);\u000a  readonly attribute unsigned long length;\u000a\u000a  Attr? getNamedItemNS(DOMString? namespaceURI, DOMString localName);\u000a  [CEReactions, Throws]\u000a  Attr? setNamedItemNS(Attr arg);\u000a  [CEReactions, Throws]\u000a  Attr removeNamedItemNS(DOMString? namespaceURI, DOMString localName);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NativeOSFileInternals.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NativeOSFileInternals.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtaone at http://mozilla.org/MPL/2.0/. */\u000a\u000a/**\u000a * Options for nsINativeOSFileInternals::Read\u000a */\u000adictionary NativeOSFileReadOptions\u000a{\u000a  /**\u000a   * If specified, convert the raw bytes to a String\u000a   * with the specified encoding. Otherwise, return\u000a   * the raw bytes as a TypedArray.\u000a   */\u000a  DOMString? encoding;\u000a\u000a  /**\u000a   * If specified, limit the number of bytes to read.\u000a   */\u000a  unsigned long long? bytes;\u000a};\u000a\u000a/**\u000a * Options for nsINativeOSFileInternals::WriteAtomic\u000a */\u000adictionary NativeOSFileWriteAtomicOptions\u000a{\u000a  /**\u000a   * If specified, specify the number of bytes to write.\u000a   * NOTE: This takes (and should take) a uint64 here but the actual\u000a   * value is limited to int32. This needs to be fixed, see Bug 1063635.\u000a   */\u000a  unsigned long long? bytes;\u000a\u000a  /**\u000a   * If specified, write all data to a temporary file in the\u000a   * |tmpPath|. Else, write to the given path directly.\u000a   */\u000a  DOMString? tmpPath = null;\u000a\u000a  /**\u000a   * If specified and true, a failure will occur if the file\u000a   * already exists in the given path.\u000a   */\u000a  boolean noOverwrite = false;\u000a\u000a  /**\u000a   * If specified and true, this will sync any buffered data\u000a   * for the file to disk. This might be slower, but safer.\u000a   */\u000a  boolean flush = false;\u000a\u000a  /**\u000a   * If specified, this will backup the destination file as\u000a   * specified.\u000a   */\u000a  DOMString? backupTo = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Navigator.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Navigator.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-navigator-object\u000a * http://www.w3.org/TR/tracking-dnt/\u000a * http://www.w3.org/TR/geolocation-API/#geolocation_interface\u000a * http://www.w3.org/TR/battery-status/#navigatorbattery-interface\u000a * http://www.w3.org/TR/vibration/#vibration-interface\u000a * http://www.w3.org/2012/sysapps/runtime/#extension-to-the-navigator-interface-1\u000a * https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#navigator-interface-extension\u000a * http://www.w3.org/TR/beacon/#sec-beacon-method\u000a * https://html.spec.whatwg.org/#navigatorconcurrenthardware\u000a * http://wicg.github.io/netinfo/#extensions-to-the-navigator-interface\u000a * https://w3c.github.io/webappsec-credential-management/#framework-credential-management\u000a * https://w3c.github.io/webdriver/webdriver-spec.html#interface\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-navigator-object\u000a[HeaderFile=\"Navigator.h\"]\u000ainterface Navigator {\u000a  // objects implementing this interface also implement the interfaces given below\u000a};\u000aNavigator implements NavigatorID;\u000aNavigator implements NavigatorLanguage;\u000aNavigator implements NavigatorOnLine;\u000aNavigator implements NavigatorContentUtils;\u000aNavigator implements NavigatorStorageUtils;\u000aNavigator implements NavigatorConcurrentHardware;\u000aNavigator implements NavigatorStorage;\u000aNavigator implements NavigatorAutomationInformation;\u000a\u000a[NoInterfaceObject, Exposed=(Window,Worker)]\u000ainterface NavigatorID {\u000a  // WebKit/Blink/Trident/Presto support this (hardcoded \"Mozilla\").\u000a  [Constant, Cached, Throws]\u000a  readonly attribute DOMString appCodeName; // constant \"Mozilla\"\u000a  [Constant, Cached, NeedsCallerType]\u000a  readonly attribute DOMString appName;\u000a  [Constant, Cached, Throws, NeedsCallerType]\u000a  readonly attribute DOMString appVersion;\u000a  [Constant, Cached, Throws, NeedsCallerType]\u000a  readonly attribute DOMString platform;\u000a  [Pure, Cached, Throws, NeedsCallerType]\u000a  readonly attribute DOMString userAgent;\u000a  [Constant, Cached]\u000a  readonly attribute DOMString product; // constant \"Gecko\"\u000a\u000a  // Everyone but WebKit/Blink supports this.  See bug 679971.\u000a  [Exposed=Window]\u000a  boolean taintEnabled(); // constant false\u000a};\u000a\u000a[NoInterfaceObject, Exposed=(Window,Worker)]\u000ainterface NavigatorLanguage {\u000a\u000a  // These two attributes are cached because this interface is also implemented\u000a  // by Workernavigator and this way we don't have to go back to the\u000a  // main-thread from the worker thread anytime we need to retrieve them. They\u000a  // are updated when pref intl.accept_languages is changed.\u000a\u000a  [Pure, Cached]\u000a  readonly attribute DOMString? language;\u000a  [Pure, Cached, Frozen]\u000a  readonly attribute sequence<DOMString> languages;\u000a};\u000a\u000a[NoInterfaceObject, Exposed=(Window,Worker)]\u000ainterface NavigatorOnLine {\u000a  readonly attribute boolean onLine;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface NavigatorContentUtils {\u000a  // content handler registration\u000a  [Throws, Func=\"nsGlobalWindowInner::RegisterProtocolHandlerAllowedForContext\"]\u000a  void registerProtocolHandler(DOMString scheme, DOMString url, DOMString title);\u000a  [Pref=\"dom.registerContentHandler.enabled\", Throws]\u000a  void registerContentHandler(DOMString mimeType, DOMString url, DOMString title);\u000a  // NOT IMPLEMENTED\u000a  //DOMString isProtocolHandlerRegistered(DOMString scheme, DOMString url);\u000a  //DOMString isContentHandlerRegistered(DOMString mimeType, DOMString url);\u000a  //void unregisterProtocolHandler(DOMString scheme, DOMString url);\u000a  //void unregisterContentHandler(DOMString mimeType, DOMString url);\u000a};\u000a\u000a[SecureContext, NoInterfaceObject, Exposed=(Window,Worker)]\u000ainterface NavigatorStorage {\u000a  [Func=\"mozilla::dom::DOMPrefs::StorageManagerEnabled\"]\u000a  readonly attribute StorageManager storage;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface NavigatorStorageUtils {\u000a  // NOT IMPLEMENTED\u000a  //void yieldForStorageUpdates();\u000a};\u000a\u000apartial interface Navigator {\u000a  [Throws]\u000a  readonly attribute Permissions permissions;\u000a};\u000a\u000a// Things that definitely need to be in the spec and and are not for some\u000a// reason.  See https://www.w3.org/Bugs/Public/show_bug.cgi?id=22406\u000apartial interface Navigator {\u000a  [Throws]\u000a  readonly attribute MimeTypeArray mimeTypes;\u000a  [Throws]\u000a  readonly attribute PluginArray plugins;\u000a};\u000a\u000a// http://www.w3.org/TR/tracking-dnt/ sort of\u000apartial interface Navigator {\u000a  readonly attribute DOMString doNotTrack;\u000a};\u000a\u000a// http://www.w3.org/TR/geolocation-API/#geolocation_interface\u000a[NoInterfaceObject]\u000ainterface NavigatorGeolocation {\u000a  [Throws, Pref=\"geo.enabled\"]\u000a  readonly attribute Geolocation geolocation;\u000a};\u000aNavigator implements NavigatorGeolocation;\u000a\u000a// http://www.w3.org/TR/battery-status/#navigatorbattery-interface\u000apartial interface Navigator {\u000a  // ChromeOnly to prevent web content from fingerprinting users' batteries.\u000a  [Throws, ChromeOnly, Pref=\"dom.battery.enabled\"]\u000a  Promise<BatteryManager> getBattery();\u000a};\u000a\u000a// http://www.w3.org/TR/vibration/#vibration-interface\u000apartial interface Navigator {\u000a    // We don't support sequences in unions yet\u000a    //boolean vibrate ((unsigned long or sequence<unsigned long>) pattern);\u000a    boolean vibrate(unsigned long duration);\u000a    boolean vibrate(sequence<unsigned long> pattern);\u000a};\u000a\u000a// http://www.w3.org/TR/pointerevents/#extensions-to-the-navigator-interface\u000apartial interface Navigator {\u000a    [Pref=\"dom.w3c_pointer_events.enabled\"]\u000a    readonly attribute long maxTouchPoints;\u000a};\u000a\u000a// Mozilla-specific extensions\u000a\u000a// Chrome-only interface for Vibration API permission handling.\u000apartial interface Navigator {\u000a    /* Set permission state to device vibration.\u000a     * @param permitted permission state (true for allowing vibration)\u000a     * @param persistent make the permission session-persistent\u000a     */\u000a    [ChromeOnly]\u000a    void setVibrationPermission(boolean permitted,\u000a                                optional boolean persistent = true);\u000a};\u000a\u000acallback interface MozIdleObserver {\u000a  // Time is in seconds and is read only when idle observers are added\u000a  // and removed.\u000a  readonly attribute unsigned long time;\u000a  void onidle();\u000a  void onactive();\u000a};\u000a\u000apartial interface Navigator {\u000a  [Throws, Constant, Cached, NeedsCallerType]\u000a  readonly attribute DOMString oscpu;\u000a  // WebKit/Blink support this; Trident/Presto do not.\u000a  readonly attribute DOMString vendor;\u000a  // WebKit/Blink supports this (hardcoded \"\"); Trident/Presto do not.\u000a  readonly attribute DOMString vendorSub;\u000a  // WebKit/Blink supports this (hardcoded \"20030107\"); Trident/Presto don't\u000a  readonly attribute DOMString productSub;\u000a  // WebKit/Blink/Trident/Presto support this.\u000a  readonly attribute boolean cookieEnabled;\u000a  [Throws, Constant, Cached, NeedsCallerType]\u000a  readonly attribute DOMString buildID;\u000a\u000a  // WebKit/Blink/Trident/Presto support this.\u000a  [Throws, NeedsCallerType]\u000a  boolean javaEnabled();\u000a\u000a  /**\u000a   * Navigator requests to add an idle observer to the existing window.\u000a   */\u000a  [Throws, ChromeOnly]\u000a  void addIdleObserver(MozIdleObserver aIdleObserver);\u000a\u000a  /**\u000a   * Navigator requests to remove an idle observer from the existing window.\u000a   */\u000a  [Throws, ChromeOnly]\u000a  void removeIdleObserver(MozIdleObserver aIdleObserver);\u000a};\u000a\u000a// NetworkInformation\u000apartial interface Navigator {\u000a  [Throws, Pref=\"dom.netinfo.enabled\"]\u000a  readonly attribute NetworkInformation connection;\u000a};\u000a\u000a// https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#navigator-interface-extension\u000apartial interface Navigator {\u000a  [Throws, Pref=\"dom.gamepad.enabled\"]\u000a  sequence<Gamepad?> getGamepads();\u000a};\u000apartial interface Navigator {\u000a  [Pref=\"dom.gamepad.test.enabled\"]\u000a  GamepadServiceTest requestGamepadServiceTest();\u000a};\u000a\u000apartial interface Navigator {\u000a  [Throws, Pref=\"dom.vr.enabled\"]\u000a  Promise<sequence<VRDisplay>> getVRDisplays();\u000a  // TODO: Use FrozenArray once available. (Bug 1236777)\u000a  [Frozen, Cached, Pure, Pref=\"dom.vr.enabled\"]\u000a  readonly attribute sequence<VRDisplay> activeVRDisplays;\u000a  [ChromeOnly, Pref=\"dom.vr.enabled\"]\u000a  readonly attribute boolean isWebVRContentDetected;\u000a  [ChromeOnly, Pref=\"dom.vr.enabled\"]\u000a  readonly attribute boolean isWebVRContentPresenting;\u000a  [ChromeOnly, Pref=\"dom.vr.enabled\"]\u000a  void requestVRPresentation(VRDisplay display);\u000a};\u000apartial interface Navigator {\u000a  [Pref=\"dom.vr.test.enabled\"]\u000a  VRServiceTest requestVRServiceTest();\u000a};\u000a\u000acallback NavigatorUserMediaSuccessCallback = void (MediaStream stream);\u000acallback NavigatorUserMediaErrorCallback = void (MediaStreamError error);\u000a\u000apartial interface Navigator {\u000a  [Throws, Func=\"Navigator::HasUserMediaSupport\"]\u000a  readonly attribute MediaDevices mediaDevices;\u000a\u000a  // Deprecated. Use mediaDevices.getUserMedia instead.\u000a  [Deprecated=\"NavigatorGetUserMedia\", Throws,\u000a   Func=\"Navigator::HasUserMediaSupport\",\u000a   NeedsCallerType]\u000a  void mozGetUserMedia(MediaStreamConstraints constraints,\u000a                       NavigatorUserMediaSuccessCallback successCallback,\u000a                       NavigatorUserMediaErrorCallback errorCallback);\u000a};\u000a\u000a// nsINavigatorUserMedia\u000acallback MozGetUserMediaDevicesSuccessCallback = void (nsIVariant? devices);\u000apartial interface Navigator {\u000a  [Throws, ChromeOnly]\u000a  void mozGetUserMediaDevices(MediaStreamConstraints constraints,\u000a                              MozGetUserMediaDevicesSuccessCallback onsuccess,\u000a                              NavigatorUserMediaErrorCallback onerror,\u000a                              // The originating innerWindowID is needed to\u000a                              // avoid calling the callbacks if the window has\u000a                              // navigated away. It is optional only as legacy.\u000a                              optional unsigned long long innerWindowID = 0,\u000a                              // The callID is needed in case of multiple\u000a                              // concurrent requests to find the right one.\u000a                              // It is optional only as legacy.\u000a                              // TODO: Rewrite to not need this method anymore,\u000a                              // now that devices are enumerated earlier.\u000a                              optional DOMString callID = \"\");\u000a};\u000a\u000a// Service Workers/Navigation Controllers\u000apartial interface Navigator {\u000a  [Func=\"ServiceWorkerContainer::IsEnabled\", SameObject]\u000a  readonly attribute ServiceWorkerContainer serviceWorker;\u000a};\u000a\u000apartial interface Navigator {\u000a  [Throws, Pref=\"beacon.enabled\"]\u000a  boolean sendBeacon(DOMString url,\u000a                     optional BodyInit? data = null);\u000a};\u000a\u000apartial interface Navigator {\u000a  [Throws, Pref=\"dom.presentation.enabled\", SameObject]\u000a  readonly attribute Presentation? presentation;\u000a};\u000a\u000apartial interface Navigator {\u000a  [NewObject, Func=\"mozilla::dom::TCPSocket::ShouldTCPSocketExist\"]\u000a  readonly attribute LegacyMozTCPSocket mozTCPSocket;\u000a};\u000a\u000apartial interface Navigator {\u000a  [NewObject]\u000a  Promise<MediaKeySystemAccess>\u000a  requestMediaKeySystemAccess(DOMString keySystem,\u000a                              sequence<MediaKeySystemConfiguration> supportedConfigurations);\u000a};\u000a\u000a[NoInterfaceObject, Exposed=(Window,Worker)]\u000ainterface NavigatorConcurrentHardware {\u000a  readonly attribute unsigned long long hardwareConcurrency;\u000a};\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#framework-credential-management\u000apartial interface Navigator {\u000a  [Pref=\"security.webauth.webauthn\", SecureContext, SameObject]\u000a  readonly attribute CredentialsContainer credentials;\u000a};\u000a\u000a// https://w3c.github.io/webdriver/webdriver-spec.html#interface\u000a[NoInterfaceObject]\u000ainterface NavigatorAutomationInformation {\u000a  [Pref=\"dom.webdriver.enabled\"]\u000a  readonly attribute boolean webdriver;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NetDashboard.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NetDashboard.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a// This file defines dictionaries used by about:networking page.\u000a\u000adictionary SocketElement {\u000a  DOMString host = \"\";\u000a  unsigned long port = 0;\u000a  boolean active = false;\u000a  boolean tcp = false;\u000a  double sent = 0;\u000a  double received = 0;\u000a};\u000a\u000adictionary SocketsDict {\u000a  sequence<SocketElement> sockets;\u000a  double sent = 0;\u000a  double received = 0;\u000a};\u000a\u000adictionary HttpConnInfo {\u000a  unsigned long rtt = 0;\u000a  unsigned long ttl = 0;\u000a  DOMString protocolVersion = \"\";\u000a};\u000a\u000adictionary HalfOpenInfoDict {\u000a  boolean speculative = false;\u000a};\u000a\u000adictionary HttpConnectionElement {\u000a  DOMString host = \"\";\u000a  unsigned long port = 0;\u000a  boolean spdy = false;\u000a  boolean ssl = false;\u000a  sequence<HttpConnInfo> active;\u000a  sequence<HttpConnInfo> idle;\u000a  sequence<HalfOpenInfoDict> halfOpens;\u000a};\u000a\u000adictionary HttpConnDict {\u000a  sequence<HttpConnectionElement> connections;\u000a};\u000a\u000adictionary WebSocketElement {\u000a  DOMString hostport = \"\";\u000a  unsigned long msgsent = 0;\u000a  unsigned long msgreceived = 0;\u000a  double sentsize = 0;\u000a  double receivedsize = 0;\u000a  boolean encrypted = false;\u000a};\u000a\u000adictionary WebSocketDict {\u000a  sequence<WebSocketElement> websockets;\u000a};\u000a\u000adictionary DnsCacheEntry {\u000a  DOMString hostname = \"\";\u000a  sequence<DOMString> hostaddr;\u000a  DOMString family = \"\";\u000a  double expiration = 0;\u000a  boolean trr = false;\u000a};\u000a\u000adictionary DNSCacheDict {\u000a  sequence<DnsCacheEntry> entries;\u000a};\u000a\u000adictionary DNSLookupDict {\u000a  sequence<DOMString> address;\u000a  DOMString error = \"\";\u000a  boolean answer = false;\u000a};\u000a\u000adictionary ConnStatusDict {\u000a  DOMString status = \"\";\u000a};\u000a\u000adictionary RcwnPerfStats {\u000a  unsigned long avgShort = 0;\u000a  unsigned long avgLong = 0;\u000a  unsigned long stddevLong = 0;\u000a};\u000a\u000adictionary RcwnStatus {\u000a  unsigned long totalNetworkRequests = 0;\u000a  unsigned long rcwnCacheWonCount = 0;\u000a  unsigned long rcwnNetWonCount = 0;\u000a  unsigned long cacheSlowCount = 0;\u000a  unsigned long cacheNotSlowCount = 0;\u000a  // Sequence is indexed by CachePerfStats::EDataType\u000a  sequence<RcwnPerfStats> perfStats;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NetworkInformation.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NetworkInformation.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is https://w3c.github.io/netinfo/\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum ConnectionType {\u000a    \"cellular\",\u000a    \"bluetooth\",\u000a    \"ethernet\",\u000a    \"wifi\",\u000a    \"other\",\u000a    \"none\",\u000a    \"unknown\"\u000a};\u000a\u000a[Func=\"mozilla::dom::DOMPrefs::NetworkInformationEnabled\",\u000a Exposed=(Window,Worker)]\u000ainterface NetworkInformation : EventTarget {\u000a    readonly    attribute ConnectionType type;\u000a                attribute EventHandler   ontypechange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NetworkOptions.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NetworkOptions.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a* License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a* You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/**\u000a* This dictionary holds the parameters sent to the network worker.\u000a*/\u000adictionary NetworkCommandOptions\u000a{\u000a  long id = 0;                        // opaque id.\u000a  DOMString cmd = \"\";                 // the command name.\u000a  DOMString ifname;                   // for \"removeNetworkRoute\", \"setDNS\",\u000a                                      //     \"setDefaultRouteAndDNS\", \"removeDefaultRoute\"\u000a                                      //     \"addHostRoute\", \"removeHostRoute\"\u000a                                      //     \"removeHostRoutes\".\u000a  DOMString ip;                       // for \"removeNetworkRoute\", \"setWifiTethering\".\u000a  unsigned long prefixLength;         // for \"removeNetworkRoute\".\u000a  DOMString domain;                   // for \"setDNS\"\u000a  sequence<DOMString> dnses;          // for \"setDNS\", \"setDefaultRouteAndDNS\".\u000a  DOMString gateway;                  // for \"addSecondaryRoute\", \"removeSecondaryRoute\".\u000a  sequence<DOMString> gateways;       // for \"setDefaultRouteAndDNS\", \"removeDefaultRoute\".\u000a  DOMString mode;                     // for \"setWifiOperationMode\".\u000a  boolean report;                     // for \"setWifiOperationMode\".\u000a  boolean enabled;                    // for \"setDhcpServer\".\u000a  DOMString wifictrlinterfacename;    // for \"setWifiTethering\".\u000a  DOMString internalIfname;           // for \"setWifiTethering\".\u000a  DOMString externalIfname;           // for \"setWifiTethering\".\u000a  boolean enable;                     // for \"setWifiTethering\".\u000a  DOMString ssid;                     // for \"setWifiTethering\".\u000a  DOMString security;                 // for \"setWifiTethering\".\u000a  DOMString key;                      // for \"setWifiTethering\".\u000a  DOMString prefix;                   // for \"setWifiTethering\", \"setDhcpServer\".\u000a  DOMString link;                     // for \"setWifiTethering\", \"setDhcpServer\".\u000a  sequence<DOMString> interfaceList;  // for \"setWifiTethering\".\u000a  DOMString wifiStartIp;              // for \"setWifiTethering\".\u000a  DOMString wifiEndIp;                // for \"setWifiTethering\".\u000a  DOMString usbStartIp;               // for \"setWifiTethering\".\u000a  DOMString usbEndIp;                 // for \"setWifiTethering\".\u000a  DOMString dns1;                     // for \"setWifiTethering\".\u000a  DOMString dns2;                     // for \"setWifiTethering\".\u000a  long long threshold;                // for \"setNetworkInterfaceAlarm\",\u000a                                      //     \"enableNetworkInterfaceAlarm\".\u000a  DOMString startIp;                  // for \"setDhcpServer\".\u000a  DOMString endIp;                    // for \"setDhcpServer\".\u000a  DOMString serverIp;                 // for \"setDhcpServer\".\u000a  DOMString maskLength;               // for \"setDhcpServer\".\u000a  DOMString preInternalIfname;        // for \"updateUpStream\".\u000a  DOMString preExternalIfname;        // for \"updateUpStream\".\u000a  DOMString curInternalIfname;        // for \"updateUpStream\".\u000a  DOMString curExternalIfname;        // for \"updateUpStream\".\u000a\u000a  long ipaddr;                        // for \"ifc_configure\".\u000a  long mask;                          // for \"ifc_configure\".\u000a  long gateway_long;                  // for \"ifc_configure\".\u000a  long dns1_long;                     // for \"ifc_configure\".\u000a  long dns2_long;                     // for \"ifc_configure\".\u000a\u000a  long mtu;                           // for \"setMtu\".\u000a};\u000a\u000a/**\u000a* This dictionary holds the parameters sent back to NetworkService.js.\u000a*/\u000adictionary NetworkResultOptions\u000a{\u000a  long id = 0;                        // opaque id.\u000a  boolean ret = false;                // for sync command.\u000a  boolean broadcast = false;          // for netd broadcast message.\u000a  DOMString topic = \"\";               // for netd broadcast message.\u000a  DOMString reason = \"\";              // for netd broadcast message.\u000a\u000a  long resultCode = 0;                // for all commands.\u000a  DOMString resultReason = \"\";        // for all commands.\u000a  boolean error = false;              // for all commands.\u000a\u000a  boolean enable = false;             // for \"setWifiTethering\", \"setUSBTethering\"\u000a                                      //     \"enableUsbRndis\".\u000a  boolean result = false;             // for \"enableUsbRndis\".\u000a  boolean success = false;            // for \"setDhcpServer\".\u000a  DOMString curExternalIfname = \"\";   // for \"updateUpStream\".\u000a  DOMString curInternalIfname = \"\";   // for \"updateUpStream\".\u000a\u000a  DOMString reply = \"\";               // for \"command\".\u000a  DOMString route = \"\";               // for \"ifc_get_default_route\".\u000a  DOMString ipaddr_str = \"\";          // The following are for the result of\u000a                                      // dhcp_do_request.\u000a  DOMString gateway_str = \"\";\u000a  DOMString dns1_str = \"\";\u000a  DOMString dns2_str = \"\";\u000a  DOMString mask_str = \"\";\u000a  DOMString server_str = \"\";\u000a  DOMString vendor_str = \"\";\u000a  long      lease = 0;\u000a  long      prefixLength = 0;\u000a  long      mask = 0;\u000a  long      ipaddr = 0;\u000a  long      gateway = 0;\u000a  long      dns1 = 0;\u000a  long      dns2 = 0;\u000a  long      server = 0;\u000a\u000a  DOMString netId = \"\";               // for \"getNetId\".\u000a\u000a  sequence<DOMString> interfaceList;  // for \"getInterfaceList\".\u000a\u000a  DOMString flag = \"down\";            // for \"getInterfaceConfig\".\u000a  DOMString macAddr = \"\";             // for \"getInterfaceConfig\".\u000a  DOMString ipAddr = \"\";              // for \"getInterfaceConfig\".\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NodeFilter.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NodeFilter.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org/#interface-nodefilter\u000a */\u000a\u000acallback interface NodeFilter {\u000a  // Constants for acceptNode()\u000a  const unsigned short FILTER_ACCEPT = 1;\u000a  const unsigned short FILTER_REJECT = 2;\u000a  const unsigned short FILTER_SKIP = 3;\u000a\u000a  // Constants for whatToShow\u000a  const unsigned long SHOW_ALL = 0xFFFFFFFF;\u000a  const unsigned long SHOW_ELEMENT = 0x1;\u000a  const unsigned long SHOW_ATTRIBUTE = 0x2; // historical\u000a  const unsigned long SHOW_TEXT = 0x4;\u000a  const unsigned long SHOW_CDATA_SECTION = 0x8; // historical\u000a  const unsigned long SHOW_ENTITY_REFERENCE = 0x10; // historical\u000a  const unsigned long SHOW_ENTITY = 0x20; // historical\u000a  const unsigned long SHOW_PROCESSING_INSTRUCTION = 0x40;\u000a  const unsigned long SHOW_COMMENT = 0x80;\u000a  const unsigned long SHOW_DOCUMENT = 0x100;\u000a  const unsigned long SHOW_DOCUMENT_TYPE = 0x200;\u000a  const unsigned long SHOW_DOCUMENT_FRAGMENT = 0x400;\u000a  const unsigned long SHOW_NOTATION = 0x800; // historical\u000a\u000a  unsigned short acceptNode(Node node);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NodeIterator.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NodeIterator.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface NodeIterator {\u000a  [Constant]\u000a  readonly attribute Node root;\u000a  [Pure]\u000a  readonly attribute Node? referenceNode;\u000a  [Pure]\u000a  readonly attribute boolean pointerBeforeReferenceNode;\u000a  [Constant]\u000a  readonly attribute unsigned long whatToShow;\u000a  [Constant]\u000a  readonly attribute NodeFilter? filter;\u000a\u000a  [Throws]\u000a  Node? nextNode();\u000a  [Throws]\u000a  Node? previousNode();\u000a\u000a  void detach();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NodeList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NodeList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[ProbablyShortLivingWrapper]\u000ainterface NodeList {\u000a  getter Node? item(unsigned long index);\u000a  readonly attribute unsigned long length;\u000a  iterable<Node?>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Notification.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Notification.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://notifications.spec.whatwg.org/\u000a *\u000a * Copyright:\u000a * To the extent possible under law, the editors have waived all copyright and\u000a * related or neighboring rights to this work.\u000a */\u000a\u000a[Constructor(DOMString title, optional NotificationOptions options),\u000a Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::Notification::PrefEnabled\"]\u000ainterface Notification : EventTarget {\u000a  [GetterThrows]\u000a  static readonly attribute NotificationPermission permission;\u000a\u000a  [Throws, Func=\"mozilla::dom::Notification::RequestPermissionEnabledForScope\"]\u000a  static Promise<NotificationPermission> requestPermission(optional NotificationPermissionCallback permissionCallback);\u000a\u000a  [Throws, Func=\"mozilla::dom::Notification::IsGetEnabled\"]\u000a  static Promise<sequence<Notification>> get(optional GetNotificationOptions filter);\u000a\u000a  attribute EventHandler onclick;\u000a\u000a  attribute EventHandler onshow;\u000a\u000a  attribute EventHandler onerror;\u000a\u000a  attribute EventHandler onclose;\u000a\u000a  [Pure]\u000a  readonly attribute DOMString title;\u000a\u000a  [Pure]\u000a  readonly attribute NotificationDirection dir;\u000a\u000a  [Pure]\u000a  readonly attribute DOMString? lang;\u000a\u000a  [Pure]\u000a  readonly attribute DOMString? body;\u000a\u000a  [Constant]\u000a  readonly attribute DOMString? tag;\u000a\u000a  [Pure]\u000a  readonly attribute DOMString? icon;\u000a\u000a  [Constant, Func=\"mozilla::dom::DOMPrefs::NotificationRIEnabled\"]\u000a  readonly attribute boolean requireInteraction;\u000a\u000a  [Constant]\u000a  readonly attribute any data;\u000a\u000a  void close();\u000a};\u000a\u000adictionary NotificationOptions {\u000a  NotificationDirection dir = \"auto\";\u000a  DOMString lang = \"\";\u000a  DOMString body = \"\";\u000a  DOMString tag = \"\";\u000a  DOMString icon = \"\";\u000a  boolean requireInteraction = false;\u000a  any data = null;\u000a  NotificationBehavior mozbehavior = null;\u000a};\u000a\u000adictionary GetNotificationOptions {\u000a  DOMString tag = \"\";\u000a};\u000a\u000adictionary NotificationBehavior {\u000a  boolean noscreen = false;\u000a  boolean noclear = false;\u000a  boolean showOnlyOnce = false;\u000a  DOMString soundFile = \"\";\u000a  sequence<unsigned long> vibrationPattern;\u000a};\u000a\u000aenum NotificationPermission {\u000a  \"default\",\u000a  \"denied\",\u000a  \"granted\"\u000a};\u000a\u000acallback NotificationPermissionCallback = void (NotificationPermission permission);\u000a\u000aenum NotificationDirection {\u000a  \"auto\",\u000a  \"ltr\",\u000a  \"rtl\"\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NotificationEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NotificationEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://notifications.spec.whatwg.org/\u000a *\u000a * Copyright:\u000a * To the extent possible under law, the editors have waived all copyright and\u000a * related or neighboring rights to this work.\u000a */\u000a\u000a[Constructor(DOMString type, NotificationEventInit eventInitDict),\u000a Exposed=ServiceWorker,Func=\"mozilla::dom::Notification::PrefEnabled\"]\u000ainterface NotificationEvent : ExtendableEvent {\u000a  readonly attribute Notification notification;\u000a};\u000a\u000adictionary NotificationEventInit : ExtendableEventInit {\u000a  required Notification notification;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NotifyPaintEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/NotifyPaintEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * The NotifyPaintEvent interface is used for the MozDOMAfterPaint\u000a * event, which fires at a window when painting has happened in\u000a * that window.\u000a */\u000a[ChromeOnly]\u000ainterface NotifyPaintEvent : Event\u000a{\u000a  /**\u000a   * Get a list of rectangles which are affected. The rectangles are\u000a   * in CSS pixels relative to the viewport origin.\u000a   */\u000a  [ChromeOnly, NeedsCallerType]\u000a  readonly attribute DOMRectList clientRects;\u000a\u000a  /**\u000a   * Get the bounding box of the rectangles which are affected. The rectangle\u000a   * is in CSS pixels relative to the viewport origin.\u000a   */\u000a  [ChromeOnly, NeedsCallerType]\u000a  readonly attribute DOMRect boundingClientRect;\u000a\u000a  [ChromeOnly, NeedsCallerType]\u000a  readonly attribute PaintRequestList paintRequests;\u000a\u000a  [ChromeOnly, NeedsCallerType]\u000a  readonly attribute unsigned long long transactionId;\u000a\u000a  [ChromeOnly, NeedsCallerType]\u000a  readonly attribute DOMHighResTimeStamp paintTimeStamp;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/OfflineAudioCompletionEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/OfflineAudioCompletionEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary OfflineAudioCompletionEventInit : EventInit {\u000a    required AudioBuffer renderedBuffer;\u000a};\u000a\u000a[Constructor(DOMString type, OfflineAudioCompletionEventInit eventInitDict),\u000a Pref=\"dom.webaudio.enabled\"]\u000ainterface OfflineAudioCompletionEvent : Event {\u000a    readonly attribute AudioBuffer renderedBuffer;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/OfflineAudioContext.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/OfflineAudioContext.webidl"},contents:"/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary OfflineAudioContextOptions {\u000a             unsigned long numberOfChannels = 1;\u000a    required unsigned long length;\u000a    required float         sampleRate;\u000a};\u000a\u000a[Constructor (OfflineAudioContextOptions contextOptions),\u000aConstructor(unsigned long numberOfChannels, unsigned long length, float sampleRate),\u000aPref=\"dom.webaudio.enabled\"]\u000ainterface OfflineAudioContext : BaseAudioContext {\u000a\u000a    [Throws]\u000a    Promise<AudioBuffer> startRendering();\u000a\u000a    // TODO: Promise<void>        suspend (double suspendTime);\u000a\u000a    readonly        attribute unsigned long length;\u000a                    attribute EventHandler  oncomplete;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/OfflineResourceList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/OfflineResourceList.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Pref=\"browser.cache.offline.enable\", Func=\"nsGlobalWindowInner::OfflineCacheAllowedForContext\"]\u000ainterface OfflineResourceList : EventTarget {\u000a  /**\u000a   * State of the application cache this object is associated with.\u000a   */\u000a\u000a  /* This object is not associated with an application cache. */\u000a  const unsigned short UNCACHED = 0;\u000a\u000a  /* The application cache is not being updated. */\u000a  const unsigned short IDLE = 1;\u000a\u000a  /* The manifest is being fetched and checked for updates */\u000a  const unsigned short CHECKING = 2;\u000a\u000a  /* Resources are being downloaded to be added to the cache */\u000a  const unsigned short DOWNLOADING = 3;\u000a\u000a  /* There is a new version of the application cache available */\u000a  const unsigned short UPDATEREADY = 4;\u000a\u000a  /* The application cache group is now obsolete. */\u000a  const unsigned short OBSOLETE = 5;\u000a\u000a  [Throws, UseCounter]\u000a  readonly attribute unsigned short status;\u000a\u000a  /**\u000a   * Begin the application update process on the associated application cache.\u000a   */\u000a  [Throws, UseCounter]\u000a  void update();\u000a\u000a  /**\u000a   * Swap in the newest version of the application cache, or disassociate\u000a   * from the cache if the cache group is obsolete.\u000a   */\u000a  [Throws, UseCounter]\u000a  void swapCache();\u000a\u000a  /* Events */\u000a  [UseCounter]\u000a  attribute EventHandler onchecking;\u000a  [UseCounter]\u000a  attribute EventHandler onerror;\u000a  [UseCounter]\u000a  attribute EventHandler onnoupdate;\u000a  [UseCounter]\u000a  attribute EventHandler ondownloading;\u000a  [UseCounter]\u000a  attribute EventHandler onprogress;\u000a  [UseCounter]\u000a  attribute EventHandler onupdateready;\u000a  [UseCounter]\u000a  attribute EventHandler oncached;\u000a  [UseCounter]\u000a  attribute EventHandler onobsolete;\u000a};\u000a\u000a// Mozilla extensions.\u000apartial interface OfflineResourceList {\u000a  /**\u000a   * Get the list of dynamically-managed entries.\u000a   */\u000a  [Throws]\u000a  readonly attribute DOMStringList mozItems;\u000a\u000a  /**\u000a   * Check that an entry exists in the list of dynamically-managed entries.\u000a   *\u000a   * @param uri\u000a   *        The resource to check.\u000a   */\u000a  [Throws]\u000a  boolean mozHasItem(DOMString uri);\u000a\u000a  /**\u000a   * Get the number of dynamically-managed entries.\u000a   * @status DEPRECATED\u000a   *         Clients should use the \"items\" attribute.\u000a   */\u000a  [Throws]\u000a  readonly attribute unsigned long mozLength;\u000a\u000a  /**\u000a   * Get the URI of a dynamically-managed entry.\u000a   * @status DEPRECATED\u000a   *         Clients should use the \"items\" attribute.\u000a   */\u000a  [Throws]\u000a  getter DOMString mozItem(unsigned long index);\u000a\u000a  /**\u000a   * We need a \"length\" to actually be valid Web IDL, given that we have an\u000a   * indexed getter.\u000a   */\u000a  readonly attribute unsigned long length;\u000a\u000a  /**\u000a   * Add an item to the list of dynamically-managed entries.  The resource\u000a   * will be fetched into the application cache.\u000a   *\u000a   * @param uri\u000a   *        The resource to add.\u000a   */\u000a  [Throws]\u000a  void mozAdd(DOMString uri);\u000a\u000a  /**\u000a   * Remove an item from the list of dynamically-managed entries.  If this\u000a   * was the last reference to a URI in the application cache, the cache\u000a   * entry will be removed.\u000a   *\u000a   * @param uri\u000a   *        The resource to remove.\u000a   */\u000a  [Throws]\u000a  void mozRemove(DOMString uri);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/OffscreenCanvas.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/OffscreenCanvas.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface, please see\u000a * https://wiki.whatwg.org/wiki/OffscreenCanvas\u000a */\u000a\u000a[Constructor(unsigned long width, unsigned long height),\u000a Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::DOMPrefs::OffscreenCanvasEnabled\"]\u000ainterface OffscreenCanvas : EventTarget {\u000a  [Pure, SetterThrows]\u000a  attribute unsigned long width;\u000a  [Pure, SetterThrows]\u000a  attribute unsigned long height;\u000a\u000a  [Throws]\u000a  nsISupports? getContext(DOMString contextId,\u000a                          optional any contextOptions = null);\u000a\u000a  [Throws]\u000a  ImageBitmap transferToImageBitmap();\u000a  [Throws]\u000a  Promise<Blob> toBlob(optional DOMString type = \"\",\u000a                       optional any encoderOptions);\u000a};\u000a\u000a// OffscreenCanvas implements Transferable;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/OscillatorNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/OscillatorNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum OscillatorType {\u000a  \"sine\",\u000a  \"square\",\u000a  \"sawtooth\",\u000a  \"triangle\",\u000a  \"custom\"\u000a};\u000a\u000adictionary OscillatorOptions : AudioNodeOptions {\u000a             OscillatorType type = \"sine\";\u000a             float          frequency = 440;\u000a             float          detune = 0;\u000a             PeriodicWave   periodicWave;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional OscillatorOptions options)]\u000ainterface OscillatorNode : AudioScheduledSourceNode {\u000a\u000a    [SetterThrows]\u000a    attribute OscillatorType type;\u000a\u000a    readonly attribute AudioParam frequency; // in Hertz\u000a    readonly attribute AudioParam detune; // in Cents\u000a\u000a    void setPeriodicWave(PeriodicWave periodicWave);\u000a};\u000a\u000a// Mozilla extensions\u000aOscillatorNode implements AudioNodePassThrough;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PageTransitionEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PageTransitionEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * The PageTransitionEvent interface is used for the pageshow and\u000a * pagehide events, which are generic events that apply to both page\u000a * load/unload and saving/restoring a document from session history.\u000a */\u000a\u000a[Constructor(DOMString type, optional PageTransitionEventInit eventInitDict)]\u000ainterface PageTransitionEvent : Event\u000a{\u000a  /**\u000a   * Set to true if the document has been or will be persisted across\u000a   * firing of the event.  For example, if a document is being cached in\u000a   * session history, |persisted| is true for the PageHide event.\u000a   */\u000a  readonly attribute boolean persisted;\u000a\u000a  // Whether the document is in the middle of a frame swap.\u000a  [ChromeOnly]\u000a  readonly attribute boolean inFrameSwap;\u000a};\u000a\u000adictionary PageTransitionEventInit : EventInit\u000a{\u000a  boolean persisted = false;\u000a  boolean inFrameSwap = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaintRequest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaintRequest.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/**\u000a * These objects are exposed by the MozDOMAfterPaint event. Each one represents\u000a * a request to repaint a rectangle that was generated by the browser.\u000a */\u000ainterface PaintRequest {\u000a  /**\u000a   * The client rect where invalidation was triggered.\u000a   */\u000a  readonly attribute DOMRect clientRect;\u000a\u000a  /**\u000a   * The reason for the request, as a string. If an empty string, then we don't know\u000a   * the reason (this is common). Reasons include \"scroll repaint\", meaning that we\u000a   * needed to repaint the rectangle due to scrolling, and \"scroll copy\", meaning\u000a   * that we updated the rectangle due to scrolling but instead of painting\u000a   * manually, we were able to do a copy from another area of the screen.\u000a   */\u000a  readonly attribute DOMString reason;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaintRequestList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaintRequestList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface PaintRequestList {\u000a  readonly attribute unsigned long length;\u000a  getter PaintRequest? item(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaintWorkletGlobalScope.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaintWorkletGlobalScope.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.css-houdini.org/css-paint-api-1/#paintworkletglobalscope\u000a */\u000a\u000a[Global=(Worklet,PaintWorklet),Exposed=PaintWorklet]\u000ainterface PaintWorkletGlobalScope : WorkletGlobalScope {\u000a    void registerPaint(DOMString name, VoidFunction paintCtor);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PannerNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PannerNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum PanningModelType {\u000a  \"equalpower\",\u000a  \"HRTF\"\u000a};\u000a\u000aenum DistanceModelType {\u000a  \"linear\",\u000a  \"inverse\",\u000a  \"exponential\"\u000a};\u000a\u000adictionary PannerOptions : AudioNodeOptions {\u000a             PanningModelType  panningModel = \"equalpower\";\u000a             DistanceModelType distanceModel = \"inverse\";\u000a             float             positionX = 0;\u000a             float             positionY = 0;\u000a             float             positionZ = 0;\u000a             float             orientationX = 1;\u000a             float             orientationY = 0;\u000a             float             orientationZ = 0;\u000a             double            refDistance = 1;\u000a             double            maxDistance = 10000;\u000a             double            rolloffFactor = 1;\u000a             double            coneInnerAngle = 360;\u000a             double            coneOuterAngle = 360;\u000a             double            coneOuterGain = 0;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional PannerOptions options)]\u000ainterface PannerNode : AudioNode {\u000a\u000a    // Default for stereo is equalpower\u000a    attribute PanningModelType panningModel;\u000a\u000a    // Uses a 3D cartesian coordinate system\u000a    void setPosition(double x, double y, double z);\u000a    void setOrientation(double x, double y, double z);\u000a    [Deprecated=\"PannerNodeDoppler\"]\u000a    void setVelocity(double x, double y, double z);\u000a\u000a    // Cartesian coordinate for position\u000a    readonly attribute AudioParam positionX;\u000a    readonly attribute AudioParam positionY;\u000a    readonly attribute AudioParam positionZ;\u000a\u000a    // Cartesian coordinate for orientation\u000a    readonly attribute AudioParam orientationX;\u000a    readonly attribute AudioParam orientationY;\u000a    readonly attribute AudioParam orientationZ;\u000a\u000a    // Distance model and attributes\u000a    attribute DistanceModelType distanceModel;\u000a    attribute double refDistance;\u000a    attribute double maxDistance;\u000a    attribute double rolloffFactor;\u000a\u000a    // Directional sound cone\u000a    attribute double coneInnerAngle;\u000a    attribute double coneOuterAngle;\u000a    attribute double coneOuterGain;\u000a\u000a};\u000a\u000a// Mozilla extension\u000aPannerNode implements AudioNodePassThrough;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ParentNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ParentNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org/#interface-parentnode\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface ParentNode {\u000a  [Constant]\u000a  readonly attribute HTMLCollection children;\u000a  [Pure]\u000a  readonly attribute Element? firstElementChild;\u000a  [Pure]\u000a  readonly attribute Element? lastElementChild;\u000a  [Pure]\u000a  readonly attribute unsigned long childElementCount;\u000a\u000a  [CEReactions, Throws, Unscopable]\u000a  void prepend((Node or DOMString)... nodes);\u000a  [CEReactions, Throws, Unscopable]\u000a  void append((Node or DOMString)... nodes);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaymentAddress.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaymentAddress.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this WebIDL file is\u000a *   https://www.w3.org/TR/payment-request/#paymentaddress-interface\u000a */\u000a\u000a[SecureContext,\u000a Func=\"mozilla::dom::PaymentRequest::PrefEnabled\"]\u000ainterface PaymentAddress {\u000a  // TODO: Use serializer once available. (Bug 863402)\u000a  // serializer = {attribute};\u000a  jsonifier;\u000a\u000a  readonly attribute DOMString              country;\u000a  // TODO: Use FrozenArray once available. (Bug 1236777)\u000a  // readonly attribute FrozenArray<DOMString> addressLine;\u000a  [Frozen, Cached, Pure]\u000a  readonly attribute sequence<DOMString>    addressLine;\u000a  readonly attribute DOMString              region;\u000a  readonly attribute DOMString              city;\u000a  readonly attribute DOMString              dependentLocality;\u000a  readonly attribute DOMString              postalCode;\u000a  readonly attribute DOMString              sortingCode;\u000a  readonly attribute DOMString              languageCode;\u000a  readonly attribute DOMString              organization;\u000a  readonly attribute DOMString              recipient;\u000a  readonly attribute DOMString              phone;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaymentRequest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaymentRequest.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this WebIDL file is\u000a *   https://www.w3.org/TR/payment-request/#paymentrequest-interface\u000a */\u000a\u000adictionary PaymentMethodData {\u000a  required DOMString           supportedMethods;\u000a           object              data;\u000a};\u000a\u000adictionary PaymentCurrencyAmount {\u000a  required DOMString currency;\u000a  required DOMString value;\u000a           DOMString currencySystem = \"urn:iso:std:iso:4217\";\u000a};\u000a\u000adictionary PaymentItem {\u000a  required DOMString             label;\u000a  required PaymentCurrencyAmount amount;\u000a           boolean               pending = false;\u000a};\u000a\u000adictionary PaymentShippingOption {\u000a  required DOMString             id;\u000a  required DOMString             label;\u000a  required PaymentCurrencyAmount amount;\u000a           boolean               selected = false;\u000a};\u000a\u000adictionary PaymentDetailsModifier {\u000a  required DOMString             supportedMethods;\u000a           PaymentItem           total;\u000a           sequence<PaymentItem> additionalDisplayItems;\u000a           object                data;\u000a};\u000a\u000adictionary PaymentDetailsBase {\u000a  sequence<PaymentItem>            displayItems;\u000a  sequence<PaymentShippingOption>  shippingOptions;\u000a  sequence<PaymentDetailsModifier> modifiers;\u000a};\u000a\u000adictionary PaymentDetailsInit : PaymentDetailsBase {\u000a           DOMString   id;\u000a  required PaymentItem total;\u000a};\u000a\u000aenum PaymentShippingType {\u000a  \"shipping\",\u000a  \"delivery\",\u000a  \"pickup\"\u000a};\u000a\u000adictionary PaymentOptions {\u000a  boolean             requestPayerName = false;\u000a  boolean             requestPayerEmail = false;\u000a  boolean             requestPayerPhone = false;\u000a  boolean             requestShipping = false;\u000a  PaymentShippingType shippingType = \"shipping\";\u000a};\u000a\u000a[Constructor(sequence<PaymentMethodData> methodData, PaymentDetailsInit details,\u000a             optional PaymentOptions options),\u000a SecureContext,\u000a Func=\"mozilla::dom::PaymentRequest::PrefEnabled\"]\u000ainterface PaymentRequest : EventTarget {\u000a  [NewObject]\u000a  Promise<PaymentResponse> show();\u000a  [NewObject]\u000a  Promise<void>            abort();\u000a  [NewObject]\u000a  Promise<boolean>         canMakePayment();\u000a\u000a  readonly attribute DOMString            id;\u000a  readonly attribute PaymentAddress?      shippingAddress;\u000a  readonly attribute DOMString?           shippingOption;\u000a  readonly attribute PaymentShippingType? shippingType;\u000a\u000a           attribute EventHandler         onshippingaddresschange;\u000a           attribute EventHandler         onshippingoptionchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaymentRequestUpdateEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaymentRequestUpdateEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this WebIDL file is\u000a *   https://www.w3.org/TR/payment-request/#paymentrequestupdateevent-interface\u000a */\u000a\u000adictionary PaymentDetailsUpdate : PaymentDetailsBase {\u000a  DOMString   error;\u000a  PaymentItem total;\u000a};\u000a\u000a[Constructor(DOMString type,\u000a             optional PaymentRequestUpdateEventInit eventInitDict),\u000a SecureContext,\u000a Func=\"mozilla::dom::PaymentRequest::PrefEnabled\"]\u000ainterface PaymentRequestUpdateEvent : Event {\u000a  [Throws]\u000a  void updateWith(Promise<PaymentDetailsUpdate> detailsPromise);\u000a};\u000a\u000adictionary PaymentRequestUpdateEventInit : EventInit {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaymentResponse.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PaymentResponse.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this WebIDL file is\u000a *   https://www.w3.org/TR/payment-request/#paymentresponse-interface\u000a */\u000a\u000aenum PaymentComplete {\u000a  \"success\",\u000a  \"fail\",\u000a  \"unknown\"\u000a};\u000a\u000a[SecureContext,\u000a Func=\"mozilla::dom::PaymentRequest::PrefEnabled\"]\u000ainterface PaymentResponse {\u000a  // TODO: Use serializer once available. (Bug 863402)\u000a  // serializer = {attribute};\u000a  jsonifier;\u000a\u000a  readonly attribute DOMString       requestId;\u000a  readonly attribute DOMString       methodName;\u000a  readonly attribute object          details;\u000a  readonly attribute PaymentAddress? shippingAddress;\u000a  readonly attribute DOMString?      shippingOption;\u000a  readonly attribute DOMString?      payerName;\u000a  readonly attribute DOMString?      payerEmail;\u000a  readonly attribute DOMString?      payerPhone;\u000a\u000a  [NewObject]\u000a  Promise<void> complete(optional PaymentComplete result = \"unknown\");\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PeerConnectionImpl.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PeerConnectionImpl.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * PeerConnection.js' interface to the C++ PeerConnectionImpl.\u000a *\u000a * Do not confuse with RTCPeerConnection. This interface is purely for\u000a * communication between the PeerConnection JS DOM binding and the C++\u000a * implementation in SIPCC.\u000a *\u000a * See media/webrtc/signaling/include/PeerConnectionImpl.h\u000a *\u000a */\u000a\u000ainterface nsISupports;\u000a\u000a/* Must be created first. Observer events will be dispatched on the thread provided */\u000a[ChromeOnly, Constructor]\u000ainterface PeerConnectionImpl  {\u000a  /* Must be called first. Observer events dispatched on the thread provided */\u000a  [Throws]\u000a  void initialize(PeerConnectionObserver observer, Window window,\u000a                  RTCConfiguration iceServers,\u000a                  nsISupports thread);\u000a\u000a  /* JSEP calls */\u000a  [Throws]\u000a  void createOffer(optional RTCOfferOptions options);\u000a  [Throws]\u000a  void createAnswer();\u000a  [Throws]\u000a  void setLocalDescription(long action, DOMString sdp);\u000a  [Throws]\u000a  void setRemoteDescription(long action, DOMString sdp);\u000a\u000a  /* Stats call, calls either |onGetStatsSuccess| or |onGetStatsError| on our\u000a     observer. (see the |PeerConnectionObserver| interface) */\u000a  [Throws]\u000a  void getStats(MediaStreamTrack? selector);\u000a\u000a  /* Adds the tracks created by GetUserMedia */\u000a  [Throws]\u000a  TransceiverImpl createTransceiverImpl(DOMString kind,\u000a                                        MediaStreamTrack? track);\u000a  [Throws]\u000a  boolean checkNegotiationNeeded();\u000a  [Throws]\u000a  void insertDTMF(TransceiverImpl transceiver, DOMString tones,\u000a                  optional unsigned long duration = 100,\u000a                  optional unsigned long interToneGap = 70);\u000a  [Throws]\u000a  DOMString getDTMFToneBuffer(RTCRtpSender sender);\u000a  [Throws]\u000a  sequence<RTCRtpSourceEntry> getRtpSources(MediaStreamTrack track,\u000a                                            DOMHighResTimeStamp rtpSourceNow);\u000a  DOMHighResTimeStamp getNowInRtpSourceReferenceTime();\u000a\u000a  [Throws]\u000a  void replaceTrackNoRenegotiation(TransceiverImpl transceiverImpl,\u000a                                   MediaStreamTrack? withTrack);\u000a  [Throws]\u000a  void closeStreams();\u000a\u000a  [Throws]\u000a  void addRIDExtension(MediaStreamTrack recvTrack, unsigned short extensionId);\u000a  [Throws]\u000a  void addRIDFilter(MediaStreamTrack recvTrack, DOMString rid);\u000a\u000a  // Inserts CSRC data for the RtpSourceObserver for testing\u000a  [Throws]\u000a  void insertAudioLevelForContributingSource(MediaStreamTrack recvTrack,\u000a                                             unsigned long source,\u000a                                             DOMHighResTimeStamp timestamp,\u000a                                             boolean hasLevel,\u000a                                             byte level);\u000a\u000a  [Throws]\u000a  void enablePacketDump(unsigned long level,\u000a                        mozPacketDumpType type,\u000a                        boolean sending);\u000a\u000a  [Throws]\u000a  void disablePacketDump(unsigned long level,\u000a                         mozPacketDumpType type,\u000a                         boolean sending);\u000a\u000a  /* As the ICE candidates roll in this one should be called each time\u000a   * in order to keep the candidate list up-to-date for the next SDP-related\u000a   * call PeerConnectionImpl does not parse ICE candidates, just sticks them\u000a   * into the SDP.\u000a   */\u000a  [Throws]\u000a  void addIceCandidate(DOMString candidate, DOMString mid, unsigned short level);\u000a\u000a  /* Puts the SIPCC engine back to 'kIdle', shuts down threads, deletes state */\u000a  [Throws]\u000a  void close();\u000a\u000a  /* Notify DOM window if this plugin crash is ours. */\u000a  boolean pluginCrash(unsigned long long pluginId, DOMString name);\u000a\u000a  /* Attributes */\u000a  /* This provides the implementation with the certificate it uses to\u000a   * authenticate itself.  The JS side must set this before calling\u000a   * createOffer/createAnswer or retrieving the value of fingerprint.  This has\u000a   * to be delayed because generating the certificate takes some time. */\u000a  attribute RTCCertificate certificate;\u000a  [Constant]\u000a  readonly attribute DOMString fingerprint;\u000a  readonly attribute DOMString localDescription;\u000a  readonly attribute DOMString currentLocalDescription;\u000a  readonly attribute DOMString pendingLocalDescription;\u000a  readonly attribute DOMString remoteDescription;\u000a  readonly attribute DOMString currentRemoteDescription;\u000a  readonly attribute DOMString pendingRemoteDescription;\u000a\u000a  readonly attribute PCImplIceConnectionState iceConnectionState;\u000a  readonly attribute PCImplIceGatheringState iceGatheringState;\u000a  readonly attribute PCImplSignalingState signalingState;\u000a  attribute DOMString id;\u000a\u000a  [SetterThrows]\u000a  attribute DOMString peerIdentity;\u000a  readonly attribute boolean privacyRequested;\u000a\u000a  /* Data channels */\u000a  [Throws]\u000a  RTCDataChannel createDataChannel(DOMString label, DOMString protocol,\u000a    unsigned short type, boolean ordered,\u000a    unsigned short maxTime, unsigned short maxNum,\u000a    boolean externalNegotiated, unsigned short stream);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PeerConnectionImplEnums.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PeerConnectionImplEnums.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * This is in a separate file so it can be shared with unittests.\u000a */\u000a\u000a/* Must be in the same order as comparable fsmdef_states_t in fsmdef_states.h */\u000aenum PCImplSignalingState {\u000a  \"SignalingInvalid\",\u000a  \"SignalingStable\",\u000a  \"SignalingHaveLocalOffer\",\u000a  \"SignalingHaveRemoteOffer\",\u000a  \"SignalingHaveLocalPranswer\",\u000a  \"SignalingHaveRemotePranswer\",\u000a  \"SignalingClosed\",\u000a};\u000a\u000aenum PCImplIceConnectionState {\u000a    \"new\",\u000a    \"checking\",\u000a    \"connected\",\u000a    \"completed\",\u000a    \"failed\",\u000a    \"disconnected\",\u000a    \"closed\"\u000a};\u000a\u000a// Deliberately identical to the values specified in webrtc\u000aenum PCImplIceGatheringState {\u000a  \"new\",\u000a  \"gathering\",\u000a  \"complete\"\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PeerConnectionObserver.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PeerConnectionObserver.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface nsISupports;\u000a\u000a[ChromeOnly,\u000a JSImplementation=\"@mozilla.org/dom/peerconnectionobserver;1\",\u000a Constructor (RTCPeerConnection domPC)]\u000ainterface PeerConnectionObserver\u000a{\u000a  /* JSEP callbacks */\u000a  void onCreateOfferSuccess(DOMString offer);\u000a  void onCreateOfferError(unsigned long name, DOMString message);\u000a  void onCreateAnswerSuccess(DOMString answer);\u000a  void onCreateAnswerError(unsigned long name, DOMString message);\u000a  void onSetLocalDescriptionSuccess();\u000a  void onSetRemoteDescriptionSuccess();\u000a  void onSetLocalDescriptionError(unsigned long name, DOMString message);\u000a  void onSetRemoteDescriptionError(unsigned long name, DOMString message);\u000a  void onAddIceCandidateSuccess();\u000a  void onAddIceCandidateError(unsigned long name, DOMString message);\u000a  void onIceCandidate(unsigned short level, DOMString mid, DOMString candidate);\u000a\u000a  /* Stats callbacks */\u000a  void onGetStatsSuccess(optional RTCStatsReportInternal report);\u000a  void onGetStatsError(unsigned long name, DOMString message);\u000a\u000a  /* Data channel callbacks */\u000a  void notifyDataChannel(RTCDataChannel channel);\u000a\u000a  /* Notification of one of several types of state changed */\u000a  void onStateChange(PCObserverStateType state);\u000a\u000a  /* Changes to MediaStreamTracks */\u000a  void onRemoveStream(MediaStream stream);\u000a\u000a  /* Transceiver management; called when setRemoteDescription causes a\u000a     transceiver to be created on the C++ side */\u000a  void onTransceiverNeeded(DOMString kind, TransceiverImpl transceiverImpl);\u000a\u000a  /* DTMF callback */\u000a  void onDTMFToneChange(MediaStreamTrack track, DOMString tone);\u000a\u000a  /* Packet dump callback */\u000a  void onPacket(unsigned long level, mozPacketDumpType type, boolean sending,\u000a                ArrayBuffer packet);\u000a\u000a  /* Transceiver sync */\u000a  void syncTransceivers();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PeerConnectionObserverEnums.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PeerConnectionObserverEnums.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * This is in a separate file so it can be shared with unittests.\u000a */\u000a\u000aenum PCObserverStateType {\u000a    \"None\",\u000a    \"IceConnectionState\",\u000a    \"IceGatheringState\",\u000a    \"SignalingState\"\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Performance.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Performance.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://w3c.github.io/hr-time/\u000a *\u000a * Copyright © 2015 W3C® (MIT, ERCIM, Keio, Beihang).\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000atypedef double DOMHighResTimeStamp;\u000atypedef sequence <PerformanceEntry> PerformanceEntryList;\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface Performance : EventTarget {\u000a  [DependsOn=DeviceState, Affects=Nothing]\u000a  DOMHighResTimeStamp now();\u000a\u000a  [Constant]\u000a  readonly attribute DOMHighResTimeStamp timeOrigin;\u000a};\u000a\u000a[Exposed=Window]\u000apartial interface Performance {\u000a  [Constant]\u000a  readonly attribute PerformanceTiming timing;\u000a  [Constant]\u000a  readonly attribute PerformanceNavigation navigation;\u000a\u000a  jsonifier;\u000a};\u000a\u000a// http://www.w3.org/TR/performance-timeline/#sec-window.performance-attribute\u000a[Exposed=(Window,Worker)]\u000apartial interface Performance {\u000a  PerformanceEntryList getEntries();\u000a  PerformanceEntryList getEntriesByType(DOMString entryType);\u000a  PerformanceEntryList getEntriesByName(DOMString name, optional DOMString\u000a    entryType);\u000a};\u000a\u000a// http://www.w3.org/TR/resource-timing/#extensions-performance-interface\u000a[Exposed=(Window,Worker)]\u000apartial interface Performance {\u000a  void clearResourceTimings();\u000a  void setResourceTimingBufferSize(unsigned long maxSize);\u000a  attribute EventHandler onresourcetimingbufferfull;\u000a};\u000a\u000a// GC microbenchmarks, pref-guarded, not for general use (bug 1125412)\u000a[Exposed=Window]\u000apartial interface Performance {\u000a  [Pref=\"dom.enable_memory_stats\"]\u000a  readonly attribute object mozMemory;\u000a};\u000a\u000a// http://www.w3.org/TR/user-timing/\u000a[Exposed=(Window,Worker)]\u000apartial interface Performance {\u000a  [Throws]\u000a  void mark(DOMString markName);\u000a  void clearMarks(optional DOMString markName);\u000a  [Throws]\u000a  void measure(DOMString measureName, optional DOMString startMark, optional DOMString endMark);\u000a  void clearMeasures(optional DOMString measureName);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceEntry.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceEntry.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3c-test.org/webperf/specs/PerformanceTimeline/#sec-PerformanceEntry-interface\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface PerformanceEntry\u000a{\u000a  readonly attribute DOMString name;\u000a  readonly attribute DOMString entryType;\u000a  readonly attribute DOMHighResTimeStamp startTime;\u000a  readonly attribute DOMHighResTimeStamp duration;\u000a\u000a  jsonifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceEntryEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceEntryEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000adictionary PerformanceEntryEventInit : EventInit\u000a{\u000a  DOMString name = \"\";\u000a  DOMString entryType = \"\";\u000a  DOMHighResTimeStamp startTime = 0;\u000a  DOMHighResTimeStamp duration = 0;\u000a  double epoch = 0;\u000a  DOMString origin = \"\";\u000a};\u000a\u000a[Constructor(DOMString type, optional PerformanceEntryEventInit eventInitDict),\u000a ChromeOnly]\u000ainterface PerformanceEntryEvent : Event\u000a{\u000a  readonly attribute DOMString name;\u000a  readonly attribute DOMString entryType;\u000a  readonly attribute DOMHighResTimeStamp startTime;\u000a  readonly attribute DOMHighResTimeStamp duration;\u000a  readonly attribute double epoch;\u000a  readonly attribute DOMString origin;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceMark.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceMark.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/user-timing/#performancemark\u000a */\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface PerformanceMark : PerformanceEntry\u000a{\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceMeasure.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceMeasure.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/user-timing/#performancemeasure\u000a */\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface PerformanceMeasure : PerformanceEntry\u000a{\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceNavigation.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceNavigation.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/hr-time/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface PerformanceNavigation {\u000a  const unsigned short TYPE_NAVIGATE = 0;\u000a  const unsigned short TYPE_RELOAD = 1;\u000a  const unsigned short TYPE_BACK_FORWARD = 2;\u000a  const unsigned short TYPE_RESERVED = 255;\u000a\u000a  readonly attribute unsigned short type;\u000a  readonly attribute unsigned short redirectCount;\u000a\u000a  jsonifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceNavigationTiming.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceNavigationTiming.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://www.w3.org/TR/navigation-timing-2/#sec-PerformanceNavigationTiming\u000a *\u000a * Copyright © 2016 W3C® (MIT, ERCIM, Keio, Beihang).\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000aenum NavigationType {\u000a  \"navigate\",\u000a  \"reload\",\u000a  \"back_forward\",\u000a  \"prerender\"\u000a};\u000a\u000ainterface PerformanceNavigationTiming : PerformanceResourceTiming {\u000a  readonly        attribute DOMHighResTimeStamp unloadEventStart;\u000a  readonly        attribute DOMHighResTimeStamp unloadEventEnd;\u000a  readonly        attribute DOMHighResTimeStamp domInteractive;\u000a  readonly        attribute DOMHighResTimeStamp domContentLoadedEventStart;\u000a  readonly        attribute DOMHighResTimeStamp domContentLoadedEventEnd;\u000a  readonly        attribute DOMHighResTimeStamp domComplete;\u000a  readonly        attribute DOMHighResTimeStamp loadEventStart;\u000a  readonly        attribute DOMHighResTimeStamp loadEventEnd;\u000a  readonly        attribute NavigationType      type;\u000a  readonly        attribute unsigned short      redirectCount;\u000a\u000a  jsonifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceObserver.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceObserver.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/performance-timeline/#the-performanceobserver-interface\u000a */\u000a\u000adictionary PerformanceObserverInit {\u000a  required sequence<DOMString> entryTypes;\u000a  boolean buffered = false;\u000a};\u000a\u000acallback PerformanceObserverCallback = void (PerformanceObserverEntryList entries,\u000a                                             PerformanceObserver observer);\u000a\u000a[Func=\"mozilla::dom::DOMPrefs::PerformanceObserverEnabled\",\u000a Constructor(PerformanceObserverCallback callback),\u000a Exposed=(Window,Worker)]\u000ainterface PerformanceObserver {\u000a    [Throws]\u000a    void                 observe(PerformanceObserverInit options);\u000a    void                 disconnect();\u000a    PerformanceEntryList takeRecords();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceObserverEntryList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceObserverEntryList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/performance-timeline/#the-performanceobserverentrylist-interface\u000a */\u000a\u000a// XXX should be moved into Performance.webidl.\u000adictionary PerformanceEntryFilterOptions {\u000a  DOMString name;\u000a  DOMString entryType;\u000a  DOMString initiatorType;\u000a};\u000a\u000a[Func=\"mozilla::dom::DOMPrefs::PerformanceObserverEnabled\",\u000a Exposed=(Window,Worker)]\u000ainterface PerformanceObserverEntryList {\u000a  PerformanceEntryList getEntries(optional PerformanceEntryFilterOptions filter);\u000a  PerformanceEntryList getEntriesByType(DOMString entryType);\u000a  PerformanceEntryList getEntriesByName(DOMString name,\u000a                                        optional DOMString entryType);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceResourceTiming.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceResourceTiming.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/resource-timing/#performanceresourcetiming\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface PerformanceResourceTiming : PerformanceEntry\u000a{\u000a  readonly attribute DOMString initiatorType;\u000a  readonly attribute DOMString nextHopProtocol;\u000a\u000a  readonly attribute DOMHighResTimeStamp workerStart;\u000a  readonly attribute DOMHighResTimeStamp redirectStart;\u000a  readonly attribute DOMHighResTimeStamp redirectEnd;\u000a  readonly attribute DOMHighResTimeStamp fetchStart;\u000a  readonly attribute DOMHighResTimeStamp domainLookupStart;\u000a  readonly attribute DOMHighResTimeStamp domainLookupEnd;\u000a  readonly attribute DOMHighResTimeStamp connectStart;\u000a  readonly attribute DOMHighResTimeStamp connectEnd;\u000a  readonly attribute DOMHighResTimeStamp secureConnectionStart;\u000a  readonly attribute DOMHighResTimeStamp requestStart;\u000a  readonly attribute DOMHighResTimeStamp responseStart;\u000a  readonly attribute DOMHighResTimeStamp responseEnd;\u000a\u000a  readonly attribute unsigned long long transferSize;\u000a  readonly attribute unsigned long long encodedBodySize;\u000a  readonly attribute unsigned long long decodedBodySize;\u000a\u000a  jsonifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceTiming.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PerformanceTiming.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/hr-time/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface PerformanceTiming {\u000a  readonly attribute unsigned long long navigationStart;\u000a  readonly attribute unsigned long long unloadEventStart;\u000a  readonly attribute unsigned long long unloadEventEnd;\u000a  readonly attribute unsigned long long redirectStart;\u000a  readonly attribute unsigned long long redirectEnd;\u000a  readonly attribute unsigned long long fetchStart;\u000a  readonly attribute unsigned long long domainLookupStart;\u000a  readonly attribute unsigned long long domainLookupEnd;\u000a  readonly attribute unsigned long long connectStart;\u000a  readonly attribute unsigned long long connectEnd;\u000a  readonly attribute unsigned long long secureConnectionStart;\u000a  readonly attribute unsigned long long requestStart;\u000a  readonly attribute unsigned long long responseStart;\u000a  readonly attribute unsigned long long responseEnd;\u000a  readonly attribute unsigned long long domLoading;\u000a  readonly attribute unsigned long long domInteractive;\u000a  readonly attribute unsigned long long domContentLoadedEventStart;\u000a  readonly attribute unsigned long long domContentLoadedEventEnd;\u000a  readonly attribute unsigned long long domComplete;\u000a  readonly attribute unsigned long long loadEventStart;\u000a  readonly attribute unsigned long long loadEventEnd;\u000a\u000a  // This is a Chrome proprietary extension and not part of the\u000a  // performance/navigation timing specification.\u000a  // Returns 0 if a non-blank paint has not happened.\u000a  [Pref=\"dom.performance.time_to_non_blank_paint.enabled\"]\u000a  readonly attribute unsigned long long timeToNonBlankPaint;\u000a\u000a  jsonifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PeriodicWave.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PeriodicWave.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary PeriodicWaveConstraints {\u000a  boolean disableNormalization = false;\u000a};\u000a\u000adictionary PeriodicWaveOptions : PeriodicWaveConstraints {\u000a             sequence<float> real;\u000a             sequence<float> imag;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a // XXXbz The second arg is not optional in the spec, but that looks\u000a // like a spec bug to me.  See\u000a // <https://github.com/WebAudio/web-audio-api/issues/1116>.\u000a Constructor(BaseAudioContext context, optional PeriodicWaveOptions options)]\u000ainterface PeriodicWave {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PermissionStatus.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PermissionStatus.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/permissions/#status-of-a-permission\u000a */\u000a\u000aenum PermissionState {\u000a  \"granted\",\u000a  \"denied\",\u000a  \"prompt\"\u000a};\u000a\u000a[Exposed=(Window)]\u000ainterface PermissionStatus : EventTarget {\u000a  readonly attribute PermissionState state;\u000a  attribute EventHandler onchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Permissions.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Permissions.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/permissions/#permissions-interface\u000a */\u000a\u000aenum PermissionName {\u000a  \"geolocation\",\u000a  \"notifications\",\u000a  \"push\",\u000a  \"persistent-storage\"\u000a  // Unsupported: \"midi\"\u000a};\u000a\u000adictionary PermissionDescriptor {\u000a  required PermissionName name;\u000a};\u000a\u000a// We don't implement `PushPermissionDescriptor` because we use a background\u000a// message quota instead of `userVisibleOnly`.\u000a\u000a[Exposed=(Window)]\u000ainterface Permissions {\u000a  [Throws]\u000a  Promise<PermissionStatus> query(object permission);\u000a  [Throws, Pref=\"dom.permissions.revoke.enable\"]\u000a  Promise<PermissionStatus> revoke(object permission);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Plugin.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Plugin.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[LegacyUnenumerableNamedProperties]\u000ainterface Plugin {\u000a  readonly attribute DOMString description;\u000a  readonly attribute DOMString filename;\u000a  readonly attribute DOMString version;\u000a  readonly attribute DOMString name;\u000a\u000a  readonly attribute unsigned long length;\u000a  getter MimeType? item(unsigned long index);\u000a  getter MimeType? namedItem(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PluginArray.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PluginArray.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[LegacyUnenumerableNamedProperties]\u000ainterface PluginArray {\u000a  [NeedsCallerType]\u000a  readonly attribute unsigned long length;\u000a\u000a  [NeedsCallerType]\u000a  getter Plugin? item(unsigned long index);\u000a  [NeedsCallerType]\u000a  getter Plugin? namedItem(DOMString name);\u000a\u000a  void refresh(optional boolean reloadDocuments = false);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PluginCrashedEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PluginCrashedEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional PluginCrashedEventInit eventInitDict), ChromeOnly]\u000ainterface PluginCrashedEvent : Event\u000a{\u000a  readonly attribute unsigned long pluginID;\u000a  readonly attribute DOMString pluginDumpID;\u000a  readonly attribute DOMString pluginName;\u000a  readonly attribute DOMString? browserDumpID;\u000a  readonly attribute DOMString? pluginFilename;\u000a  readonly attribute boolean submittedCrashReport;\u000a  readonly attribute boolean gmpPlugin;\u000a};\u000a\u000adictionary PluginCrashedEventInit : EventInit\u000a{\u000a  unsigned long pluginID = 0;\u000a  DOMString pluginDumpID = \"\";\u000a  DOMString pluginName = \"\";\u000a  DOMString? browserDumpID = null;\u000a  DOMString? pluginFilename = null;\u000a  boolean submittedCrashReport = false;\u000a  boolean gmpPlugin = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PointerEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PointerEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information see nsIPointerEvent.idl.\u000a *\u000a * Portions Copyright 2013 Microsoft Open Technologies, Inc. */\u000a\u000ainterface WindowProxy;\u000a\u000a[Pref=\"dom.w3c_pointer_events.enabled\",\u000a Constructor(DOMString type, optional PointerEventInit eventInitDict)]\u000ainterface PointerEvent : MouseEvent\u000a{\u000a  readonly attribute long pointerId;\u000a  readonly attribute long width;\u000a  readonly attribute long height;\u000a  readonly attribute float pressure;\u000a  readonly attribute float tangentialPressure;\u000a  readonly attribute long tiltX;\u000a  readonly attribute long tiltY;\u000a  readonly attribute long twist;\u000a  readonly attribute DOMString pointerType;\u000a  readonly attribute boolean isPrimary;\u000a  sequence<PointerEvent> getCoalescedEvents();\u000a};\u000a\u000adictionary PointerEventInit : MouseEventInit\u000a{\u000a  long pointerId = 0;\u000a  long width = 1;\u000a  long height = 1;\u000a  float pressure = 0;\u000a  float tangentialPressure = 0;\u000a  long tiltX = 0;\u000a  long tiltY = 0;\u000a  long twist = 0;\u000a  DOMString pointerType = \"\";\u000a  boolean isPrimary = false;\u000a  sequence<PointerEvent> coalescedEvents = [];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PopStateEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PopStateEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional PopStateEventInit eventInitDict)]\u000ainterface PopStateEvent : Event\u000a{\u000a  readonly attribute any state;\u000a};\u000a\u000adictionary PopStateEventInit : EventInit\u000a{\u000a  any state = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PopupBlockedEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PopupBlockedEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000ainterface URI;\u000a\u000a[Constructor(DOMString type, optional PopupBlockedEventInit eventInitDict)]\u000ainterface PopupBlockedEvent : Event\u000a{\u000a  readonly attribute Window? requestingWindow;\u000a  readonly attribute URI? popupWindowURI;\u000a  readonly attribute DOMString? popupWindowName;\u000a  readonly attribute DOMString? popupWindowFeatures;\u000a};\u000a\u000adictionary PopupBlockedEventInit : EventInit\u000a{\u000a  Window? requestingWindow = null;\u000a  URI? popupWindowURI = null;\u000a  DOMString popupWindowName = \"\";\u000a  DOMString popupWindowFeatures = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PopupBoxObject.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PopupBoxObject.webidl"},contents:"/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Func=\"IsChromeOrXBL\"]\u000ainterface PopupBoxObject : BoxObject\u000a{\u000a  /**\u000a   *  This method is deprecated. Use openPopup or openPopupAtScreen instead.\u000a   */\u000a  void showPopup(Element? srcContent, Element popupContent,\u000a                 long xpos, long ypos,\u000a                 optional DOMString popupType = \"\",\u000a                 optional DOMString anchorAlignment = \"\",\u000a                 optional DOMString popupAlignment = \"\");\u000a\u000a  /**\u000a   *  Hide the popup if it is open. The cancel argument is used as a hint that\u000a   *  the popup is being closed because it has been cancelled, rather than\u000a   *  something being selected within the panel.\u000a   *\u000a   * @param cancel if true, then the popup is being cancelled.\u000a   */\u000a  void hidePopup(optional boolean cancel = false);\u000a\u000a  /**\u000a   * Allow the popup to automatically position itself.\u000a   */\u000a  attribute boolean autoPosition;\u000a\u000a  /**\u000a   * If keyboard navigation is enabled, the keyboard may be used to navigate\u000a   * the menuitems on the popup. Enabling keyboard navigation is the default\u000a   * behaviour and will install capturing key event listeners on the popup\u000a   * that do not propagate key events to the contents. If you wish to place\u000a   * elements in a popup which accept key events, such as textboxes, keyboard\u000a   * navigation should be disabled.\u000a   *\u000a   * Setting ignorekeys=\"true\" on the popup element also disables keyboard\u000a   * navigation, and is recommended over calling this method.\u000a   */\u000a  void enableKeyboardNavigator(boolean enableKeyboardNavigator);\u000a\u000a  /**\u000a   * Enable automatic popup dismissal. This only has effect when called\u000a   * on an open popup.\u000a   */\u000a  void enableRollup(boolean enableRollup);\u000a\u000a  /**\u000a   * Control whether the event that caused the popup to be automatically\u000a   * dismissed (\"rolled up\") should be consumed, or dispatched as a\u000a   * normal event.  This should be set immediately before calling showPopup()\u000a   * if non-default behavior is desired.\u000a   */\u000a  const unsigned long ROLLUP_DEFAULT = 0;   /* widget/platform default */\u000a  const unsigned long ROLLUP_CONSUME = 1;   /* consume the rollup event */\u000a  const unsigned long ROLLUP_NO_CONSUME = 2; /* don't consume the rollup event */\u000a  void setConsumeRollupEvent(unsigned long consume);\u000a\u000a  /**\u000a   * Size the popup to the given dimensions\u000a   */\u000a  void sizeTo(long width, long height);\u000a\u000a  /**\u000a   * Move the popup to a point on screen in CSS pixels.\u000a   */\u000a  void moveTo(long left, long top);\u000a\u000a  /**\u000a   * Open the popup relative to a specified node at a specific location.\u000a   *\u000a   * The popup may be either anchored to another node or opened freely.\u000a   * To anchor a popup to a node, supply an anchor node and set the position\u000a   * to a string indicating the manner in which the popup should be anchored.\u000a   * Possible values for position are:\u000a   *    before_start, before_end, after_start, after_end,\u000a   *    start_before, start_after, end_before, end_after,\u000a   *    overlap, after_pointer\u000a   *\u000a   * The anchor node does not need to be in the same document as the popup.\u000a   *\u000a   * If the attributesOverride argument is true, the popupanchor, popupalign\u000a   * and position attributes on the popup node override the position value\u000a   * argument. If attributesOverride is false, the attributes are only used\u000a   * if position is empty.\u000a   *\u000a   * For an anchored popup, the x and y arguments may be used to offset the\u000a   * popup from its anchored position by some distance, measured in CSS pixels.\u000a   * x increases to the right and y increases down. Negative values may also\u000a   * be used to move to the left and upwards respectively.\u000a   *\u000a   * Unanchored popups may be created by supplying null as the anchor node.\u000a   * An unanchored popup appears at the position specified by x and y,\u000a   * relative to the viewport of the document containing the popup node. In\u000a   * this case, position and attributesOverride are ignored.\u000a   *\u000a   * @param anchorElement the node to anchor the popup to, may be null\u000a   * @param position manner is which to anchor the popup to node\u000a   * @param x horizontal offset\u000a   * @param y vertical offset\u000a   * @param isContextMenu true for context menus, false for other popups\u000a   * @param attributesOverride true if popup node attributes override position\u000a   * @param triggerEvent the event that triggered this popup (mouse click for example)\u000a   */\u000a  void openPopup(Element? anchorElement,\u000a                 optional DOMString position = \"\",\u000a                 long x,\u000a                 long y,\u000a                 boolean isContextMenu,\u000a                 boolean attributesOverride,\u000a                 Event? triggerEvent);\u000a\u000a  /**\u000a   * Open the popup at a specific screen position specified by x and y. This\u000a   * position may be adjusted if it would cause the popup to be off of the\u000a   * screen. The x and y coordinates are measured in CSS pixels, and like all\u000a   * screen coordinates, are given relative to the top left of the primary\u000a   * screen.\u000a   *\u000a   * @param isContextMenu true for context menus, false for other popups\u000a   * @param x horizontal screen position\u000a   * @param y vertical screen position\u000a   * @param triggerEvent the event that triggered this popup (mouse click for example)\u000a   */\u000a  void openPopupAtScreen(long x, long y,\u000a                         boolean isContextMenu,\u000a                         Event? triggerEvent);\u000a\u000a  /**\u000a   * Open the popup anchored at a specific screen rectangle. This function is\u000a   * similar to openPopup except that that rectangle of the anchor is supplied\u000a   * rather than an element. The anchor rectangle arguments are screen\u000a   * coordinates.\u000a   */\u000a  void openPopupAtScreenRect(optional DOMString position = \"\",\u000a                             long x,\u000a                             long y,\u000a                             long width,\u000a                             long height,\u000a                             boolean isContextMenu,\u000a                             boolean attributesOverride,\u000a                             Event? triggerEvent);\u000a\u000a  /**\u000a   * Returns the state of the popup:\u000a   *   closed - the popup is closed\u000a   *   open - the popup is open\u000a   *   showing - the popup is in the process of being shown\u000a   *   hiding - the popup is in the process of being hidden\u000a   */\u000a  readonly attribute DOMString popupState;\u000a\u000a  /**\u000a   * The node that triggered the popup. If the popup is not open, will return\u000a   * null.\u000a   */\u000a  readonly attribute Node? triggerNode;\u000a\u000a  /**\u000a   * Retrieve the anchor that was specified to openPopup or for menupopups in a\u000a   * menu, the parent menu.\u000a   */\u000a  readonly attribute Element? anchorNode;\u000a\u000a  /**\u000a   * Retrieve the screen rectangle of the popup, including the area occupied by\u000a   * any titlebar or borders present.\u000a   */\u000a  DOMRect getOuterScreenRect();\u000a\u000a  /**\u000a   * Move an open popup to the given anchor position. The arguments have the same\u000a   * meaning as the corresponding argument to openPopup. This method has no effect\u000a   * on popups that are not open.\u000a   */\u000a  void moveToAnchor(Element? anchorElement,\u000a                    optional DOMString position = \"\",\u000a                    long x, long y,\u000a                    boolean attributesOverride);\u000a\u000a  /** Returns the alignment position where the popup has appeared relative to its\u000a   *  anchor node or point, accounting for any flipping that occurred.\u000a   */\u000a  readonly attribute DOMString alignmentPosition;\u000a  readonly attribute long alignmentOffset;\u000a\u000a  void setConstraintRect(DOMRectReadOnly rect);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Position.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Position.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/geolocation-API\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface Position {\u000a  readonly attribute Coordinates coords;\u000a  readonly attribute DOMTimeStamp timestamp;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PositionError.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PositionError.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/geolocation-API\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface PositionError {\u000a  const unsigned short PERMISSION_DENIED = 1;\u000a  const unsigned short POSITION_UNAVAILABLE = 2;\u000a  const unsigned short TIMEOUT = 3;\u000a  readonly attribute unsigned short code;\u000a  readonly attribute DOMString message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PrecompiledScript.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PrecompiledScript.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * Represents a pre-compiled JS script, which can be repeatedly executed in\u000a * different globals without being re-parsed.\u000a */\u000a[ChromeOnly, Exposed=(Window,System)]\u000ainterface PrecompiledScript {\u000a  /**\u000a   * Executes the script in the context of, and with the security principal\u000a   * of, the given object's global. If compiled with a return value, returns\u000a   * the value of the script's last expression. Otherwise returns undefined.\u000a   */\u000a  [Throws]\u000a  any executeInGlobal(object global);\u000a\u000a  /**\u000a   * The URL that the script was loaded from.\u000a   */\u000a  [Pure]\u000a  readonly attribute DOMString url;\u000a\u000a  /**\u000a   * True if the script was compiled with a return value, and will return the\u000a   * value of its last expression when executed.\u000a   */\u000a  [Pure]\u000a  readonly attribute boolean hasReturnValue;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Presentation.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Presentation.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/presentation-api/#interface-presentation\u000a */\u000a\u000a[Pref=\"dom.presentation.enabled\"]\u000ainterface Presentation {\u000a /*\u000a  * This should be used by the UA as the default presentation request for the\u000a  * controller. When the UA wishes to initiate a PresentationConnection on the\u000a  * controller's behalf, it MUST start a presentation connection using the default\u000a  * presentation request (as if the controller had called |defaultRequest.start()|).\u000a  *\u000a  * Only used by controlling browsing context (senders).\u000a  */\u000a  [Pref=\"dom.presentation.controller.enabled\"]\u000a  attribute PresentationRequest? defaultRequest;\u000a\u000a  /*\u000a   * This should be available on the receiving browsing context in order to\u000a   * access the controlling browsing context and communicate with them.\u000a   */\u000a  [SameObject,\u000a   Pref=\"dom.presentation.receiver.enabled\"]\u000a  readonly attribute PresentationReceiver? receiver;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationAvailability.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationAvailability.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/presentation-api/#interface-presentationavailability\u000a */\u000a\u000a[Pref=\"dom.presentation.controller.enabled\"]\u000ainterface PresentationAvailability : EventTarget {\u000a  /*\u000a   * If there is at least one device discovered by UA, the value is |true|.\u000a   * Otherwise, its value should be |false|.\u000a   */\u000a  readonly attribute boolean value;\u000a\u000a  /*\u000a   * It is called when device availability changes.\u000a   */\u000a  attribute EventHandler onchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationConnection.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationConnection.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/presentation-api/#interface-presentationconnection\u000a */\u000a\u000aenum PresentationConnectionState\u000a{\u000a  // The initial state when a PresentationConnection is ceated.\u000a  \"connecting\",\u000a\u000a  // Existing presentation, and the communication channel is active.\u000a  \"connected\",\u000a\u000a  // Existing presentation, but the communication channel is inactive.\u000a  \"closed\",\u000a\u000a  // The presentation is nonexistent anymore. It could be terminated manually,\u000a  // or either controlling or receiving browsing context is no longer available.\u000a  \"terminated\"\u000a};\u000a\u000aenum PresentationConnectionBinaryType\u000a{\u000a  \"blob\",\u000a  \"arraybuffer\"\u000a};\u000a\u000a[Pref=\"dom.presentation.enabled\"]\u000ainterface PresentationConnection : EventTarget {\u000a  /*\u000a   * Unique id for all existing connections.\u000a   */\u000a  [Constant]\u000a  readonly attribute DOMString id;\u000a\u000a  /*\u000a   * Specifies the connection's presentation URL.\u000a   */\u000a  readonly attribute DOMString url;\u000a\u000a  /*\u000a   * @value \"connected\", \"closed\", or \"terminated\".\u000a   */\u000a  readonly attribute PresentationConnectionState state;\u000a\u000a  attribute EventHandler onconnect;\u000a  attribute EventHandler onclose;\u000a  attribute EventHandler onterminate;\u000a  attribute PresentationConnectionBinaryType binaryType;\u000a\u000a  /*\u000a   * After a communication channel has been established between the controlling\u000a   * and receiving context, this function is called to send message out, and the\u000a   * event handler \"onmessage\" will be invoked at the remote side.\u000a   *\u000a   * This function only works when the state is \"connected\".\u000a   */\u000a  [Throws]\u000a  void send(DOMString data);\u000a\u000a  [Throws]\u000a  void send(Blob data);\u000a\u000a  [Throws]\u000a  void send(ArrayBuffer data);\u000a\u000a  [Throws]\u000a  void send(ArrayBufferView data);\u000a\u000a  /*\u000a   * It is triggered when receiving messages.\u000a   */\u000a  attribute EventHandler onmessage;\u000a\u000a  /*\u000a   * Both the controlling and receiving browsing context can close the\u000a   * connection. Then the connection state should turn into \"closed\".\u000a   *\u000a   * This function only works when the state is \"connected\" or \"connecting\".\u000a   */\u000a  [Throws]\u000a  void close();\u000a\u000a  /*\u000a   * Both the controlling and receiving browsing context can terminate the\u000a   * connection. Then the connection state should turn into \"terminated\".\u000a   *\u000a   * This function only works when the state is not \"connected\".\u000a   */\u000a   [Throws]\u000a   void terminate();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationConnectionAvailableEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationConnectionAvailableEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/presentation-api/#interface-presentationconnectionavailableevent\u000a */\u000a\u000a[Constructor(DOMString type,\u000a             PresentationConnectionAvailableEventInit eventInitDict),\u000a Pref=\"dom.presentation.enabled\"]\u000ainterface PresentationConnectionAvailableEvent : Event\u000a{\u000a  [SameObject]\u000a  readonly attribute PresentationConnection connection;\u000a};\u000a\u000adictionary PresentationConnectionAvailableEventInit : EventInit\u000a{\u000a  required PresentationConnection connection;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationConnectionCloseEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationConnectionCloseEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/presentation-api/#interface-presentationconnectioncloseevent\u000a */\u000a\u000aenum PresentationConnectionClosedReason\u000a{\u000a  // The communication encountered an unrecoverable error.\u000a  \"error\",\u000a\u000a  // |PresentationConnection.close()| is called by controlling browsing context\u000a  // or the receiving browsing context.\u000a  \"closed\",\u000a\u000a  // The connection is closed because the destination browsing context\u000a  // that owned the connection navigated or was discarded.\u000a  \"wentaway\"\u000a};\u000a\u000a[Constructor(DOMString type,\u000a             PresentationConnectionCloseEventInit eventInitDict),\u000a Pref=\"dom.presentation.enabled\"]\u000ainterface PresentationConnectionCloseEvent : Event\u000a{\u000a  readonly attribute PresentationConnectionClosedReason reason;\u000a\u000a  // The message is a human readable description of\u000a  // how the communication channel encountered an error.\u000a  // It is empty when the closed reason is closed or wentaway.\u000a  readonly attribute DOMString message;\u000a};\u000a\u000adictionary PresentationConnectionCloseEventInit : EventInit\u000a{\u000a  required PresentationConnectionClosedReason reason;\u000a  DOMString message = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationConnectionList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationConnectionList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/presentation-api/#interface-presentationconnectionlist\u000a */\u000a\u000a[Pref=\"dom.presentation.receiver.enabled\"]\u000ainterface PresentationConnectionList : EventTarget {\u000a  /*\u000a   * Return the non-terminated set of presentation connections in the\u000a   * set of presentation controllers.\u000a   * TODO: Use FrozenArray once available. (Bug 1236777)\u000a   * readonly attribute FrozenArray<PresentationConnection> connections;\u000a   */\u000a  [Frozen, Cached, Pure]\u000a  readonly attribute sequence<PresentationConnection> connections;\u000a\u000a  /*\u000a   * It is called when an incoming connection is connected.\u000a   */\u000a  attribute EventHandler onconnectionavailable;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationReceiver.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationReceiver.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/presentation-api/#interface-presentationreceiver\u000a */\u000a\u000a[Pref=\"dom.presentation.receiver.enabled\"]\u000ainterface PresentationReceiver {\u000a  /*\u000a   * Get a list which contains all connected presentation connections\u000a   * in a receiving browsing context.\u000a   */\u000a  [Throws]\u000a  readonly attribute Promise<PresentationConnectionList> connectionList;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationRequest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PresentationRequest.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/presentation-api/#interface-presentationrequest\u000a */\u000a\u000a[Constructor(DOMString url),\u000a Constructor(sequence<DOMString> urls),\u000a Pref=\"dom.presentation.controller.enabled\"]\u000ainterface PresentationRequest : EventTarget {\u000a  /*\u000a   * A requesting page use start() to start a new connection, and it will be\u000a   * returned with the promise. UA may show a prompt box with a list of\u000a   * available devices and ask the user to grant permission, choose a device, or\u000a   * cancel the operation.\u000a   *\u000a   * The promise is resolved when the presenting page is successfully loaded and\u000a   * the communication channel is established, i.e., the connection state is\u000a   * \"connected\".\u000a   *\u000a   * The promise may be rejected duo to one of the following reasons:\u000a   * - \"OperationError\": Unexpected error occurs.\u000a   * - \"NotFoundError\":  No available device.\u000a   * - \"AbortError\":     User dismiss/cancel the device prompt box.\u000a   * - \"NetworkError\":   Failed to establish the control channel or data channel.\u000a   * - \"TimeoutError\":   Presenting page takes too long to load.\u000a   * - \"SecurityError\":  This operation is insecure.\u000a   */\u000a  [Throws]\u000a  Promise<PresentationConnection> start();\u000a\u000a  /*\u000a   * A requesting page can use reconnect(presentationId) to reopen a\u000a   * non-terminated presentation connection.\u000a   *\u000a   * The promise is resolved when a new presentation connection is created.\u000a   * The connection state is \"connecting\".\u000a   *\u000a   * The promise may be rejected duo to one of the following reasons:\u000a   * - \"OperationError\": Unexpected error occurs.\u000a   * - \"NotFoundError\":  Can not find a presentation connection with the presentationId.\u000a   * - \"SecurityError\":  This operation is insecure.\u000a   */\u000a  [Throws]\u000a  Promise<PresentationConnection> reconnect(DOMString presentationId);\u000a\u000a /*\u000a  * UA triggers device discovery mechanism periodically and monitor device\u000a  * availability.\u000a  *\u000a  * The promise may be rejected duo to one of the following reasons:\u000a  * - \"NotSupportedError\": Unable to continuously monitor the availability.\u000a  * - \"SecurityError\":  This operation is insecure.\u000a  */\u000a  [Throws]\u000a  Promise<PresentationAvailability> getAvailability();\u000a\u000a  /*\u000a   * It is called when a connection associated with a PresentationRequest is created.\u000a   * The event is fired for all connections that are created for the controller.\u000a   */\u000a  attribute EventHandler onconnectionavailable;\u000a\u000a  /*\u000a   * A chrome page, or page which has presentation-device-manage permissiongs,\u000a   * uses startWithDevice() to start a new connection with specified device,\u000a   * and it will be returned with the promise. UA may show a prompt box with a\u000a   * list of available devices and ask the user to grant permission, choose a\u000a   * device, or cancel the operation.\u000a   *\u000a   * The promise is resolved when the presenting page is successfully loaded and\u000a   * the communication channel is established, i.e., the connection state is\u000a   * \"connected\".\u000a   *\u000a   * The promise may be rejected duo to one of the following reasons:\u000a   * - \"OperationError\": Unexpected error occurs.\u000a   * - \"NotFoundError\":  No available device.\u000a   * - \"NetworkError\":   Failed to establish the control channel or data channel.\u000a   * - \"TimeoutError\":   Presenting page takes too long to load.\u000a   */\u000a  [ChromeOnly, Throws]\u000a  Promise<PresentationConnection> startWithDevice(DOMString deviceId);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ProcessingInstruction.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ProcessingInstruction.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface ProcessingInstruction : CharacterData {\u000a  readonly attribute DOMString target;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ProfileTimelineMarker.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ProfileTimelineMarker.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a// For Javascript markers, the |stack| of a ProfileTimelineMarker\u000a// holds an object of this type.  It intentionally looks like a\u000a// SavedStack object and is a representation of the frame that is\u000a// about to be constructed at the entry point.\u000adictionary ProfileTimelineStackFrame {\u000a  long line;\u000a  long column = 0;\u000a  DOMString source;\u000a  DOMString functionDisplayName;\u000a  object? parent = null;\u000a  object? asyncParent = null;\u000a  DOMString asyncCause;\u000a};\u000a\u000adictionary ProfileTimelineLayerRect {\u000a  long x = 0;\u000a  long y = 0;\u000a  long width = 0;\u000a  long height = 0;\u000a};\u000a\u000aenum ProfileTimelineMessagePortOperationType {\u000a  \"serializeData\",\u000a  \"deserializeData\",\u000a};\u000a\u000aenum ProfileTimelineWorkerOperationType {\u000a  \"serializeDataOffMainThread\",\u000a  \"serializeDataOnMainThread\",\u000a  \"deserializeDataOffMainThread\",\u000a  \"deserializeDataOnMainThread\",\u000a};\u000a\u000adictionary ProfileTimelineMarker {\u000a  DOMString name = \"\";\u000a  DOMHighResTimeStamp start = 0;\u000a  DOMHighResTimeStamp end = 0;\u000a  object? stack = null;\u000a\u000a  unsigned short processType;\u000a  boolean isOffMainThread;\u000a\u000a  /* For ConsoleTime, Timestamp and Javascript markers.  */\u000a  DOMString causeName;\u000a\u000a  /* For ConsoleTime markers.  */\u000a  object? endStack = null;\u000a\u000a  /* For DOMEvent markers.  */\u000a  DOMString type;\u000a  unsigned short eventPhase;\u000a\u000a  /* For document::DOMContentLoaded and document::Load markers. Using this\u000a   * instead of the `start` and `end` timestamps is strongly discouraged. */\u000a  unsigned long long unixTime; // in microseconds\u000a\u000a  /* For Paint markers.  */\u000a  sequence<ProfileTimelineLayerRect> rectangles;\u000a\u000a  /* For Style markers. */\u000a  boolean isAnimationOnly;\u000a\u000a  /* For MessagePort markers. */\u000a  ProfileTimelineMessagePortOperationType messagePortOperation;\u000a\u000a  /* For Worker markers. */\u000a  ProfileTimelineWorkerOperationType workerOperation;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ProgressEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ProgressEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional ProgressEventInit eventInitDict),\u000a Exposed=(Window,Worker)]\u000ainterface ProgressEvent : Event\u000a{\u000a  readonly attribute boolean lengthComputable;\u000a  readonly attribute unsigned long long loaded;\u000a  readonly attribute unsigned long long total;\u000a};\u000a\u000adictionary ProgressEventInit : EventInit\u000a{\u000a  boolean lengthComputable = false;\u000a  unsigned long long loaded = 0;\u000a  unsigned long long total = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Promise.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Promise.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * This IDL file contains utilities to help connect JS promises to our\u000a * Web IDL infrastructure.\u000a */\u000a\u000acallback PromiseJobCallback = void();\u000a\u000a[TreatNonCallableAsNull]\u000acallback AnyCallback = any (any value);\u000a\u000a// Hack to allow us to have JS owning and properly tracing/CCing/etc a\u000a// PromiseNativeHandler.\u000a[NoInterfaceObject,\u000a Exposed=(Window,Worker,System)]\u000ainterface PromiseNativeHandler {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PromiseDebugging.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PromiseDebugging.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/* This is a utility namespace for promise-debugging functionality */\u000a\u000a\u000adictionary PromiseDebuggingStateHolder {\u000a  PromiseDebuggingState state = \"pending\";\u000a  any value;\u000a  any reason;\u000a};\u000aenum PromiseDebuggingState { \"pending\", \"fulfilled\", \"rejected\" };\u000a\u000a/**\u000a * An observer for Promise that _may_ be leaking uncaught rejections.\u000a *\u000a * It is generally a programming error to leave a Promise rejected and\u000a * not consume its rejection. The information exposed by this\u000a * interface is designed to allow clients to track down such Promise,\u000a * i.e. Promise that are currently\u000a * - in `rejected` state;\u000a * - last of their chain.\u000a *\u000a * Note, however, that a promise in such a state at the end of a tick\u000a * may eventually be consumed in some ulterior tick. Implementers of\u000a * this interface are responsible for presenting the information\u000a * in a meaningful manner.\u000a */\u000acallback interface UncaughtRejectionObserver {\u000a  /**\u000a   * A Promise has been left in `rejected` state and is the\u000a   * last in its chain.\u000a   *\u000a   * @param p A currently uncaught Promise. If `p` is is eventually\u000a   * caught, i.e. if its `then` callback is called, `onConsumed` will\u000a   * be called.\u000a   */\u000a  void onLeftUncaught(object p);\u000a\u000a  /**\u000a   * A Promise previously left uncaught is not the last in its\u000a   * chain anymore.\u000a   *\u000a   * @param p A Promise that was previously left in uncaught state is\u000a   * now caught, i.e. it is not the last in its chain anymore.\u000a   */\u000a  void onConsumed(object p);\u000a};\u000a\u000a[ChromeOnly, Exposed=(Window,System)]\u000ainterface PromiseDebugging {\u000a  /**\u000a   * The various functions on this interface all expect to take promises but\u000a   * don't want the WebIDL behavior of assimilating random passed-in objects\u000a   * into promises.  They also want to treat Promise subclass instances as\u000a   * promises instead of wrapping them in a vanilla Promise, which is what the\u000a   * IDL spec says to do.  So we list all our arguments as \"object\" instead of\u000a   * \"Promise\" and check for them being a Promise internally.\u000a   */\u000a\u000a  /**\u000a   * Get the current state of the given promise.\u000a   */\u000a  [Throws]\u000a  static PromiseDebuggingStateHolder getState(object p);\u000a\u000a  /**\u000a   * Return an identifier for a promise. This identifier is guaranteed\u000a   * to be unique to the current process.\u000a   */\u000a  [Throws]\u000a  static DOMString getPromiseID(object p);\u000a\u000a  /**\u000a   * Return the stack to the promise's allocation point.  This can\u000a   * return null if the promise was not created from script.\u000a   */\u000a  [Throws]\u000a  static object? getAllocationStack(object p);\u000a\u000a  /**\u000a   * Return the stack to the promise's rejection point, if the\u000a   * rejection happened from script.  This can return null if the\u000a   * promise has not been rejected or was not rejected from script.\u000a   */\u000a  [Throws]\u000a  static object? getRejectionStack(object p);\u000a\u000a  /**\u000a   * Return the stack to the promise's fulfillment point, if the\u000a   * fulfillment happened from script.  This can return null if the\u000a   * promise has not been fulfilled or was not fulfilled from script.\u000a   */\u000a  [Throws]\u000a  static object? getFullfillmentStack(object p);\u000a\u000a  /**\u000a   * Watching uncaught rejections on the current thread.\u000a   *\u000a   * Adding an observer twice will cause it to be notified twice\u000a   * of events.\u000a   */\u000a  static void addUncaughtRejectionObserver(UncaughtRejectionObserver o);\u000a  static boolean removeUncaughtRejectionObserver(UncaughtRejectionObserver o);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PromiseRejectionEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PromiseRejectionEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, PromiseRejectionEventInit eventInitDict),\u000a Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::DOMPrefs::PromiseRejectionEventsEnabled\"]\u000ainterface PromiseRejectionEvent : Event\u000a{\u000a  [BinaryName=\"rejectedPromise\"]\u000a  readonly attribute Promise<any> promise;\u000a  readonly attribute any reason;\u000a};\u000a\u000adictionary PromiseRejectionEventInit : EventInit {\u000a  required Promise<any> promise;\u000a           any reason;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PushEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PushEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/push-api/\u000a */\u000a\u000a[Constructor(DOMString type, optional PushEventInit eventInitDict),\u000a Func=\"mozilla::dom::DOMPrefs::PushEnabled\",\u000a Exposed=ServiceWorker]\u000ainterface PushEvent : ExtendableEvent {\u000a  readonly attribute PushMessageData? data;\u000a};\u000a\u000atypedef (BufferSource or USVString) PushMessageDataInit;\u000a\u000adictionary PushEventInit : ExtendableEventInit {\u000a  PushMessageDataInit data;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PushManager.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PushManager.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a* License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a* You can obtain one at http://mozilla.org/MPL/2.0/.\u000a*\u000a* The origin of this IDL file is\u000a* https://w3c.github.io/push-api/\u000a*/\u000a\u000adictionary PushSubscriptionOptionsInit {\u000a  // boolean userVisibleOnly = false;\u000a  (BufferSource or DOMString)? applicationServerKey = null;\u000a};\u000a\u000a// The main thread JS implementation. Please see comments in\u000a// dom/push/PushManager.h for the split between PushManagerImpl and PushManager.\u000a[JSImplementation=\"@mozilla.org/push/PushManager;1\",\u000a ChromeOnly, Constructor(DOMString scope)]\u000ainterface PushManagerImpl {\u000a  Promise<PushSubscription>    subscribe(optional PushSubscriptionOptionsInit options);\u000a  Promise<PushSubscription?>   getSubscription();\u000a  Promise<PushPermissionState> permissionState(optional PushSubscriptionOptionsInit options);\u000a};\u000a\u000a[Exposed=(Window,Worker), Func=\"mozilla::dom::DOMPrefs::PushEnabled\",\u000a ChromeConstructor(DOMString scope)]\u000ainterface PushManager {\u000a  [Throws, UseCounter]\u000a  Promise<PushSubscription>    subscribe(optional PushSubscriptionOptionsInit options);\u000a  [Throws]\u000a  Promise<PushSubscription?>   getSubscription();\u000a  [Throws]\u000a  Promise<PushPermissionState> permissionState(optional PushSubscriptionOptionsInit options);\u000a};\u000a\u000aenum PushPermissionState\u000a{\u000a    \"granted\",\u000a    \"denied\",\u000a    \"prompt\"\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PushMessageData.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PushMessageData.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/push-api/\u000a */\u000a\u000a[Func=\"mozilla::dom::DOMPrefs::PushEnabled\",\u000a Exposed=ServiceWorker]\u000ainterface PushMessageData\u000a{\u000a    [Throws]\u000a    ArrayBuffer arrayBuffer();\u000a    [Throws]\u000a    Blob        blob();\u000a    [Throws]\u000a    any         json();\u000a    USVString   text();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PushSubscription.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PushSubscription.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a* License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a* You can obtain one at http://mozilla.org/MPL/2.0/.\u000a*\u000a* The origin of this IDL file is\u000a* https://w3c.github.io/push-api/\u000a*/\u000a\u000ainterface Principal;\u000a\u000aenum PushEncryptionKeyName\u000a{\u000a  \"p256dh\",\u000a  \"auth\"\u000a};\u000a\u000adictionary PushSubscriptionKeys\u000a{\u000a  ByteString p256dh;\u000a  ByteString auth;\u000a};\u000a\u000adictionary PushSubscriptionJSON\u000a{\u000a  USVString endpoint;\u000a  PushSubscriptionKeys keys;\u000a};\u000a\u000adictionary PushSubscriptionInit\u000a{\u000a  required USVString endpoint;\u000a  required USVString scope;\u000a  ArrayBuffer? p256dhKey;\u000a  ArrayBuffer? authSecret;\u000a  BufferSource? appServerKey;\u000a};\u000a\u000a[Exposed=(Window,Worker), Func=\"mozilla::dom::DOMPrefs::PushEnabled\",\u000a ChromeConstructor(PushSubscriptionInit initDict)]\u000ainterface PushSubscription\u000a{\u000a  readonly attribute USVString endpoint;\u000a  readonly attribute PushSubscriptionOptions options;\u000a  [Throws]\u000a  ArrayBuffer? getKey(PushEncryptionKeyName name);\u000a  [Throws, UseCounter]\u000a  Promise<boolean> unsubscribe();\u000a\u000a  // Implements the custom serializer specified in Push API, section 9.\u000a  [Throws]\u000a  PushSubscriptionJSON toJSON();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PushSubscriptionOptions.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/PushSubscriptionOptions.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a* License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a* You can obtain one at http://mozilla.org/MPL/2.0/.\u000a*\u000a* The origin of this IDL file is\u000a* https://w3c.github.io/push-api/\u000a*/\u000a\u000a[Exposed=(Window,Worker), Func=\"mozilla::dom::DOMPrefs::PushEnabled\"]\u000ainterface PushSubscriptionOptions\u000a{\u000a  [SameObject, Throws]\u000a  readonly attribute ArrayBuffer? applicationServerKey;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RGBColor.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RGBColor.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor\u000a */\u000a\u000ainterface RGBColor {\u000a  readonly attribute CSSPrimitiveValue  red;\u000a  readonly attribute CSSPrimitiveValue  green;\u000a  readonly attribute CSSPrimitiveValue  blue;\u000a\u000a  // mozilla specific\u000a  readonly attribute CSSPrimitiveValue alpha;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCCertificate.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCCertificate.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * Specification: http://w3c.github.io/webrtc-pc/#certificate-management\u000a */\u000a\u000adictionary RTCCertificateExpiration {\u000a  [EnforceRange]\u000a  DOMTimeStamp expires;\u000a};\u000a\u000a[Pref=\"media.peerconnection.enabled\"]\u000ainterface RTCCertificate {\u000a  readonly attribute DOMTimeStamp expires;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCConfiguration.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCConfiguration.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/webrtc.html#idl-def-RTCConfiguration\u000a */\u000a\u000aenum RTCIceCredentialType {\u000a    \"password\",\u000a    \"token\"\u000a};\u000a\u000adictionary RTCIceServer {\u000a    (DOMString or sequence<DOMString>) urls;\u000a    DOMString  url; //deprecated\u000a    DOMString username;\u000a    DOMString credential;\u000a    RTCIceCredentialType credentialType = \"password\";\u000a};\u000a\u000aenum RTCIceTransportPolicy {\u000a    \"relay\",\u000a    \"all\"\u000a};\u000a\u000aenum RTCBundlePolicy {\u000a    \"balanced\",\u000a    \"max-compat\",\u000a    \"max-bundle\"\u000a};\u000a\u000adictionary RTCConfiguration {\u000a    sequence<RTCIceServer> iceServers;\u000a    RTCIceTransportPolicy  iceTransportPolicy = \"all\";\u000a    RTCBundlePolicy bundlePolicy = \"balanced\";\u000a    DOMString? peerIdentity = null;\u000a    sequence<RTCCertificate> certificates;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCDTMFSender.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCDTMFSender.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://www.w3.org/TR/webrtc/#rtcdtmfsender\u000a */\u000a\u000a[JSImplementation=\"@mozilla.org/dom/rtcdtmfsender;1\"]\u000ainterface RTCDTMFSender : EventTarget {\u000a    void insertDTMF(DOMString tones,\u000a                    optional unsigned long duration = 100,\u000a                    optional unsigned long interToneGap = 70);\u000a             attribute EventHandler  ontonechange;\u000a    readonly attribute DOMString     toneBuffer;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCDTMFToneChangeEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCDTMFToneChangeEvent.webidl"},contents:"[Constructor(DOMString type, optional RTCDTMFToneChangeEventInit eventInitDict)]\u000ainterface RTCDTMFToneChangeEvent : Event {\u000a    readonly attribute DOMString tone;\u000a};\u000a\u000adictionary RTCDTMFToneChangeEventInit : EventInit {\u000a    DOMString tone = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCDataChannel.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCDataChannel.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000aenum RTCDataChannelState {\u000a  \"connecting\",\u000a  \"open\",\u000a  \"closing\",\u000a  \"closed\"\u000a};\u000a\u000aenum RTCDataChannelType {\u000a  \"arraybuffer\",\u000a  \"blob\"\u000a};\u000a\u000ainterface RTCDataChannel : EventTarget\u000a{\u000a  readonly attribute DOMString label;\u000a  readonly attribute boolean reliable;\u000a  readonly attribute RTCDataChannelState readyState;\u000a  readonly attribute unsigned long bufferedAmount;\u000a  attribute unsigned long bufferedAmountLowThreshold;\u000a  attribute EventHandler onopen;\u000a  attribute EventHandler onerror;\u000a  attribute EventHandler onclose;\u000a  void close();\u000a  attribute EventHandler onmessage;\u000a  attribute EventHandler onbufferedamountlow;\u000a  attribute RTCDataChannelType binaryType;\u000a  [Throws]\u000a  void send(DOMString data);\u000a  [Throws]\u000a  void send(Blob data);\u000a  [Throws]\u000a  void send(ArrayBuffer data);\u000a  [Throws]\u000a  void send(ArrayBufferView data);\u000a};\u000a\u000a// Mozilla extensions.\u000apartial interface RTCDataChannel\u000a{\u000a  readonly attribute DOMString protocol;\u000a  readonly attribute boolean ordered;\u000a  readonly attribute unsigned short id;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCDataChannelEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCDataChannelEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/webrtc.html#idl-def-RTCDataChannelEvent\u000a */\u000a\u000adictionary RTCDataChannelEventInit : EventInit {\u000a    RTCDataChannel? channel = null;\u000a};\u000a\u000a[Pref=\"media.peerconnection.enabled\",\u000a Constructor(DOMString type, optional RTCDataChannelEventInit eventInitDict)]\u000ainterface RTCDataChannelEvent : Event {\u000a  readonly attribute RTCDataChannel? channel;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCIceCandidate.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCIceCandidate.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/webrtc.html#idl-def-RTCIceCandidate\u000a */\u000a\u000adictionary RTCIceCandidateInit {\u000a  required DOMString candidate;\u000a  DOMString? sdpMid = null;\u000a  unsigned short? sdpMLineIndex = null;\u000a};\u000a\u000a[Pref=\"media.peerconnection.enabled\",\u000a JSImplementation=\"@mozilla.org/dom/rtcicecandidate;1\",\u000a Constructor(RTCIceCandidateInit candidateInitDict)]\u000ainterface RTCIceCandidate {\u000a  attribute DOMString       candidate;\u000a  attribute DOMString?      sdpMid;\u000a  attribute unsigned short? sdpMLineIndex;\u000a\u000a  jsonifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCIdentityAssertion.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCIdentityAssertion.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://w3c.github.io/webrtc-pc/#idl-def-RTCIdentityAssertion\u000a */\u000a\u000adictionary RTCIdentityAssertion {\u000a  DOMString idp;\u000a  DOMString name;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCIdentityProvider.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCIdentityProvider.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * http://w3c.github.io/webrtc-pc/ (with https://github.com/w3c/webrtc-pc/pull/178)\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface RTCIdentityProviderRegistrar {\u000a  void register(RTCIdentityProvider idp);\u000a\u000a  /* Whether an IdP was passed to register() to chrome code. */\u000a  [ChromeOnly]\u000a  readonly attribute boolean hasIdp;\u000a  /* The following two chrome-only functions forward to the corresponding\u000a   * function on the registered IdP.  This is necessary because the\u000a   * JS-implemented WebIDL can't see these functions on `idp` above, chrome JS\u000a   * gets an Xray onto the content code that suppresses functions, see\u000a   * https://developer.mozilla.org/en-US/docs/Xray_vision#Xrays_for_JavaScript_objects\u000a   */\u000a  /* Forward to idp.generateAssertion() */\u000a  [ChromeOnly, Throws]\u000a  Promise<RTCIdentityAssertionResult>\u000a  generateAssertion(DOMString contents, DOMString origin,\u000a                    optional DOMString usernameHint);\u000a  /* Forward to idp.validateAssertion() */\u000a  [ChromeOnly, Throws]\u000a  Promise<RTCIdentityValidationResult>\u000a  validateAssertion(DOMString assertion, DOMString origin);\u000a};\u000a\u000adictionary RTCIdentityProvider {\u000a  required GenerateAssertionCallback generateAssertion;\u000a  required ValidateAssertionCallback validateAssertion;\u000a};\u000a\u000acallback GenerateAssertionCallback =\u000a  Promise<RTCIdentityAssertionResult>\u000a    (DOMString contents, DOMString origin, optional DOMString usernameHint);\u000acallback ValidateAssertionCallback =\u000a  Promise<RTCIdentityValidationResult> (DOMString assertion, DOMString origin);\u000a\u000adictionary RTCIdentityAssertionResult {\u000a  required RTCIdentityProviderDetails idp;\u000a  required DOMString assertion;\u000a};\u000a\u000adictionary RTCIdentityProviderDetails {\u000a  required DOMString domain;\u000a  DOMString protocol = \"default\";\u000a};\u000a\u000adictionary RTCIdentityValidationResult {\u000a  required DOMString identity;\u000a  required DOMString contents;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCPeerConnection.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCPeerConnection.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://w3c.github.io/webrtc-pc/#interface-definition\u000a */\u000a\u000acallback RTCSessionDescriptionCallback = void (RTCSessionDescriptionInit description);\u000acallback RTCPeerConnectionErrorCallback = void (DOMException error);\u000acallback RTCStatsCallback = void (RTCStatsReport report);\u000a\u000aenum RTCSignalingState {\u000a    \"stable\",\u000a    \"have-local-offer\",\u000a    \"have-remote-offer\",\u000a    \"have-local-pranswer\",\u000a    \"have-remote-pranswer\",\u000a    \"closed\"\u000a};\u000a\u000aenum RTCIceGatheringState {\u000a    \"new\",\u000a    \"gathering\",\u000a    \"complete\"\u000a};\u000a\u000aenum RTCIceConnectionState {\u000a    \"new\",\u000a    \"checking\",\u000a    \"connected\",\u000a    \"completed\",\u000a    \"failed\",\u000a    \"disconnected\",\u000a    \"closed\"\u000a};\u000a\u000aenum mozPacketDumpType {\u000a  \"rtp\", // dump unencrypted rtp as the MediaPipeline sees it\u000a  \"srtp\", // dump encrypted rtp as the MediaPipeline sees it\u000a  \"rtcp\", // dump unencrypted rtcp as the MediaPipeline sees it\u000a  \"srtcp\" // dump encrypted rtcp as the MediaPipeline sees it\u000a};\u000a\u000acallback mozPacketCallback = void (unsigned long level,\u000a                                   mozPacketDumpType type,\u000a                                   boolean sending,\u000a                                   ArrayBuffer packet);\u000a\u000adictionary RTCDataChannelInit {\u000a  boolean        ordered = true;\u000a  unsigned short maxPacketLifeTime;\u000a  unsigned short maxRetransmits;\u000a  DOMString      protocol = \"\";\u000a  boolean        negotiated = false;\u000a  unsigned short id;\u000a\u000a  // These are deprecated due to renaming in the spec, but still supported for Fx53\u000a  unsigned short maxRetransmitTime;\u000a};\u000a\u000adictionary RTCOfferAnswerOptions {\u000a//  boolean voiceActivityDetection = true; // TODO: support this (Bug 1184712)\u000a};\u000a\u000adictionary RTCAnswerOptions : RTCOfferAnswerOptions {\u000a};\u000a\u000adictionary RTCOfferOptions : RTCOfferAnswerOptions {\u000a  boolean offerToReceiveVideo;\u000a  boolean offerToReceiveAudio;\u000a  boolean iceRestart = false;\u000a};\u000a\u000a[Pref=\"media.peerconnection.enabled\",\u000a JSImplementation=\"@mozilla.org/dom/peerconnection;1\",\u000a Constructor (optional RTCConfiguration configuration,\u000a              optional object? constraints)]\u000ainterface RTCPeerConnection : EventTarget  {\u000a  [Throws, StaticClassOverride=\"mozilla::dom::RTCCertificate\"]\u000a  static Promise<RTCCertificate> generateCertificate (AlgorithmIdentifier keygenAlgorithm);\u000a\u000a  [Pref=\"media.peerconnection.identity.enabled\"]\u000a  void setIdentityProvider (DOMString provider,\u000a                            optional DOMString protocol,\u000a                            optional DOMString username);\u000a  [Pref=\"media.peerconnection.identity.enabled\"]\u000a  Promise<DOMString> getIdentityAssertion();\u000a  Promise<RTCSessionDescriptionInit> createOffer (optional RTCOfferOptions options);\u000a  Promise<RTCSessionDescriptionInit> createAnswer (optional RTCAnswerOptions options);\u000a  Promise<void> setLocalDescription (RTCSessionDescriptionInit description);\u000a  Promise<void> setRemoteDescription (RTCSessionDescriptionInit description);\u000a  readonly attribute RTCSessionDescription? localDescription;\u000a  readonly attribute RTCSessionDescription? currentLocalDescription;\u000a  readonly attribute RTCSessionDescription? pendingLocalDescription;\u000a  readonly attribute RTCSessionDescription? remoteDescription;\u000a  readonly attribute RTCSessionDescription? currentRemoteDescription;\u000a  readonly attribute RTCSessionDescription? pendingRemoteDescription;\u000a  readonly attribute RTCSignalingState signalingState;\u000a  Promise<void> addIceCandidate ((RTCIceCandidateInit or RTCIceCandidate)? candidate);\u000a  readonly attribute boolean? canTrickleIceCandidates;\u000a  readonly attribute RTCIceGatheringState iceGatheringState;\u000a  readonly attribute RTCIceConnectionState iceConnectionState;\u000a  [Pref=\"media.peerconnection.identity.enabled\"]\u000a  readonly attribute Promise<RTCIdentityAssertion> peerIdentity;\u000a  [Pref=\"media.peerconnection.identity.enabled\"]\u000a  readonly attribute DOMString? idpLoginUrl;\u000a\u000a  [ChromeOnly]\u000a  attribute DOMString id;\u000a\u000a  RTCConfiguration      getConfiguration ();\u000a  [Deprecated=\"RTCPeerConnectionGetStreams\"]\u000a  sequence<MediaStream> getLocalStreams ();\u000a  [Deprecated=\"RTCPeerConnectionGetStreams\"]\u000a  sequence<MediaStream> getRemoteStreams ();\u000a  void addStream (MediaStream stream);\u000a\u000a  // replaces addStream; fails if already added\u000a  // because a track can be part of multiple streams, stream parameters\u000a  // indicate which particular streams should be referenced in signaling\u000a\u000a  RTCRtpSender addTrack(MediaStreamTrack track,\u000a                        MediaStream stream,\u000a                        MediaStream... moreStreams);\u000a  void removeTrack(RTCRtpSender sender);\u000a\u000a  RTCRtpTransceiver addTransceiver((MediaStreamTrack or DOMString) trackOrKind,\u000a                                   optional RTCRtpTransceiverInit init);\u000a\u000a  sequence<RTCRtpSender> getSenders();\u000a  sequence<RTCRtpReceiver> getReceivers();\u000a  sequence<RTCRtpTransceiver> getTransceivers();\u000a\u000a  // test-only: for testing getContributingSources\u000a  [ChromeOnly]\u000a  DOMHighResTimeStamp mozGetNowInRtpSourceReferenceTime();\u000a  // test-only: for testing getContributingSources\u000a  [ChromeOnly]\u000a  void mozInsertAudioLevelForContributingSource(RTCRtpReceiver receiver,\u000a                                                unsigned long source,\u000a                                                DOMHighResTimeStamp timestamp,\u000a                                                boolean hasLevel,\u000a                                                byte level);\u000a  [ChromeOnly]\u000a  void mozAddRIDExtension(RTCRtpReceiver receiver, unsigned short extensionId);\u000a  [ChromeOnly]\u000a  void mozAddRIDFilter(RTCRtpReceiver receiver, DOMString rid);\u000a  [ChromeOnly]\u000a  void mozSetPacketCallback(mozPacketCallback callback);\u000a  [ChromeOnly]\u000a  void mozEnablePacketDump(unsigned long level,\u000a                           mozPacketDumpType type,\u000a                           boolean sending);\u000a  [ChromeOnly]\u000a  void mozDisablePacketDump(unsigned long level,\u000a                            mozPacketDumpType type,\u000a                            boolean sending);\u000a\u000a  void close ();\u000a  attribute EventHandler onnegotiationneeded;\u000a  attribute EventHandler onicecandidate;\u000a  attribute EventHandler onsignalingstatechange;\u000a  attribute EventHandler onaddstream; // obsolete\u000a  attribute EventHandler onaddtrack;  // obsolete\u000a  attribute EventHandler ontrack;     // replaces onaddtrack and onaddstream.\u000a  attribute EventHandler onremovestream;\u000a  attribute EventHandler oniceconnectionstatechange;\u000a  attribute EventHandler onicegatheringstatechange;\u000a\u000a  Promise<RTCStatsReport> getStats (optional MediaStreamTrack? selector);\u000a\u000a  // Data channel.\u000a  RTCDataChannel createDataChannel (DOMString label,\u000a                                    optional RTCDataChannelInit dataChannelDict);\u000a  attribute EventHandler ondatachannel;\u000a};\u000a\u000a// Legacy callback API\u000a\u000apartial interface RTCPeerConnection {\u000a\u000a  // Dummy Promise<void> return values avoid \"WebIDL.WebIDLError: error:\u000a  // We have overloads with both Promise and non-Promise return types\"\u000a\u000a  Promise<void> createOffer (RTCSessionDescriptionCallback successCallback,\u000a                             RTCPeerConnectionErrorCallback failureCallback,\u000a                             optional RTCOfferOptions options);\u000a  Promise<void> createAnswer (RTCSessionDescriptionCallback successCallback,\u000a                              RTCPeerConnectionErrorCallback failureCallback);\u000a  Promise<void> setLocalDescription (RTCSessionDescriptionInit description,\u000a                                     VoidFunction successCallback,\u000a                                     RTCPeerConnectionErrorCallback failureCallback);\u000a  Promise<void> setRemoteDescription (RTCSessionDescriptionInit description,\u000a                                      VoidFunction successCallback,\u000a                                      RTCPeerConnectionErrorCallback failureCallback);\u000a  Promise<void> addIceCandidate (RTCIceCandidate candidate,\u000a                                 VoidFunction successCallback,\u000a                                 RTCPeerConnectionErrorCallback failureCallback);\u000a  Promise<void> getStats (MediaStreamTrack? selector,\u000a                          RTCStatsCallback successCallback,\u000a                          RTCPeerConnectionErrorCallback failureCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCPeerConnectionIceEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCPeerConnectionIceEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/webrtc.html#idl-def-RTCPeerConnectionIceEvent\u000a */\u000a\u000adictionary RTCPeerConnectionIceEventInit : EventInit {\u000a  RTCIceCandidate? candidate = null;\u000a};\u000a\u000a[Pref=\"media.peerconnection.enabled\",\u000a Constructor(DOMString type,\u000a             optional RTCPeerConnectionIceEventInit eventInitDict)]\u000ainterface RTCPeerConnectionIceEvent : Event {\u000a  readonly attribute RTCIceCandidate? candidate;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCPeerConnectionStatic.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCPeerConnectionStatic.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/*\u000a  Right now, it is not possible to add static functions to a JS implemented\u000a  interface (see bug 863952), so we need to create a simple interface with a\u000a  trivial constructor and no data to hold these functions that really ought to\u000a  be static in RTCPeerConnection.\u000a  TODO(bcampen@mozilla.com) Merge this code into RTCPeerConnection once this\u000a  limitation is gone. (Bug 1017082)\u000a*/\u000a\u000aenum RTCLifecycleEvent {\u000a    \"initialized\",\u000a    \"icegatheringstatechange\",\u000a    \"iceconnectionstatechange\"\u000a};\u000a\u000acallback PeerConnectionLifecycleCallback = void (RTCPeerConnection pc,\u000a                                                 unsigned long long windowId,\u000a                                                 RTCLifecycleEvent eventType);\u000a\u000a[ChromeOnly,\u000a Pref=\"media.peerconnection.enabled\",\u000a JSImplementation=\"@mozilla.org/dom/peerconnectionstatic;1\",\u000a Constructor()]\u000ainterface RTCPeerConnectionStatic {\u000a\u000a  /* One slot per window (the window in which the register call is made),\u000a     automatically unregistered when window goes away.\u000a     Fires when a PC is created, and whenever the ICE connection state or\u000a     gathering state changes. */\u000a  void registerPeerConnectionLifecycleCallback(\u000a    PeerConnectionLifecycleCallback cb);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCRtpReceiver.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCRtpReceiver.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://lists.w3.org/Archives/Public/public-webrtc/2014May/0067.html\u000a */\u000a\u000a[Pref=\"media.peerconnection.enabled\",\u000a JSImplementation=\"@mozilla.org/dom/rtpreceiver;1\"]\u000ainterface RTCRtpReceiver {\u000a  readonly attribute MediaStreamTrack   track;\u000a  Promise<RTCStatsReport>               getStats();\u000a  [Pref=\"media.peerconnection.rtpsourcesapi.enabled\"]\u000a  sequence<RTCRtpContributingSource>    getContributingSources();\u000a  [Pref=\"media.peerconnection.rtpsourcesapi.enabled\"]\u000a  sequence<RTCRtpSynchronizationSource> getSynchronizationSources();\u000a\u000a  [ChromeOnly]\u000a  void setStreamIds(sequence<DOMString> streamIds);\u000a  [ChromeOnly]\u000a  void setRemoteSendBit(boolean sendBit);\u000a  [ChromeOnly]\u000a  void processTrackAdditionsAndRemovals(\u000a      RTCRtpTransceiver transceiver,\u000a      object postProcessing);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCRtpSender.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCRtpSender.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://w3c.github.io/webrtc-pc/#rtcrtpsender-interface\u000a */\u000a\u000aenum RTCPriorityType {\u000a  \"very-low\",\u000a  \"low\",\u000a  \"medium\",\u000a  \"high\"\u000a};\u000a\u000aenum RTCDegradationPreference {\u000a  \"maintain-framerate\",\u000a  \"maintain-resolution\",\u000a  \"balanced\"\u000a};\u000a\u000adictionary RTCRtxParameters {\u000a  unsigned long ssrc;\u000a};\u000a\u000adictionary RTCFecParameters {\u000a  unsigned long ssrc;\u000a};\u000a\u000adictionary RTCRtpEncodingParameters {\u000a  unsigned long            ssrc;\u000a  RTCRtxParameters         rtx;\u000a  RTCFecParameters         fec;\u000a  boolean                  active;\u000a  RTCPriorityType          priority;\u000a  unsigned long            maxBitrate;\u000a  RTCDegradationPreference degradationPreference = \"balanced\";\u000a  DOMString                rid;\u000a  float                    scaleResolutionDownBy = 1.0;\u000a};\u000a\u000adictionary RTCRtpHeaderExtensionParameters {\u000a  DOMString      uri;\u000a  unsigned short id;\u000a  boolean        encrypted;\u000a};\u000a\u000adictionary RTCRtcpParameters {\u000a  DOMString cname;\u000a  boolean   reducedSize;\u000a};\u000a\u000adictionary RTCRtpCodecParameters {\u000a  unsigned short payloadType;\u000a  DOMString      mimeType;\u000a  unsigned long  clockRate;\u000a  unsigned short channels = 1;\u000a  DOMString      sdpFmtpLine;\u000a};\u000a\u000adictionary RTCRtpParameters {\u000a  sequence<RTCRtpEncodingParameters>        encodings;\u000a  sequence<RTCRtpHeaderExtensionParameters> headerExtensions;\u000a  RTCRtcpParameters                         rtcp;\u000a  sequence<RTCRtpCodecParameters>           codecs;\u000a};\u000a\u000a[Pref=\"media.peerconnection.enabled\",\u000a JSImplementation=\"@mozilla.org/dom/rtpsender;1\"]\u000ainterface RTCRtpSender {\u000a  readonly attribute MediaStreamTrack? track;\u000a  Promise<void> setParameters (optional RTCRtpParameters parameters);\u000a  RTCRtpParameters getParameters();\u000a  Promise<void> replaceTrack(MediaStreamTrack? withTrack);\u000a  Promise<RTCStatsReport> getStats();\u000a  [Pref=\"media.peerconnection.dtmf.enabled\"]\u000a  readonly attribute RTCDTMFSender? dtmf;\u000a  // Ugh, can't use a ChromeOnly attibute sequence<MediaStream>...\u000a  [ChromeOnly]\u000a  sequence<MediaStream> getStreams();\u000a  [ChromeOnly]\u000a  void setStreams(sequence<MediaStream> streams);\u000a  [ChromeOnly]\u000a  void setTrack(MediaStreamTrack? track);\u000a  [ChromeOnly]\u000a  void checkWasCreatedByPc(RTCPeerConnection pc);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCRtpSources.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCRtpSources.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/webrtc-pc/ Editor's Draft 18 January 2018\u000a */\u000a\u000adictionary RTCRtpContributingSource {\u000a    required DOMHighResTimeStamp timestamp;\u000a    required unsigned long       source;\u000a             double              audioLevel;\u000a};\u000a\u000adictionary RTCRtpSynchronizationSource : RTCRtpContributingSource {\u000a    boolean? voiceActivityFlag;\u000a};\u000a\u000a/* Internal enum of types used by RTCRtpSourceEntry */\u000aenum RTCRtpSourceEntryType {\u000a    \"contributing\",\u000a    \"synchronization\",\u000a};\u000a/* Internal shared representation of Contributing and Synchronization sources */\u000adictionary RTCRtpSourceEntry : RTCRtpSynchronizationSource {\u000a    required RTCRtpSourceEntryType sourceType;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCRtpTransceiver.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCRtpTransceiver.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://w3c.github.io/webrtc-pc/#rtcrtptransceiver-interface\u000a */\u000a\u000aenum RTCRtpTransceiverDirection {\u000a    \"sendrecv\",\u000a    \"sendonly\",\u000a    \"recvonly\",\u000a    \"inactive\"\u000a};\u000a\u000adictionary RTCRtpTransceiverInit {\u000a    RTCRtpTransceiverDirection         direction = \"sendrecv\";\u000a    sequence<MediaStream>              streams = [];\u000a    // TODO: bug 1396918\u000a    // sequence<RTCRtpEncodingParameters> sendEncodings;\u000a};\u000a\u000a[Pref=\"media.peerconnection.enabled\",\u000a JSImplementation=\"@mozilla.org/dom/rtptransceiver;1\"]\u000ainterface RTCRtpTransceiver {\u000a    readonly attribute DOMString?                  mid;\u000a    [SameObject]\u000a    readonly attribute RTCRtpSender                sender;\u000a    [SameObject]\u000a    readonly attribute RTCRtpReceiver              receiver;\u000a    readonly attribute boolean                     stopped;\u000a             attribute RTCRtpTransceiverDirection  direction;\u000a    readonly attribute RTCRtpTransceiverDirection? currentDirection;\u000a\u000a    void stop();\u000a    // TODO: bug 1396922\u000a    // void setCodecPreferences(sequence<RTCRtpCodecCapability> codecs);\u000a\u000a    [ChromeOnly]\u000a    void setRemoteTrackId(DOMString trackId);\u000a    [ChromeOnly]\u000a    boolean remoteTrackIdIs(DOMString trackId);\u000a\u000a    // Mostly for testing\u000a    [Pref=\"media.peerconnection.remoteTrackId.enabled\"]\u000a    DOMString getRemoteTrackId();\u000a\u000a    [ChromeOnly]\u000a    void setAddTrackMagic();\u000a    [ChromeOnly]\u000a    readonly attribute boolean addTrackMagic;\u000a    [ChromeOnly]\u000a    attribute boolean shouldRemove;\u000a    [ChromeOnly]\u000a    void setCurrentDirection(RTCRtpTransceiverDirection direction);\u000a    [ChromeOnly]\u000a    void setDirectionInternal(RTCRtpTransceiverDirection direction);\u000a    [ChromeOnly]\u000a    void setMid(DOMString mid);\u000a    [ChromeOnly]\u000a    void unsetMid();\u000a    [ChromeOnly]\u000a    void setStopped();\u000a\u000a    [ChromeOnly]\u000a    DOMString getKind();\u000a    [ChromeOnly]\u000a    boolean hasBeenUsedToSend();\u000a    [ChromeOnly]\u000a    void sync();\u000a\u000a    [ChromeOnly]\u000a    void insertDTMF(DOMString tones,\u000a                    optional unsigned long duration = 100,\u000a                    optional unsigned long interToneGap = 70);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCSessionDescription.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCSessionDescription.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/webrtc.html#idl-def-RTCSessionDescription\u000a */\u000a\u000aenum RTCSdpType {\u000a  \"offer\",\u000a  \"pranswer\",\u000a  \"answer\",\u000a  \"rollback\"\u000a};\u000a\u000adictionary RTCSessionDescriptionInit {\u000a  required RTCSdpType type;\u000a  DOMString sdp = \"\";\u000a};\u000a\u000a[Pref=\"media.peerconnection.enabled\",\u000a JSImplementation=\"@mozilla.org/dom/rtcsessiondescription;1\",\u000a Constructor(optional RTCSessionDescriptionInit descriptionInitDict)]\u000ainterface RTCSessionDescription {\u000a  // These should be readonly, but writing causes deprecation warnings for a bit\u000a  attribute RTCSdpType type;\u000a  attribute DOMString sdp;\u000a\u000a  jsonifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCStatsReport.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCStatsReport.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/webrtc.html#rtcstatsreport-object\u000a * http://www.w3.org/2011/04/webrtc/wiki/Stats\u000a */\u000a\u000aenum RTCStatsType {\u000a  \"inbound-rtp\",\u000a  \"outbound-rtp\",\u000a  \"csrc\",\u000a  \"session\",\u000a  \"track\",\u000a  \"transport\",\u000a  \"candidate-pair\",\u000a  \"local-candidate\",\u000a  \"remote-candidate\"\u000a};\u000a\u000adictionary RTCStats {\u000a  DOMHighResTimeStamp timestamp;\u000a  RTCStatsType type;\u000a  DOMString id;\u000a};\u000a\u000adictionary RTCRTPStreamStats : RTCStats {\u000a  DOMString ssrc;\u000a  DOMString mediaType;\u000a  DOMString remoteId;\u000a  boolean isRemote = false;\u000a  DOMString mediaTrackId;\u000a  DOMString transportId;\u000a  DOMString codecId;\u000a\u000a  // Video encoder/decoder measurements, not present in RTCP case\u000a  double bitrateMean;\u000a  double bitrateStdDev;\u000a  double framerateMean;\u000a  double framerateStdDev;\u000a\u000a  // Local only measurements, RTCP related but not communicated via RTCP. Not\u000a  // present in RTCP case.\u000a  unsigned long firCount;\u000a  unsigned long pliCount;\u000a  unsigned long nackCount;\u000a};\u000a\u000adictionary RTCInboundRTPStreamStats : RTCRTPStreamStats {\u000a  unsigned long packetsReceived;\u000a  unsigned long long bytesReceived;\u000a  double jitter;\u000a  unsigned long packetsLost;\u000a  long mozAvSyncDelay;\u000a  long mozJitterBufferDelay;\u000a  long roundTripTime;\u000a\u000a  // Video decoder measurement, not present in RTCP case\u000a  unsigned long discardedPackets;\u000a  unsigned long framesDecoded;\u000a};\u000a\u000adictionary RTCOutboundRTPStreamStats : RTCRTPStreamStats {\u000a  unsigned long packetsSent;\u000a  unsigned long long bytesSent;\u000a  double targetBitrate;  // config encoder bitrate target of this SSRC in bits/s\u000a\u000a  // Video encoder measurements, not present in RTCP case\u000a  unsigned long droppedFrames;\u000a  unsigned long framesEncoded;\u000a};\u000a\u000adictionary RTCMediaStreamTrackStats : RTCStats {\u000a  DOMString trackIdentifier;      // track.id property\u000a  boolean remoteSource;\u000a  sequence<DOMString> ssrcIds;\u000a  // Stuff that makes sense for video\u000a  unsigned long frameWidth;\u000a  unsigned long frameHeight;\u000a  double framesPerSecond;        // The nominal FPS value\u000a  unsigned long framesSent;\u000a  unsigned long framesReceived;  // Only for remoteSource=true\u000a  unsigned long framesDecoded;\u000a  unsigned long framesDropped;   // See VideoPlaybackQuality.droppedVideoFrames\u000a  unsigned long framesCorrupted; // as above.\u000a  // Stuff that makes sense for audio\u000a  double audioLevel;               // linear, 1.0 = 0 dBov (from RFC 6464).\u000a  // AEC stuff on audio tracks sourced from a microphone where AEC is applied\u000a  double echoReturnLoss;           // in decibels from G.168 (2012) section 3.14\u000a  double echoReturnLossEnhancement; // as above, section 3.15\u000a};\u000a\u000adictionary RTCMediaStreamStats : RTCStats {\u000a  DOMString streamIdentifier;     // stream.id property\u000a  sequence<DOMString> trackIds;   // Note: stats object ids, not track.id\u000a};\u000a\u000adictionary RTCRTPContributingSourceStats : RTCStats {\u000a  unsigned long contributorSsrc;\u000a  DOMString     inboundRtpStreamId;\u000a};\u000a\u000adictionary RTCTransportStats: RTCStats {\u000a  unsigned long bytesSent;\u000a  unsigned long bytesReceived;\u000a};\u000a\u000adictionary RTCIceComponentStats : RTCStats {\u000a  DOMString transportId;\u000a  long component;\u000a  unsigned long bytesSent;\u000a  unsigned long bytesReceived;\u000a  boolean activeConnection;\u000a};\u000a\u000aenum RTCStatsIceCandidatePairState {\u000a  \"frozen\",\u000a  \"waiting\",\u000a  \"inprogress\",\u000a  \"failed\",\u000a  \"succeeded\",\u000a  \"cancelled\"\u000a};\u000a\u000adictionary RTCIceCandidatePairStats : RTCStats {\u000a  DOMString transportId;\u000a  DOMString localCandidateId;\u000a  DOMString remoteCandidateId;\u000a  RTCStatsIceCandidatePairState state;\u000a  unsigned long long priority;\u000a  boolean nominated;\u000a  boolean writable;\u000a  boolean readable;\u000a  unsigned long long bytesSent;\u000a  unsigned long long bytesReceived;\u000a  DOMHighResTimeStamp lastPacketSentTimestamp;\u000a  DOMHighResTimeStamp lastPacketReceivedTimestamp;\u000a  boolean selected;\u000a  [ChromeOnly]\u000a  unsigned long componentId; // moz\u000a};\u000a\u000aenum RTCStatsIceCandidateType {\u000a  \"host\",\u000a  \"serverreflexive\",\u000a  \"peerreflexive\",\u000a  \"relayed\"\u000a};\u000a\u000adictionary RTCIceCandidateStats : RTCStats {\u000a  DOMString componentId;\u000a  DOMString candidateId;\u000a  DOMString ipAddress;\u000a  DOMString transport;\u000a  DOMString mozLocalTransport; // needs standardization\u000a  long portNumber;\u000a  RTCStatsIceCandidateType candidateType;\u000a};\u000a\u000adictionary RTCCodecStats : RTCStats {\u000a  unsigned long payloadType;       // As used in RTP encoding.\u000a  DOMString codec;                 // video/vp8 or equivalent\u000a  unsigned long clockRate;\u000a  unsigned long channels;          // 2=stereo, missing for most other cases.\u000a  DOMString parameters;            // From SDP description line\u000a};\u000a\u000a// This is the internal representation of the report in this implementation\u000a// to be received from c++\u000a\u000adictionary RTCStatsReportInternal {\u000a  DOMString                               pcid = \"\";\u000a  sequence<RTCInboundRTPStreamStats>      inboundRTPStreamStats;\u000a  sequence<RTCOutboundRTPStreamStats>     outboundRTPStreamStats;\u000a  sequence<RTCRTPContributingSourceStats> rtpContributingSourceStats;\u000a  sequence<RTCMediaStreamTrackStats>      mediaStreamTrackStats;\u000a  sequence<RTCMediaStreamStats>           mediaStreamStats;\u000a  sequence<RTCTransportStats>             transportStats;\u000a  sequence<RTCIceComponentStats>          iceComponentStats;\u000a  sequence<RTCIceCandidatePairStats>      iceCandidatePairStats;\u000a  sequence<RTCIceCandidateStats>          iceCandidateStats;\u000a  sequence<RTCCodecStats>                 codecStats;\u000a  DOMString                               localSdp;\u000a  DOMString                               remoteSdp;\u000a  DOMHighResTimeStamp                     timestamp;\u000a  unsigned long                           iceRestarts;\u000a  unsigned long                           iceRollbacks;\u000a  boolean                                 offerer; // Is the PC the offerer\u000a  boolean                                 closed; // Is the PC now closed\u000a  sequence<RTCIceCandidateStats>          trickledIceCandidateStats;\u000a  sequence<DOMString>                     rawLocalCandidates;\u000a  sequence<DOMString>                     rawRemoteCandidates;\u000a};\u000a\u000a[Pref=\"media.peerconnection.enabled\",\u000a// TODO: Use MapClass here once it's available (Bug 928114)\u000a// MapClass(DOMString, object)\u000a JSImplementation=\"@mozilla.org/dom/rtcstatsreport;1\"]\u000ainterface RTCStatsReport {\u000a  readonly maplike<DOMString, object>;\u000a  [ChromeOnly]\u000a  readonly attribute DOMString mozPcid;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCTrackEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RTCTrackEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://w3c.github.io/webrtc-pc/#idl-def-RTCTrackEvent\u000a */\u000a\u000adictionary RTCTrackEventInit : EventInit {\u000a    required RTCRtpReceiver        receiver;\u000a    required MediaStreamTrack      track;\u000a    sequence<MediaStream> streams = [];\u000a    required RTCRtpTransceiver     transceiver;\u000a};\u000a\u000a[Pref=\"media.peerconnection.enabled\",\u000a Constructor(DOMString type, RTCTrackEventInit eventInitDict)]\u000ainterface RTCTrackEvent : Event {\u000a    readonly        attribute RTCRtpReceiver           receiver;\u000a    readonly        attribute MediaStreamTrack         track;\u000a\u000a// TODO: Use FrozenArray once available. (Bug 1236777)\u000a//  readonly        attribute FrozenArray<MediaStream> streams;\u000a\u000a    [Frozen, Cached, Pure]\u000a    readonly        attribute sequence<MediaStream> streams; // workaround\u000a    readonly        attribute RTCRtpTransceiver transceiver;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RadioNodeList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/RadioNodeList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/multipage/common-dom-interfaces.html#htmlformcontrolscollection-0\u000a *\u000a * © Copyright 2004-2014 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000ainterface RadioNodeList : NodeList {\u000a  [NeedsCallerType]\u000a  attribute DOMString value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Range.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Range.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dom.spec.whatwg.org/#range\u000a * http://domparsing.spec.whatwg.org/#dom-range-createcontextualfragment\u000a * http://dvcs.w3.org/hg/csswg/raw-file/tip/cssom-view/Overview.html#extensions-to-the-range-interface\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor]\u000ainterface Range {\u000a  [Throws]\u000a  readonly attribute Node startContainer;\u000a  [Throws]\u000a  readonly attribute unsigned long startOffset;\u000a  [Throws]\u000a  readonly attribute Node endContainer;\u000a  [Throws]\u000a  readonly attribute unsigned long endOffset;\u000a  readonly attribute boolean collapsed;\u000a  [Throws]\u000a  readonly attribute Node commonAncestorContainer;\u000a\u000a  [Throws, BinaryName=\"setStartJS\"]\u000a  void setStart(Node refNode, unsigned long offset);\u000a  [Throws, BinaryName=\"setEndJS\"]\u000a  void setEnd(Node refNode, unsigned long offset);\u000a  [Throws, BinaryName=\"setStartBeforeJS\"]\u000a  void setStartBefore(Node refNode);\u000a  [Throws, BinaryName=\"setStartAfterJS\"]\u000a  void setStartAfter(Node refNode);\u000a  [Throws, BinaryName=\"setEndBeforeJS\"]\u000a  void setEndBefore(Node refNode);\u000a  [Throws, BinaryName=\"setEndAfterJS\"]\u000a  void setEndAfter(Node refNode);\u000a  [BinaryName=\"collapseJS\"]\u000a  void collapse(optional boolean toStart = false);\u000a  [Throws, BinaryName=\"selectNodeJS\"]\u000a  void selectNode(Node refNode);\u000a  [Throws, BinaryName=\"selectNodeContentsJS\"]\u000a  void selectNodeContents(Node refNode);\u000a\u000a  const unsigned short START_TO_START = 0;\u000a  const unsigned short START_TO_END = 1;\u000a  const unsigned short END_TO_END = 2;\u000a  const unsigned short END_TO_START = 3;\u000a  [Throws]\u000a  short compareBoundaryPoints(unsigned short how, Range sourceRange);\u000a  [CEReactions, Throws]\u000a  void deleteContents();\u000a  [CEReactions, Throws]\u000a  DocumentFragment extractContents();\u000a  [CEReactions, Throws]\u000a  DocumentFragment cloneContents();\u000a  [CEReactions, Throws]\u000a  void insertNode(Node node);\u000a  [CEReactions, Throws]\u000a  void surroundContents(Node newParent);\u000a\u000a  Range cloneRange();\u000a  void detach();\u000a\u000a  [Throws]\u000a  boolean isPointInRange(Node node, unsigned long offset);\u000a  [Throws]\u000a  short comparePoint(Node node, unsigned long offset);\u000a\u000a  [Throws]\u000a  boolean intersectsNode(Node node);\u000a\u000a  stringifier;\u000a};\u000a\u000a// http://domparsing.spec.whatwg.org/#dom-range-createcontextualfragment\u000apartial interface Range {\u000a  [CEReactions, Throws]\u000a  DocumentFragment createContextualFragment(DOMString fragment);\u000a};\u000a\u000a// http://dvcs.w3.org/hg/csswg/raw-file/tip/cssom-view/Overview.html#extensions-to-the-range-interface\u000apartial interface Range {\u000a  DOMRectList? getClientRects();\u000a  DOMRect getBoundingClientRect();\u000a};\u000a\u000adictionary ClientRectsAndTexts {\u000a  required DOMRectList rectList;\u000a  required sequence<DOMString> textList;\u000a};\u000a\u000apartial interface Range {\u000a  [ChromeOnly, Throws]\u000a  ClientRectsAndTexts getClientRectsAndTexts();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Rect.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Rect.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface Rect {\u000a  readonly attribute CSSPrimitiveValue top;\u000a  readonly attribute CSSPrimitiveValue right;\u000a  readonly attribute CSSPrimitiveValue bottom;\u000a  readonly attribute CSSPrimitiveValue left;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Request.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Request.webidl"},contents:"/* -*- Mode: IDL; tab-width: 1; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://fetch.spec.whatwg.org/#request-class\u000a */\u000a\u000atypedef (Request or USVString) RequestInfo;\u000atypedef unsigned long nsContentPolicyType;\u000a\u000a[Constructor(RequestInfo input, optional RequestInit init),\u000a Exposed=(Window,Worker)]\u000ainterface Request {\u000a  readonly attribute ByteString method;\u000a  readonly attribute USVString url;\u000a  [SameObject] readonly attribute Headers headers;\u000a\u000a  [Func=\"mozilla::dom::DOMPrefs::RequestContextEnabled\"]\u000a  readonly attribute RequestContext context;\u000a  readonly attribute USVString referrer;\u000a  readonly attribute ReferrerPolicy referrerPolicy;\u000a  readonly attribute RequestMode mode;\u000a  readonly attribute RequestCredentials credentials;\u000a  readonly attribute RequestCache cache;\u000a  readonly attribute RequestRedirect redirect;\u000a  readonly attribute DOMString integrity;\u000a\u000a  // If a main-thread fetch() promise rejects, the error passed will be a\u000a  // nsresult code.\u000a  [ChromeOnly]\u000a  readonly attribute boolean mozErrors;\u000a\u000a  [BinaryName=\"getOrCreateSignal\"]\u000a  readonly attribute AbortSignal signal;\u000a\u000a  [Throws,\u000a   NewObject] Request clone();\u000a\u000a  // Bug 1124638 - Allow chrome callers to set the context.\u000a  [ChromeOnly]\u000a  void overrideContentPolicyType(nsContentPolicyType context);\u000a};\u000aRequest implements Body;\u000a\u000adictionary RequestInit {\u000a  ByteString method;\u000a  HeadersInit headers;\u000a  BodyInit? body;\u000a  USVString referrer;\u000a  ReferrerPolicy referrerPolicy;\u000a  RequestMode mode;\u000a  RequestCredentials credentials;\u000a  RequestCache cache;\u000a  RequestRedirect redirect;\u000a  DOMString integrity;\u000a\u000a  [ChromeOnly]\u000a  boolean mozErrors;\u000a\u000a  AbortSignal? signal;\u000a\u000a  [Func=\"mozilla::dom::DOMPrefs::FetchObserverEnabled\"]\u000a  ObserverCallback observe;\u000a};\u000a\u000a// Gecko currently does not ship RequestContext, so please don't use it in IDL\u000a// that is exposed to script.\u000aenum RequestContext {\u000a  \"audio\", \"beacon\", \"cspreport\", \"download\", \"embed\", \"eventsource\", \"favicon\", \"fetch\",\u000a  \"font\", \"form\", \"frame\", \"hyperlink\", \"iframe\", \"image\", \"imageset\", \"import\",\u000a  \"internal\", \"location\", \"manifest\", \"object\", \"ping\", \"plugin\", \"prefetch\", \"script\",\u000a  \"sharedworker\", \"subresource\", \"style\", \"track\", \"video\", \"worker\", \"xmlhttprequest\",\u000a  \"xslt\"\u000a};\u000a\u000aenum RequestMode { \"same-origin\", \"no-cors\", \"cors\", \"navigate\" };\u000aenum RequestCredentials { \"omit\", \"same-origin\", \"include\" };\u000aenum RequestCache { \"default\", \"no-store\", \"reload\", \"no-cache\", \"force-cache\", \"only-if-cached\" };\u000aenum RequestRedirect { \"follow\", \"error\", \"manual\" };\u000aenum ReferrerPolicy {\u000a  \"\", \"no-referrer\", \"no-referrer-when-downgrade\", \"origin\",\u000a  \"origin-when-cross-origin\", \"unsafe-url\", \"same-origin\", \"strict-origin\",\u000a  \"strict-origin-when-cross-origin\"\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Response.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Response.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://fetch.spec.whatwg.org/#response-class\u000a */\u000a\u000a// This should be Constructor(optional BodyInit... but BodyInit doesn't include\u000a// ReadableStream yet because we don't want to expose Streams API to Request.\u000a[Constructor(optional (Blob or BufferSource or FormData or URLSearchParams or ReadableStream or USVString)? body, optional ResponseInit init),\u000a Exposed=(Window,Worker)]\u000ainterface Response {\u000a  [NewObject] static Response error();\u000a  [Throws,\u000a   NewObject] static Response redirect(USVString url, optional unsigned short status = 302);\u000a\u000a  readonly attribute ResponseType type;\u000a\u000a  readonly attribute USVString url;\u000a  readonly attribute boolean redirected;\u000a  readonly attribute unsigned short status;\u000a  readonly attribute boolean ok;\u000a  readonly attribute ByteString statusText;\u000a  [SameObject] readonly attribute Headers headers;\u000a\u000a  [Throws,\u000a   NewObject] Response clone();\u000a\u000a  [ChromeOnly, NewObject, Throws] Response cloneUnfiltered();\u000a};\u000aResponse implements Body;\u000a\u000a// This should be part of Body but we don't want to expose body to request yet.\u000a// See bug 1387483.\u000apartial interface Response {\u000a  [GetterThrows, Func=\"mozilla::dom::DOMPrefs::StreamsEnabled\"]\u000a  readonly attribute ReadableStream? body;\u000a};\u000a\u000adictionary ResponseInit {\u000a  unsigned short status = 200;\u000a  ByteString statusText = \"OK\";\u000a  HeadersInit headers;\u000a};\u000a\u000aenum ResponseType { \"basic\", \"cors\", \"default\", \"error\", \"opaque\", \"opaqueredirect\" };\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAElement : SVGGraphicsElement {\u000a  readonly attribute SVGAnimatedString target;\u000a\u000a  [SetterThrows]\u000a  attribute DOMString download;\u000a};\u000a\u000aSVGAElement implements SVGURIReference;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAngle.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAngle.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAngle {\u000a\u000a  // Angle Unit Types\u000a  const unsigned short SVG_ANGLETYPE_UNKNOWN = 0;\u000a  const unsigned short SVG_ANGLETYPE_UNSPECIFIED = 1;\u000a  const unsigned short SVG_ANGLETYPE_DEG = 2;\u000a  const unsigned short SVG_ANGLETYPE_RAD = 3;\u000a  const unsigned short SVG_ANGLETYPE_GRAD = 4;\u000a\u000a  readonly attribute unsigned short unitType;\u000a           [SetterThrows]\u000a           attribute float value;\u000a           [SetterThrows]\u000a           attribute float valueInSpecifiedUnits;\u000a           [SetterThrows]\u000a           attribute DOMString valueAsString;\u000a\u000a  [Throws]\u000a  void newValueSpecifiedUnits(unsigned short unitType, float valueInSpecifiedUnits);\u000a  [Throws]\u000a  void convertToSpecifiedUnits(unsigned short unitType);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimateElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimateElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimateElement : SVGAnimationElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimateMotionElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimateMotionElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimateMotionElement : SVGAnimationElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimateTransformElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimateTransformElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimateTransformElement : SVGAnimationElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedAngle.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedAngle.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedAngle {\u000a  [Constant]\u000a  readonly attribute SVGAngle baseVal;\u000a  [Constant]\u000a  readonly attribute SVGAngle animVal;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedBoolean.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedBoolean.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedBoolean {\u000a           attribute boolean baseVal;\u000a  readonly attribute boolean animVal;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedEnumeration.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedEnumeration.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedEnumeration\u000a *\u000a * Copyright © 2013 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedEnumeration {\u000a  [SetterThrows]\u000a           attribute unsigned short baseVal;\u000a  readonly attribute unsigned short animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedInteger.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedInteger.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedInteger\u000a *\u000a * Copyright © 2013 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedInteger {\u000a           attribute long baseVal;\u000a  readonly attribute long animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedLength.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedLength.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedLength {\u000a  [Constant]\u000a  readonly attribute SVGLength baseVal;\u000a  [Constant]\u000a  readonly attribute SVGLength animVal;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedLengthList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedLengthList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedLengthList {\u000a  [Constant]\u000a  readonly attribute SVGLengthList baseVal;\u000a  [Constant]\u000a  readonly attribute SVGLengthList animVal;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedNumber.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedNumber.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedNumber\u000a *\u000a * Copyright © 2013 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved.\u000a * W3C liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedNumber {\u000a           attribute float baseVal;\u000a  readonly attribute float animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedNumberList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedNumberList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedNumberList {\u000a  [Constant]\u000a  readonly attribute SVGNumberList baseVal;\u000a  [Constant]\u000a  readonly attribute SVGNumberList animVal;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedPathData.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedPathData.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface SVGAnimatedPathData {\u000a  readonly attribute SVGPathSegList pathSegList;\u000a  //readonly attribute SVGPathSegList normalizedPathSegList;\u000a  readonly attribute SVGPathSegList animatedPathSegList;\u000a  //readonly attribute SVGPathSegList animatedNormalizedPathSegList;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedPoints.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedPoints.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface SVGAnimatedPoints {\u000a  [Constant]\u000a  readonly attribute SVGPointList points;\u000a  [Constant]\u000a  readonly attribute SVGPointList animatedPoints;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedPreserveAspectRatio.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedPreserveAspectRatio.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedPreserveAspectRatio {\u000a  [Constant]\u000a  readonly attribute SVGPreserveAspectRatio baseVal;\u000a  [Constant]\u000a  readonly attribute SVGPreserveAspectRatio animVal;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedRect.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedRect.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedRect {\u000a  readonly attribute SVGRect? baseVal;\u000a  readonly attribute SVGRect? animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedString.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedString.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedString {\u000a           attribute DOMString baseVal;\u000a  readonly attribute DOMString animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedTransformList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimatedTransformList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimatedTransformList {\u000a  [Constant]\u000a  readonly attribute SVGTransformList baseVal;\u000a  [Constant]\u000a  readonly attribute SVGTransformList animVal;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimationElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGAnimationElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGAnimationElement : SVGElement {\u000a\u000a  readonly attribute SVGElement? targetElement;\u000a\u000a  [Throws]\u000a  float getStartTime();\u000a  float getCurrentTime();\u000a  [Throws]\u000a  float getSimpleDuration();\u000a\u000a  [Throws]\u000a  void beginElement();\u000a  [Throws]\u000a  void beginElementAt(float offset);\u000a  [Throws]\u000a  void endElement();\u000a  [Throws]\u000a  void endElementAt(float offset);\u000a};\u000a\u000aSVGAnimationElement implements SVGTests;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGCircleElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGCircleElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGCircleElement : SVGGraphicsElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength cx;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength cy;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength r;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGClipPathElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGClipPathElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGClipPathElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration clipPathUnits;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedTransformList transform;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGComponentTransferFunctionElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGComponentTransferFunctionElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\u000a *\u000a * Copyright © 2013 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGComponentTransferFunctionElement : SVGElement {\u000a  // Component Transfer Types\u000a  const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN = 0;\u000a  const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY = 1;\u000a  const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_TABLE = 2;\u000a  const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE = 3;\u000a  const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_LINEAR = 4;\u000a  const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_GAMMA = 5;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration type;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumberList tableValues;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber slope;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber intercept;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber amplitude;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber exponent;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber offset;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGDefsElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGDefsElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGDefsElement : SVGGraphicsElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGDescElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGDescElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGDescElement : SVGElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGElement : Element {\u000a           attribute DOMString id;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString className;\u000a  [SameObject] readonly attribute DOMStringMap dataset;\u000a  [PutForwards=cssText, Constant]\u000a  readonly attribute CSSStyleDeclaration style;\u000a\u000a  readonly attribute SVGSVGElement? ownerSVGElement;\u000a  readonly attribute SVGElement? viewportElement;\u000a\u000a  [SetterThrows, Pure]\u000a        attribute long tabIndex;\u000a  [Throws] void focus();\u000a  [Throws] void blur();\u000a};\u000a\u000aSVGElement implements GlobalEventHandlers;\u000aSVGElement implements DocumentAndElementEventHandlers;\u000aSVGElement implements TouchEventHandlers;\u000aSVGElement implements OnErrorEventHandlerForNodes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGEllipseElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGEllipseElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGEllipseElement : SVGGraphicsElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength cx;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength cy;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength rx;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength ry;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEBlendElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEBlendElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEBlendElement : SVGElement {\u000a\u000a  // Blend Mode Types\u000a  const unsigned short SVG_FEBLEND_MODE_UNKNOWN = 0;\u000a  const unsigned short SVG_FEBLEND_MODE_NORMAL = 1;\u000a  const unsigned short SVG_FEBLEND_MODE_MULTIPLY = 2;\u000a  const unsigned short SVG_FEBLEND_MODE_SCREEN = 3;\u000a  const unsigned short SVG_FEBLEND_MODE_DARKEN = 4;\u000a  const unsigned short SVG_FEBLEND_MODE_LIGHTEN = 5;\u000a  const unsigned short SVG_FEBLEND_MODE_OVERLAY = 6;\u000a  const unsigned short SVG_FEBLEND_MODE_COLOR_DODGE = 7;\u000a  const unsigned short SVG_FEBLEND_MODE_COLOR_BURN = 8;\u000a  const unsigned short SVG_FEBLEND_MODE_HARD_LIGHT = 9;\u000a  const unsigned short SVG_FEBLEND_MODE_SOFT_LIGHT = 10;\u000a  const unsigned short SVG_FEBLEND_MODE_DIFFERENCE = 11;\u000a  const unsigned short SVG_FEBLEND_MODE_EXCLUSION = 12;\u000a  const unsigned short SVG_FEBLEND_MODE_HUE = 13;\u000a  const unsigned short SVG_FEBLEND_MODE_SATURATION = 14;\u000a  const unsigned short SVG_FEBLEND_MODE_COLOR = 15;\u000a  const unsigned short SVG_FEBLEND_MODE_LUMINOSITY = 16;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in2;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration mode;\u000a};\u000a\u000aSVGFEBlendElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEColorMatrixElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEColorMatrixElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEColorMatrixElement : SVGElement {\u000a\u000a  // Color Matrix Types\u000a  const unsigned short SVG_FECOLORMATRIX_TYPE_UNKNOWN = 0;\u000a  const unsigned short SVG_FECOLORMATRIX_TYPE_MATRIX = 1;\u000a  const unsigned short SVG_FECOLORMATRIX_TYPE_SATURATE = 2;\u000a  const unsigned short SVG_FECOLORMATRIX_TYPE_HUEROTATE = 3;\u000a  const unsigned short SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA = 4;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration type;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumberList values;\u000a};\u000a\u000aSVGFEColorMatrixElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEComponentTransferElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEComponentTransferElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEComponentTransferElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a};\u000a\u000aSVGFEComponentTransferElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFECompositeElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFECompositeElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFECompositeElement : SVGElement {\u000a\u000a  // Composite Operators\u000a  const unsigned short SVG_FECOMPOSITE_OPERATOR_UNKNOWN = 0;\u000a  const unsigned short SVG_FECOMPOSITE_OPERATOR_OVER = 1;\u000a  const unsigned short SVG_FECOMPOSITE_OPERATOR_IN = 2;\u000a  const unsigned short SVG_FECOMPOSITE_OPERATOR_OUT = 3;\u000a  const unsigned short SVG_FECOMPOSITE_OPERATOR_ATOP = 4;\u000a  const unsigned short SVG_FECOMPOSITE_OPERATOR_XOR = 5;\u000a  const unsigned short SVG_FECOMPOSITE_OPERATOR_ARITHMETIC = 6;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in2;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration operator;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber k1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber k2;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber k3;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber k4;\u000a};\u000a\u000aSVGFECompositeElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEConvolveMatrixElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEConvolveMatrixElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEConvolveMatrixElement : SVGElement {\u000a\u000a  // Edge Mode Values\u000a  const unsigned short SVG_EDGEMODE_UNKNOWN = 0;\u000a  const unsigned short SVG_EDGEMODE_DUPLICATE = 1;\u000a  const unsigned short SVG_EDGEMODE_WRAP = 2;\u000a  const unsigned short SVG_EDGEMODE_NONE = 3;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedInteger orderX;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedInteger orderY;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumberList kernelMatrix;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber divisor;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber bias;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedInteger targetX;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedInteger targetY;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration edgeMode;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber kernelUnitLengthX;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber kernelUnitLengthY;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedBoolean preserveAlpha;\u000a};\u000a\u000aSVGFEConvolveMatrixElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEDiffuseLightingElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEDiffuseLightingElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEDiffuseLightingElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber surfaceScale;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber diffuseConstant;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber kernelUnitLengthX;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber kernelUnitLengthY;\u000a};\u000a\u000aSVGFEDiffuseLightingElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEDisplacementMapElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEDisplacementMapElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEDisplacementMapElement : SVGElement {\u000a\u000a  // Channel Selectors\u000a  const unsigned short SVG_CHANNEL_UNKNOWN = 0;\u000a  const unsigned short SVG_CHANNEL_R = 1;\u000a  const unsigned short SVG_CHANNEL_G = 2;\u000a  const unsigned short SVG_CHANNEL_B = 3;\u000a  const unsigned short SVG_CHANNEL_A = 4;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in2;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber scale;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration xChannelSelector;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration yChannelSelector;\u000a};\u000a\u000aSVGFEDisplacementMapElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEDistantLightElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEDistantLightElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEDistantLightElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber azimuth;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber elevation;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEDropShadowElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEDropShadowElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEDropShadowElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber dx;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber dy;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber stdDeviationX;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber stdDeviationY;\u000a\u000a  void setStdDeviation(float stdDeviationX, float stdDeviationY);\u000a};\u000a\u000aSVGFEDropShadowElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEFloodElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEFloodElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEFloodElement : SVGElement {\u000a};\u000a\u000aSVGFEFloodElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEFuncAElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEFuncAElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\u000a *\u000a * Copyright © 2013 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEFuncAElement : SVGComponentTransferFunctionElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEFuncBElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEFuncBElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\u000a *\u000a * Copyright © 2013 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEFuncBElement : SVGComponentTransferFunctionElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEFuncGElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEFuncGElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\u000a *\u000a * Copyright © 2013 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEFuncGElement : SVGComponentTransferFunctionElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEFuncRElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEFuncRElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\u000a *\u000a * Copyright © 2013 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEFuncRElement : SVGComponentTransferFunctionElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEGaussianBlurElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEGaussianBlurElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEGaussianBlurElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber stdDeviationX;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber stdDeviationY;\u000a\u000a  void setStdDeviation(float stdDeviationX, float stdDeviationY);\u000a};\u000a\u000aSVGFEGaussianBlurElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEImageElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEImageElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEImageElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedPreserveAspectRatio preserveAspectRatio;\u000a};\u000a\u000aSVGFEImageElement implements SVGFilterPrimitiveStandardAttributes;\u000aSVGFEImageElement implements SVGURIReference;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEMergeElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEMergeElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEMergeElement : SVGElement {\u000a};\u000a\u000aSVGFEMergeElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEMergeNodeElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEMergeNodeElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEMergeNodeElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEMorphologyElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEMorphologyElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEMorphologyElement : SVGElement {\u000a\u000a  // Morphology Operators\u000a  const unsigned short SVG_MORPHOLOGY_OPERATOR_UNKNOWN = 0;\u000a  const unsigned short SVG_MORPHOLOGY_OPERATOR_ERODE = 1;\u000a  const unsigned short SVG_MORPHOLOGY_OPERATOR_DILATE = 2;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration operator;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber radiusX;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber radiusY;\u000a};\u000a\u000aSVGFEMorphologyElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEOffsetElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEOffsetElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEOffsetElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber dx;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber dy;\u000a};\u000a\u000aSVGFEOffsetElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEPointLightElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFEPointLightElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFEPointLightElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber z;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFESpecularLightingElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFESpecularLightingElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFESpecularLightingElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber surfaceScale;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber specularConstant;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber specularExponent;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber kernelUnitLengthX;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber kernelUnitLengthY;\u000a};\u000a\u000aSVGFESpecularLightingElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFESpotLightElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFESpotLightElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFESpotLightElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber z;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber pointsAtX;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber pointsAtY;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber pointsAtZ;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber specularExponent;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber limitingConeAngle;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFETileElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFETileElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFETileElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString in1;\u000a};\u000a\u000aSVGFETileElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFETurbulenceElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFETurbulenceElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFETurbulenceElement : SVGElement {\u000a\u000a  // Turbulence Types\u000a  const unsigned short SVG_TURBULENCE_TYPE_UNKNOWN = 0;\u000a  const unsigned short SVG_TURBULENCE_TYPE_FRACTALNOISE = 1;\u000a  const unsigned short SVG_TURBULENCE_TYPE_TURBULENCE = 2;\u000a\u000a  // Stitch Options\u000a  const unsigned short SVG_STITCHTYPE_UNKNOWN = 0;\u000a  const unsigned short SVG_STITCHTYPE_STITCH = 1;\u000a  const unsigned short SVG_STITCHTYPE_NOSTITCH = 2;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber baseFrequencyX;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber baseFrequencyY;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedInteger numOctaves;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber seed;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration stitchTiles;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration type;\u000a};\u000a\u000aSVGFETurbulenceElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFilterElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFilterElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGFilterElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration filterUnits;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration primitiveUnits;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength width;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength height;\u000a\u000a  // ImageData apply(ImageData source);\u000a};\u000a\u000aSVGFilterElement implements SVGURIReference;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFilterPrimitiveStandardAttributes.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFilterPrimitiveStandardAttributes.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface SVGFilterPrimitiveStandardAttributes {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength width;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength height;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString result;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFitToViewBox.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGFitToViewBox.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface SVGFitToViewBox {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedRect viewBox;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedPreserveAspectRatio preserveAspectRatio;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGForeignObjectElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGForeignObjectElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGForeignObjectElement : SVGGraphicsElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength width;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength height;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGGElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGGElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGGElement : SVGGraphicsElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGGeometryElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGGeometryElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGGeometryElement : SVGGraphicsElement {\u000a  [SameObject]\u000a  readonly attribute SVGAnimatedNumber pathLength;\u000a\u000a  float getTotalLength();\u000a  [NewObject, Throws]\u000a  SVGPoint getPointAtLength(float distance);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGGradientElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGGradientElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://svgwg.org/svg2-draft/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGGradientElement : SVGElement {\u000a\u000a  // Spread Method Types\u000a  const unsigned short SVG_SPREADMETHOD_UNKNOWN = 0;\u000a  const unsigned short SVG_SPREADMETHOD_PAD = 1;\u000a  const unsigned short SVG_SPREADMETHOD_REFLECT = 2;\u000a  const unsigned short SVG_SPREADMETHOD_REPEAT = 3;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration gradientUnits;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedTransformList gradientTransform;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration spreadMethod;\u000a};\u000a\u000aSVGGradientElement implements SVGURIReference;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGGraphicsElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGGraphicsElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary SVGBoundingBoxOptions {\u000a  boolean fill = true;\u000a  boolean stroke = false;\u000a  boolean markers = false;\u000a  boolean clipped = false;\u000a};\u000a\u000ainterface SVGGraphicsElement : SVGElement {\u000a  readonly attribute SVGAnimatedTransformList transform;\u000a\u000a  readonly attribute SVGElement? nearestViewportElement;\u000a  readonly attribute SVGElement? farthestViewportElement;\u000a\u000a  [NewObject, Throws]\u000a  SVGRect getBBox(optional SVGBoundingBoxOptions aOptions);\u000a  // Not implemented\u000a  // SVGRect getStrokeBBox();\u000a  SVGMatrix? getCTM();\u000a  SVGMatrix? getScreenCTM();\u000a  [Throws]\u000a  SVGMatrix getTransformToElement(SVGGraphicsElement element);\u000a};\u000a\u000aSVGGraphicsElement implements SVGTests;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGImageElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGImageElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGImageElement : SVGGraphicsElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength width;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength height;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedPreserveAspectRatio preserveAspectRatio;\u000a};\u000a\u000aSVGImageElement implements MozImageLoadingContent;\u000aSVGImageElement implements SVGURIReference;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGLength.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGLength.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGLength {\u000a\u000a  // Length Unit Types\u000a  const unsigned short SVG_LENGTHTYPE_UNKNOWN = 0;\u000a  const unsigned short SVG_LENGTHTYPE_NUMBER = 1;\u000a  const unsigned short SVG_LENGTHTYPE_PERCENTAGE = 2;\u000a  const unsigned short SVG_LENGTHTYPE_EMS = 3;\u000a  const unsigned short SVG_LENGTHTYPE_EXS = 4;\u000a  const unsigned short SVG_LENGTHTYPE_PX = 5;\u000a  const unsigned short SVG_LENGTHTYPE_CM = 6;\u000a  const unsigned short SVG_LENGTHTYPE_MM = 7;\u000a  const unsigned short SVG_LENGTHTYPE_IN = 8;\u000a  const unsigned short SVG_LENGTHTYPE_PT = 9;\u000a  const unsigned short SVG_LENGTHTYPE_PC = 10;\u000a\u000a  readonly attribute unsigned short unitType;\u000a  [Throws]\u000a           attribute float value;\u000a  [SetterThrows]\u000a           attribute float valueInSpecifiedUnits;\u000a  [SetterThrows]\u000a           attribute DOMString valueAsString;\u000a\u000a  [Throws]\u000a  void newValueSpecifiedUnits(unsigned short unitType, float valueInSpecifiedUnits);\u000a  [Throws]\u000a  void convertToSpecifiedUnits(unsigned short unitType);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGLengthList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGLengthList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG11/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGLengthList {\u000a  readonly attribute unsigned long numberOfItems;\u000a  [Throws]\u000a  void clear();\u000a  [Throws]\u000a  SVGLength initialize(SVGLength newItem);\u000a  [Throws]\u000a  getter SVGLength getItem(unsigned long index);\u000a  [Throws]\u000a  SVGLength insertItemBefore(SVGLength newItem, unsigned long index);\u000a  [Throws]\u000a  SVGLength replaceItem(SVGLength newItem, unsigned long index);\u000a  [Throws]\u000a  SVGLength removeItem(unsigned long index);\u000a  [Throws]\u000a  SVGLength appendItem(SVGLength newItem);\u000a\u000a  // Mozilla-specific stuff\u000a  readonly attribute unsigned long length; // synonym for numberOfItems\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGLineElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGLineElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGLineElement : SVGGraphicsElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x2;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y2;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGLinearGradientElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGLinearGradientElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://svgwg.org/svg2-draft/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGLinearGradientElement : SVGGradientElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y1;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x2;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y2;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGMPathElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGMPathElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGMPathElement : SVGElement {\u000a};\u000a\u000aSVGMPathElement implements SVGURIReference;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGMarkerElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGMarkerElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGMarkerElement : SVGElement {\u000a\u000a  // Marker Unit Types\u000a  const unsigned short SVG_MARKERUNITS_UNKNOWN = 0;\u000a  const unsigned short SVG_MARKERUNITS_USERSPACEONUSE = 1;\u000a  const unsigned short SVG_MARKERUNITS_STROKEWIDTH = 2;\u000a\u000a  // Marker Orientation Types\u000a  const unsigned short SVG_MARKER_ORIENT_UNKNOWN = 0;\u000a  const unsigned short SVG_MARKER_ORIENT_AUTO = 1;\u000a  const unsigned short SVG_MARKER_ORIENT_ANGLE = 2;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength refX;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength refY;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration markerUnits;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength markerWidth;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength markerHeight;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration orientType;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedAngle orientAngle;\u000a\u000a  void setOrientToAuto();\u000a  [Throws]\u000a  void setOrientToAngle(SVGAngle angle);\u000a};\u000a\u000aSVGMarkerElement implements SVGFitToViewBox;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGMaskElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGMaskElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGMaskElement : SVGElement {\u000a\u000a  // Mask Types\u000a  const unsigned short SVG_MASKTYPE_LUMINANCE = 0;\u000a  const unsigned short SVG_MASKTYPE_ALPHA = 1;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration maskUnits;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration maskContentUnits;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength width;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength height;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGMatrix.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGMatrix.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGMatrix {\u000a\u000a  [SetterThrows]\u000a  attribute float a;\u000a  [SetterThrows]\u000a  attribute float b;\u000a  [SetterThrows]\u000a  attribute float c;\u000a  [SetterThrows]\u000a  attribute float d;\u000a  [SetterThrows]\u000a  attribute float e;\u000a  [SetterThrows]\u000a  attribute float f;\u000a\u000a  [NewObject]\u000a  SVGMatrix multiply(SVGMatrix secondMatrix);\u000a  [NewObject, Throws]\u000a  SVGMatrix inverse();\u000a  [NewObject]\u000a  SVGMatrix translate(float x, float y);\u000a  [NewObject]\u000a  SVGMatrix scale(float scaleFactor);\u000a  [NewObject]\u000a  SVGMatrix scaleNonUniform(float scaleFactorX, float scaleFactorY);\u000a  [NewObject]\u000a  SVGMatrix rotate(float angle);\u000a  [NewObject, Throws]\u000a  SVGMatrix rotateFromVector(float x, float y);\u000a  [NewObject]\u000a  SVGMatrix flipX();\u000a  [NewObject]\u000a  SVGMatrix flipY();\u000a  [NewObject, Throws]\u000a  SVGMatrix skewX(float angle);\u000a  [NewObject, Throws]\u000a  SVGMatrix skewY(float angle);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGMetadataElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGMetadataElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGMetadataElement : SVGElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGNumber.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGNumber.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor,\u000a Constructor(float value)]\u000ainterface SVGNumber {\u000a  [SetterThrows]\u000a  attribute float value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGNumberList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGNumberList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG11/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGNumberList {\u000a  readonly attribute unsigned long numberOfItems;\u000a  [Throws]\u000a  void clear();\u000a  [Throws]\u000a  SVGNumber initialize(SVGNumber newItem);\u000a  [Throws]\u000a  getter SVGNumber getItem(unsigned long index);\u000a  [Throws]\u000a  SVGNumber insertItemBefore(SVGNumber newItem, unsigned long index);\u000a  [Throws]\u000a  SVGNumber replaceItem(SVGNumber newItem, unsigned long index);\u000a  [Throws]\u000a  SVGNumber removeItem(unsigned long index);\u000a  [Throws]\u000a  SVGNumber appendItem(SVGNumber newItem);\u000a\u000a  // Mozilla-specific stuff\u000a  readonly attribute unsigned long length; // synonym for numberOfItems\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPathElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPathElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000ainterface SVGPathElement : SVGGeometryElement {\u000a\u000a  unsigned long getPathSegAtLength(float distance);\u000a};\u000a\u000aSVGPathElement implements SVGAnimatedPathData;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPathSeg.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPathSeg.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSeg {\u000a\u000a  // Path Segment Types\u000a  const unsigned short PATHSEG_UNKNOWN = 0;\u000a  const unsigned short PATHSEG_CLOSEPATH = 1;\u000a  const unsigned short PATHSEG_MOVETO_ABS = 2;\u000a  const unsigned short PATHSEG_MOVETO_REL = 3;\u000a  const unsigned short PATHSEG_LINETO_ABS = 4;\u000a  const unsigned short PATHSEG_LINETO_REL = 5;\u000a  const unsigned short PATHSEG_CURVETO_CUBIC_ABS = 6;\u000a  const unsigned short PATHSEG_CURVETO_CUBIC_REL = 7;\u000a  const unsigned short PATHSEG_CURVETO_QUADRATIC_ABS = 8;\u000a  const unsigned short PATHSEG_CURVETO_QUADRATIC_REL = 9;\u000a  const unsigned short PATHSEG_ARC_ABS = 10;\u000a  const unsigned short PATHSEG_ARC_REL = 11;\u000a  const unsigned short PATHSEG_LINETO_HORIZONTAL_ABS = 12;\u000a  const unsigned short PATHSEG_LINETO_HORIZONTAL_REL = 13;\u000a  const unsigned short PATHSEG_LINETO_VERTICAL_ABS = 14;\u000a  const unsigned short PATHSEG_LINETO_VERTICAL_REL = 15;\u000a  const unsigned short PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\u000a  const unsigned short PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\u000a  const unsigned short PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\u000a  const unsigned short PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\u000a\u000a  [Pure]\u000a  readonly attribute unsigned short pathSegType;\u000a  [Pure]\u000a  readonly attribute DOMString pathSegTypeAsLetter;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegClosePath : SVGPathSeg {\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegMovetoAbs : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegMovetoRel : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegLinetoAbs : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegLinetoRel : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegCurvetoCubicAbs : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a  [SetterThrows]\u000a  attribute float x1;\u000a  [SetterThrows]\u000a  attribute float y1;\u000a  [SetterThrows]\u000a  attribute float x2;\u000a  [SetterThrows]\u000a  attribute float y2;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegCurvetoCubicRel : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a  [SetterThrows]\u000a  attribute float x1;\u000a  [SetterThrows]\u000a  attribute float y1;\u000a  [SetterThrows]\u000a  attribute float x2;\u000a  [SetterThrows]\u000a  attribute float y2;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegCurvetoQuadraticAbs : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a  [SetterThrows]\u000a  attribute float x1;\u000a  [SetterThrows]\u000a  attribute float y1;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegCurvetoQuadraticRel : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a  [SetterThrows]\u000a  attribute float x1;\u000a  [SetterThrows]\u000a  attribute float y1;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegArcAbs : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a  [SetterThrows]\u000a  attribute float r1;\u000a  [SetterThrows]\u000a  attribute float r2;\u000a  [SetterThrows]\u000a  attribute float angle;\u000a  [SetterThrows]\u000a  attribute boolean largeArcFlag;\u000a  [SetterThrows]\u000a  attribute boolean sweepFlag;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegArcRel : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a  [SetterThrows]\u000a  attribute float r1;\u000a  [SetterThrows]\u000a  attribute float r2;\u000a  [SetterThrows]\u000a  attribute float angle;\u000a  [SetterThrows]\u000a  attribute boolean largeArcFlag;\u000a  [SetterThrows]\u000a  attribute boolean sweepFlag;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegLinetoHorizontalAbs : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegLinetoHorizontalRel : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegLinetoVerticalAbs : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float y;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegLinetoVerticalRel : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float y;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegCurvetoCubicSmoothAbs : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a  [SetterThrows]\u000a  attribute float x2;\u000a  [SetterThrows]\u000a  attribute float y2;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegCurvetoCubicSmoothRel : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a  [SetterThrows]\u000a  attribute float x2;\u000a  [SetterThrows]\u000a  attribute float y2;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegCurvetoQuadraticSmoothAbs : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface SVGPathSegCurvetoQuadraticSmoothRel : SVGPathSeg {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPoint.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPoint.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGPoint {\u000a\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a\u000a  [NewObject]\u000a  SVGPoint matrixTransform(SVGMatrix matrix);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPathSegList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPathSegList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG11/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGPathSegList {\u000a  readonly attribute unsigned long numberOfItems;\u000a  [Throws]\u000a  getter SVGPathSeg getItem(unsigned long index);\u000a\u000a  // Mozilla-specific stuff\u000a  readonly attribute unsigned long length; // synonym for numberOfItems\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPatternElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPatternElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/pservers.html#InterfaceSVGPatternElement\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGPatternElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration patternUnits;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration patternContentUnits;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedTransformList patternTransform;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength width;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength height;\u000a};\u000a\u000aSVGPatternElement implements SVGFitToViewBox;\u000aSVGPatternElement implements SVGURIReference;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPointList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPointList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG11/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGPointList {\u000a  readonly attribute unsigned long numberOfItems;\u000a  [Throws]\u000a  void clear();\u000a  [Throws]\u000a  SVGPoint initialize(SVGPoint newItem);\u000a  [Throws]\u000a  getter SVGPoint getItem(unsigned long index);\u000a  [Throws]\u000a  SVGPoint insertItemBefore(SVGPoint newItem, unsigned long index);\u000a  [Throws]\u000a  SVGPoint replaceItem(SVGPoint newItem, unsigned long index);\u000a  [Throws]\u000a  SVGPoint removeItem(unsigned long index);\u000a  [Throws]\u000a  SVGPoint appendItem(SVGPoint newItem);\u000a\u000a  // Mozilla-specific stuff\u000a  readonly attribute unsigned long length; // synonym for numberOfItems\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPolygonElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPolygonElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGPolygonElement : SVGGraphicsElement {\u000a};\u000a\u000aSVGPolygonElement implements SVGAnimatedPoints;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPolylineElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPolylineElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGPolylineElement : SVGGraphicsElement {\u000a};\u000a\u000aSVGPolylineElement implements SVGAnimatedPoints;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPreserveAspectRatio.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGPreserveAspectRatio.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGPreserveAspectRatio {\u000a\u000a  // Alignment Types\u000a  const unsigned short SVG_PRESERVEASPECTRATIO_UNKNOWN = 0;\u000a  const unsigned short SVG_PRESERVEASPECTRATIO_NONE = 1;\u000a  const unsigned short SVG_PRESERVEASPECTRATIO_XMINYMIN = 2;\u000a  const unsigned short SVG_PRESERVEASPECTRATIO_XMIDYMIN = 3;\u000a  const unsigned short SVG_PRESERVEASPECTRATIO_XMAXYMIN = 4;\u000a  const unsigned short SVG_PRESERVEASPECTRATIO_XMINYMID = 5;\u000a  const unsigned short SVG_PRESERVEASPECTRATIO_XMIDYMID = 6;\u000a  const unsigned short SVG_PRESERVEASPECTRATIO_XMAXYMID = 7;\u000a  const unsigned short SVG_PRESERVEASPECTRATIO_XMINYMAX = 8;\u000a  const unsigned short SVG_PRESERVEASPECTRATIO_XMIDYMAX = 9;\u000a  const unsigned short SVG_PRESERVEASPECTRATIO_XMAXYMAX = 10;\u000a\u000a  // Meet-or-slice Types\u000a  const unsigned short SVG_MEETORSLICE_UNKNOWN = 0;\u000a  const unsigned short SVG_MEETORSLICE_MEET = 1;\u000a  const unsigned short SVG_MEETORSLICE_SLICE = 2;\u000a\u000a  [SetterThrows]\u000a  attribute unsigned short align;\u000a  [SetterThrows]\u000a  attribute unsigned short meetOrSlice;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGRadialGradientElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGRadialGradientElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://svgwg.org/svg2-draft/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGRadialGradientElement : SVGGradientElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength cx;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength cy;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength r;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength fx;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength fy;\u000a  // XXX: Bug 1242048\u000a  // [SameObject]\u000a  readonly attribute SVGAnimatedLength fr;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGRect.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGRect.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGRect {\u000a  [SetterThrows]\u000a  attribute float x;\u000a  [SetterThrows]\u000a  attribute float y;\u000a  [SetterThrows]\u000a  attribute float width;\u000a  [SetterThrows]\u000a  attribute float height;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGRectElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGRectElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGRectElement : SVGGraphicsElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength width;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength height;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength rx;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength ry;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGSVGElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGSVGElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGViewSpec;\u000a\u000ainterface SVGSVGElement : SVGGraphicsElement {\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength width;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength height;\u000a  // readonly attribute SVGRect viewport;\u000a  [Constant]\u000a  readonly attribute float pixelUnitToMillimeterX;\u000a  [Constant]\u000a  readonly attribute float pixelUnitToMillimeterY;\u000a  [Constant]\u000a  readonly attribute float screenPixelToMillimeterX;\u000a  [Constant]\u000a  readonly attribute float screenPixelToMillimeterY;\u000a  readonly attribute boolean useCurrentView;\u000a  // readonly attribute SVGViewSpec currentView;\u000a  [UseCounter]\u000a           attribute float currentScale;\u000a  readonly attribute SVGPoint currentTranslate;\u000a\u000a  [DependsOn=Nothing, Affects=Nothing]\u000a  unsigned long suspendRedraw(unsigned long maxWaitMilliseconds);\u000a  [DependsOn=Nothing, Affects=Nothing]\u000a  void unsuspendRedraw(unsigned long suspendHandleID);\u000a  [DependsOn=Nothing, Affects=Nothing]\u000a  void unsuspendRedrawAll();\u000a  [DependsOn=Nothing, Affects=Nothing]\u000a  void forceRedraw();\u000a  void pauseAnimations();\u000a  void unpauseAnimations();\u000a  boolean animationsPaused();\u000a  float getCurrentTime();\u000a  void setCurrentTime(float seconds);\u000a  // NodeList getIntersectionList(SVGRect rect, SVGElement referenceElement);\u000a  // NodeList getEnclosureList(SVGRect rect, SVGElement referenceElement);\u000a  // boolean checkIntersection(SVGElement element, SVGRect rect);\u000a  // boolean checkEnclosure(SVGElement element, SVGRect rect);\u000a  void deselectAll();\u000a  [NewObject]\u000a  SVGNumber createSVGNumber();\u000a  [NewObject]\u000a  SVGLength createSVGLength();\u000a  [NewObject]\u000a  SVGAngle createSVGAngle();\u000a  [NewObject]\u000a  SVGPoint createSVGPoint();\u000a  [NewObject]\u000a  SVGMatrix createSVGMatrix();\u000a  [NewObject]\u000a  SVGRect createSVGRect();\u000a  [NewObject]\u000a  SVGTransform createSVGTransform();\u000a  [NewObject]\u000a  SVGTransform createSVGTransformFromMatrix(SVGMatrix matrix);\u000a  [UseCounter]\u000a  Element? getElementById(DOMString elementId);\u000a};\u000a\u000aSVGSVGElement implements SVGFitToViewBox;\u000aSVGSVGElement implements SVGZoomAndPanValues;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGScriptElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGScriptElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGScriptElement : SVGElement {\u000a  [SetterThrows]\u000a  attribute DOMString type;\u000a\u000a  // CORS attribute\u000a  [SetterThrows]\u000a  attribute DOMString? crossOrigin;\u000a};\u000a\u000aSVGScriptElement implements SVGURIReference;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGSetElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGSetElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGSetElement : SVGAnimationElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGStopElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGStopElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGStopElement : SVGElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumber offset;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGStringList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGStringList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://svgwg.org/svg2-draft/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGStringList {\u000a  readonly attribute unsigned long length;\u000a  readonly attribute unsigned long numberOfItems;\u000a\u000a  void clear();\u000a  [Throws]\u000a  DOMString initialize(DOMString newItem);\u000a  [Throws]\u000a  DOMString getItem(unsigned long index);\u000a  getter DOMString(unsigned long index);\u000a  [Throws]\u000a  DOMString insertItemBefore(DOMString newItem, unsigned long index);\u000a  [Throws]\u000a  DOMString replaceItem(DOMString newItem, unsigned long index);\u000a  [Throws]\u000a  DOMString removeItem(unsigned long index);\u000a  [Throws]\u000a  DOMString appendItem(DOMString newItem);\u000a  //setter void (unsigned long index, DOMString newItem);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGStyleElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGStyleElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGStyleElement : SVGElement {\u000a  [SetterThrows]\u000a  attribute DOMString xmlspace; // Spec claims this should be on SVGElement\u000a  [SetterThrows]\u000a  attribute DOMString type;\u000a  [SetterThrows]\u000a  attribute DOMString media;\u000a  [SetterThrows]\u000a  attribute DOMString title;\u000a  [SetterThrows, Pref=\"layout.css.scoped-style.enabled\"]\u000a  attribute boolean scoped;\u000a};\u000aSVGStyleElement implements LinkStyle;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGSwitchElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGSwitchElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGSwitchElement : SVGGraphicsElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGSymbolElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGSymbolElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/struct.html#InterfaceSVGSymbolElement\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGSymbolElement : SVGElement {\u000a};\u000a\u000aSVGSymbolElement implements SVGFitToViewBox;\u000aSVGSymbolElement implements SVGTests;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTSpanElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTSpanElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGTSpanElement : SVGTextPositioningElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTests.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTests.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface SVGTests {\u000a\u000a  readonly attribute SVGStringList requiredFeatures;\u000a  readonly attribute SVGStringList requiredExtensions;\u000a  readonly attribute SVGStringList systemLanguage;\u000a\u000a  boolean hasExtension(DOMString extension);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTextContentElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTextContentElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGTextContentElement : SVGGraphicsElement {\u000a\u000a  // lengthAdjust Types\u000a  const unsigned short LENGTHADJUST_UNKNOWN = 0;\u000a  const unsigned short LENGTHADJUST_SPACING = 1;\u000a  const unsigned short LENGTHADJUST_SPACINGANDGLYPHS = 2;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength textLength;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration lengthAdjust;\u000a\u000a  long getNumberOfChars();\u000a  float getComputedTextLength();\u000a  [Throws]\u000a  float getSubStringLength(unsigned long charnum, unsigned long nchars);\u000a  [Throws]\u000a  SVGPoint getStartPositionOfChar(unsigned long charnum);\u000a  [Throws]\u000a  SVGPoint getEndPositionOfChar(unsigned long charnum);\u000a  [NewObject, Throws]\u000a  SVGRect getExtentOfChar(unsigned long charnum);\u000a  [Throws]\u000a  float getRotationOfChar(unsigned long charnum);\u000a  long getCharNumAtPosition(SVGPoint point);\u000a  [Throws]\u000a  void selectSubString(unsigned long charnum, unsigned long nchars);\u000a};\u000a\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTextElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTextElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGTextElement : SVGTextPositioningElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTextPathElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTextPathElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGTextPathElement : SVGTextContentElement {\u000a\u000a  // textPath Method Types\u000a  const unsigned short TEXTPATH_METHODTYPE_UNKNOWN = 0;\u000a  const unsigned short TEXTPATH_METHODTYPE_ALIGN = 1;\u000a  const unsigned short TEXTPATH_METHODTYPE_STRETCH = 2;\u000a\u000a  // textPath Spacing Types\u000a  const unsigned short TEXTPATH_SPACINGTYPE_UNKNOWN = 0;\u000a  const unsigned short TEXTPATH_SPACINGTYPE_AUTO = 1;\u000a  const unsigned short TEXTPATH_SPACINGTYPE_EXACT = 2;\u000a\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength startOffset;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration method;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedEnumeration spacing;\u000a};\u000a\u000aSVGTextPathElement implements SVGURIReference;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTextPositioningElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTextPositioningElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGTextPositioningElement : SVGTextContentElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLengthList x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLengthList y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLengthList dx;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLengthList dy;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedNumberList rotate;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTitleElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTitleElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGTitleElement : SVGElement {\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTransform.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTransform.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGTransform {\u000a\u000a  // Transform Types\u000a  const unsigned short SVG_TRANSFORM_UNKNOWN = 0;\u000a  const unsigned short SVG_TRANSFORM_MATRIX = 1;\u000a  const unsigned short SVG_TRANSFORM_TRANSLATE = 2;\u000a  const unsigned short SVG_TRANSFORM_SCALE = 3;\u000a  const unsigned short SVG_TRANSFORM_ROTATE = 4;\u000a  const unsigned short SVG_TRANSFORM_SKEWX = 5;\u000a  const unsigned short SVG_TRANSFORM_SKEWY = 6;\u000a\u000a  readonly attribute unsigned short type;\u000a  readonly attribute SVGMatrix matrix;\u000a  readonly attribute float angle;\u000a\u000a  [Throws]\u000a  void setMatrix(SVGMatrix matrix);\u000a  [Throws]\u000a  void setTranslate(float tx, float ty);\u000a  [Throws]\u000a  void setScale(float sx, float sy);\u000a  [Throws]\u000a  void setRotate(float angle, float cx, float cy);\u000a  [Throws]\u000a  void setSkewX(float angle);\u000a  [Throws]\u000a  void setSkewY(float angle);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTransformList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGTransformList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG11/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGTransformList {\u000a  readonly attribute unsigned long numberOfItems;\u000a  [Throws]\u000a  void clear();\u000a  [Throws]\u000a  SVGTransform initialize(SVGTransform newItem);\u000a  [Throws]\u000a  getter SVGTransform getItem(unsigned long index);\u000a  [Throws]\u000a  SVGTransform insertItemBefore(SVGTransform newItem, unsigned long index);\u000a  [Throws]\u000a  SVGTransform replaceItem(SVGTransform newItem, unsigned long index);\u000a  [Throws]\u000a  SVGTransform removeItem(unsigned long index);\u000a  [Throws]\u000a  SVGTransform appendItem(SVGTransform newItem);\u000a  SVGTransform createSVGTransformFromMatrix(SVGMatrix matrix);\u000a  [Throws]\u000a  SVGTransform? consolidate();\u000a\u000a  // Mozilla-specific stuff\u000a  readonly attribute unsigned long length; // synonym for numberOfItems\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGURIReference.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGURIReference.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface SVGURIReference {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedString href;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGUnitTypes.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGUnitTypes.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://svgwg.org/svg2-draft/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGUnitTypes {\u000a  // Unit Types\u000a  const unsigned short SVG_UNIT_TYPE_UNKNOWN = 0;\u000a  const unsigned short SVG_UNIT_TYPE_USERSPACEONUSE = 1;\u000a  const unsigned short SVG_UNIT_TYPE_OBJECTBOUNDINGBOX = 2;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGUseElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGUseElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGUseElement : SVGGraphicsElement {\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength x;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength y;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength width;\u000a  [Constant]\u000a  readonly attribute SVGAnimatedLength height;\u000a  //readonly attribute SVGElementInstance instanceRoot;\u000a  //readonly attribute SVGElementInstance animatedInstanceRoot;\u000a};\u000a\u000aSVGUseElement implements SVGURIReference;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGViewElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGViewElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGViewElement : SVGElement {\u000a  readonly attribute SVGStringList viewTarget;\u000a};\u000a\u000aSVGViewElement implements SVGFitToViewBox;\u000aSVGViewElement implements SVGZoomAndPanValues;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGZoomAndPan.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGZoomAndPan.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface SVGZoomAndPan {\u000a};\u000a\u000aSVGZoomAndPan implements SVGZoomAndPanValues;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGZoomAndPanValues.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SVGZoomAndPanValues.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/SVG2/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface SVGZoomAndPanValues {\u000a\u000a  // Zoom and Pan Types\u000a  const unsigned short SVG_ZOOMANDPAN_UNKNOWN = 0;\u000a  const unsigned short SVG_ZOOMANDPAN_DISABLE = 1;\u000a  const unsigned short SVG_ZOOMANDPAN_MAGNIFY = 2;\u000a\u000a  [SetterThrows]\u000a  attribute unsigned short zoomAndPan;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Screen.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Screen.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000ainterface Screen : EventTarget {\u000a  // CSSOM-View\u000a  // http://dev.w3.org/csswg/cssom-view/#the-screen-interface\u000a  [Throws]\u000a  readonly attribute long availWidth;\u000a  [Throws]\u000a  readonly attribute long availHeight;\u000a  [Throws]\u000a  readonly attribute long width;\u000a  [Throws]\u000a  readonly attribute long height;\u000a  [Throws]\u000a  readonly attribute long colorDepth;\u000a  [Throws]\u000a  readonly attribute long pixelDepth;\u000a\u000a  [Throws]\u000a  readonly attribute long top;\u000a  [Throws]\u000a  readonly attribute long left;\u000a  [Throws]\u000a  readonly attribute long availTop;\u000a  [Throws]\u000a  readonly attribute long availLeft;\u000a\u000a  /**\u000a   * DEPRECATED, use ScreenOrientation API instead.\u000a   * Returns the current screen orientation.\u000a   * Can be: landscape-primary, landscape-secondary,\u000a   *         portrait-primary or portrait-secondary.\u000a   */\u000a  [NeedsCallerType]\u000a  readonly attribute DOMString mozOrientation;\u000a\u000a  attribute EventHandler onmozorientationchange;\u000a\u000a  /**\u000a   * DEPRECATED, use ScreenOrientation API instead.\u000a   * Lock screen orientation to the specified type.\u000a   */\u000a  [Throws]\u000a  boolean mozLockOrientation(DOMString orientation);\u000a  [Throws]\u000a  boolean mozLockOrientation(sequence<DOMString> orientation);\u000a\u000a  /**\u000a   * DEPRECATED, use ScreenOrientation API instead.\u000a   * Unlock the screen orientation.\u000a   */\u000a  void mozUnlockOrientation();\u000a};\u000a\u000a// https://w3c.github.io/screen-orientation\u000apartial interface Screen {\u000a  readonly attribute ScreenOrientation orientation;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ScreenOrientation.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ScreenOrientation.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/screen-orientation\u000a *\u000a * Copyright © 2014 W3C® (MIT, ERCIM, Keio, Beihang), All Rights\u000a * Reserved. W3C liability, trademark and document use rules apply.\u000a */\u000a\u000aenum OrientationType {\u000a  \"portrait-primary\",\u000a  \"portrait-secondary\",\u000a  \"landscape-primary\",\u000a  \"landscape-secondary\"\u000a};\u000a\u000aenum OrientationLockType {\u000a  \"any\",\u000a  \"natural\",\u000a  \"landscape\",\u000a  \"portrait\",\u000a  \"portrait-primary\",\u000a  \"portrait-secondary\",\u000a  \"landscape-primary\",\u000a  \"landscape-secondary\"\u000a};\u000a\u000ainterface ScreenOrientation : EventTarget {\u000a  [Throws]\u000a  Promise<void> lock(OrientationLockType orientation);\u000a  [Throws]\u000a  void unlock();\u000a  [Throws, NeedsCallerType]\u000a  readonly attribute OrientationType type;\u000a  [Throws, NeedsCallerType]\u000a  readonly attribute unsigned short angle;\u000a  attribute EventHandler onchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ScriptProcessorNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ScriptProcessorNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"dom.webaudio.enabled\"]\u000ainterface ScriptProcessorNode : AudioNode {\u000a\u000a    attribute EventHandler onaudioprocess;\u000a\u000a    readonly attribute long bufferSize;\u000a\u000a};\u000a\u000a// Mozilla extension\u000aScriptProcessorNode implements AudioNodePassThrough;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ScrollAreaEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ScrollAreaEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface ScrollAreaEvent : UIEvent\u000a{\u000a  readonly attribute float x;\u000a  readonly attribute float y;\u000a  readonly attribute float width;\u000a  readonly attribute float height;\u000a\u000a  void initScrollAreaEvent(DOMString type,\u000a                           optional boolean canBubble = false,\u000a                           optional boolean cancelable = false,\u000a                           optional Window? view = null,\u000a                           optional long detail = 0,\u000a                           optional float x = 0,\u000a                           optional float y = 0,\u000a                           optional float width = 0,\u000a                           optional float height = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ScrollBoxObject.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ScrollBoxObject.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface ScrollBoxObject : BoxObject {\u000a\u000a  /**\u000a   * Scroll to the given coordinates, in css pixels.\u000a   * (0,0) will put the top left corner of the scrolled element's padding-box\u000a   * at the top left corner of the scrollport (which is its inner-border-box).\u000a   * Values will be clamped to legal values.\u000a   */\u000a  [Throws]\u000a  void scrollTo(long x, long y);\u000a\u000a  /**\u000a   * Scroll the given amount of device pixels to the right and down.\u000a   * Values will be clamped to make the resuling position legal.\u000a   */\u000a  [Throws]\u000a  void scrollBy(long dx, long dy);\u000a  [Throws]\u000a  void scrollByLine(long dlines);\u000a  [Throws]\u000a  void scrollByIndex(long dindexes);\u000a  [Throws]\u000a  void scrollToLine(long line);\u000a  [Throws]\u000a  void scrollToElement(Element child);\u000a  [Throws]\u000a  void scrollToIndex(long index);\u000a\u000a  /**\u000a   * Get the current scroll position in css pixels.\u000a   * @see scrollTo for the definition of x and y.\u000a   */\u000a  [Pure, Throws]\u000a  readonly attribute long positionX;\u000a  [Pure, Throws]\u000a  readonly attribute long positionY;\u000a  [Pure, Throws]\u000a  readonly attribute long scrolledWidth;\u000a  [Pure, Throws]\u000a  readonly attribute long scrolledHeight;\u000a\u000a  /**\u000a   * DEPRECATED: Please use positionX and positionY\u000a   *\u000a   * Get the current scroll position in css pixels.\u000a   * @see scrollTo for the definition of x and y.\u000a   */\u000a  [Throws]\u000a  void getPosition(object x, object y);\u000a\u000a  /**\u000a   * DEPRECATED: Please use scrolledWidth and scrolledHeight\u000a   */\u000a  [Throws]\u000a  void getScrolledSize(object width, object height);\u000a\u000a  [Throws]\u000a  void ensureElementIsVisible(Element child);\u000a  [Throws]\u000a  void ensureIndexIsVisible(long index);\u000a  [Throws]\u000a  void ensureLineIsVisible(long line);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ScrollViewChangeEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ScrollViewChangeEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000aenum ScrollState {\"started\", \"stopped\"};\u000a\u000adictionary ScrollViewChangeEventInit : EventInit {\u000a  ScrollState state = \"started\";\u000a};\u000a\u000a[Constructor(DOMString type, optional ScrollViewChangeEventInit eventInit),\u000a ChromeOnly]\u000ainterface ScrollViewChangeEvent : Event {\u000a  readonly attribute ScrollState state;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SecurityPolicyViolationEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SecurityPolicyViolationEvent.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000aenum SecurityPolicyViolationEventDisposition\u000a{\u000a  \"enforce\", \"report\"\u000a};\u000a\u000a[Constructor(DOMString type, optional SecurityPolicyViolationEventInit eventInitDict),\u000a Pref=\"security.csp.enable_violation_events\"]\u000ainterface SecurityPolicyViolationEvent : Event\u000a{\u000a    readonly attribute DOMString      documentURI;\u000a    readonly attribute DOMString      referrer;\u000a    readonly attribute DOMString      blockedURI;\u000a    readonly attribute DOMString      violatedDirective;\u000a    readonly attribute DOMString      effectiveDirective;\u000a    readonly attribute DOMString      originalPolicy;\u000a    readonly attribute DOMString      sourceFile;\u000a    readonly attribute DOMString      sample;\u000a    readonly attribute SecurityPolicyViolationEventDisposition disposition;\u000a    readonly attribute unsigned short statusCode;\u000a    readonly attribute long           lineNumber;\u000a    readonly attribute long           columnNumber;\u000a};\u000a\u000adictionary SecurityPolicyViolationEventInit : EventInit\u000a{\u000a    DOMString      documentURI = \"\";\u000a    DOMString      referrer = \"\";\u000a    DOMString      blockedURI = \"\";\u000a    DOMString      violatedDirective = \"\";\u000a    DOMString      effectiveDirective = \"\";\u000a    DOMString      originalPolicy = \"\";\u000a    DOMString      sourceFile = \"\";\u000a    DOMString      sample = \"\";\u000a    SecurityPolicyViolationEventDisposition disposition = \"report\";\u000a    unsigned short statusCode = 0;\u000a    long           lineNumber = 0;\u000a    long           columnNumber = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Selection.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Selection.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#concept-selection\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface Selection {\u000a  readonly attribute Node?         anchorNode;\u000a  readonly attribute unsigned long anchorOffset;\u000a  readonly attribute Node?         focusNode;\u000a  readonly attribute unsigned long focusOffset;\u000a  readonly attribute boolean       isCollapsed;\u000a  readonly attribute unsigned long rangeCount;\u000a  readonly attribute DOMString     type;\u000a  [Throws]\u000a  Range     getRangeAt(unsigned long index);\u000a  [Throws, BinaryName=\"addRangeJS\"]\u000a  void      addRange(Range range);\u000a  [Throws]\u000a  void      removeRange(Range range);\u000a  [Throws]\u000a  void      removeAllRanges();\u000a  [Throws, BinaryName=\"RemoveAllRanges\"]\u000a  void      empty();\u000a  [Throws, BinaryName=\"collapseJS\"]\u000a  void      collapse(Node? node, optional unsigned long offset = 0);\u000a  [Throws, BinaryName=\"collapseJS\"]\u000a  void      setPosition(Node? node, optional unsigned long offset = 0);\u000a  [Throws, BinaryName=\"collapseToStartJS\"]\u000a  void      collapseToStart();\u000a  [Throws, BinaryName=\"collapseToEndJS\"]\u000a  void      collapseToEnd();\u000a  [Throws, BinaryName=\"extendJS\"]\u000a  void      extend(Node node, optional unsigned long offset = 0);\u000a  [Throws, BinaryName=\"setBaseAndExtentJS\"]\u000a  void      setBaseAndExtent(Node anchorNode,\u000a                             unsigned long anchorOffset,\u000a                             Node focusNode,\u000a                             unsigned long focusOffset);\u000a  [Throws, BinaryName=\"selectAllChildrenJS\"]\u000a  void      selectAllChildren(Node node);\u000a  [CEReactions, Throws]\u000a  void      deleteFromDocument();\u000a  [Throws]\u000a  boolean   containsNode(Node node,\u000a                         optional boolean allowPartialContainment = false);\u000a  stringifier DOMString ();\u000a};\u000a\u000a// Additional methods not currently in the spec\u000apartial interface Selection {\u000a  [Throws]\u000a  void modify(DOMString alter, DOMString direction,\u000a              DOMString granularity);\u000a};\u000a\u000a// Additional chrome-only methods from nsISelectionPrivate\u000ainterface nsISelectionListener;\u000apartial interface Selection {\u000a  [ChromeOnly]\u000a  const short ENDOFPRECEDINGLINE = 0;\u000a  [ChromeOnly]\u000a  const short STARTOFNEXTLINE = 1;\u000a\u000a  [ChromeOnly,Throws]\u000a  attribute boolean interlinePosition;\u000a\u000a  [Throws]\u000a  attribute short? caretBidiLevel;\u000a\u000a  [ChromeOnly,Throws]\u000a  DOMString  toStringWithFormat(DOMString formatType, unsigned long flags, long wrapColumn);\u000a  [ChromeOnly,Throws]\u000a  void  addSelectionListener(nsISelectionListener newListener);\u000a  [ChromeOnly,Throws]\u000a  void  removeSelectionListener(nsISelectionListener listenerToRemove);\u000a\u000a  [ChromeOnly,BinaryName=\"rawType\"]\u000a  readonly attribute short selectionType;\u000a\u000a  [ChromeOnly,Throws,Pref=\"dom.testing.selection.GetRangesForInterval\"]\u000a  sequence<Range> GetRangesForInterval(Node beginNode, long beginOffset, Node endNode, long endOffset,\u000a                                       boolean allowAdjacent);\u000a\u000a  [ChromeOnly,Throws]\u000a  void scrollIntoView(short aRegion, boolean aIsSynchronous, short aVPercent, short aHPercent);\u000a\u000a  [ChromeOnly,Throws]\u000a  void setColors(DOMString aForegroundColor, DOMString aBackgroundColor,\u000a                 DOMString aAltForegroundColor, DOMString aAltBackgroundColor);\u000a\u000a  [ChromeOnly,Throws]\u000a  void resetColors();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ServiceWorker.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ServiceWorker.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-obj\u000a *\u000a */\u000a\u000a// Still unclear what should be subclassed.\u000a// https://github.com/slightlyoff/ServiceWorker/issues/189\u000a[Func=\"ServiceWorkerVisible\",\u000a // FIXME(nsm): Bug 1113522. This is exposed to satisfy webidl constraints, but it won't actually work.\u000a Exposed=(Window,Worker)]\u000ainterface ServiceWorker : EventTarget {\u000a  readonly attribute USVString scriptURL;\u000a  readonly attribute ServiceWorkerState state;\u000a\u000a  attribute EventHandler onstatechange;\u000a\u000a  [Throws]\u000a  void postMessage(any message, optional sequence<object> transferable = []);\u000a};\u000a\u000aServiceWorker implements AbstractWorker;\u000a\u000aenum ServiceWorkerState {\u000a  // https://github.com/w3c/ServiceWorker/issues/1162\u000a  \"parsed\",\u000a\u000a  \"installing\",\u000a  \"installed\",\u000a  \"activating\",\u000a  \"activated\",\u000a  \"redundant\"\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ServiceWorkerContainer.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ServiceWorkerContainer.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html\u000a *\u000a */\u000a\u000a[Func=\"ServiceWorkerContainer::IsEnabled\",\u000a Exposed=Window]\u000ainterface ServiceWorkerContainer : EventTarget {\u000a  // FIXME(nsm):\u000a  // https://github.com/slightlyoff/ServiceWorker/issues/198\u000a  // and discussion at https://etherpad.mozilla.org/serviceworker07apr\u000a  [Unforgeable] readonly attribute ServiceWorker? controller;\u000a\u000a  [Throws]\u000a  readonly attribute Promise<ServiceWorkerRegistration> ready;\u000a\u000a  [NewObject]\u000a  Promise<ServiceWorkerRegistration> register(USVString scriptURL,\u000a                                              optional RegistrationOptions options);\u000a\u000a  [NewObject]\u000a  Promise<any> getRegistration(optional USVString documentURL = \"\");\u000a\u000a  [NewObject]\u000a  Promise<sequence<ServiceWorkerRegistration>> getRegistrations();\u000a\u000a  attribute EventHandler oncontrollerchange;\u000a  attribute EventHandler onerror;\u000a  attribute EventHandler onmessage;\u000a};\u000a\u000a// Testing only.\u000apartial interface ServiceWorkerContainer {\u000a  [Throws,Pref=\"dom.serviceWorkers.testing.enabled\"]\u000a  DOMString getScopeForUrl(DOMString url);\u000a};\u000a\u000adictionary RegistrationOptions {\u000a  USVString scope;\u000a  ServiceWorkerUpdateViaCache updateViaCache = \"imports\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ServiceWorkerGlobalScope.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ServiceWorkerGlobalScope.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html\u000a * http://w3c.github.io/push-api/\u000a * https://notifications.spec.whatwg.org/\u000a *\u000a * You are granted a license to use, reproduce and create derivative works of\u000a * this document.\u000a */\u000a\u000a[Global=(Worker,ServiceWorker),\u000a Exposed=ServiceWorker]\u000ainterface ServiceWorkerGlobalScope : WorkerGlobalScope {\u000a  [SameObject, BinaryName=\"GetClients\"]\u000a  readonly attribute Clients clients;\u000a  [SameObject] readonly attribute ServiceWorkerRegistration registration;\u000a\u000a  [Throws, NewObject]\u000a  Promise<void> skipWaiting();\u000a\u000a  attribute EventHandler oninstall;\u000a  attribute EventHandler onactivate;\u000a\u000a  attribute EventHandler onfetch;\u000a\u000a  // The event.source of these MessageEvents are instances of Client\u000a  attribute EventHandler onmessage;\u000a};\u000a\u000a// These are from w3c.github.io/push-api/\u000apartial interface ServiceWorkerGlobalScope {\u000a  attribute EventHandler onpush;\u000a  attribute EventHandler onpushsubscriptionchange;\u000a};\u000a\u000a// https://notifications.spec.whatwg.org/\u000apartial interface ServiceWorkerGlobalScope {\u000a  attribute EventHandler onnotificationclick;\u000a  attribute EventHandler onnotificationclose;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ServiceWorkerRegistration.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ServiceWorkerRegistration.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html\u000a * https://w3c.github.io/push-api/\u000a * https://notifications.spec.whatwg.org/\u000a */\u000a\u000a[Func=\"mozilla::dom::DOMPrefs::ServiceWorkersEnabled\",\u000a Exposed=(Window,Worker)]\u000ainterface ServiceWorkerRegistration : EventTarget {\u000a  [Unforgeable] readonly attribute ServiceWorker? installing;\u000a  [Unforgeable] readonly attribute ServiceWorker? waiting;\u000a  [Unforgeable] readonly attribute ServiceWorker? active;\u000a\u000a  readonly attribute USVString scope;\u000a  [Throws]\u000a  readonly attribute ServiceWorkerUpdateViaCache updateViaCache;\u000a\u000a  [Throws, NewObject]\u000a  Promise<void> update();\u000a\u000a  [Throws, NewObject]\u000a  Promise<boolean> unregister();\u000a\u000a  // event\u000a  attribute EventHandler onupdatefound;\u000a};\u000a\u000aenum ServiceWorkerUpdateViaCache {\u000a  \"imports\",\u000a  \"all\",\u000a  \"none\"\u000a};\u000a\u000a// https://w3c.github.io/push-api/\u000apartial interface ServiceWorkerRegistration {\u000a  [Throws, Exposed=(Window,Worker), Func=\"mozilla::dom::DOMPrefs::PushEnabled\"]\u000a  readonly attribute PushManager pushManager;\u000a};\u000a\u000a// https://notifications.spec.whatwg.org/\u000apartial interface ServiceWorkerRegistration {\u000a  [Throws, Func=\"mozilla::dom::DOMPrefs::NotificationEnabledInServiceWorkers\"]\u000a  Promise<void> showNotification(DOMString title, optional NotificationOptions options);\u000a  [Throws, Func=\"mozilla::dom::DOMPrefs::NotificationEnabledInServiceWorkers\"]\u000a  Promise<sequence<Notification>> getNotifications(optional GetNotificationOptions filter);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ShadowRoot.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ShadowRoot.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#enumdef-shadowrootmode\u000aenum ShadowRootMode {\u000a  \"open\",\u000a  \"closed\"\u000a};\u000a\u000a// https://dom.spec.whatwg.org/#shadowroot\u000a[Func=\"nsDocument::IsShadowDOMEnabled\"]\u000ainterface ShadowRoot : DocumentFragment\u000a{\u000a  // Shadow DOM v1\u000a  readonly attribute ShadowRootMode mode;\u000a  readonly attribute Element host;\u000a\u000a  // [deprecated] Shadow DOM v0\u000a  Element? getElementById(DOMString elementId);\u000a  HTMLCollection getElementsByTagName(DOMString localName);\u000a  HTMLCollection getElementsByTagNameNS(DOMString? namespace, DOMString localName);\u000a  HTMLCollection getElementsByClassName(DOMString classNames);\u000a  [CEReactions, SetterThrows, TreatNullAs=EmptyString]\u000a  attribute DOMString innerHTML;\u000a};\u000a\u000aShadowRoot implements DocumentOrShadowRoot;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SharedWorker.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SharedWorker.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(USVString scriptURL, optional (DOMString or WorkerOptions) options)]\u000ainterface SharedWorker : EventTarget {\u000a    readonly attribute MessagePort port;\u000a};\u000a\u000aSharedWorker implements AbstractWorker;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SharedWorkerGlobalScope.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SharedWorkerGlobalScope.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html#the-workerglobalscope-common-interface\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and Opera\u000a * Software ASA.\u000a * You are granted a license to use, reproduce and create derivative works of\u000a * this document.\u000a */\u000a\u000a[Global=(Worker,SharedWorker),\u000a Exposed=SharedWorker]\u000ainterface SharedWorkerGlobalScope : WorkerGlobalScope {\u000a  [Replaceable]\u000a  readonly attribute DOMString name;\u000a\u000a  void close();\u000a\u000a  attribute EventHandler onconnect;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SimpleGestureEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SimpleGestureEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * The SimpleGestureEvent interface is the datatype for all\u000a * Mozilla-specific simple gesture events in the Document Object Model.\u000a *\u000a * The following events are generated:\u000a *\u000a * MozSwipeGestureMayStart - Generated when the user starts a horizontal\u000a * swipe across the input device, but before we know whether the user\u000a * is actually scrolling past a scroll edge.\u000a * This event asks two questions:  Should a swipe really be started, and\u000a * in which directions should the user be able to swipe?  The first\u000a * question is answered by event listeners by calling or not calling\u000a * preventDefault() on the event.  Since a swipe swallows all scroll\u000a * events, the default action of the swipe start event is *not* to\u000a * start a swipe. Call preventDefault() if you want a swipe to be\u000a * started. Doing so won't necessarily result in a swipe being started,\u000a * it only communicates an intention. Once Gecko determines whether a\u000a * swipe should actually be started, it will send a MozSwipeGestureStart\u000a * event.\u000a * The second question (swipe-able directions) is answered in the\u000a * allowedDirections field.\u000a *\u000a * MozSwipeGestureStart - This event signals the start of a swipe.\u000a * It guarantees a future MozSwipeGestureEnd event that will signal\u000a * the end of a swipe animation.\u000a *\u000a * MozSwipeGestureUpdate - Generated periodically while the user is\u000a * continuing a horizontal swipe gesture.  The \"delta\" value represents\u000a * the current absolute gesture amount.  This event may even be sent\u000a * after a MozSwipeGesture event fired in order to allow for fluid\u000a * completion of a swipe animation.  The direction value is meaningless\u000a * on swipe update events.\u000a *\u000a * MozSwipeGestureEnd - Generated when the swipe animation is completed.\u000a *\u000a * MozSwipeGesture - Generated when the user releases a swipe across\u000a * across the input device.  This event signals that the actual swipe\u000a * operation is complete, even though the animation might not be finished\u000a * yet.  This event can be sent without accompanying start / update / end\u000a * events, and it can also be handled on its own if the consumer doesn't\u000a * want to handle swipe animation events.\u000a * Only the direction value has any significance, the delta value is\u000a * meaningless.\u000a *\u000a * MozMagnifyGestureStart - Generated when the user begins the magnify\u000a * (\"pinch\") gesture.  The \"delta\" value represents the initial\u000a * movement.\u000a *\u000a * MozMagnifyGestureUpdate - Generated periodically while the user is\u000a * continuing the magnify (\"pinch\") gesture.  The \"delta\" value\u000a * represents the movement since the last MozMagnifyGestureStart or\u000a * MozMagnifyGestureUpdate event.\u000a *\u000a * MozMagnifyGesture - Generated when the user has completed the\u000a * magnify (\"pinch\") gesture.  If you only want to receive a single\u000a * event when the magnify gesture is complete, you only need to hook\u000a * this event and can safely ignore the MozMagnifyGestureStart and the\u000a * MozMagnifyGestureUpdate events. The \"delta\" value is the cumulative\u000a * amount represented by the user's gesture.\u000a *\u000a * MozRotateGestureStart - Generated when the user begins the rotation\u000a * gesture.  The \"delta\" value represents the initial rotation.\u000a *\u000a * MozRotateGestureUpdate - Generated periodically while the user is\u000a * continuing the rotation gesture.  The \"delta\" value represents the\u000a * rotation since the last MozRotateGestureStart or\u000a * MozRotateGestureUpdate event.\u000a *\u000a * MozRotateGesture - Generated when the user has completed the\u000a * rotation gesture.  If you only want to receive a single event when\u000a * the rotation gesture is complete, you only need to hook this event\u000a * and can safely ignore the MozRotateGestureStart and the\u000a * MozRotateGestureUpdate events.  The \"delta\" value is the cumulative\u000a * amount of rotation represented by the user's gesture.\u000a *\u000a * MozTapGesture - Generated when the user executes a two finger\u000a * tap gesture on the input device. Client coordinates contain the\u000a * center point of the tap.\u000a * (XXX On OS X, only Lion (10.7) and up)\u000a *\u000a * MozPressTapGesture - Generated when the user executes a press\u000a * and tap two finger gesture (first finger down, second finger down,\u000a * second finger up, first finger up) on the input device.\u000a * Client coordinates contain the center pivot point of the action.\u000a * (XXX Not implemented on Mac)\u000a *\u000a * MozEdgeUIGesture - Generated when the user swipes the display to\u000a * invoke edge ui.\u000a * (XXX Win8 only)\u000a *\u000a * Default behavior:\u000a *\u000a * Some operating systems support default behaviors for gesture events\u000a * when they are not handled by the application. Consumers should\u000a * use event.preventDefault() to prevent default behavior when\u000a * consuming events.\u000a */\u000a\u000a[Func=\"IsChromeOrXBL\"]\u000ainterface SimpleGestureEvent : MouseEvent\u000a{\u000a  /* Swipe direction constants */\u000a  const unsigned long DIRECTION_UP = 1;\u000a  const unsigned long DIRECTION_DOWN = 2;\u000a  const unsigned long DIRECTION_LEFT = 4;\u000a  const unsigned long DIRECTION_RIGHT = 8;\u000a\u000a  /* Rotational direction constants */\u000a  const unsigned long ROTATION_COUNTERCLOCKWISE = 1;\u000a  const unsigned long ROTATION_CLOCKWISE = 2;\u000a\u000a  /* Read-write value for swipe events.\u000a   *\u000a   * Reports the directions that can be swiped to; multiple directions\u000a   * should be OR'ed together.\u000a   *\u000a   * The allowedDirections field is designed to be set on SwipeGestureMayStart\u000a   * events by event listeners.  Its value after event dispatch determines\u000a   * the behavior of the swipe animation that might be about to begin.\u000a   * Specifically, if the user swipes in a direction that can't be swiped\u000a   * to, the animation will have a bounce effect.\u000a   * Future SwipeGestureUpdate, SwipeGesture and SwipeGestureEnd events\u000a   * will carry the allowDirections value that was set on the SwipeMayStart\u000a   * event.  Changing this field on non-SwipeGestureMayStart events doesn't\u000a   * have any effect.\u000a   */\u000a  attribute unsigned long allowedDirections;\u000a\u000a  /* Direction of a gesture. Diagonals are indicated by OR'ing the\u000a   * applicable constants together.\u000a   *\u000a   * Swipes gestures may occur in any direction.\u000a   *\u000a   * Magnify gestures do not have a direction.\u000a   *\u000a   * Rotation gestures will be either ROTATION_COUNTERCLOCKWISE or\u000a   * ROTATION_CLOCKWISE.\u000a   */\u000a  readonly attribute unsigned long direction;\u000a\u000a  /* Delta value for magnify, rotate and swipe gestures.\u000a   *\u000a   * For rotation, the value is in degrees and is positive for\u000a   * clockwise rotation and negative for counterclockwise\u000a   * rotation.\u000a   *\u000a   * For magnification, the value will be positive for a \"zoom in\"\u000a   * (i.e, increased magnification) and negative for a \"zoom out\"\u000a   * (i.e., decreased magnification).  The particular units\u000a   * represented by the \"delta\" are currently implementation specific.\u000a   *\u000a   * XXX - The units for measuring magnification are currently\u000a   * unspecified because the units used by Mac OS X are currently\u000a   * undocumented.  The values are typically in the range of 0.0 to\u000a   * 100.0, but it is only safe currently to rely on the delta being\u000a   * positive or negative.\u000a   *\u000a   * For swipe start, update and end events, the value is a fraction\u000a   * of one \"page\".  If the resulting swipe will have DIRECTION_LEFT, the\u000a   * delta value will be positive; for DIRECTION_RIGHT, delta is negative.\u000a   * If this seems backwards to you, look at it this way:  If the current\u000a   * page is pushed to the right during the animation (positive delta),\u000a   * the page left to the current page will be visible after the swipe\u000a   * (DIRECTION_LEFT).\u000a   *\u000a   * Units on Windows represent the difference between the initial\u000a   * and current/final width between the two touch points on the input\u000a   * device and are measured in pixels.\u000a   */\u000a  readonly attribute double delta;\u000a\u000a  /* Click count value for taps. */\u000a  readonly attribute unsigned long clickCount;\u000a\u000a  void initSimpleGestureEvent(DOMString typeArg,\u000a                              optional boolean canBubbleArg = false,\u000a                              optional boolean cancelableArg = false,\u000a                              optional Window? viewArg = null,\u000a                              optional long detailArg = 0,\u000a                              optional long screenXArg = 0,\u000a                              optional long screenYArg = 0,\u000a                              optional long clientXArg = 0,\u000a                              optional long clientYArg = 0,\u000a                              optional boolean ctrlKeyArg = false,\u000a                              optional boolean altKeyArg = false,\u000a                              optional boolean shiftKeyArg = false,\u000a                              optional boolean metaKeyArg = false,\u000a                              optional short buttonArg = 0,\u000a                              optional EventTarget? relatedTargetArg = null,\u000a                              optional unsigned long allowedDirectionsArg = 0,\u000a                              optional unsigned long directionArg = 0,\u000a                              optional double deltaArg = 0,\u000a                              optional unsigned long clickCount = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SocketCommon.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SocketCommon.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/2012/sysapps/tcp-udp-sockets/#readystate\u000a */\u000a\u000aenum SocketReadyState {\u000a    \"opening\",\u000a    \"open\",\u000a    \"closing\",\u000a    \"closed\",\u000a    \"halfclosed\"\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SourceBuffer.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SourceBuffer.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/html-media/raw-file/default/media-source/media-source.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum SourceBufferAppendMode {\u000a    \"segments\",\u000a    \"sequence\"\u000a};\u000a\u000a[Func=\"mozilla::dom::MediaSource::Enabled\"]\u000ainterface SourceBuffer : EventTarget {\u000a  [SetterThrows]\u000a  attribute SourceBufferAppendMode mode;\u000a  readonly attribute boolean updating;\u000a  [Throws]\u000a  readonly attribute TimeRanges buffered;\u000a  [SetterThrows]\u000a  attribute double timestampOffset;\u000a  //readonly attribute AudioTrackList audioTracks;\u000a  //readonly attribute VideoTrackList videoTracks;\u000a  //readonly attribute TextTrackList textTracks;\u000a  [SetterThrows]\u000a  attribute double appendWindowStart;\u000a  [SetterThrows]\u000a  attribute unrestricted double appendWindowEnd;\u000a  attribute EventHandler onupdatestart;\u000a  attribute EventHandler onupdate;\u000a  attribute EventHandler onupdateend;\u000a  attribute EventHandler onerror;\u000a  attribute EventHandler onabort;\u000a  [Throws]\u000a  void appendBuffer(ArrayBuffer data);\u000a  [Throws]\u000a  void appendBuffer(ArrayBufferView data);\u000a  //[Throws]\u000a  //void appendStream(Stream stream, [EnforceRange] optional unsigned long long maxSize);\u000a  [Throws]\u000a  void abort();\u000a  [Throws]\u000a  void remove(double start, unrestricted double end);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SourceBufferList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SourceBufferList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/html-media/raw-file/default/media-source/media-source.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Func=\"mozilla::dom::MediaSource::Enabled\"]\u000ainterface SourceBufferList : EventTarget {\u000a  readonly attribute unsigned long length;\u000a  attribute EventHandler onaddsourcebuffer;\u000a  attribute EventHandler onremovesourcebuffer;\u000a  getter SourceBuffer (unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechGrammar.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechGrammar.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor,\u000a Pref=\"media.webspeech.recognition.enable\",\u000a Func=\"SpeechRecognition::IsAuthorized\"]\u000ainterface SpeechGrammar {\u000a    [Throws]\u000a    attribute DOMString src;\u000a    [Throws]\u000a    attribute float weight;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechGrammarList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechGrammarList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor, Pref=\"media.webspeech.recognition.enable\",\u000a Func=\"SpeechRecognition::IsAuthorized\"]\u000ainterface SpeechGrammarList {\u000a    readonly attribute unsigned long length;\u000a    [Throws]\u000a    getter SpeechGrammar item(unsigned long index);\u000a    [Throws]\u000a    void addFromURI(DOMString src, optional float weight);\u000a    [Throws]\u000a    void addFromString(DOMString string, optional float weight);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognition.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognition.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor,\u000a Pref=\"media.webspeech.recognition.enable\",\u000a Func=\"SpeechRecognition::IsAuthorized\"]\u000ainterface SpeechRecognition : EventTarget {\u000a    // recognition parameters\u000a    attribute SpeechGrammarList grammars;\u000a    attribute DOMString lang;\u000a    [Throws]\u000a    attribute boolean continuous;\u000a    attribute boolean interimResults;\u000a    attribute unsigned long maxAlternatives;\u000a    [Throws]\u000a    attribute DOMString serviceURI;\u000a\u000a    // methods to drive the speech interaction\u000a    [Throws, NeedsCallerType]\u000a    void start(optional MediaStream stream);\u000a    void stop();\u000a    void abort();\u000a\u000a    // event methods\u000a    attribute EventHandler onaudiostart;\u000a    attribute EventHandler onsoundstart;\u000a    attribute EventHandler onspeechstart;\u000a    attribute EventHandler onspeechend;\u000a    attribute EventHandler onsoundend;\u000a    attribute EventHandler onaudioend;\u000a    attribute EventHandler onresult;\u000a    attribute EventHandler onnomatch;\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onstart;\u000a    attribute EventHandler onend;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognitionAlternative.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognitionAlternative.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"media.webspeech.recognition.enable\",\u000a Func=\"SpeechRecognition::IsAuthorized\"]\u000ainterface SpeechRecognitionAlternative {\u000a    readonly attribute DOMString transcript;\u000a    readonly attribute float confidence;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognitionError.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognitionError.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000aenum SpeechRecognitionErrorCode {\u000a  \"no-speech\",\u000a  \"aborted\",\u000a  \"audio-capture\",\u000a  \"network\",\u000a  \"not-allowed\",\u000a  \"service-not-allowed\",\u000a  \"bad-grammar\",\u000a  \"language-not-supported\"\u000a};\u000a\u000a[Pref=\"media.webspeech.recognition.enable\",\u000a Func=\"SpeechRecognition::IsAuthorized\",\u000a Constructor(DOMString type, optional SpeechRecognitionErrorInit eventInitDict)]\u000ainterface SpeechRecognitionError : Event\u000a{\u000a  readonly attribute SpeechRecognitionErrorCode error;\u000a  readonly attribute DOMString? message;\u000a};\u000a\u000adictionary SpeechRecognitionErrorInit : EventInit\u000a{\u000a  SpeechRecognitionErrorCode error = \"no-speech\";\u000a  DOMString message = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognitionEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognitionEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000ainterface nsISupports;\u000a\u000a[Pref=\"media.webspeech.recognition.enable\",\u000a Func=\"SpeechRecognition::IsAuthorized\",\u000a Constructor(DOMString type, optional SpeechRecognitionEventInit eventInitDict)]\u000ainterface SpeechRecognitionEvent : Event\u000a{\u000a  readonly attribute unsigned long resultIndex;\u000a  readonly attribute SpeechRecognitionResultList? results;\u000a  readonly attribute any interpretation;\u000a  readonly attribute Document? emma;\u000a};\u000a\u000adictionary SpeechRecognitionEventInit : EventInit\u000a{\u000a  unsigned long resultIndex = 0;\u000a  SpeechRecognitionResultList? results = null;\u000a  any interpretation = null;\u000a  Document? emma = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognitionResult.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognitionResult.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"media.webspeech.recognition.enable\",\u000a Func=\"SpeechRecognition::IsAuthorized\"]\u000ainterface SpeechRecognitionResult {\u000a    readonly attribute unsigned long length;\u000a    getter SpeechRecognitionAlternative item(unsigned long index);\u000a    readonly attribute boolean isFinal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognitionResultList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechRecognitionResultList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"media.webspeech.recognition.enable\",\u000a Func=\"SpeechRecognition::IsAuthorized\"]\u000ainterface SpeechRecognitionResultList {\u000a    readonly attribute unsigned long length;\u000a    getter SpeechRecognitionResult item(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechSynthesis.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechSynthesis.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"media.webspeech.synth.enabled\"]\u000ainterface SpeechSynthesis : EventTarget{\u000a  readonly attribute boolean pending;\u000a  readonly attribute boolean speaking;\u000a  readonly attribute boolean paused;\u000a\u000a  void speak(SpeechSynthesisUtterance utterance);\u000a  void cancel();\u000a  void pause();\u000a  void resume();\u000a  sequence<SpeechSynthesisVoice> getVoices();\u000a\u000a  attribute EventHandler onvoiceschanged;\u000a\u000a  [ChromeOnly]\u000a  // Force an utterance to end. Circumvents bad speech service implementations.\u000a  void forceEnd();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechSynthesisErrorEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechSynthesisErrorEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum SpeechSynthesisErrorCode {\u000a  \"canceled\",\u000a  \"interrupted\",\u000a  \"audio-busy\",\u000a  \"audio-hardware\",\u000a  \"network\",\u000a  \"synthesis-unavailable\",\u000a  \"synthesis-failed\",\u000a  \"language-unavailable\",\u000a  \"voice-unavailable\",\u000a  \"text-too-long\",\u000a  \"invalid-argument\",\u000a};\u000a\u000a[Constructor(DOMString type, SpeechSynthesisErrorEventInit eventInitDict),\u000a Pref=\"media.webspeech.synth.enabled\"]\u000ainterface SpeechSynthesisErrorEvent : SpeechSynthesisEvent {\u000a  readonly attribute SpeechSynthesisErrorCode error;\u000a};\u000a\u000adictionary SpeechSynthesisErrorEventInit : SpeechSynthesisEventInit\u000a{\u000a  required SpeechSynthesisErrorCode error;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechSynthesisEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechSynthesisEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString type, SpeechSynthesisEventInit eventInitDict),\u000a Pref=\"media.webspeech.synth.enabled\"]\u000ainterface SpeechSynthesisEvent : Event\u000a{\u000a  readonly attribute SpeechSynthesisUtterance utterance;\u000a  readonly attribute unsigned long charIndex;\u000a  readonly attribute unsigned long? charLength;\u000a  readonly attribute float elapsedTime;\u000a  readonly attribute DOMString? name;\u000a};\u000a\u000adictionary SpeechSynthesisEventInit : EventInit\u000a{\u000a  required SpeechSynthesisUtterance utterance;\u000a  unsigned long charIndex = 0;\u000a  unsigned long? charLength = null;\u000a  float elapsedTime = 0;\u000a  DOMString name = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechSynthesisUtterance.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechSynthesisUtterance.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"media.webspeech.synth.enabled\",\u000a Constructor,\u000a Constructor(DOMString text)]\u000ainterface SpeechSynthesisUtterance : EventTarget {\u000a  attribute DOMString text;\u000a  attribute DOMString lang;\u000a  attribute SpeechSynthesisVoice? voice;\u000a  attribute float volume;\u000a  attribute float rate;\u000a  attribute float pitch;\u000a\u000a  attribute EventHandler onstart;\u000a  attribute EventHandler onend;\u000a  attribute EventHandler onerror;\u000a  attribute EventHandler onpause;\u000a  attribute EventHandler onresume;\u000a  attribute EventHandler onmark;\u000a  attribute EventHandler onboundary;\u000a\u000a  [ChromeOnly]\u000a  readonly attribute DOMString chosenVoiceURI;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechSynthesisVoice.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SpeechSynthesisVoice.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Pref=\"media.webspeech.synth.enabled\"]\u000ainterface SpeechSynthesisVoice {\u000a  readonly attribute DOMString voiceURI;\u000a  readonly attribute DOMString name;\u000a  readonly attribute DOMString lang;\u000a  readonly attribute boolean localService;\u000a  readonly attribute boolean default;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StereoPannerNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StereoPannerNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary StereoPannerOptions : AudioNodeOptions {\u000a             float pan = 0;\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional StereoPannerOptions options)]\u000ainterface StereoPannerNode : AudioNode {\u000a  readonly attribute AudioParam pan;\u000a};\u000a\u000a// Mozilla extension\u000aStereoPannerNode implements AudioNodePassThrough;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Storage.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Storage.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a* License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a* You can obtain one at http://mozilla.org/MPL/2.0/.\u000a*\u000a* The origin of this IDL file is\u000a* http://www.whatwg.org/html/#the-storage-interface\u000a*\u000a* © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a* Opera Software ASA. You are granted a license to use, reproduce\u000a* and create derivative works of this document.\u000a*/\u000a\u000ainterface Storage {\u000a  [Throws, NeedsSubjectPrincipal]\u000a  readonly attribute unsigned long length;\u000a\u000a  [Throws, NeedsSubjectPrincipal]\u000a  DOMString? key(unsigned long index);\u000a\u000a  [Throws, NeedsSubjectPrincipal]\u000a  getter DOMString? getItem(DOMString key);\u000a\u000a  [Throws, NeedsSubjectPrincipal]\u000a  setter void setItem(DOMString key, DOMString value);\u000a\u000a  [Throws, NeedsSubjectPrincipal]\u000a  deleter void removeItem(DOMString key);\u000a\u000a  [Throws, NeedsSubjectPrincipal]\u000a  void clear();\u000a\u000a  [ChromeOnly]\u000a  readonly attribute boolean isSessionOnly;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StorageEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StorageEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * Interface for a client side storage. See\u000a * http://dev.w3.org/html5/webstorage/#the-storage-event\u000a * for more information.\u000a *\u000a * Event sent to a window when a storage area changes.\u000a */\u000a\u000a[Constructor(DOMString type, optional StorageEventInit eventInitDict)]\u000ainterface StorageEvent : Event\u000a{\u000a  readonly attribute DOMString? key;\u000a  readonly attribute DOMString? oldValue;\u000a  readonly attribute DOMString? newValue;\u000a  readonly attribute DOMString? url;\u000a  readonly attribute Storage? storageArea;\u000a\u000a  // Bug 1016053 - This is not spec compliant.\u000a  void initStorageEvent(DOMString type,\u000a                        optional boolean canBubble = false,\u000a                        optional boolean cancelable = false,\u000a                        optional DOMString? key = null,\u000a                        optional DOMString? oldValue = null,\u000a                        optional DOMString? newValue = null,\u000a                        optional DOMString? url = null,\u000a                        optional Storage? storageArea = null);\u000a};\u000a\u000adictionary StorageEventInit : EventInit\u000a{\u000a  DOMString? key = null;\u000a  DOMString? oldValue = null;\u000a  DOMString? newValue = null;\u000a  DOMString url = \"\";\u000a  Storage? storageArea = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StorageManager.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StorageManager.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://storage.spec.whatwg.org/#storagemanager\u000a *\u000a */\u000a\u000a[SecureContext,\u000a Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::DOMPrefs::StorageManagerEnabled\"]\u000ainterface StorageManager {\u000a  [Throws]\u000a  Promise<boolean> persisted();\u000a\u000a  [Exposed=Window, Throws]\u000a  Promise<boolean> persist();\u000a\u000a  [Throws]\u000a  Promise<StorageEstimate> estimate();\u000a};\u000a\u000adictionary StorageEstimate {\u000a  unsigned long long usage;\u000a  unsigned long long quota;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StorageType.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StorageType.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000aenum StorageType { \"persistent\", \"temporary\", \"default\" };\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StreamFilter.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StreamFilter.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * This is a Mozilla-specific WebExtension API, which is not available to web\u000a * content. It allows monitoring and filtering of HTTP response stream data.\u000a *\u000a * This API should currently be considered experimental, and is not defined by\u000a * any standard.\u000a */\u000a\u000aenum StreamFilterStatus {\u000a  /**\u000a   * The StreamFilter is not fully initialized. No methods may be called until\u000a   * a \"start\" event has been received.\u000a   */\u000a  \"uninitialized\",\u000a  /**\u000a   * The underlying channel is currently transferring data, which will be\u000a   * dispatched via \"data\" events.\u000a   */\u000a  \"transferringdata\",\u000a  /**\u000a   * The underlying channel has finished transferring data. Data may still be\u000a   * written via write() calls at this point.\u000a   */\u000a  \"finishedtransferringdata\",\u000a  /**\u000a   * Data transfer is currently suspended. It may be resumed by a call to\u000a   * resume(). Data may still be written via write() calls in this state.\u000a   */\u000a  \"suspended\",\u000a  /**\u000a   * The channel has been closed by a call to close(). No further data wlil be\u000a   * delivered via \"data\" events, and no further data may be written via\u000a   * write() calls.\u000a   */\u000a  \"closed\",\u000a  /**\u000a   * The channel has been disconnected by a call to disconnect(). All further\u000a   * data will be delivered directly, without passing through the filter. No\u000a   * further events will be dispatched, and no further data may be written by\u000a   * write() calls.\u000a   */\u000a  \"disconnected\",\u000a  /**\u000a   * An error has occurred and the channel is disconnected. The `error`\u000a   * property contains the details of the error.\u000a   */\u000a  \"failed\",\u000a};\u000a\u000a/**\u000a * An interface which allows an extension to intercept, and optionally modify,\u000a * response data from an HTTP request.\u000a */\u000a[Exposed=(Window,System),\u000a Func=\"mozilla::extensions::StreamFilter::IsAllowedInContext\"]\u000ainterface StreamFilter : EventTarget {\u000a  /**\u000a   * Creates a stream filter for the given add-on and the given extension ID.\u000a   */\u000a  [ChromeOnly]\u000a  static StreamFilter create(unsigned long long requestId, DOMString addonId);\u000a\u000a  /**\u000a   * Suspends processing of the request. After this is called, no further data\u000a   * will be delivered until the request is resumed.\u000a   */\u000a  [Throws]\u000a  void suspend();\u000a\u000a  /**\u000a   * Resumes delivery of data for a suspended request.\u000a   */\u000a  [Throws]\u000a  void resume();\u000a\u000a  /**\u000a   * Closes the request. After this is called, no more data may be written to\u000a   * the stream, and no further data will be delivered.\u000a   *\u000a   * This *must* be called after the consumer is finished writing data, unless\u000a   * disconnect() has already been called.\u000a   */\u000a  [Throws]\u000a  void close();\u000a\u000a  /**\u000a   * Disconnects the stream filter from the request. After this is called, no\u000a   * further data will be delivered to the filter, and any unprocessed data\u000a   * will be written directly to the output stream.\u000a   */\u000a  [Throws]\u000a  void disconnect();\u000a\u000a  /**\u000a   * Writes a chunk of data to the output stream. This may not be called\u000a   * before the \"start\" event has been received.\u000a   */\u000a  [Throws]\u000a  void write((ArrayBuffer or Uint8Array) data);\u000a\u000a  /**\u000a   * Returns the current status of the stream.\u000a   */\u000a  [Pure]\u000a  readonly attribute StreamFilterStatus status;\u000a\u000a  /**\u000a   * After an \"error\" event has been dispatched, this contains a message\u000a   * describing the error.\u000a   */\u000a  [Pure]\u000a  readonly attribute DOMString error;\u000a\u000a  /**\u000a   * Dispatched with a StreamFilterDataEvent whenever incoming data is\u000a   * available on the stream. This data will not be delivered to the output\u000a   * stream unless it is explicitly written via a write() call.\u000a   */\u000a  attribute EventHandler ondata;\u000a\u000a  /**\u000a   * Dispatched when the stream is opened, and is about to begin delivering\u000a   * data.\u000a   */\u000a  attribute EventHandler onstart;\u000a\u000a  /**\u000a   * Dispatched when the stream has closed, and has no more data to deliver.\u000a   * The output stream remains open and writable until close() is called.\u000a   */\u000a  attribute EventHandler onstop;\u000a\u000a  /**\u000a   * Dispatched when an error has occurred. No further data may be read or\u000a   * written after this point.\u000a   */\u000a  attribute EventHandler onerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StreamFilterDataEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StreamFilterDataEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/**\u000a * This is a Mozilla-specific WebExtension API, which is not available to web\u000a * content. It allows monitoring and filtering of HTTP response stream data.\u000a *\u000a * This API should currently be considered experimental, and is not defined by\u000a * any standard.\u000a */\u000a\u000a[Constructor(DOMString type, optional StreamFilterDataEventInit eventInitDict),\u000a Func=\"mozilla::extensions::StreamFilter::IsAllowedInContext\",\u000a Exposed=(Window,System)]\u000ainterface StreamFilterDataEvent : Event {\u000a  /**\u000a   * Contains a chunk of data read from the input stream.\u000a   */\u000a  [Pure]\u000a  readonly attribute ArrayBuffer data;\u000a};\u000a\u000adictionary StreamFilterDataEventInit : EventInit {\u000a  required ArrayBuffer data;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StructuredCloneHolder.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StructuredCloneHolder.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a/**\u000a * A holder for structured-clonable data which can itself be cloned with\u000a * little overhead, and deserialized into an arbitrary global.\u000a */\u000a[ChromeOnly, Exposed=(Window,System,Worker),\u000a /**\u000a  * Serializes the given value to an opaque structured clone blob, and\u000a  * returns the result.\u000a  *\u000a  * The serialization happens in the compartment of the given global or, if no\u000a  * global is provided, the compartment of the data value.\u000a  */\u000a Constructor(any data, optional object? global = null)]\u000ainterface StructuredCloneHolder {\u000a  /**\u000a   * Deserializes the structured clone data in the scope of the given global,\u000a   * and returns the result.\u000a   */\u000a  [Throws]\u000a  any deserialize(object global);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StyleRuleChangeEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StyleRuleChangeEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a[ChromeOnly, Constructor(DOMString type, optional StyleRuleChangeEventInit eventInitDict)]\u000ainterface StyleRuleChangeEvent : Event\u000a{\u000a  readonly attribute CSSStyleSheet? stylesheet;\u000a  readonly attribute CSSRule? rule;\u000a};\u000a\u000adictionary StyleRuleChangeEventInit : EventInit\u000a{\u000a  CSSStyleSheet? stylesheet = null;\u000a  CSSRule? rule = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StyleSheet.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StyleSheet.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/csswg/cssom/\u000a */\u000a\u000ainterface StyleSheet {\u000a  [Constant]\u000a  readonly attribute DOMString type;\u000a  [Constant, Throws]\u000a  readonly attribute DOMString? href;\u000a  // Spec says \"Node\", but it can go null when the node gets a new\u000a  // sheet.  That's also why it's not [Constant]\u000a  [Pure]\u000a  readonly attribute Node? ownerNode;\u000a  [Pure]\u000a  readonly attribute StyleSheet? parentStyleSheet;\u000a  [Pure]\u000a  readonly attribute DOMString? title;\u000a  [Constant]\u000a  readonly attribute MediaList media;\u000a  [Pure]\u000a  attribute boolean disabled;\u000a  // The source map URL for this style sheet.  The source map URL can\u000a  // be found in one of two ways.\u000a  //\u000a  // If a SourceMap or X-SourceMap response header is seen, this is\u000a  // the value.  If both are seen, SourceMap is preferred.  Because\u000a  // this relies on the HTTP response, it can change if checked before\u000a  // the response is available -- which is why it is not [Constant].\u000a  //\u000a  // If the style sheet has the special \"# sourceMappingURL=\" comment,\u000a  // then this is the URL specified there.\u000a  //\u000a  // If the source map URL is not found by either of these methods,\u000a  // then this is an empty string.\u000a  [ChromeOnly, Pure]\u000a  readonly attribute DOMString sourceMapURL;\u000a  // The source URL for this style sheet.  If the style sheet has the\u000a  // special \"# sourceURL=\" comment, then this is the URL specified\u000a  // there.  If no such comment is found, then this is the empty\u000a  // string.\u000a  [ChromeOnly, Pure]\u000a  readonly attribute DOMString sourceURL;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StyleSheetApplicableStateChangeEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StyleSheetApplicableStateChangeEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[ChromeOnly, Constructor(DOMString type, optional StyleSheetApplicableStateChangeEventInit eventInitDict)]\u000ainterface StyleSheetApplicableStateChangeEvent : Event\u000a{\u000a  readonly attribute CSSStyleSheet? stylesheet;\u000a  readonly attribute boolean applicable;\u000a};\u000a\u000adictionary StyleSheetApplicableStateChangeEventInit : EventInit\u000a{\u000a  CSSStyleSheet? stylesheet = null;\u000a  boolean applicable = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StyleSheetChangeEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StyleSheetChangeEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[ChromeOnly, Constructor(DOMString type, optional StyleSheetChangeEventInit eventInitDict)]\u000ainterface StyleSheetChangeEvent : Event\u000a{\u000a  readonly attribute CSSStyleSheet? stylesheet;\u000a  readonly attribute boolean documentSheet;\u000a};\u000a\u000adictionary StyleSheetChangeEventInit : EventInit\u000a{\u000a  CSSStyleSheet? stylesheet = null;\u000a  boolean documentSheet = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StyleSheetList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/StyleSheetList.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000ainterface StyleSheetList {\u000a  readonly attribute unsigned long length;\u000a  getter StyleSheet? item(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SubtleCrypto.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/SubtleCrypto.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/WebCryptoAPI/\u000a */\u000a\u000atypedef DOMString KeyType;\u000atypedef DOMString KeyUsage;\u000atypedef DOMString NamedCurve;\u000atypedef Uint8Array BigInteger;\u000a\u000a/***** Algorithm dictionaries *****/\u000a\u000adictionary Algorithm {\u000a  required DOMString name;\u000a};\u000a\u000adictionary AesCbcParams : Algorithm {\u000a  required BufferSource iv;\u000a};\u000a\u000adictionary AesCtrParams : Algorithm {\u000a  required BufferSource counter;\u000a  [EnforceRange] required octet length;\u000a};\u000a\u000adictionary AesGcmParams : Algorithm {\u000a  required BufferSource iv;\u000a  BufferSource additionalData;\u000a  [EnforceRange] octet tagLength;\u000a};\u000a\u000adictionary HmacImportParams : Algorithm {\u000a  required AlgorithmIdentifier hash;\u000a};\u000a\u000adictionary Pbkdf2Params : Algorithm {\u000a  required BufferSource salt;\u000a  [EnforceRange] required unsigned long iterations;\u000a  required AlgorithmIdentifier hash;\u000a};\u000a\u000adictionary RsaHashedImportParams {\u000a  required AlgorithmIdentifier hash;\u000a};\u000a\u000adictionary AesKeyGenParams : Algorithm {\u000a  [EnforceRange] required unsigned short length;\u000a};\u000a\u000adictionary HmacKeyGenParams : Algorithm {\u000a  required AlgorithmIdentifier hash;\u000a  [EnforceRange] unsigned long length;\u000a};\u000a\u000adictionary RsaHashedKeyGenParams : Algorithm {\u000a  [EnforceRange] required unsigned long modulusLength;\u000a  required BigInteger publicExponent;\u000a  required AlgorithmIdentifier hash;\u000a};\u000a\u000adictionary RsaOaepParams : Algorithm {\u000a  BufferSource label;\u000a};\u000a\u000adictionary RsaPssParams : Algorithm {\u000a  [EnforceRange] required unsigned long saltLength;\u000a};\u000a\u000adictionary DhKeyGenParams : Algorithm {\u000a  required BigInteger prime;\u000a  required BigInteger generator;\u000a};\u000a\u000adictionary EcKeyGenParams : Algorithm {\u000a  required NamedCurve namedCurve;\u000a};\u000a\u000adictionary AesDerivedKeyParams : Algorithm {\u000a  [EnforceRange] required unsigned long length;\u000a};\u000a\u000adictionary HmacDerivedKeyParams : HmacImportParams {\u000a  [EnforceRange] unsigned long length;\u000a};\u000a\u000adictionary EcdhKeyDeriveParams : Algorithm {\u000a  required CryptoKey public;\u000a};\u000a\u000adictionary DhKeyDeriveParams : Algorithm {\u000a  required CryptoKey public;\u000a};\u000a\u000adictionary DhImportKeyParams : Algorithm {\u000a  required BigInteger prime;\u000a  required BigInteger generator;\u000a};\u000a\u000adictionary EcdsaParams : Algorithm {\u000a  required AlgorithmIdentifier hash;\u000a};\u000a\u000adictionary EcKeyImportParams : Algorithm {\u000a  NamedCurve namedCurve;\u000a};\u000a\u000adictionary HkdfParams : Algorithm {\u000a  required AlgorithmIdentifier hash;\u000a  required BufferSource salt;\u000a  required BufferSource info;\u000a};\u000a\u000a/***** JWK *****/\u000a\u000adictionary RsaOtherPrimesInfo {\u000a  // The following fields are defined in Section 6.3.2.7 of JSON Web Algorithms\u000a  required DOMString r;\u000a  required DOMString d;\u000a  required DOMString t;\u000a};\u000a\u000adictionary JsonWebKey {\u000a  // The following fields are defined in Section 3.1 of JSON Web Key\u000a  required DOMString kty;\u000a  DOMString use;\u000a  sequence<DOMString> key_ops;\u000a  DOMString alg;\u000a\u000a  // The following fields are defined in JSON Web Key Parameters Registration\u000a  boolean ext;\u000a\u000a  // The following fields are defined in Section 6 of JSON Web Algorithms\u000a  DOMString crv;\u000a  DOMString x;\u000a  DOMString y;\u000a  DOMString d;\u000a  DOMString n;\u000a  DOMString e;\u000a  DOMString p;\u000a  DOMString q;\u000a  DOMString dp;\u000a  DOMString dq;\u000a  DOMString qi;\u000a  sequence<RsaOtherPrimesInfo> oth;\u000a  DOMString k;\u000a};\u000a\u000a\u000a/***** The Main API *****/\u000a\u000ainterface CryptoKey {\u000a  readonly attribute KeyType type;\u000a  readonly attribute boolean extractable;\u000a  [Cached, Constant, Throws] readonly attribute object algorithm;\u000a  [Cached, Constant, Frozen] readonly attribute sequence<KeyUsage> usages;\u000a};\u000a\u000adictionary CryptoKeyPair {\u000a  required CryptoKey publicKey;\u000a  required CryptoKey privateKey;\u000a};\u000a\u000atypedef DOMString KeyFormat;\u000atypedef (object or DOMString) AlgorithmIdentifier;\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface SubtleCrypto {\u000a  [Throws]\u000a  Promise<any> encrypt(AlgorithmIdentifier algorithm,\u000a                       CryptoKey key,\u000a                       BufferSource data);\u000a  [Throws]\u000a  Promise<any> decrypt(AlgorithmIdentifier algorithm,\u000a                       CryptoKey key,\u000a                       BufferSource data);\u000a  [Throws]\u000a  Promise<any> sign(AlgorithmIdentifier algorithm,\u000a                     CryptoKey key,\u000a                     BufferSource data);\u000a  [Throws]\u000a  Promise<any> verify(AlgorithmIdentifier algorithm,\u000a                      CryptoKey key,\u000a                      BufferSource signature,\u000a                      BufferSource data);\u000a  [Throws]\u000a  Promise<any> digest(AlgorithmIdentifier algorithm,\u000a                      BufferSource data);\u000a\u000a  [Throws]\u000a  Promise<any> generateKey(AlgorithmIdentifier algorithm,\u000a                           boolean extractable,\u000a                           sequence<KeyUsage> keyUsages );\u000a  [Throws]\u000a  Promise<any> deriveKey(AlgorithmIdentifier algorithm,\u000a                         CryptoKey baseKey,\u000a                         AlgorithmIdentifier derivedKeyType,\u000a                         boolean extractable,\u000a                         sequence<KeyUsage> keyUsages );\u000a  [Throws]\u000a  Promise<any> deriveBits(AlgorithmIdentifier algorithm,\u000a                          CryptoKey baseKey,\u000a                          unsigned long length);\u000a\u000a  [Throws]\u000a  Promise<any> importKey(KeyFormat format,\u000a                         object keyData,\u000a                         AlgorithmIdentifier algorithm,\u000a                         boolean extractable,\u000a                         sequence<KeyUsage> keyUsages );\u000a  [Throws]\u000a  Promise<any> exportKey(KeyFormat format, CryptoKey key);\u000a\u000a  [Throws]\u000a  Promise<any> wrapKey(KeyFormat format,\u000a                       CryptoKey key,\u000a                       CryptoKey wrappingKey,\u000a                       AlgorithmIdentifier wrapAlgorithm);\u000a\u000a  [Throws]\u000a  Promise<any> unwrapKey(KeyFormat format,\u000a                         BufferSource wrappedKey,\u000a                         CryptoKey unwrappingKey,\u000a                         AlgorithmIdentifier unwrapAlgorithm,\u000a                         AlgorithmIdentifier unwrappedKeyAlgorithm,\u000a                         boolean extractable,\u000a                         sequence<KeyUsage> keyUsages );\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TCPServerSocket.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TCPServerSocket.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/**\u000a * TCPServerSocket\u000a *\u000a * An interface to a server socket that can accept incoming connections for gaia apps.\u000a */\u000a\u000adictionary ServerSocketOptions {\u000a  TCPSocketBinaryType binaryType = \"string\";\u000a};\u000a\u000a[Constructor(unsigned short port, optional ServerSocketOptions options, optional unsigned short backlog = 0),\u000a Func=\"mozilla::dom::TCPSocket::ShouldTCPSocketExist\",\u000a Exposed=(Window,System)]\u000ainterface TCPServerSocket : EventTarget {\u000a  /**\u000a   * The port of this server socket object.\u000a   */\u000a  readonly attribute unsigned short localPort;\u000a\u000a  /**\u000a   * The \"connect\" event is dispatched when a client connection is accepted.\u000a   * The event object will be a TCPServerSocketEvent containing a TCPSocket\u000a   * instance, which is used for communication between client and server.\u000a   */\u000a  attribute EventHandler onconnect;\u000a\u000a  /**\u000a   * The \"error\" event will be dispatched when a listening server socket is\u000a   * unexpectedly disconnected.\u000a   */\u000a  attribute EventHandler onerror;\u000a\u000a  /**\u000a   * Close the server socket.\u000a   */\u000a  void close();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TCPServerSocketEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TCPServerSocketEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Constructor(DOMString type, optional TCPServerSocketEventInit eventInitDict),\u000a Func=\"mozilla::dom::TCPSocket::ShouldTCPSocketExist\",\u000a Exposed=(Window,System)]\u000ainterface TCPServerSocketEvent : Event {\u000a  readonly attribute TCPSocket socket;\u000a};\u000a\u000adictionary TCPServerSocketEventInit : EventInit {\u000a  TCPSocket? socket = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TCPSocket.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TCPSocket.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/**\u000a * TCPSocket exposes a TCP client socket (no server sockets yet)\u000a * to highly privileged apps. It provides a buffered, non-blocking\u000a * interface for sending. For receiving, it uses an asynchronous,\u000a * event handler based interface.\u000a */\u000a\u000aenum TCPSocketBinaryType {\u000a  \"arraybuffer\",\u000a  \"string\"\u000a};\u000a\u000adictionary SocketOptions {\u000a  boolean useSecureTransport = false;\u000a  TCPSocketBinaryType binaryType = \"string\";\u000a};\u000a\u000aenum TCPReadyState {\u000a  \"connecting\",\u000a  \"open\",\u000a  \"closing\",\u000a  \"closed\",\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface LegacyMozTCPSocket {\u000a  /**\u000a   * Legacy constructor for API compatibility.\u000a   */\u000a  [Throws]\u000a  TCPSocket open(DOMString host, unsigned short port, optional SocketOptions options);\u000a\u000a  [Throws]\u000a  TCPServerSocket listen(unsigned short port, optional ServerSocketOptions options, optional unsigned short backlog = 0);\u000a};\u000a\u000a[Constructor(DOMString host, unsigned short port, optional SocketOptions options),\u000a Func=\"mozilla::dom::TCPSocket::ShouldTCPSocketExist\",\u000a Exposed=(Window,System)]\u000ainterface TCPSocket : EventTarget {\u000a  /**\u000a   * Upgrade an insecure connection to use TLS. Throws if the ready state is not OPEN.\u000a   */\u000a  [Throws] void upgradeToSecure();\u000a\u000a  /**\u000a   * The UTF16 host of this socket object.\u000a   */\u000a  readonly attribute USVString host;\u000a\u000a  /**\u000a   * The port of this socket object.\u000a   */\u000a  readonly attribute unsigned short port;\u000a\u000a  /**\u000a   * True if this socket object is an SSL socket.\u000a   */\u000a  readonly attribute boolean ssl;\u000a\u000a  /**\u000a   * The number of bytes which have previously been buffered by calls to\u000a   * send on this socket.\u000a   */\u000a  readonly attribute unsigned long long bufferedAmount;\u000a\u000a  /**\u000a   * Pause reading incoming data and invocations of the ondata handler until\u000a   * resume is called. Can be called multiple times without resuming.\u000a   */\u000a  void suspend();\u000a\u000a  /**\u000a   * Resume reading incoming data and invoking ondata as usual. There must be\u000a   * an equal number of resume as suspends that took place. Throws if the\u000a   * socket is not suspended.\u000a   */\u000a  [Throws]\u000a  void resume();\u000a\u000a  /**\u000a   * Close the socket.\u000a   */\u000a  void close();\u000a\u000a  /**\u000a   * Close the socket immediately without waiting for unsent data.\u000a   */\u000a  [ChromeOnly] void closeImmediately();\u000a\u000a  /**\u000a   * Write data to the socket.\u000a   *\u000a   * @param data The data to write to the socket.\u000a   *\u000a   * @return Send returns true or false as a hint to the caller that\u000a   *         they may either continue sending more data immediately, or\u000a   *         may want to wait until the other side has read some of the\u000a   *         data which has already been written to the socket before\u000a   *         buffering more. If send returns true, then less than 64k\u000a   *         has been buffered and it's safe to immediately write more.\u000a   *         If send returns false, then more than 64k has been buffered,\u000a   *         and the caller may wish to wait until the ondrain event\u000a   *         handler has been called before buffering more data by more\u000a   *         calls to send.\u000a   * \u000a   * @throws Throws if the ready state is not OPEN.\u000a   */\u000a  [Throws]\u000a  boolean send(ByteString data);\u000a\u000a  /**\u000a   * Write data to the socket.\u000a   *\u000a   * @param data The data to write to the socket.\u000a   * @param byteOffset The offset within the data from which to begin writing.\u000a   * @param byteLength The number of bytes to write.\u000a   *                   Defaults to the byte length of the ArrayBuffer if not present,\u000a   *                   and clamped to (length - byteOffset).\u000a   *\u000a   * @return Send returns true or false as a hint to the caller that\u000a   *         they may either continue sending more data immediately, or\u000a   *         may want to wait until the other side has read some of the\u000a   *         data which has already been written to the socket before\u000a   *         buffering more. If send returns true, then less than 64k\u000a   *         has been buffered and it's safe to immediately write more.\u000a   *         If send returns false, then more than 64k has been buffered,\u000a   *         and the caller may wish to wait until the ondrain event\u000a   *         handler has been called before buffering more data by more\u000a   *         calls to send.\u000a   * \u000a   * @throws Throws if the ready state is not OPEN.\u000a   */\u000a  [Throws]\u000a  boolean send(ArrayBuffer data, optional unsigned long byteOffset = 0, optional unsigned long byteLength);\u000a\u000a  /**\u000a   * The readyState attribute indicates which state the socket is currently\u000a   * in.\u000a   */\u000a  readonly attribute TCPReadyState readyState;\u000a\u000a  /**\u000a   * The binaryType attribute indicates which mode this socket uses for\u000a   * sending and receiving data. If the binaryType: \"arraybuffer\" option\u000a   * was passed to the open method that created this socket, binaryType\u000a   * will be \"arraybuffer\". Otherwise, it will be \"string\".\u000a   */\u000a  readonly attribute TCPSocketBinaryType binaryType;\u000a\u000a  /**\u000a   * The \"open\" event is dispatched when the connection to the server\u000a   * has been established. If the connection is refused, the \"error\" event\u000a   * will be dispatched, instead.\u000a   */\u000a  attribute EventHandler onopen;\u000a\u000a  /**\u000a   * After send has buffered more than 64k of data, it returns false to\u000a   * indicate that the client should pause before sending more data, to\u000a   * avoid accumulating large buffers. This is only advisory, and the client\u000a   * is free to ignore it and buffer as much data as desired, but if reducing\u000a   * the size of buffers is important (especially for a streaming application)\u000a   * the \"drain\" event will be dispatched once the previously-buffered data has\u000a   * been written to the network, at which point the client can resume calling\u000a   * send again.\u000a   */\u000a  attribute EventHandler ondrain;\u000a\u000a  /**\u000a   * The \"data\" event will be dispatched repeatedly and asynchronously after\u000a   * \"open\" is dispatched, every time some data was available from the server\u000a   * and was read. The event object will be a TCPSocketEvent; if the \"arraybuffer\"\u000a   * binaryType was passed to the constructor, the data attribute of the event\u000a   * object will be an ArrayBuffer. If not, it will be a normal JavaScript string,\u000a   * truncated at the first null byte found in the payload and the remainder\u000a   * interpreted as ASCII bytes.\u000a   *\u000a   * At any time, the client may choose to pause reading and receiving \"data\"\u000a   * events by calling the socket's suspend() method. Further \"data\" events\u000a   * will be paused until resume() is called.\u000a   */\u000a  attribute EventHandler ondata;\u000a\u000a  /**\u000a   * The \"error\" event will be dispatched when there is an error. The event\u000a   * object will be a TCPSocketErrorEvent.\u000a   *\u000a   * If an \"error\" event is dispatched before an \"open\" one, the connection\u000a   * was refused, and the \"close\" event will not be dispatched. If an \"error\"\u000a   * event is dispatched after an \"open\" event, the connection was lost,\u000a   * and a \"close\" event will be dispatched subsequently.\u000a   */\u000a  attribute EventHandler onerror;\u000a\u000a  /**\u000a   * The \"close\" event is dispatched once the underlying network socket\u000a   * has been closed, either by the server, or by the client calling\u000a   * close.\u000a   *\u000a   * If the \"error\" event was not dispatched before \"close\", then one of\u000a   * the sides cleanly closed the connection.\u000a   */\u000a  attribute EventHandler onclose;  \u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TCPSocketErrorEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TCPSocketErrorEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/* Dispatched as part of the \"error\" event in the following situations:\u000a* - if there's an error detected when the TCPSocket closes\u000a* - if there's an internal error while sending data\u000a* - if there's an error connecting to the host\u000a*/\u000a\u000a[Constructor(DOMString type, optional TCPSocketErrorEventInit eventInitDict),\u000a Func=\"mozilla::dom::TCPSocket::ShouldTCPSocketExist\",\u000a Exposed=(Window,System)]\u000ainterface TCPSocketErrorEvent : Event {\u000a  readonly attribute DOMString name;\u000a  readonly attribute DOMString message;\u000a};\u000a\u000adictionary TCPSocketErrorEventInit : EventInit\u000a{\u000a  DOMString name = \"\";\u000a  DOMString message = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TCPSocketEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TCPSocketEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a/**\u000a * TCPSocketEvent is the event dispatched for all of the events described by TCPSocket,\u000a * except the \"error\" event. It contains the socket that was associated with the event,\u000a * the type of event, and the data associated with the event if the event is a \"data\" event.\u000a */\u000a\u000a[Constructor(DOMString type, optional TCPSocketEventInit eventInitDict),\u000a Func=\"mozilla::dom::TCPSocket::ShouldTCPSocketExist\",\u000a Exposed=(Window,System)]\u000ainterface TCPSocketEvent : Event {\u000a  /**\u000a   * If the event is a \"data\" event, data will be the bytes read from the network;\u000a   * if the binaryType of the socket was \"arraybuffer\", this value will be of type\u000a   * ArrayBuffer, otherwise, it will be a ByteString.\u000a   *\u000a   * For other events, data will be an empty string.\u000a   */\u000a  //TODO: make this (ArrayBuffer or ByteString) after sorting out the rooting required. (bug 1121634)\u000a  readonly attribute any data;\u000a};\u000a\u000adictionary TCPSocketEventInit : EventInit {\u000a  //TODO: make this (ArrayBuffer or ByteString) after sorting out the rooting required. (bug 1121634)\u000a  any data = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TestFunctions.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TestFunctions.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a// A dumping ground for random testing functions\u000a\u000acallback PromiseReturner = Promise<any>();\u000a\u000a[Pref=\"dom.expose_test_interfaces\",\u000a Constructor]\u000ainterface TestFunctions {\u000a  [Throws]\u000a  static void throwUncatchableException();\u000a\u000a  // Simply returns its argument.  Can be used to test Promise\u000a  // argument processing behavior.\u000a  static Promise<any> passThroughPromise(Promise<any> arg);\u000a\u000a  // Returns whatever Promise the given PromiseReturner returned.\u000a  [Throws]\u000a  static Promise<any> passThroughCallbackPromise(PromiseReturner callback);\u000a\u000a  // Some basic tests for string binding round-tripping behavior.\u000a  void setStringData(DOMString arg);\u000a\u000a  // Get the string data, using an nsAString argument on the C++ side.\u000a  // This will just use Assign/operator=, whatever that does.\u000a  DOMString getStringDataAsAString();\u000a\u000a  // Get the string data, but only \"length\" chars of it, using an\u000a  // nsAString argument on the C++ side.  This will always copy on the\u000a  // C++ side.\u000a  DOMString getStringDataAsAString(unsigned long length);\u000a\u000a  // Get the string data, but only \"length\" chars of it, using a\u000a  // DOMString argument on the C++ side and trying to hand it\u000a  // stringbuffers.  If length not passed, use our full length.\u000a  DOMString getStringDataAsDOMString(optional unsigned long length);\u000a\u000a  // Functions that just punch through to mozITestInterfaceJS.idl\u000a  [Throws]\u000a  void testThrowNsresult();\u000a  [Throws]\u000a  void testThrowNsresultFromNative();\u000a\u000a  // Throws an InvalidStateError to auto-create a rejected promise.\u000a  [Throws]\u000a  static Promise<any> throwToRejectPromise();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TestInterfaceJS.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TestInterfaceJS.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000adictionary TestInterfaceJSUnionableDictionary {\u000a  object objectMember;\u000a  any anyMember;\u000a};\u000a\u000a[JSImplementation=\"@mozilla.org/dom/test-interface-js;1\",\u000a Pref=\"dom.expose_test_interfaces\",\u000a Constructor(optional any anyArg, optional object objectArg, optional TestInterfaceJSDictionary dictionaryArg)]\u000ainterface TestInterfaceJS : EventTarget {\u000a  readonly attribute any anyArg;\u000a  readonly attribute object objectArg;\u000a  [Cached, Pure] readonly attribute TestInterfaceJSDictionary dictionaryArg;\u000a  attribute any anyAttr;\u000a  attribute object objectAttr;\u000a  [Cached, Pure] attribute TestInterfaceJSDictionary dictionaryAttr;\u000a  any pingPongAny(any arg);\u000a  object pingPongObject(object obj);\u000a  any pingPongObjectOrString((object or DOMString) objOrString);\u000a  TestInterfaceJSDictionary pingPongDictionary(optional TestInterfaceJSDictionary dict);\u000a  long pingPongDictionaryOrLong(optional (TestInterfaceJSUnionableDictionary or long) dictOrLong);\u000a  DOMString pingPongMap(record<DOMString, any> map);\u000a  long objectSequenceLength(sequence<object> seq);\u000a  long anySequenceLength(sequence<any> seq);\u000a\u000a  // For testing bug 968335.\u000a  DOMString getCallerPrincipal();\u000a\u000a  DOMString convertSVS(USVString svs);\u000a\u000a  (TestInterfaceJS or long) pingPongUnion((TestInterfaceJS or long) something);\u000a  (DOMString or TestInterfaceJS?) pingPongUnionContainingNull((TestInterfaceJS? or DOMString) something);\u000a  (TestInterfaceJS or long)? pingPongNullableUnion((TestInterfaceJS or long)? something);\u000a  (Location or TestInterfaceJS) returnBadUnion();\u000a\u000a  [Cached, Pure]\u000a  readonly attribute short cachedAttr;\u000a  void setCachedAttr(short n);\u000a  void clearCachedAttrCache();\u000a\u000a  // Test for sequence overloading and union behavior\u000a  void testSequenceOverload(sequence<DOMString> arg);\u000a  void testSequenceOverload(DOMString arg);\u000a\u000a  void testSequenceUnion((sequence<DOMString> or DOMString) arg);\u000a\u000a  // Tests for exception-throwing behavior\u000a  [Throws]\u000a  void testThrowError();\u000a\u000a  [Throws]\u000a  void testThrowDOMException();\u000a\u000a  [Throws]\u000a  void testThrowTypeError();\u000a\u000a  [Throws]\u000a  void testThrowCallbackError(Function callback);\u000a\u000a  [Throws]\u000a  void testThrowXraySelfHosted();\u000a\u000a  [Throws]\u000a  void testThrowSelfHosted();\u000a\u000a  // Tests for promise-rejection behavior\u000a  Promise<void> testPromiseWithThrowingChromePromiseInit();\u000a  Promise<void> testPromiseWithThrowingContentPromiseInit(Function func);\u000a  Promise<void> testPromiseWithDOMExceptionThrowingPromiseInit();\u000a  Promise<void> testPromiseWithThrowingChromeThenFunction();\u000a  Promise<void> testPromiseWithThrowingContentThenFunction(AnyCallback func);\u000a  Promise<void> testPromiseWithDOMExceptionThrowingThenFunction();\u000a  Promise<void> testPromiseWithThrowingChromeThenable();\u000a  Promise<void> testPromiseWithThrowingContentThenable(object thenable);\u000a  Promise<void> testPromiseWithDOMExceptionThrowingThenable();\u000a\u000a  // Event handler tests\u000a  attribute EventHandler onsomething;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TestInterfaceJSDictionaries.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TestInterfaceJSDictionaries.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a//\u000a// These dictionaries are in a separate WebIDL file to avoid circular include\u000a// problems. One of the dictionary includes a union as a member, so that\u000a// dictionary's header needs to include UnionTypes.h. But the API in\u000a// TestInterfaceJS also declares a union of dictionaries, so _that_\u000a// dictionary's header needs to be included _by_ UnionTypes.h. The solution\u000a// is to separate those two dictionaries into separate header files.\u000a//\u000a\u000adictionary TestInterfaceJSDictionary2 {\u000a  object innerObject;\u000a};\u000a\u000adictionary TestInterfaceJSDictionary {\u000a  TestInterfaceJSDictionary2 innerDictionary;\u000a  object objectMember;\u000a  any anyMember;\u000a  (object or DOMString) objectOrStringMember;\u000a  sequence<any> anySequenceMember;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TestInterfaceJSMaplikeSetlikeIterable.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TestInterfaceJSMaplikeSetlikeIterable.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(),\u000a Pref=\"dom.expose_test_interfaces\"]\u000ainterface TestInterfaceMaplike {\u000a  maplike<DOMString, long>;\u000a  void setInternal(DOMString aKey, long aValue);\u000a  void clearInternal();\u000a  boolean deleteInternal(DOMString aKey);\u000a  boolean hasInternal(DOMString aKey);\u000a};\u000a\u000a[Constructor(),\u000a Pref=\"dom.expose_test_interfaces\"]\u000ainterface TestInterfaceMaplikeObject {\u000a  readonly maplike<DOMString, TestInterfaceMaplike>;\u000a  void setInternal(DOMString aKey);\u000a  void clearInternal();\u000a  boolean deleteInternal(DOMString aKey);\u000a  boolean hasInternal(DOMString aKey);\u000a};\u000a\u000a[Pref=\"dom.expose_test_interfaces\",\u000a JSImplementation=\"@mozilla.org/dom/test-interface-js-maplike;1\",\u000a Constructor()]\u000ainterface TestInterfaceJSMaplike {\u000a  readonly maplike<DOMString, long>;\u000a  void setInternal(DOMString aKey, long aValue);\u000a  void clearInternal();\u000a  boolean deleteInternal(DOMString aKey);\u000a};\u000a\u000a[Constructor(),\u000a Pref=\"dom.expose_test_interfaces\"]\u000ainterface TestInterfaceSetlike {\u000a  setlike<DOMString>;\u000a};\u000a\u000a[Constructor(),\u000a Pref=\"dom.expose_test_interfaces\"]\u000ainterface TestInterfaceSetlikeNode {\u000a  setlike<Node>;\u000a};\u000a\u000a[Constructor(),\u000a Pref=\"dom.expose_test_interfaces\"]\u000ainterface TestInterfaceIterableSingle {\u000a  iterable<long>;\u000a  getter long(unsigned long index);\u000a  readonly attribute unsigned long length;\u000a};\u000a\u000a[Constructor(),\u000a Pref=\"dom.expose_test_interfaces\"]\u000ainterface TestInterfaceIterableDouble {\u000a  iterable<DOMString, DOMString>;\u000a};\u000a\u000a[Constructor(),\u000a Pref=\"dom.expose_test_interfaces\"]\u000ainterface TestInterfaceIterableDoubleUnion {\u000a  iterable<DOMString, (DOMString or long)>;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Text.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Text.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(optional DOMString data = \"\")]\u000ainterface Text : CharacterData {\u000a  [Throws]\u000a  Text splitText(unsigned long offset);\u000a  [Throws]\u000a  readonly attribute DOMString wholeText;\u000a};\u000a\u000apartial interface Text {\u000a  [BinaryName=\"assignedSlotByMode\", Func=\"nsTextNode::IsShadowDOMEnabled\"]\u000a  readonly attribute HTMLSlotElement? assignedSlot;\u000a};\u000a\u000aText implements GeometryUtils;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextClause.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextClause.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[ChromeOnly]\u000ainterface TextClause\u000a{\u000a  // The start offset of TextClause\u000a  readonly attribute long startOffset;\u000a\u000a  // The end offset of TextClause\u000a  readonly attribute long endOffset;\u000a\u000a  // If the TextClause is Caret or not\u000a  readonly attribute boolean isCaret;\u000a\u000a  // If the TextClause is TargetClause or not\u000a  readonly attribute boolean isTargetClause;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextDecoder.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextDecoder.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://encoding.spec.whatwg.org/#interface-textdecoder\u000a *\u000a * Any copyright is dedicated to the Public Domain.\u000a * http://creativecommons.org/publicdomain/zero/1.0/\u000a */\u000a\u000a[Constructor(optional DOMString label = \"utf-8\", optional TextDecoderOptions options),\u000a Exposed=(Window,Worker,System)]\u000ainterface TextDecoder {\u000a  [Constant]\u000a  readonly attribute DOMString encoding;\u000a  [Constant]\u000a  readonly attribute boolean fatal;\u000a  [Throws]\u000a  USVString decode(optional BufferSource input, optional TextDecodeOptions options);\u000a};\u000a\u000adictionary TextDecoderOptions {\u000a  boolean fatal = false;\u000a};\u000a\u000adictionary TextDecodeOptions {\u000a  boolean stream = false;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextEncoder.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextEncoder.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://encoding.spec.whatwg.org/#interface-textencoder\u000a *\u000a * Any copyright is dedicated to the Public Domain.\u000a * http://creativecommons.org/publicdomain/zero/1.0/\u000a */\u000a\u000a[Constructor,\u000a Exposed=(Window,Worker,System)]\u000ainterface TextEncoder {\u000a  [Constant]\u000a  readonly attribute DOMString encoding;\u000a  /*\u000a   * This is spec-wise USVString but marking it as\u000a   * DOMString to avoid duplicate work. Since the\u000a   * UTF-16 to UTF-8 converter performs processing\u000a   * that's equivalent to first converting a\u000a   * DOMString to a USVString, let's avoid having\u000a   * the binding code doing it, too.\u000a   */\u000a  [NewObject]\u000a  Uint8Array encode(optional DOMString input = \"\");\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextTrack.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextTrack.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#texttrack\u000a */\u000a\u000aenum TextTrackKind {\u000a  \"subtitles\",\u000a  \"captions\",\u000a  \"descriptions\",\u000a  \"chapters\",\u000a  \"metadata\"\u000a};\u000a\u000aenum TextTrackMode {\u000a  \"disabled\",\u000a  \"hidden\",\u000a  \"showing\"\u000a};\u000a\u000ainterface TextTrack : EventTarget {\u000a  readonly attribute TextTrackKind kind;\u000a  readonly attribute DOMString label;\u000a  readonly attribute DOMString language;\u000a\u000a  readonly attribute DOMString id;\u000a  readonly attribute DOMString inBandMetadataTrackDispatchType;\u000a\u000a           attribute TextTrackMode mode;\u000a\u000a  readonly attribute TextTrackCueList? cues;\u000a  readonly attribute TextTrackCueList? activeCues;\u000a\u000a  void addCue(VTTCue cue);\u000a  [Throws]\u000a  void removeCue(VTTCue cue);\u000a\u000a           attribute EventHandler oncuechange;\u000a};\u000a\u000a// Mozilla Extensions\u000apartial interface TextTrack {\u000a  [ChromeOnly]\u000a  readonly attribute TextTrackList? textTrackList;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextTrackCue.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextTrackCue.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://html.spec.whatwg.org/#texttrackcue\u000a */\u000a\u000ainterface TextTrackCue : EventTarget {\u000a  readonly attribute TextTrack? track;\u000a\u000a  attribute DOMString id;\u000a  attribute double startTime;\u000a  attribute double endTime;\u000a  attribute boolean pauseOnExit;\u000a\u000a  attribute EventHandler onenter;\u000a  attribute EventHandler onexit;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextTrackCueList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextTrackCueList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#texttrackcuelist\u000a */\u000a\u000ainterface TextTrackCueList {\u000a  readonly attribute unsigned long length;\u000a  getter VTTCue (unsigned long index);\u000a  VTTCue? getCueById(DOMString id);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextTrackList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TextTrackList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#texttracklist\u000a */\u000a\u000ainterface TextTrackList : EventTarget {\u000a  readonly attribute unsigned long length;\u000a  getter TextTrack (unsigned long index);\u000a  TextTrack? getTrackById(DOMString id);\u000a\u000a           attribute EventHandler onchange;\u000a           attribute EventHandler onaddtrack;\u000a           attribute EventHandler onremovetrack;\u000a};\u000a\u000a// Mozilla extensions\u000apartial interface TextTrackList {\u000a  [ChromeOnly]\u000a  readonly attribute HTMLMediaElement? mediaElement;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TimeEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TimeEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface please see\u000a * http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface TimeEvent : Event\u000a{\u000a  readonly attribute long         detail;\u000a  readonly attribute WindowProxy? view;\u000a  void initTimeEvent(DOMString aType,\u000a                     optional Window? aView = null,\u000a                     optional long aDetail = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TimeRanges.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TimeRanges.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#timeranges\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000ainterface TimeRanges {\u000a  readonly attribute unsigned long length;\u000a\u000a  [Throws]\u000a  double start(unsigned long index);\u000a\u000a  [Throws]\u000a  double end(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Touch.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Touch.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/webevents/raw-file/default/touchevents.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000adictionary TouchInit {\u000a  required long identifier;\u000a  required EventTarget target;\u000a  long clientX = 0;\u000a  long clientY = 0;\u000a  long screenX = 0;\u000a  long screenY = 0;\u000a  long pageX = 0;\u000a  long pageY = 0;\u000a  float radiusX = 0;\u000a  float radiusY = 0;\u000a  float rotationAngle = 0;\u000a  float force = 0;\u000a};\u000a\u000a[Constructor(TouchInit touchInitDict), \u000a Func=\"mozilla::dom::Touch::PrefEnabled\"]\u000ainterface Touch {\u000a  readonly    attribute long         identifier;\u000a  readonly    attribute EventTarget? target;\u000a  [NeedsCallerType]\u000a  readonly    attribute long         screenX;\u000a  [NeedsCallerType]\u000a  readonly    attribute long         screenY;\u000a  readonly    attribute long         clientX;\u000a  readonly    attribute long         clientY;\u000a  readonly    attribute long         pageX;\u000a  readonly    attribute long         pageY;\u000a  [NeedsCallerType]\u000a  readonly    attribute long         radiusX;\u000a  [NeedsCallerType]\u000a  readonly    attribute long         radiusY;\u000a  [NeedsCallerType]\u000a  readonly    attribute float        rotationAngle;\u000a  [NeedsCallerType]\u000a  readonly    attribute float        force;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TouchEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TouchEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000adictionary TouchEventInit : EventModifierInit {\u000a  sequence<Touch> touches = [];\u000a  sequence<Touch> targetTouches = [];\u000a  sequence<Touch> changedTouches = [];\u000a};\u000a\u000a[Constructor(DOMString type, optional TouchEventInit eventInitDict),\u000a Func=\"mozilla::dom::TouchEvent::PrefEnabled\"]\u000ainterface TouchEvent : UIEvent {\u000a  readonly attribute TouchList touches;\u000a  readonly attribute TouchList targetTouches;\u000a  readonly attribute TouchList changedTouches;\u000a\u000a  readonly attribute boolean altKey;\u000a  readonly attribute boolean metaKey;\u000a  readonly attribute boolean ctrlKey;\u000a  readonly attribute boolean shiftKey;\u000a\u000a  void initTouchEvent(DOMString type,\u000a                      optional boolean canBubble = false,\u000a                      optional boolean cancelable = false,\u000a                      optional Window? view = null,\u000a                      optional long detail = 0,\u000a                      optional boolean ctrlKey = false,\u000a                      optional boolean altKey = false,\u000a                      optional boolean shiftKey = false,\u000a                      optional boolean metaKey = false,\u000a                      optional TouchList? touches = null,\u000a                      optional TouchList? targetTouches = null,\u000a                      optional TouchList? changedTouches = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TouchList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TouchList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://dvcs.w3.org/hg/webevents/raw-file/v1/touchevents.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Func=\"mozilla::dom::TouchList::PrefEnabled\"]\u000ainterface TouchList {\u000a  [Pure]\u000a  readonly attribute unsigned long length;\u000a  getter Touch? item(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TrackEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TrackEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#trackevent\u000a */\u000a\u000a[Constructor(DOMString type, optional TrackEventInit eventInitDict)]\u000ainterface TrackEvent : Event\u000a{\u000a  readonly attribute (VideoTrack or AudioTrack or TextTrack)? track;\u000a};\u000a\u000adictionary TrackEventInit : EventInit\u000a{\u000a  (VideoTrack or AudioTrack or TextTrack)? track = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TransceiverImpl.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TransceiverImpl.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * PeerConnection.js' interface to the C++ TransceiverImpl.\u000a *\u000a * Do not confuse with RTCRtpTransceiver. This interface is purely for\u000a * communication between the PeerConnection JS DOM binding and the C++\u000a * implementation.\u000a *\u000a * See media/webrtc/signaling/src/peerconnection/TransceiverImpl.h\u000a *\u000a */\u000a\u000a// Constructed by PeerConnectionImpl::CreateTransceiverImpl.\u000a[ChromeOnly]\u000ainterface TransceiverImpl {\u000a  MediaStreamTrack getReceiveTrack();\u000a  [Throws]\u000a  void syncWithJS(RTCRtpTransceiver transceiver);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TransitionEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TransitionEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * Transition events are defined in:\u000a * http://www.w3.org/TR/css3-transitions/#transition-events-\u000a * http://dev.w3.org/csswg/css3-transitions/#transition-events-\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString type, optional TransitionEventInit eventInitDict)]\u000ainterface TransitionEvent : Event {\u000a  readonly attribute DOMString propertyName;\u000a  readonly attribute float     elapsedTime;\u000a  readonly attribute DOMString pseudoElement;\u000a};\u000a\u000adictionary TransitionEventInit : EventInit {\u000a  DOMString propertyName = \"\";\u000a  float elapsedTime = 0;\u000a  DOMString pseudoElement = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeBoxObject.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeBoxObject.webidl"},contents:"\u000a/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface MozTreeView;\u000ainterface nsIScriptableRegion;\u000a\u000adictionary TreeCellInfo {\u000a    long row = 0;\u000a    TreeColumn? col = null;\u000a    DOMString childElt = \"\";\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface TreeBoxObject : BoxObject {\u000a\u000a  /**\u000a   * Obtain the columns.\u000a   */\u000a  readonly attribute TreeColumns? columns;\u000a\u000a  /**\u000a   * The view that backs the tree and that supplies it with its data.\u000a   * It is dynamically settable, either using a view attribute on the\u000a   * tree tag or by setting this attribute to a new value.\u000a   */\u000a  [SetterThrows, NeedsCallerType]\u000a  attribute MozTreeView? view;\u000a\u000a  /**\u000a   * Whether or not we are currently focused.\u000a   */\u000a  attribute boolean focused;\u000a\u000a  /**\u000a   * Obtain the treebody content node\u000a   */\u000a  readonly attribute Element? treeBody;\u000a\u000a  /**\u000a   * Obtain the height of a row.\u000a   */\u000a  readonly attribute long rowHeight;\u000a\u000a  /**\u000a   * Obtain the width of a row.\u000a   */\u000a  readonly attribute long rowWidth;\u000a\u000a  /**\u000a   * Get the pixel position of the horizontal scrollbar.\u000a   */\u000a  readonly attribute long horizontalPosition;\u000a\u000a  /**\u000a   * Return the region for the visible parts of the selection, in device pixels\u000a   */\u000a  readonly attribute nsIScriptableRegion selectionRegion;\u000a\u000a  /**\u000a   * Get the index of the first visible row.\u000a   */\u000a  long getFirstVisibleRow();\u000a\u000a  /**\u000a   * Get the index of the last visible row.\u000a   */\u000a  long getLastVisibleRow();\u000a\u000a  /**\u000a   * Gets the number of possible visible rows.\u000a   */\u000a  long getPageLength();\u000a\u000a  /**\u000a   * Ensures that a row at a given index is visible.\u000a   */\u000a  void ensureRowIsVisible(long index);\u000a\u000a  /**\u000a   * Ensures that a given cell in the tree is visible.\u000a   */\u000a  void ensureCellIsVisible(long row, TreeColumn? col);\u000a\u000a  /**\u000a   * Scrolls such that the row at index is at the top of the visible view.\u000a   */\u000a  void scrollToRow(long index);\u000a\u000a  /**\u000a   * Scroll the tree up or down by numLines lines. Positive\u000a   * values move down in the tree. Prevents scrolling off the\u000a   * end of the tree.\u000a   */\u000a  void scrollByLines(long numLines);\u000a\u000a  /**\u000a   * Scroll the tree up or down by numPages pages. A page\u000a   * is considered to be the amount displayed by the tree.\u000a   * Positive values move down in the tree. Prevents scrolling\u000a   * off the end of the tree.\u000a   */\u000a  void scrollByPages(long numPages);\u000a\u000a  /**\u000a   * Scrolls such that a given cell is visible (if possible)\u000a   * at the top left corner of the visible view.\u000a   */\u000a  void scrollToCell(long row, TreeColumn? col);\u000a\u000a  /**\u000a   * Scrolls horizontally so that the specified column is\u000a   * at the left of the view (if possible).\u000a   */\u000a  void scrollToColumn(TreeColumn? col);\u000a\u000a  /**\u000a   * Scroll to a specific horizontal pixel position.\u000a   */\u000a  void scrollToHorizontalPosition(long horizontalPosition);\u000a\u000a  /**\u000a   * Invalidation methods for fine-grained painting control.\u000a   */\u000a  void invalidate();\u000a  void invalidateColumn(TreeColumn? col);\u000a  void invalidateRow(long index);\u000a  void invalidateCell(long row, TreeColumn? col);\u000a  void invalidateRange(long startIndex, long endIndex);\u000a  void invalidateColumnRange(long startIndex, long endIndex, TreeColumn? col);\u000a\u000a  /**\u000a   * A hit test that can tell you what row the mouse is over.\u000a   * returns -1 for invalid mouse coordinates.\u000a   *\u000a   * The coordinate system is the client coordinate system for the\u000a   * document this boxObject lives in, and the units are CSS pixels.\u000a   */\u000a  long getRowAt(long x, long y);\u000a\u000a  /**\u000a   * A hit test that can tell you what cell the mouse is over.\u000a   * TreeCellInfo.row is the row index hit,  returns -1 for invalid mouse\u000a   * coordinates.  TreeCellInfo.col is the column hit.\u000a   * TreeCellInfo.childElt is the pseudoelement hit: this can have values of\u000a   * \"cell\", \"twisty\", \"image\", and \"text\".\u000a   *\u000a   * The coordinate system is the client coordinate system for the\u000a   * document this boxObject lives in, and the units are CSS pixels.\u000a   */\u000a  [Throws]\u000a  TreeCellInfo getCellAt(long x, long y);\u000a\u000a  /**\u000a   * DEPRECATED: please use above version\u000a   */\u000a  [Throws]\u000a  void getCellAt(long x, long y, object row, object column, object childElt);\u000a\u000a  /**\u000a   * Find the coordinates of an element within a specific cell.\u000a   */\u000a  [Throws]\u000a  DOMRect? getCoordsForCellItem(long row, TreeColumn col, DOMString element);\u000a\u000a  /**\u000a   * DEPRECATED: Please use above version\u000a   */\u000a  [Throws]\u000a  void getCoordsForCellItem(long row, TreeColumn col, DOMString element,\u000a                            object x, object y, object width, object height);\u000a\u000a  /**\u000a   * Determine if the text of a cell is being cropped or not.\u000a   */\u000a  [Throws]\u000a  boolean isCellCropped(long row, TreeColumn? col);\u000a\u000a  /**\u000a   * The view is responsible for calling these notification methods when\u000a   * rows are added or removed.  Index is the position at which the new\u000a   * rows were added or at which rows were removed.  For\u000a   * non-contiguous additions/removals, this method should be called multiple times.\u000a   */\u000a  void rowCountChanged(long index, long count);\u000a\u000a  /**\u000a   * Notify the tree that the view is about to perform a batch\u000a   * update, that is, add, remove or invalidate several rows at once.\u000a   * This must be followed by calling endUpdateBatch(), otherwise the tree\u000a   * will get out of sync.\u000a   */\u000a  void beginUpdateBatch();\u000a\u000a  /**\u000a   * Notify the tree that the view has completed a batch update.\u000a   */\u000a  void endUpdateBatch();\u000a\u000a  /**\u000a   * Called on a theme switch to flush out the tree's style and image caches.\u000a   */\u000a  void clearStyleAndImageCaches();\u000a\u000a  /**\u000a   * Remove an image source from the image cache to allow its invalidation.\u000a   */\u000a  [Throws]\u000a  void removeImageCacheEntry(long row, TreeColumn col);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeColumn.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeColumn.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Func=\"IsChromeOrXBL\"]\u000ainterface TreeColumn {\u000a  [Throws]\u000a  readonly attribute Element? element;\u000a\u000a  readonly attribute TreeColumns? columns;\u000a\u000a  [Throws]\u000a  readonly attribute long x;\u000a  [Throws]\u000a  readonly attribute long width;\u000a\u000a  readonly attribute DOMString id;\u000a  readonly attribute long index;\u000a\u000a  readonly attribute boolean primary;\u000a  readonly attribute boolean cycler;\u000a  readonly attribute boolean editable;\u000a  readonly attribute boolean selectable;\u000a\u000a  const short TYPE_TEXT                = 1;\u000a  const short TYPE_CHECKBOX            = 2;\u000a  const short TYPE_PROGRESSMETER       = 3;\u000a  const short TYPE_PASSWORD            = 4;\u000a  readonly attribute short type;\u000a\u000a  TreeColumn? getNext();\u000a  TreeColumn? getPrevious();\u000a\u000a  [Throws]\u000a  void invalidate();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeColumns.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeColumns.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Func=\"IsChromeOrXBL\"]\u000ainterface TreeColumns {\u000a  /**\u000a   * The tree widget for these columns.\u000a   */\u000a  readonly attribute TreeBoxObject? tree;\u000a\u000a  /**\u000a   * The number of columns.\u000a   */\u000a  readonly attribute unsigned long count;\u000a\u000a  /**\u000a   * An alias for count (for the benefit of scripts which treat this as an\u000a   * array).\u000a   */\u000a  readonly attribute unsigned long length;\u000a\u000a  /**\u000a   * Get the first/last column.\u000a   */\u000a  TreeColumn? getFirstColumn();\u000a  TreeColumn? getLastColumn();\u000a\u000a  /**\u000a   * Attribute based column getters.\u000a   */\u000a  TreeColumn? getPrimaryColumn();\u000a  TreeColumn? getSortedColumn();\u000a  TreeColumn? getKeyColumn();\u000a\u000a  /**\u000a   * Get the column for the given element.\u000a   */\u000a  TreeColumn? getColumnFor(Element? element);\u000a\u000a  /**\u000a   * Parametric column getters.\u000a   */\u000a  getter TreeColumn? getNamedColumn(DOMString name);\u000a  getter TreeColumn? getColumnAt(unsigned long index);\u000a\u000a  /**\u000a   * This method is called whenever a treecol is added or removed and\u000a   * the column cache needs to be rebuilt.\u000a   */\u000a  void invalidateColumns();\u000a\u000a  void restoreNaturalOrder();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeContentView.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeContentView.webidl"},contents:"/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Func=\"IsChromeOrXBL\"]\u000ainterface TreeContentView\u000a{\u000a  /**\u000a   * Retrieve the content item associated with the specified row.\u000a   */\u000a  [Throws]\u000a  Element? getItemAtIndex(long row);\u000a\u000a  /**\u000a   * Retrieve the index associated with the specified content item.\u000a   */\u000a  long getIndexOfItem(Element? item);\u000a};\u000aTreeContentView implements TreeView;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeView.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeView.webidl"},contents:"/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000ainterface nsITreeSelection;\u000a\u000a[NoInterfaceObject]\u000ainterface TreeView\u000a{\u000a  /**\u000a   * The total number of rows in the tree (including the offscreen rows).\u000a   */\u000a  readonly attribute long rowCount;\u000a\u000a  /**\u000a   * The selection for this view.\u000a   */\u000a  [SetterThrows]\u000a  attribute nsITreeSelection? selection;\u000a\u000a  /** \u000a   * A whitespace delimited list of properties.  For each property X the view\u000a   * gives back will cause the pseudoclasses  ::-moz-tree-cell(x),\u000a   * ::-moz-tree-row(x), ::-moz-tree-twisty(x), ::-moz-tree-image(x),\u000a   * ::-moz-tree-cell-text(x).  to be matched on the pseudoelement\u000a   * ::moz-tree-row.\u000a   */\u000a  [Throws]\u000a  DOMString getRowProperties(long row);\u000a\u000a  /**\u000a   * A whitespace delimited list of properties for a given cell.  Each\u000a   * property, x, that the view gives back will cause the pseudoclasses\u000a   *  ::-moz-tree-cell(x), ::-moz-tree-row(x), ::-moz-tree-twisty(x),\u000a   *  ::-moz-tree-image(x), ::-moz-tree-cell-text(x). to be matched on the\u000a   *  cell.\u000a   */\u000a  [Throws]\u000a  DOMString getCellProperties(long row, TreeColumn column);\u000a  \u000a  /**\u000a   * Called to get properties to paint a column background.  For shading the sort\u000a   * column, etc.\u000a   */\u000a  DOMString getColumnProperties(TreeColumn column);\u000a\u000a  /**\u000a   * Methods that can be used to test whether or not a twisty should be drawn,\u000a   * and if so, whether an open or closed twisty should be used.\u000a   */\u000a  [Throws]\u000a  boolean isContainer(long row);\u000a  [Throws]\u000a  boolean isContainerOpen(long row);\u000a  [Throws]\u000a  boolean isContainerEmpty(long row);\u000a \u000a  /**\u000a   * isSeparator is used to determine if the row is a separator.\u000a   * A value of true will result in the tree drawing a horizontal separator.\u000a   * The tree uses the ::moz-tree-separator pseudoclass to draw the separator.\u000a   */\u000a  [Throws]\u000a  boolean isSeparator(long row);\u000a\u000a  /**\u000a   * Specifies if there is currently a sort on any column. Used mostly by dragdrop\u000a   * to affect drop feedback.\u000a   */\u000a  boolean isSorted();\u000a  \u000a  const short DROP_BEFORE = -1;\u000a  const short DROP_ON = 0;\u000a  const short DROP_AFTER = 1;\u000a  /**\u000a   * Methods used by the drag feedback code to determine if a drag is allowable at\u000a   * the current location. To get the behavior where drops are only allowed on\u000a   * items, such as the mailNews folder pane, always return false when\u000a   * the orientation is not DROP_ON.\u000a   */\u000a  [Throws]\u000a  boolean canDrop(long row, long orientation, DataTransfer? dataTransfer);\u000a\u000a  /**\u000a   * Called when the user drops something on this view. The |orientation| param\u000a   * specifies before/on/after the given |row|.\u000a   */\u000a  [Throws]\u000a  void drop(long row, long orientation, DataTransfer? dataTransfer);\u000a\u000a  /**\u000a   * Methods used by the tree to draw thread lines in the tree.\u000a   * getParentIndex is used to obtain the index of a parent row.\u000a   * If there is no parent row, getParentIndex returns -1.\u000a   */\u000a  [Throws]\u000a  long getParentIndex(long row);\u000a\u000a  /**\u000a   * hasNextSibling is used to determine if the row at rowIndex has a nextSibling\u000a   * that occurs *after* the index specified by afterIndex.  Code that is forced\u000a   * to march down the view looking at levels can optimize the march by starting\u000a   * at afterIndex+1.\u000a   */\u000a  [Throws]\u000a  boolean hasNextSibling(long row, long afterIndex);\u000a\u000a  /**\u000a   * The level is an integer value that represents\u000a   * the level of indentation.  It is multiplied by the width specified in the \u000a   * :moz-tree-indentation pseudoelement to compute the exact indendation.\u000a   */\u000a  [Throws]\u000a  long getLevel(long row);\u000a\u000a  /**\u000a   * The image path for a given cell. For defining an icon for a cell.\u000a   * If the empty string is returned, the :moz-tree-image pseudoelement\u000a   * will be used.\u000a   */\u000a  [Throws]\u000a  DOMString getImageSrc(long row, TreeColumn column);\u000a\u000a  /**\u000a   * The value for a given cell. This method is only called for columns\u000a   * of type other than |text|.\u000a   */\u000a  [Throws]\u000a  DOMString getCellValue(long row, TreeColumn column);\u000a\u000a  /**\u000a   * The text for a given cell.  If a column consists only of an image, then\u000a   * the empty string is returned.  \u000a   */\u000a  [Throws]\u000a  DOMString getCellText(long row, TreeColumn column);\u000a\u000a  /**\u000a   * Called during initialization to link the view to the front end box object.\u000a   */\u000a  [Throws]\u000a  void setTree(TreeBoxObject? tree);\u000a  \u000a  /**\u000a   * Called on the view when an item is opened or closed.\u000a   */\u000a  [Throws]\u000a  void toggleOpenState(long row);\u000a\u000a  /**\u000a   * Called on the view when a header is clicked.\u000a   */\u000a  [Throws]\u000a  void cycleHeader(TreeColumn column);\u000a\u000a  /**\u000a   * Should be called from a XUL onselect handler whenever the selection changes.\u000a   */\u000a  void selectionChanged();\u000a\u000a  /**\u000a   * Called on the view when a cell in a non-selectable cycling column (e.g., unread/flag/etc.) is clicked.\u000a   */\u000a  void cycleCell(long row, TreeColumn column);\u000a  \u000a  /**\u000a   * isEditable is called to ask the view if the cell contents are editable.\u000a   * A value of true will result in the tree popping up a text field when \u000a   * the user tries to inline edit the cell.\u000a   */\u000a  [Throws]\u000a  boolean isEditable(long row, TreeColumn column);\u000a\u000a  /**\u000a   * isSelectable is called to ask the view if the cell is selectable.\u000a   * This method is only called if the selection style is |cell| or |text|.\u000a   * XXXvarga shouldn't this be called isCellSelectable?\u000a   */\u000a  [Throws]\u000a  boolean isSelectable(long row, TreeColumn column);\u000a\u000a  /**\u000a   * setCellValue is called when the value of the cell has been set by the user.\u000a   * This method is only called for columns of type other than |text|.\u000a   */\u000a  [Throws]\u000a  void setCellValue(long row, TreeColumn column, DOMString value);\u000a\u000a  /**\u000a   * setCellText is called when the contents of the cell have been edited by the user.\u000a   */   \u000a  [Throws]\u000a  void setCellText(long row, TreeColumn column, DOMString value);\u000a\u000a  /**\u000a   * A command API that can be used to invoke commands on the selection.  The tree\u000a   * will automatically invoke this method when certain keys are pressed.  For example,\u000a   * when the DEL key is pressed, performAction will be called with the \"delete\" string.\u000a   */\u000a  void performAction(DOMString action);\u000a\u000a  /**\u000a   * A command API that can be used to invoke commands on a specific row.\u000a   */\u000a  void performActionOnRow(DOMString action, long row);\u000a\u000a  /**\u000a   * A command API that can be used to invoke commands on a specific cell.\u000a   */\u000a  void performActionOnCell(DOMString action, long row, TreeColumn column);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeWalker.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/TreeWalker.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/2012/WD-dom-20120105/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface TreeWalker {\u000a  [Constant]\u000a  readonly attribute Node root;\u000a  [Constant]\u000a  readonly attribute unsigned long whatToShow;\u000a  [Constant]\u000a  readonly attribute NodeFilter? filter;\u000a  [Pure, SetterThrows]\u000a           attribute Node currentNode;\u000a\u000a  [Throws]\u000a  Node? parentNode();\u000a  [Throws]\u000a  Node? firstChild();\u000a  [Throws]\u000a  Node? lastChild();\u000a  [Throws]\u000a  Node? previousSibling();\u000a  [Throws]\u000a  Node? nextSibling();\u000a  [Throws]\u000a  Node? previousNode();\u000a  [Throws]\u000a  Node? nextNode();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/U2F.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/U2F.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is a combination of the FIDO U2F Raw Message Formats:\u000a * https://www.fidoalliance.org/specs/fido-u2f-v1.1-id-20160915/fido-u2f-raw-message-formats-v1.1-id-20160915.html\u000a * and the U2F JavaScript API v1.1:\u000a * https://www.fidoalliance.org/specs/fido-u2f-v1.1-id-20160915/fido-u2f-javascript-api-v1.1-id-20160915.html\u000a */\u000a\u000a[NoInterfaceObject]\u000ainterface GlobalU2F {\u000a  [SecureContext, Throws, Pref=\"security.webauth.u2f\"]\u000a  readonly attribute U2F u2f;\u000a};\u000a\u000atypedef unsigned short ErrorCode;\u000atypedef sequence<Transport> Transports;\u000a\u000aenum Transport {\u000a    \"bt\",\u000a    \"ble\",\u000a    \"nfc\",\u000a    \"usb\"\u000a};\u000a\u000adictionary U2FClientData {\u000a    DOMString             typ; // Spelling is from the specification\u000a    DOMString             challenge;\u000a    DOMString             origin;\u000a    // cid_pubkey for Token Binding is not implemented\u000a};\u000a\u000adictionary RegisterRequest {\u000a    DOMString version;\u000a    DOMString challenge;\u000a};\u000a\u000adictionary RegisterResponse {\u000a    DOMString version;\u000a    DOMString registrationData;\u000a    DOMString clientData;\u000a\u000a    // From Error\u000a    ErrorCode? errorCode;\u000a    DOMString? errorMessage;\u000a};\u000a\u000adictionary RegisteredKey {\u000a    DOMString   version;\u000a    DOMString   keyHandle;\u000a    Transports? transports;\u000a    DOMString?  appId;\u000a};\u000a\u000adictionary SignResponse {\u000a    DOMString keyHandle;\u000a    DOMString signatureData;\u000a    DOMString clientData;\u000a\u000a    // From Error\u000a    ErrorCode? errorCode;\u000a    DOMString? errorMessage;\u000a};\u000a\u000acallback U2FRegisterCallback = void(RegisterResponse response);\u000acallback U2FSignCallback = void(SignResponse response);\u000a\u000a[SecureContext, Pref=\"security.webauth.u2f\"]\u000ainterface U2F {\u000a  // These enumerations are defined in the FIDO U2F Javascript API under the\u000a  // interface \"ErrorCode\" as constant integers, and also in the U2F.cpp file.\u000a  // Any changes to these must occur in both locations.\u000a  const unsigned short OK = 0;\u000a  const unsigned short OTHER_ERROR = 1;\u000a  const unsigned short BAD_REQUEST = 2;\u000a  const unsigned short CONFIGURATION_UNSUPPORTED = 3;\u000a  const unsigned short DEVICE_INELIGIBLE = 4;\u000a  const unsigned short TIMEOUT = 5;\u000a\u000a  [Throws]\u000a  void register (DOMString appId,\u000a                 sequence<RegisterRequest> registerRequests,\u000a                 sequence<RegisteredKey> registeredKeys,\u000a                 U2FRegisterCallback callback,\u000a                 optional long? opt_timeoutSeconds);\u000a\u000a  [Throws]\u000a  void sign (DOMString appId,\u000a             DOMString challenge,\u000a             sequence<RegisteredKey> registeredKeys,\u000a             U2FSignCallback callback,\u000a             optional long? opt_timeoutSeconds);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/UDPMessageEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/UDPMessageEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/TR/raw-sockets/#interface-udpmessageevent\u000a */\u000a\u000a//Bug 1056444: This interface should be removed after UDPSocket.input/UDPSocket.output are ready.\u000a[Constructor(DOMString type, optional UDPMessageEventInit eventInitDict),\u000a Pref=\"dom.udpsocket.enabled\",\u000a ChromeOnly]\u000ainterface UDPMessageEvent : Event {\u000a    readonly    attribute DOMString      remoteAddress;\u000a    readonly    attribute unsigned short remotePort;\u000a    readonly    attribute any            data;\u000a};\u000a\u000adictionary UDPMessageEventInit : EventInit {\u000a  DOMString remoteAddress = \"\";\u000a  unsigned short remotePort = 0;\u000a  any data = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/UDPSocket.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/UDPSocket.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.w3.org/2012/sysapps/tcp-udp-sockets/#interface-udpsocket\u000a * http://www.w3.org/2012/sysapps/tcp-udp-sockets/#dictionary-udpoptions\u000a */\u000a\u000adictionary UDPOptions {\u000a    DOMString      localAddress;\u000a    unsigned short localPort;\u000a    DOMString      remoteAddress;\u000a    unsigned short remotePort;\u000a    boolean        addressReuse = true;\u000a    boolean        loopback = false;\u000a};\u000a\u000a[Constructor (optional UDPOptions options),\u000a Pref=\"dom.udpsocket.enabled\",\u000a ChromeOnly]\u000ainterface UDPSocket : EventTarget {\u000a    readonly    attribute DOMString?       localAddress;\u000a    readonly    attribute unsigned short?  localPort;\u000a    readonly    attribute DOMString?       remoteAddress;\u000a    readonly    attribute unsigned short?  remotePort;\u000a    readonly    attribute boolean          addressReuse;\u000a    readonly    attribute boolean          loopback;\u000a    readonly    attribute SocketReadyState readyState;\u000a    readonly    attribute Promise<void>    opened;\u000a    readonly    attribute Promise<void>    closed;\u000a//    readonly    attribute ReadableStream   input; //Bug 1056444: Stream API is not ready\u000a//    readonly    attribute WriteableStream  output; //Bug 1056444: Stream API is not ready\u000a                attribute EventHandler     onmessage; //Bug 1056444: use event interface before Stream API is ready\u000a    Promise<void> close ();\u000a    [Throws] void    joinMulticastGroup (DOMString multicastGroupAddress);\u000a    [Throws] void    leaveMulticastGroup (DOMString multicastGroupAddress);\u000a    [Throws] boolean send ((DOMString or Blob or ArrayBuffer or ArrayBufferView) data, optional DOMString? remoteAddress, optional unsigned short? remotePort); //Bug 1056444: use send method before Stream API is ready\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/UIEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/UIEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface please see\u000a * http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString type, optional UIEventInit eventInitDict)]\u000ainterface UIEvent : Event\u000a{\u000a  readonly attribute WindowProxy? view;\u000a  readonly attribute long         detail;\u000a  void initUIEvent(DOMString aType,\u000a                   optional boolean aCanBubble = false,\u000a                   optional boolean aCancelable = false,\u000a                   optional Window? aView = null,\u000a                   optional long aDetail = 0);\u000a};\u000a\u000a// Additional DOM0 properties.\u000apartial interface UIEvent {\u000a  const long SCROLL_PAGE_UP = -32768;\u000a  const long SCROLL_PAGE_DOWN = 32768;\u000a\u000a  readonly attribute long          layerX;\u000a  readonly attribute long          layerY;\u000a  readonly attribute long          pageX;\u000a  readonly attribute long          pageY;\u000a  [NeedsCallerType]\u000a  readonly attribute unsigned long which;\u000a  readonly attribute Node?         rangeParent;\u000a  readonly attribute long          rangeOffset;\u000a};\u000a\u000adictionary UIEventInit : EventInit\u000a{\u000a  Window? view = null;\u000a  long    detail = 0;\u000a};\u000a\u000a// NOTE: Gecko doesn't support commented out modifiers yet.\u000adictionary EventModifierInit : UIEventInit\u000a{\u000a  boolean ctrlKey = false;\u000a  boolean shiftKey = false;\u000a  boolean altKey = false;\u000a  boolean metaKey = false;\u000a  boolean modifierAltGraph = false;\u000a  boolean modifierCapsLock = false;\u000a  boolean modifierFn = false;\u000a  boolean modifierFnLock = false;\u000a  // boolean modifierHyper = false;\u000a  boolean modifierNumLock = false;\u000a  boolean modifierOS = false;\u000a  boolean modifierScrollLock = false;\u000a  // boolean modifierSuper = false;\u000a  boolean modifierSymbol = false;\u000a  boolean modifierSymbolLock = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/URL.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/URL.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origins of this IDL file are\u000a * http://url.spec.whatwg.org/#api\u000a * http://dev.w3.org/2006/webapi/FileAPI/#creating-revoking\u000a * http://dev.w3.org/2011/webrtc/editor/getusermedia.html#url\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(USVString url, optional USVString base),\u000a Exposed=(Window,Worker,WorkerDebugger)]\u000ainterface URL {\u000a  // Bug 824857: no support for stringifier attributes yet.\u000a  //  stringifier attribute USVString href;\u000a\u000a  // Bug 824857 should remove this.\u000a  [Throws]\u000a  stringifier;\u000a\u000a  [Throws]\u000a  attribute USVString href;\u000a  [Throws]\u000a  readonly attribute USVString origin;\u000a  [Throws]\u000a           attribute USVString protocol;\u000a  [Throws]\u000a           attribute USVString username;\u000a  [Throws]\u000a           attribute USVString password;\u000a  [Throws]\u000a           attribute USVString host;\u000a  [Throws]\u000a           attribute USVString hostname;\u000a  [Throws]\u000a           attribute USVString port;\u000a  [Throws]\u000a           attribute USVString pathname;\u000a  [Throws]\u000a           attribute USVString search;\u000a  [SameObject] readonly attribute URLSearchParams searchParams;\u000a  [Throws]\u000a           attribute USVString hash;\u000a\u000a  [Throws]\u000a  USVString toJSON();\u000a};\u000a\u000apartial interface URL {\u000a  [Throws]\u000a  static DOMString createObjectURL(Blob blob);\u000a  [Throws]\u000a  static DOMString createObjectURL(MediaStream stream);\u000a  [Throws]\u000a  static void revokeObjectURL(DOMString url);\u000a  [ChromeOnly, Throws]\u000a  static boolean isValidURL(DOMString url);\u000a};\u000a\u000a// https://dvcs.w3.org/hg/html-media/raw-file/default/media-source/media-source.html\u000apartial interface URL {\u000a  [Throws]\u000a  static DOMString? createObjectURL(MediaSource source);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/URLSearchParams.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/URLSearchParams.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://url.spec.whatwg.org/#urlsearchparams\u000a *\u000a * To the extent possible under law, the editors have waived all copyright\u000a * and related or neighboring rights to this work. In addition, as of 17\u000a * February 2013, the editors have made this specification available under\u000a * the Open Web Foundation Agreement Version 1.0, which is available at\u000a * http://www.openwebfoundation.org/legal/the-owf-1-0-agreements/owfa-1-0.\u000a */\u000a\u000a[Constructor(optional (sequence<sequence<USVString>> or record<USVString, USVString> or USVString) init = \"\"),\u000a Exposed=(Window,Worker,WorkerDebugger,System)]\u000ainterface URLSearchParams {\u000a  void append(USVString name, USVString value);\u000a  void delete(USVString name);\u000a  USVString? get(USVString name);\u000a  sequence<USVString> getAll(USVString name);\u000a  boolean has(USVString name);\u000a  void set(USVString name, USVString value);\u000a\u000a  [Throws]\u000a  void sort();\u000a\u000a  iterable<USVString, USVString>;\u000a  stringifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/UserProximityEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/UserProximityEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor(DOMString type, optional UserProximityEventInit eventInitDict)]\u000ainterface UserProximityEvent : Event\u000a{\u000a  readonly attribute boolean near;\u000a};\u000a\u000adictionary UserProximityEventInit : EventInit\u000a{\u000a  boolean near = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VRDisplay.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VRDisplay.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000aenum VREye {\u000a  \"left\",\u000a  \"right\"\u000a};\u000a\u000a[Pref=\"dom.vr.enabled\",\u000a HeaderFile=\"mozilla/dom/VRDisplay.h\"]\u000ainterface VRFieldOfView {\u000a  readonly attribute double upDegrees;\u000a  readonly attribute double rightDegrees;\u000a  readonly attribute double downDegrees;\u000a  readonly attribute double leftDegrees;\u000a};\u000a\u000atypedef (HTMLCanvasElement or OffscreenCanvas) VRSource;\u000a\u000adictionary VRLayer {\u000a  /**\u000a   * XXX - When WebVR in WebWorkers is implemented, HTMLCanvasElement below\u000a   *       should be replaced with VRSource.\u000a   */\u000a  HTMLCanvasElement? source = null;\u000a\u000a  /**\u000a   * The left and right viewports contain 4 values defining the viewport\u000a   * rectangles within the canvas to present to the eye in UV space.\u000a   * [0] left offset of the viewport (0.0 - 1.0)\u000a   * [1] top offset of the viewport (0.0 - 1.0)\u000a   * [2] width of the viewport (0.0 - 1.0)\u000a   * [3] height of the viewport (0.0 - 1.0)\u000a   *\u000a   * When no values are passed, they will be processed as though the left\u000a   * and right sides of the viewport were passed:\u000a   *\u000a   * leftBounds: [0.0, 0.0, 0.5, 1.0]\u000a   * rightBounds: [0.5, 0.0, 0.5, 1.0]\u000a   */\u000a  sequence<float> leftBounds = [];\u000a  sequence<float> rightBounds = [];\u000a};\u000a\u000a/**\u000a * Values describing the capabilities of a VRDisplay.\u000a * These are expected to be static per-device/per-user.\u000a */\u000a[Pref=\"dom.vr.enabled\",\u000a HeaderFile=\"mozilla/dom/VRDisplay.h\"]\u000ainterface VRDisplayCapabilities {\u000a  /**\u000a   * hasPosition is true if the VRDisplay is capable of tracking its position.\u000a   */\u000a  readonly attribute boolean hasPosition;\u000a\u000a  /**\u000a   * hasOrientation is true if the VRDisplay is capable of tracking its orientation.\u000a   */\u000a  readonly attribute boolean hasOrientation;\u000a\u000a  /**\u000a   * Whether the VRDisplay is separate from the device’s\u000a   * primary display. If presenting VR content will obscure\u000a   * other content on the device, this should be false. When\u000a   * false, the application should not attempt to mirror VR content\u000a   * or update non-VR UI because that content will not be visible.\u000a   */\u000a  readonly attribute boolean hasExternalDisplay;\u000a\u000a  /**\u000a   * Whether the VRDisplay is capable of presenting content to an HMD or similar device.\u000a   * Can be used to indicate “magic window” devices that are capable of 6DoF tracking but for\u000a   * which requestPresent is not meaningful. If false then calls to requestPresent should\u000a   * always fail, and getEyeParameters should return null.\u000a   */\u000a  readonly attribute boolean canPresent;\u000a\u000a  /**\u000a   * Indicates the maximum length of the array that requestPresent() will accept. MUST be 1 if\u000a     canPresent is true, 0 otherwise.\u000a   */\u000a  readonly attribute unsigned long maxLayers;\u000a};\u000a\u000a/**\u000a * Values describing the the stage / play area for devices\u000a * that support room-scale experiences.\u000a */\u000a[Pref=\"dom.vr.enabled\",\u000a HeaderFile=\"mozilla/dom/VRDisplay.h\"]\u000ainterface VRStageParameters {\u000a  /**\u000a   * A 16-element array containing the components of a column-major 4x4\u000a   * affine transform matrix. This matrix transforms the sitting-space position\u000a   * returned by get{Immediate}Pose() to a standing-space position.\u000a   */\u000a  [Throws] readonly attribute Float32Array sittingToStandingTransform;\u000a\u000a  /**\u000a   * Dimensions of the play-area bounds. The bounds are defined\u000a   * as an axis-aligned rectangle on the floor.\u000a   * The center of the rectangle is at (0,0,0) in standing-space\u000a   * coordinates.\u000a   * These bounds are defined for safety purposes.\u000a   * Content should not require the user to move beyond these\u000a   * bounds; however, it is possible for the user to ignore\u000a   * the bounds resulting in position values outside of\u000a   * this rectangle.\u000a   */\u000a  readonly attribute float sizeX;\u000a  readonly attribute float sizeZ;\u000a};\u000a\u000a[Pref=\"dom.vr.enabled\",\u000a HeaderFile=\"mozilla/dom/VRDisplay.h\"]\u000ainterface VRPose\u000a{\u000a  /**\u000a   * position, linearVelocity, and linearAcceleration are 3-component vectors.\u000a   * position is relative to a sitting space. Transforming this point with\u000a   * VRStageParameters.sittingToStandingTransform converts this to standing space.\u000a   */\u000a  [Constant, Throws] readonly attribute Float32Array? position;\u000a  [Constant, Throws] readonly attribute Float32Array? linearVelocity;\u000a  [Constant, Throws] readonly attribute Float32Array? linearAcceleration;\u000a\u000a  /* orientation is a 4-entry array representing the components of a quaternion. */\u000a  [Constant, Throws] readonly attribute Float32Array? orientation;\u000a  /* angularVelocity and angularAcceleration are the components of 3-dimensional vectors. */\u000a  [Constant, Throws] readonly attribute Float32Array? angularVelocity;\u000a  [Constant, Throws] readonly attribute Float32Array? angularAcceleration;\u000a};\u000a\u000a[Constructor,\u000a Pref=\"dom.vr.enabled\",\u000a HeaderFile=\"mozilla/dom/VRDisplay.h\"]\u000ainterface VRFrameData {\u000a  readonly attribute DOMHighResTimeStamp timestamp;\u000a\u000a  [Throws, Pure] readonly attribute Float32Array leftProjectionMatrix;\u000a  [Throws, Pure] readonly attribute Float32Array leftViewMatrix;\u000a\u000a  [Throws, Pure] readonly attribute Float32Array rightProjectionMatrix;\u000a  [Throws, Pure] readonly attribute Float32Array rightViewMatrix;\u000a\u000a  [Pure] readonly attribute VRPose pose;\u000a};\u000a\u000a[Constructor,\u000a Pref=\"dom.vr.test.enabled\",\u000a HeaderFile=\"mozilla/dom/VRDisplay.h\"]\u000ainterface VRSubmitFrameResult {\u000a  readonly attribute unsigned long frameNum;\u000a  readonly attribute DOMString? base64Image;\u000a};\u000a\u000a[Pref=\"dom.vr.enabled\",\u000a HeaderFile=\"mozilla/dom/VRDisplay.h\"]\u000ainterface VREyeParameters {\u000a  /**\u000a   * offset is a 3-component vector representing an offset to\u000a   * translate the eye. This value may vary from frame\u000a   * to frame if the user adjusts their headset ipd.\u000a   */\u000a  [Constant, Throws] readonly attribute Float32Array offset;\u000a\u000a  /* These values may vary as the user adjusts their headset ipd. */\u000a  [Constant] readonly attribute VRFieldOfView fieldOfView;\u000a\u000a  /**\u000a   * renderWidth and renderHeight specify the recommended render target\u000a   * size of each eye viewport, in pixels. If multiple eyes are rendered\u000a   * in a single render target, then the render target should be made large\u000a   * enough to fit both viewports.\u000a   */\u000a  [Constant] readonly attribute unsigned long renderWidth;\u000a  [Constant] readonly attribute unsigned long renderHeight;\u000a};\u000a\u000a[Pref=\"dom.vr.enabled\",\u000a HeaderFile=\"mozilla/dom/VRDisplay.h\"]\u000ainterface VRDisplay : EventTarget {\u000a  /**\u000a   * presentingGroups is a bitmask indicating which VR session groups\u000a   * have an active VR presentation.\u000a   */\u000a  [ChromeOnly] readonly attribute unsigned long presentingGroups;\u000a  /**\u000a   * Setting groupMask causes submitted frames by VR sessions that\u000a   * aren't included in the bitmasked groups to be ignored.\u000a   * Non-chrome content is not aware of the value of groupMask.\u000a   * VRDisplay.RequestAnimationFrame will still fire for VR sessions\u000a   * that are hidden by groupMask, enabling their performance to be\u000a   * measured by chrome UI that is presented in other groups.\u000a   * This is expected to be used in cases where chrome UI is presenting\u000a   * information during link traversal or presenting options when content\u000a   * performance is too low for comfort.\u000a   * The VR refresh / VSync cycle is driven by the visible content\u000a   * and the non-visible content may have a throttled refresh rate.\u000a   */\u000a  [ChromeOnly] attribute unsigned long groupMask;\u000a\u000a  readonly attribute boolean isConnected;\u000a  readonly attribute boolean isPresenting;\u000a\u000a  /**\u000a   * Dictionary of capabilities describing the VRDisplay.\u000a   */\u000a  [Constant] readonly attribute VRDisplayCapabilities capabilities;\u000a\u000a  /**\u000a   * If this VRDisplay supports room-scale experiences, the optional\u000a   * stage attribute contains details on the room-scale parameters.\u000a   */\u000a  readonly attribute VRStageParameters? stageParameters;\u000a\u000a  /* Return the current VREyeParameters for the given eye. */\u000a  VREyeParameters getEyeParameters(VREye whichEye);\u000a\u000a  /**\u000a   * An identifier for this distinct VRDisplay. Used as an\u000a   * association point in the Gamepad API.\u000a   */\u000a  [Constant] readonly attribute unsigned long displayId;\u000a\u000a  /**\u000a   * A display name, a user-readable name identifying it.\u000a   */\u000a  [Constant] readonly attribute DOMString displayName;\u000a\u000a  /**\u000a   * Populates the passed VRFrameData with the information required to render\u000a   * the current frame.\u000a   */\u000a  boolean getFrameData(VRFrameData frameData);\u000a\u000a  /**\u000a   * Return a VRPose containing the future predicted pose of the VRDisplay\u000a   * when the current frame will be presented. Subsequent calls to getPose()\u000a   * MUST return a VRPose with the same values until the next call to\u000a   * submitFrame().\u000a   *\u000a   * The VRPose will contain the position, orientation, velocity,\u000a   * and acceleration of each of these properties.\u000a   */\u000a  [NewObject] VRPose getPose();\u000a\u000a  [Pref=\"dom.vr.test.enabled\"]\u000a  boolean getSubmitFrameResult(VRSubmitFrameResult result);\u000a\u000a  /**\u000a   * Reset the pose for this display, treating its current position and\u000a   * orientation as the \"origin/zero\" values. VRPose.position,\u000a   * VRPose.orientation, and VRStageParameters.sittingToStandingTransform may be\u000a   * updated when calling resetPose(). This should be called in only\u000a   * sitting-space experiences.\u000a   */\u000a  void resetPose();\u000a\u000a  /**\u000a   * z-depth defining the near plane of the eye view frustum\u000a   * enables mapping of values in the render target depth\u000a   * attachment to scene coordinates. Initially set to 0.01.\u000a   */\u000a  attribute double depthNear;\u000a\u000a  /**\u000a   * z-depth defining the far plane of the eye view frustum\u000a   * enables mapping of values in the render target depth\u000a   * attachment to scene coordinates. Initially set to 10000.0.\u000a   */\u000a  attribute double depthFar;\u000a\u000a  /**\u000a   * The callback passed to `requestAnimationFrame` will be called\u000a   * any time a new frame should be rendered. When the VRDisplay is\u000a   * presenting the callback will be called at the native refresh\u000a   * rate of the HMD. When not presenting this function acts\u000a   * identically to how window.requestAnimationFrame acts. Content should\u000a   * make no assumptions of frame rate or vsync behavior as the HMD runs\u000a   * asynchronously from other displays and at differing refresh rates.\u000a   */\u000a  [Throws] long requestAnimationFrame(FrameRequestCallback callback);\u000a\u000a  /**\u000a   * Passing the value returned by `requestAnimationFrame` to\u000a   * `cancelAnimationFrame` will unregister the callback.\u000a   */\u000a  [Throws] void cancelAnimationFrame(long handle);\u000a\u000a  /**\u000a   * Begin presenting to the VRDisplay. Must be called in response to a user gesture.\u000a   * Repeat calls while already presenting will update the VRLayers being displayed.\u000a   */\u000a  [Throws, NeedsCallerType] Promise<void> requestPresent(sequence<VRLayer> layers);\u000a\u000a  /**\u000a   * Stops presenting to the VRDisplay.\u000a   */\u000a  [Throws] Promise<void> exitPresent();\u000a\u000a  /**\u000a   * Get the layers currently being presented.\u000a   */\u000a  sequence<VRLayer> getLayers();\u000a\u000a  /**\u000a   * The VRLayer provided to the VRDisplay will be captured and presented\u000a   * in the HMD. Calling this function has the same effect on the source\u000a   * canvas as any other operation that uses its source image, and canvases\u000a   * created without preserveDrawingBuffer set to true will be cleared.\u000a   */\u000a  void submitFrame();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VRDisplayEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VRDisplayEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000aenum VRDisplayEventReason {\u000a  \"mounted\",\u000a  \"navigation\",\u000a  \"requested\",\u000a  \"unmounted\",\u000a};\u000a\u000adictionary VRDisplayEventInit : EventInit {\u000a  required VRDisplay display;\u000a  VRDisplayEventReason reason;\u000a};\u000a\u000a[Pref=\"dom.vr.enabled\",\u000a Constructor(DOMString type, VRDisplayEventInit eventInitDict)]\u000ainterface VRDisplayEvent : Event {\u000a  readonly attribute VRDisplay display;\u000a  readonly attribute VRDisplayEventReason? reason;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VRServiceTest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VRServiceTest.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * This WebIDL is just for WebVR testing.\u000a */\u000a\u000a[Pref=\"dom.vr.test.enabled\",\u000a HeaderFile=\"mozilla/dom/VRServiceTest.h\"]\u000ainterface VRMockDisplay {\u000a  void setEyeResolution(unsigned long aRenderWidth, unsigned long aRenderHeight);\u000a  void setEyeParameter(VREye eye, double offsetX, double offsetY, double offsetZ,\u000a                       double upDegree, double rightDegree,\u000a                       double downDegree, double leftDegree);\u000a  void setPose(Float32Array? position, Float32Array? linearVelocity,\u000a               Float32Array? linearAcceleration, Float32Array? orientation,\u000a               Float32Array? angularVelocity, Float32Array? angularAcceleration);\u000a  void setMountState(boolean isMounted);\u000a  void update();\u000a};\u000a\u000a[Pref=\"dom.vr.test.enabled\",\u000a HeaderFile=\"mozilla/dom/VRServiceTest.h\"]\u000ainterface VRMockController {\u000a  void newButtonEvent(unsigned long button, boolean pressed);\u000a  void newAxisMoveEvent(unsigned long axis, double value);\u000a  void newPoseMove(Float32Array? position, Float32Array? linearVelocity,\u000a                   Float32Array? linearAcceleration, Float32Array? orientation,\u000a                   Float32Array? angularVelocity, Float32Array? angularAcceleration);\u000a};\u000a\u000a[Pref=\"dom.vr.test.enabled\",\u000a HeaderFile=\"mozilla/dom/VRServiceTest.h\"]\u000ainterface VRServiceTest {\u000a  [Throws, NewObject]\u000a  Promise<VRMockDisplay> attachVRDisplay(DOMString id);\u000a  [Throws, NewObject]\u000a  Promise<VRMockController> attachVRController(DOMString id);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VTTCue.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VTTCue.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/html5/webvtt/#the-vttcue-interface\u000a */\u000a\u000aenum AutoKeyword { \"auto\" };\u000a\u000aenum LineAlignSetting {\u000a  \"start\",\u000a  \"center\",\u000a  \"end\"\u000a};\u000a\u000aenum PositionAlignSetting {\u000a  \"line-left\",\u000a  \"center\",\u000a  \"line-right\",\u000a  \"auto\"\u000a};\u000a\u000aenum AlignSetting {\u000a  \"start\",\u000a  \"center\",\u000a  \"end\",\u000a  \"left\",\u000a  \"right\"\u000a};\u000a\u000aenum DirectionSetting {\u000a  \"\",\u000a  \"rl\",\u000a  \"lr\"\u000a};\u000a\u000a[Constructor(double startTime, double endTime, DOMString text)]\u000ainterface VTTCue : TextTrackCue {\u000a  [Pref=\"media.webvtt.regions.enabled\"]\u000a  attribute VTTRegion? region;\u000a  attribute DirectionSetting vertical;\u000a  attribute boolean snapToLines;\u000a  attribute (double or AutoKeyword) line;\u000a  [SetterThrows]\u000a  attribute LineAlignSetting lineAlign;\u000a  [SetterThrows]\u000a  attribute (double or AutoKeyword) position;\u000a  [SetterThrows]\u000a  attribute PositionAlignSetting positionAlign;\u000a  [SetterThrows]\u000a  attribute double size;\u000a  attribute AlignSetting align;\u000a  attribute DOMString text;\u000a  DocumentFragment getCueAsHTML();\u000a};\u000a\u000a// Mozilla extensions.\u000apartial interface VTTCue {\u000a  [ChromeOnly]\u000a  attribute HTMLDivElement? displayState;\u000a  [ChromeOnly]\u000a  readonly attribute boolean hasBeenReset;\u000a  [ChromeOnly]\u000a  readonly attribute double computedLine;\u000a  [ChromeOnly]\u000a  readonly attribute double computedPosition;\u000a  [ChromeOnly]\u000a  readonly attribute PositionAlignSetting computedPositionAlign;\u000a  [ChromeOnly]\u000a  readonly attribute boolean getActive;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VTTRegion.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VTTRegion.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/webvtt/#the-vttregion-interface\u000a */\u000a\u000aenum ScrollSetting {\u000a  \"\",\u000a  \"up\"\u000a};\u000a\u000a[Constructor, Pref=\"media.webvtt.regions.enabled\"]\u000ainterface VTTRegion {\u000a           attribute DOMString id;\u000a           [SetterThrows]\u000a           attribute double width;\u000a           [SetterThrows]\u000a           attribute long lines;\u000a           [SetterThrows]\u000a           attribute double regionAnchorX;\u000a           [SetterThrows]\u000a           attribute double regionAnchorY;\u000a           [SetterThrows]\u000a           attribute double viewportAnchorX;\u000a           [SetterThrows]\u000a           attribute double viewportAnchorY;\u000a\u000a           attribute ScrollSetting scroll;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ValidityState.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/ValidityState.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#validitystate\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000ainterface ValidityState {\u000a  readonly attribute boolean valueMissing;\u000a  readonly attribute boolean typeMismatch;\u000a  readonly attribute boolean patternMismatch;\u000a  readonly attribute boolean tooLong;\u000a  readonly attribute boolean tooShort;\u000a  readonly attribute boolean rangeUnderflow;\u000a  readonly attribute boolean rangeOverflow;\u000a  readonly attribute boolean stepMismatch;\u000a  readonly attribute boolean badInput;\u000a  readonly attribute boolean customError;\u000a  readonly attribute boolean valid;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VideoPlaybackQuality.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VideoPlaybackQuality.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/html-media/raw-file/default/media-source/media-source.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Func=\"mozilla::dom::MediaSource::Enabled\"]\u000ainterface VideoPlaybackQuality {\u000a  readonly attribute DOMHighResTimeStamp creationTime;\u000a  readonly attribute unsigned long totalVideoFrames;\u000a  readonly attribute unsigned long droppedVideoFrames;\u000a  readonly attribute unsigned long corruptedVideoFrames;\u000a// At Risk: readonly attribute double totalFrameDelay;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VideoStreamTrack.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VideoStreamTrack.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dev.w3.org/2011/webrtc/editor/getusermedia.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a// [Constructor(optional MediaTrackConstraints videoConstraints)]\u000ainterface VideoStreamTrack : MediaStreamTrack {\u000a//    static sequence<DOMString> getSourceIds ();\u000a//    void                       takePhoto ();\u000a//                attribute EventHandler onphoto;\u000a//                attribute EventHandler onphotoerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VideoTrack.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VideoTrack.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#videotrack\u000a */\u000a\u000a[Pref=\"media.track.enabled\"]\u000ainterface VideoTrack {\u000a  readonly attribute DOMString id;\u000a  readonly attribute DOMString kind;\u000a  readonly attribute DOMString label;\u000a  readonly attribute DOMString language;\u000a           attribute boolean selected;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VideoTrackList.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/VideoTrackList.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#videotracklist\u000a */\u000a\u000a[Pref=\"media.track.enabled\"]\u000ainterface VideoTrackList : EventTarget {\u000a  readonly attribute unsigned long length;\u000a  getter VideoTrack (unsigned long index);\u000a  VideoTrack? getTrackById(DOMString id);\u000a  readonly attribute long selectedIndex;\u000a\u000a           attribute EventHandler onchange;\u000a           attribute EventHandler onaddtrack;\u000a           attribute EventHandler onremovetrack;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WaveShaperNode.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WaveShaperNode.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://webaudio.github.io/web-audio-api/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000aenum OverSampleType {\u000a  \"none\",\u000a  \"2x\",\u000a  \"4x\"\u000a};\u000a\u000adictionary WaveShaperOptions : AudioNodeOptions {\u000a             sequence<float> curve;\u000a             OverSampleType  oversample = \"none\";\u000a};\u000a\u000a[Pref=\"dom.webaudio.enabled\",\u000a Constructor(BaseAudioContext context, optional WaveShaperOptions options)]\u000ainterface WaveShaperNode : AudioNode {\u000a\u000a      [Cached, Pure, SetterThrows]\u000a      attribute Float32Array? curve;\u000a      attribute OverSampleType oversample;\u000a\u000a};\u000a\u000a// Mozilla extension\u000aWaveShaperNode implements AudioNodePassThrough;\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebAuthentication.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebAuthentication.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://w3c.github.io/webauthn/\u000a */\u000a\u000a/***** Interfaces to Data *****/\u000a\u000a[SecureContext, Pref=\"security.webauth.webauthn\"]\u000ainterface PublicKeyCredential : Credential {\u000a    [SameObject] readonly attribute ArrayBuffer              rawId;\u000a    [SameObject] readonly attribute AuthenticatorResponse    response;\u000a    AuthenticationExtensionsClientOutputs getClientExtensionResults();\u000a};\u000a\u000a[SecureContext]\u000apartial interface PublicKeyCredential {\u000a    static Promise<boolean> isUserVerifyingPlatformAuthenticatorAvailable();\u000a};\u000a\u000a[SecureContext, Pref=\"security.webauth.webauthn\"]\u000ainterface AuthenticatorResponse {\u000a    [SameObject] readonly attribute ArrayBuffer clientDataJSON;\u000a};\u000a\u000a[SecureContext, Pref=\"security.webauth.webauthn\"]\u000ainterface AuthenticatorAttestationResponse : AuthenticatorResponse {\u000a    [SameObject] readonly attribute ArrayBuffer attestationObject;\u000a};\u000a\u000a[SecureContext, Pref=\"security.webauth.webauthn\"]\u000ainterface AuthenticatorAssertionResponse : AuthenticatorResponse {\u000a    [SameObject] readonly attribute ArrayBuffer      authenticatorData;\u000a    [SameObject] readonly attribute ArrayBuffer      signature;\u000a    [SameObject] readonly attribute ArrayBuffer      userHandle;\u000a};\u000a\u000adictionary PublicKeyCredentialParameters {\u000a    required PublicKeyCredentialType  type;\u000a    required COSEAlgorithmIdentifier  alg;\u000a};\u000a\u000adictionary PublicKeyCredentialCreationOptions {\u000a    required PublicKeyCredentialRpEntity   rp;\u000a    required PublicKeyCredentialUserEntity user;\u000a\u000a    required BufferSource                            challenge;\u000a    required sequence<PublicKeyCredentialParameters> pubKeyCredParams;\u000a\u000a    unsigned long                                timeout;\u000a    sequence<PublicKeyCredentialDescriptor>      excludeCredentials = [];\u000a    AuthenticatorSelectionCriteria               authenticatorSelection;\u000a    AttestationConveyancePreference              attestation = \"none\";\u000a    AuthenticationExtensionsClientInputs         extensions;\u000a};\u000a\u000adictionary PublicKeyCredentialEntity {\u000a    required DOMString    name;\u000a    USVString             icon;\u000a};\u000a\u000adictionary PublicKeyCredentialRpEntity : PublicKeyCredentialEntity {\u000a    DOMString      id;\u000a};\u000a\u000adictionary PublicKeyCredentialUserEntity : PublicKeyCredentialEntity {\u000a    required BufferSource   id;\u000a    required DOMString      displayName;\u000a};\u000a\u000adictionary AuthenticatorSelectionCriteria {\u000a    AuthenticatorAttachment      authenticatorAttachment;\u000a    boolean                      requireResidentKey = false;\u000a    UserVerificationRequirement  userVerification = \"preferred\";\u000a};\u000a\u000aenum AuthenticatorAttachment {\u000a    \"platform\",       // Platform attachment\u000a    \"cross-platform\"  // Cross-platform attachment\u000a};\u000a\u000aenum AttestationConveyancePreference {\u000a    \"none\",\u000a    \"indirect\",\u000a    \"direct\"\u000a};\u000a\u000aenum UserVerificationRequirement {\u000a    \"required\",\u000a    \"preferred\",\u000a    \"discouraged\"\u000a};\u000a\u000adictionary PublicKeyCredentialRequestOptions {\u000a    required BufferSource                challenge;\u000a    unsigned long                        timeout;\u000a    USVString                            rpId;\u000a    sequence<PublicKeyCredentialDescriptor> allowCredentials = [];\u000a    UserVerificationRequirement          userVerification = \"preferred\";\u000a    AuthenticationExtensionsClientInputs extensions;\u000a};\u000a\u000a// TODO - Use partial dictionaries when bug 1436329 is fixed.\u000adictionary AuthenticationExtensionsClientInputs {\u000a    // FIDO AppID Extension (appid)\u000a    // <https://w3c.github.io/webauthn/#sctn-appid-extension>\u000a    USVString appid;\u000a};\u000a\u000a// TODO - Use partial dictionaries when bug 1436329 is fixed.\u000adictionary AuthenticationExtensionsClientOutputs {\u000a    // FIDO AppID Extension (appid)\u000a    // <https://w3c.github.io/webauthn/#sctn-appid-extension>\u000a    boolean appid;\u000a};\u000a\u000atypedef record<DOMString, DOMString> AuthenticationExtensionsAuthenticatorInputs;\u000a\u000adictionary CollectedClientData {\u000a    required DOMString           type;\u000a    required DOMString           challenge;\u000a    required DOMString           origin;\u000a    required DOMString           hashAlgorithm;\u000a    DOMString                    tokenBindingId;\u000a    AuthenticationExtensionsClientInputs clientExtensions;\u000a    AuthenticationExtensionsAuthenticatorInputs authenticatorExtensions;\u000a};\u000a\u000aenum PublicKeyCredentialType {\u000a    \"public-key\"\u000a};\u000a\u000adictionary PublicKeyCredentialDescriptor {\u000a    required PublicKeyCredentialType      type;\u000a    required BufferSource                 id;\u000a    sequence<AuthenticatorTransport>      transports;\u000a};\u000a\u000aenum AuthenticatorTransport {\u000a    \"usb\",\u000a    \"nfc\",\u000a    \"ble\"\u000a};\u000a\u000atypedef long COSEAlgorithmIdentifier;\u000a\u000atypedef sequence<AAGUID>      AuthenticatorSelectionList;\u000a\u000atypedef BufferSource      AAGUID;\u000a\u000a/*\u000a// FIDO AppID Extension (appid)\u000a// <https://w3c.github.io/webauthn/#sctn-appid-extension>\u000apartial dictionary AuthenticationExtensionsClientInputs {\u000a    USVString appid;\u000a};\u000a\u000a// FIDO AppID Extension (appid)\u000a// <https://w3c.github.io/webauthn/#sctn-appid-extension>\u000apartial dictionary AuthenticationExtensionsClientOutputs {\u000a  boolean appid;\u000a};\u000a*/\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebComponents.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebComponents.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/custom/index.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000acallback LifecycleConnectedCallback = void();\u000acallback LifecycleDisconnectedCallback = void();\u000acallback LifecycleAdoptedCallback = void(Document? oldDocument,\u000a                                         Document? newDocment);\u000acallback LifecycleAttributeChangedCallback = void(DOMString attrName,\u000a                                                  DOMString? oldValue,\u000a                                                  DOMString? newValue,\u000a                                                  DOMString? namespaceURI);\u000a\u000adictionary LifecycleCallbacks {\u000a  LifecycleConnectedCallback? connectedCallback;\u000a  LifecycleDisconnectedCallback? disconnectedCallback;\u000a  LifecycleAdoptedCallback? adoptedCallback;\u000a  LifecycleAttributeChangedCallback? attributeChangedCallback;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebExtensionContentScript.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebExtensionContentScript.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000ainterface LoadInfo;\u000ainterface URI;\u000ainterface WindowProxy;\u000a\u000a/**\u000a * Describes the earliest point in the load cycle at which a script should\u000a * run.\u000a */\u000aenum ContentScriptRunAt {\u000a  /**\u000a   * The point in the load cycle just after the document element has been\u000a   * inserted, before any page scripts have been allowed to run.\u000a   */\u000a  \"document_start\",\u000a  /**\u000a   * The point after which the page DOM has fully loaded, but before all page\u000a   * resources have necessarily been loaded. Corresponds approximately to the\u000a   * DOMContentLoaded event.\u000a   */\u000a  \"document_end\",\u000a  /**\u000a   * The first point after the page and all of its resources has fully loaded\u000a   * when the event loop is idle, and can run scripts without delaying a paint\u000a   * event.\u000a   */\u000a  \"document_idle\",\u000a};\u000a\u000a[Constructor(WebExtensionPolicy extension, WebExtensionContentScriptInit options), ChromeOnly, Exposed=System]\u000ainterface WebExtensionContentScript {\u000a  /**\u000a   * Returns true if the script's match and exclude patterns match the given\u000a   * URI, without reference to attributes such as `allFrames`.\u000a   */\u000a  boolean matchesURI(URI uri);\u000a\u000a  /**\u000a   * Returns true if the script matches the given URI and LoadInfo objects.\u000a   * This should be used to determine whether to begin pre-loading a content\u000a   * script based on network events.\u000a   */\u000a  boolean matchesLoadInfo(URI uri, LoadInfo loadInfo);\u000a\u000a  /**\u000a   * Returns true if the script matches the given window. This should be used\u000a   * to determine whether to run a script in a window at load time.\u000a   */\u000a  boolean matchesWindow(WindowProxy window);\u000a\u000a  /**\u000a   * The policy object for the extension that this script belongs to.\u000a   */\u000a  [Constant]\u000a  readonly attribute WebExtensionPolicy extension;\u000a\u000a  /**\u000a   * If true, this script runs in all frames. If false, it only runs in\u000a   * top-level frames.\u000a   */\u000a  [Constant]\u000a  readonly attribute boolean allFrames;\u000a\u000a  /**\u000a   * If true, this (misleadingly-named, but inherited from Chrome) attribute\u000a   * causes the script to run in frames with URLs which inherit a principal\u000a   * that matches one of the match patterns, such as about:blank or\u000a   * about:srcdoc. If false, the script only runs in frames with an explicit\u000a   * matching URL.\u000a   */\u000a  [Constant]\u000a  readonly attribute boolean matchAboutBlank;\u000a\u000a  /**\u000a   * The earliest point in the load cycle at which this script should run. For\u000a   * static content scripts, in extensions which were present at browser\u000a   * startup, the browser makes every effort to make sure that the script runs\u000a   * no later than this point in the load cycle. For dynamic content scripts,\u000a   * and scripts from extensions installed during this session, the scripts\u000a   * may run at a later point.\u000a   */\u000a  [Constant]\u000a  readonly attribute ContentScriptRunAt runAt;\u000a\u000a  /**\u000a   * The outer window ID of the frame in which to run the script, or 0 if it\u000a   * should run in the top-level frame. Should only be used for\u000a   * dynamically-injected scripts.\u000a   */\u000a  [Constant]\u000a  readonly attribute unsigned long long? frameID;\u000a\u000a  /**\u000a   * The set of match patterns for URIs of pages in which this script should\u000a   * run. This attribute is mandatory, and is a prerequisite for all other\u000a   * match patterns.\u000a   */\u000a  [Constant]\u000a  readonly attribute MatchPatternSet matches;\u000a\u000a  /**\u000a   * A set of match patterns for URLs in which this script should not run,\u000a   * even if they match other include patterns or globs.\u000a   */\u000a  [Constant]\u000a  readonly attribute MatchPatternSet? excludeMatches;\u000a\u000a  /**\u000a   * A set of glob matchers for URLs in which this script should run. If this\u000a   * list is present, the script will only run in URLs which match the\u000a   * `matches` pattern as well as one of these globs.\u000a   */\u000a  [Cached, Constant, Frozen]\u000a  readonly attribute sequence<MatchGlob>? includeGlobs;\u000a\u000a  /**\u000a   * A set of glob matchers for URLs in which this script should not run, even\u000a   * if they match other include patterns or globs.\u000a   */\u000a  [Cached, Constant, Frozen]\u000a  readonly attribute sequence<MatchGlob>? excludeGlobs;\u000a\u000a  /**\u000a   * A set of paths, relative to the extension root, of CSS sheets to inject\u000a   * into matching pages.\u000a   */\u000a  [Cached, Constant, Frozen]\u000a  readonly attribute sequence<DOMString> cssPaths;\u000a\u000a  /**\u000a   * A set of paths, relative to the extension root, of JavaScript scripts to\u000a   * execute in matching pages.\u000a   */\u000a  [Cached, Constant, Frozen]\u000a  readonly attribute sequence<DOMString> jsPaths;\u000a};\u000a\u000adictionary WebExtensionContentScriptInit {\u000a  boolean allFrames = false;\u000a\u000a  boolean matchAboutBlank = false;\u000a\u000a  ContentScriptRunAt runAt = \"document_idle\";\u000a\u000a  unsigned long long? frameID = null;\u000a\u000a  boolean hasActiveTabPermission = false;\u000a\u000a  required MatchPatternSet matches;\u000a\u000a  MatchPatternSet? excludeMatches = null;\u000a\u000a  sequence<MatchGlob>? includeGlobs = null;\u000a\u000a  sequence<MatchGlob>? excludeGlobs = null;\u000a\u000a  sequence<DOMString> cssPaths = [];\u000a\u000a  sequence<DOMString> jsPaths = [];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebExtensionPolicy.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebExtensionPolicy.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000ainterface URI;\u000ainterface WindowProxy;\u000a\u000acallback WebExtensionLocalizeCallback = DOMString (DOMString unlocalizedText);\u000a\u000a/**\u000a * Defines the platform-level policies for a WebExtension, including its\u000a * permissions and the characteristics of its moz-extension: URLs.\u000a */\u000a[Constructor(WebExtensionInit options), ChromeOnly, Exposed=System]\u000ainterface WebExtensionPolicy {\u000a  /**\u000a   * The add-on's internal ID, as specified in its manifest.json file or its\u000a   * XPI signature.\u000a   */\u000a  [Constant, StoreInSlot]\u000a  readonly attribute DOMString id;\u000a\u000a  /**\u000a   * The hostname part of the extension's moz-extension: URLs. This value is\u000a   * generated randomly at install time.\u000a   */\u000a  [Constant, StoreInSlot]\u000a  readonly attribute ByteString mozExtensionHostname;\u000a\u000a  /**\u000a   * The file: or jar: URL to use for the base of the extension's\u000a   * moz-extension: URL root.\u000a   */\u000a  [Constant]\u000a  readonly attribute ByteString baseURL;\u000a\u000a  /**\u000a   * The extension's user-visible name.\u000a   */\u000a  [Constant]\u000a  readonly attribute DOMString name;\u000a\u000a  /**\u000a   * The content security policy string to apply to all pages loaded from the\u000a   * extension's moz-extension: protocol.\u000a   */\u000a  [Constant]\u000a  readonly attribute DOMString contentSecurityPolicy;\u000a\u000a\u000a  /**\u000a   * The list of currently-active permissions for the extension, as specified\u000a   * in its manifest.json file. May be updated to reflect changes in the\u000a   * extension's optional permissions.\u000a   */\u000a  [Cached, Frozen, Pure]\u000a  attribute sequence<DOMString> permissions;\u000a\u000a  /**\u000a   * Match patterns for the set of web origins to which the extension is\u000a   * currently allowed access. May be updated to reflect changes in the\u000a   * extension's optional permissions.\u000a   */\u000a  [Pure]\u000a  attribute MatchPatternSet allowedOrigins;\u000a\u000a  /**\u000a   * The set of content scripts active for this extension.\u000a   */\u000a  [Cached, Frozen, Pure]\u000a  readonly attribute sequence<WebExtensionContentScript> contentScripts;\u000a\u000a  /**\u000a   * True if the extension is currently active, false otherwise. When active,\u000a   * the extension's moz-extension: protocol will point to the given baseURI,\u000a   * and the set of policies for this object will be active for its ID.\u000a   *\u000a   * Only one extension policy with a given ID or hostname may be active at a\u000a   * time. Attempting to activate a policy while a conflicting policy is\u000a   * active will raise an error.\u000a   */\u000a  [Affects=Everything, SetterThrows]\u000a  attribute boolean active;\u000a\u000a  /**\u000a   * True if both e10s and webextensions.remote are enabled.  This must be\u000a   * used instead of checking the remote pref directly since remote extensions\u000a   * require both to be enabled.\u000a   */\u000a  static readonly attribute boolean useRemoteWebExtensions;\u000a\u000a  /**\u000a   * True if the calling process is an extension process.\u000a   */\u000a  static readonly attribute boolean isExtensionProcess;\u000a\u000a  /**\u000a   * Returns true if the extension has cross-origin access to the given URI.\u000a   */\u000a  boolean canAccessURI(URI uri, optional boolean explicit = false);\u000a\u000a  /**\u000a   * Returns true if the extension currently has the given permission.\u000a   */\u000a  boolean hasPermission(DOMString permission);\u000a\u000a  /**\u000a   * Returns true if the given path relative to the extension's moz-extension:\u000a   * URL root may be accessed by web content.\u000a   */\u000a  boolean isPathWebAccessible(DOMString pathname);\u000a\u000a  /**\u000a   * Replaces localization placeholders in the given string with localized\u000a   * text from the extension's currently active locale.\u000a   */\u000a  DOMString localize(DOMString unlocalizedText);\u000a\u000a  /**\u000a   * Returns the moz-extension: URL for the given path.\u000a   */\u000a  [Throws]\u000a  DOMString getURL(optional DOMString path = \"\");\u000a\u000a  /**\u000a   * Register a new content script programmatically.\u000a   */\u000a  [Throws]\u000a  void registerContentScript(WebExtensionContentScript script);\u000a\u000a  /**\u000a   * Unregister a content script.\u000a   */\u000a  [Throws]\u000a  void unregisterContentScript(WebExtensionContentScript script);\u000a\u000a  /**\u000a   * Returns the list of currently active extension policies.\u000a   */\u000a  static sequence<WebExtensionPolicy> getActiveExtensions();\u000a\u000a  /**\u000a   * Returns the currently-active policy for the extension with the given ID,\u000a   * or null if no policy is active for that ID.\u000a   */\u000a  static WebExtensionPolicy? getByID(DOMString id);\u000a\u000a  /**\u000a   * Returns the currently-active policy for the extension with the given\u000a   * moz-extension: hostname, or null if no policy is active for that\u000a   * hostname.\u000a   */\u000a  static WebExtensionPolicy? getByHostname(ByteString hostname);\u000a\u000a  /**\u000a   * Returns the currently-active policy for the extension extension URI, or\u000a   * null if the URI is not an extension URI, or no policy is currently active\u000a   * for it.\u000a   */\u000a  static WebExtensionPolicy? getByURI(URI uri);\u000a};\u000a\u000adictionary WebExtensionInit {\u000a  required DOMString id;\u000a\u000a  required ByteString mozExtensionHostname;\u000a\u000a  required DOMString baseURL;\u000a\u000a  DOMString name = \"\";\u000a\u000a  required WebExtensionLocalizeCallback localizeCallback;\u000a\u000a  required MatchPatternSet allowedOrigins;\u000a\u000a  sequence<DOMString> permissions = [];\u000a\u000a  sequence<MatchGlob> webAccessibleResources = [];\u000a\u000a  sequence<WebExtensionContentScriptInit> contentScripts = [];\u000a\u000a  DOMString? contentSecurityPolicy = null;\u000a\u000a  sequence<DOMString>? backgroundScripts = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebGL2RenderingContext.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebGL2RenderingContext.webidl"},contents:"/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The source for this IDL is found at https://www.khronos.org/registry/webgl/specs/latest/2.0\u000a * This IDL depends on WebGLRenderingContext.webidl\u000a */\u000a\u000atypedef long long GLint64;\u000atypedef unsigned long long GLuint64;\u000a\u000a[Pref=\"webgl.enable-webgl2\"]\u000ainterface WebGLSampler {\u000a};\u000a\u000a[Pref=\"webgl.enable-webgl2\"]\u000ainterface WebGLSync {\u000a};\u000a\u000a[Pref=\"webgl.enable-webgl2\"]\u000ainterface WebGLTransformFeedback {\u000a};\u000a\u000atypedef (Uint32Array or sequence<GLuint>) Uint32List;\u000a\u000a// WebGL2 spec has this as an empty interface that pulls in everything\u000a// via WebGL2RenderingContextBase.\u000a[Pref=\"webgl.enable-webgl2\"]\u000ainterface WebGL2RenderingContext\u000a{\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WebGL2RenderingContextBase\u000a{\u000a    const GLenum READ_BUFFER                                   = 0x0C02;\u000a    const GLenum UNPACK_ROW_LENGTH                             = 0x0CF2;\u000a    const GLenum UNPACK_SKIP_ROWS                              = 0x0CF3;\u000a    const GLenum UNPACK_SKIP_PIXELS                            = 0x0CF4;\u000a    const GLenum PACK_ROW_LENGTH                               = 0x0D02;\u000a    const GLenum PACK_SKIP_ROWS                                = 0x0D03;\u000a    const GLenum PACK_SKIP_PIXELS                              = 0x0D04;\u000a    const GLenum COLOR                                         = 0x1800;\u000a    const GLenum DEPTH                                         = 0x1801;\u000a    const GLenum STENCIL                                       = 0x1802;\u000a    const GLenum RED                                           = 0x1903;\u000a    const GLenum RGB8                                          = 0x8051;\u000a    const GLenum RGBA8                                         = 0x8058;\u000a    const GLenum RGB10_A2                                      = 0x8059;\u000a    const GLenum TEXTURE_BINDING_3D                            = 0x806A;\u000a    const GLenum UNPACK_SKIP_IMAGES                            = 0x806D;\u000a    const GLenum UNPACK_IMAGE_HEIGHT                           = 0x806E;\u000a    const GLenum TEXTURE_3D                                    = 0x806F;\u000a    const GLenum TEXTURE_WRAP_R                                = 0x8072;\u000a    const GLenum MAX_3D_TEXTURE_SIZE                           = 0x8073;\u000a    const GLenum UNSIGNED_INT_2_10_10_10_REV                   = 0x8368;\u000a    const GLenum MAX_ELEMENTS_VERTICES                         = 0x80E8;\u000a    const GLenum MAX_ELEMENTS_INDICES                          = 0x80E9;\u000a    const GLenum TEXTURE_MIN_LOD                               = 0x813A;\u000a    const GLenum TEXTURE_MAX_LOD                               = 0x813B;\u000a    const GLenum TEXTURE_BASE_LEVEL                            = 0x813C;\u000a    const GLenum TEXTURE_MAX_LEVEL                             = 0x813D;\u000a    const GLenum MIN                                           = 0x8007;\u000a    const GLenum MAX                                           = 0x8008;\u000a    const GLenum DEPTH_COMPONENT24                             = 0x81A6;\u000a    const GLenum MAX_TEXTURE_LOD_BIAS                          = 0x84FD;\u000a    const GLenum TEXTURE_COMPARE_MODE                          = 0x884C;\u000a    const GLenum TEXTURE_COMPARE_FUNC                          = 0x884D;\u000a    const GLenum CURRENT_QUERY                                 = 0x8865;\u000a    const GLenum QUERY_RESULT                                  = 0x8866;\u000a    const GLenum QUERY_RESULT_AVAILABLE                        = 0x8867;\u000a    const GLenum STREAM_READ                                   = 0x88E1;\u000a    const GLenum STREAM_COPY                                   = 0x88E2;\u000a    const GLenum STATIC_READ                                   = 0x88E5;\u000a    const GLenum STATIC_COPY                                   = 0x88E6;\u000a    const GLenum DYNAMIC_READ                                  = 0x88E9;\u000a    const GLenum DYNAMIC_COPY                                  = 0x88EA;\u000a    const GLenum MAX_DRAW_BUFFERS                              = 0x8824;\u000a    const GLenum DRAW_BUFFER0                                  = 0x8825;\u000a    const GLenum DRAW_BUFFER1                                  = 0x8826;\u000a    const GLenum DRAW_BUFFER2                                  = 0x8827;\u000a    const GLenum DRAW_BUFFER3                                  = 0x8828;\u000a    const GLenum DRAW_BUFFER4                                  = 0x8829;\u000a    const GLenum DRAW_BUFFER5                                  = 0x882A;\u000a    const GLenum DRAW_BUFFER6                                  = 0x882B;\u000a    const GLenum DRAW_BUFFER7                                  = 0x882C;\u000a    const GLenum DRAW_BUFFER8                                  = 0x882D;\u000a    const GLenum DRAW_BUFFER9                                  = 0x882E;\u000a    const GLenum DRAW_BUFFER10                                 = 0x882F;\u000a    const GLenum DRAW_BUFFER11                                 = 0x8830;\u000a    const GLenum DRAW_BUFFER12                                 = 0x8831;\u000a    const GLenum DRAW_BUFFER13                                 = 0x8832;\u000a    const GLenum DRAW_BUFFER14                                 = 0x8833;\u000a    const GLenum DRAW_BUFFER15                                 = 0x8834;\u000a    const GLenum MAX_FRAGMENT_UNIFORM_COMPONENTS               = 0x8B49;\u000a    const GLenum MAX_VERTEX_UNIFORM_COMPONENTS                 = 0x8B4A;\u000a    const GLenum SAMPLER_3D                                    = 0x8B5F;\u000a    const GLenum SAMPLER_2D_SHADOW                             = 0x8B62;\u000a    const GLenum FRAGMENT_SHADER_DERIVATIVE_HINT               = 0x8B8B;\u000a    const GLenum PIXEL_PACK_BUFFER                             = 0x88EB;\u000a    const GLenum PIXEL_UNPACK_BUFFER                           = 0x88EC;\u000a    const GLenum PIXEL_PACK_BUFFER_BINDING                     = 0x88ED;\u000a    const GLenum PIXEL_UNPACK_BUFFER_BINDING                   = 0x88EF;\u000a    const GLenum FLOAT_MAT2x3                                  = 0x8B65;\u000a    const GLenum FLOAT_MAT2x4                                  = 0x8B66;\u000a    const GLenum FLOAT_MAT3x2                                  = 0x8B67;\u000a    const GLenum FLOAT_MAT3x4                                  = 0x8B68;\u000a    const GLenum FLOAT_MAT4x2                                  = 0x8B69;\u000a    const GLenum FLOAT_MAT4x3                                  = 0x8B6A;\u000a    const GLenum SRGB                                          = 0x8C40;\u000a    const GLenum SRGB8                                         = 0x8C41;\u000a    const GLenum SRGB8_ALPHA8                                  = 0x8C43;\u000a    const GLenum COMPARE_REF_TO_TEXTURE                        = 0x884E;\u000a    const GLenum RGBA32F                                       = 0x8814;\u000a    const GLenum RGB32F                                        = 0x8815;\u000a    const GLenum RGBA16F                                       = 0x881A;\u000a    const GLenum RGB16F                                        = 0x881B;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_INTEGER                   = 0x88FD;\u000a    const GLenum MAX_ARRAY_TEXTURE_LAYERS                      = 0x88FF;\u000a    const GLenum MIN_PROGRAM_TEXEL_OFFSET                      = 0x8904;\u000a    const GLenum MAX_PROGRAM_TEXEL_OFFSET                      = 0x8905;\u000a    const GLenum MAX_VARYING_COMPONENTS                        = 0x8B4B;\u000a    const GLenum TEXTURE_2D_ARRAY                              = 0x8C1A;\u000a    const GLenum TEXTURE_BINDING_2D_ARRAY                      = 0x8C1D;\u000a    const GLenum R11F_G11F_B10F                                = 0x8C3A;\u000a    const GLenum UNSIGNED_INT_10F_11F_11F_REV                  = 0x8C3B;\u000a    const GLenum RGB9_E5                                       = 0x8C3D;\u000a    const GLenum UNSIGNED_INT_5_9_9_9_REV                      = 0x8C3E;\u000a    const GLenum TRANSFORM_FEEDBACK_BUFFER_MODE                = 0x8C7F;\u000a    const GLenum MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS    = 0x8C80;\u000a    const GLenum TRANSFORM_FEEDBACK_VARYINGS                   = 0x8C83;\u000a    const GLenum TRANSFORM_FEEDBACK_BUFFER_START               = 0x8C84;\u000a    const GLenum TRANSFORM_FEEDBACK_BUFFER_SIZE                = 0x8C85;\u000a    const GLenum TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN         = 0x8C88;\u000a    const GLenum RASTERIZER_DISCARD                            = 0x8C89;\u000a    const GLenum MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;\u000a    const GLenum MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS       = 0x8C8B;\u000a    const GLenum INTERLEAVED_ATTRIBS                           = 0x8C8C;\u000a    const GLenum SEPARATE_ATTRIBS                              = 0x8C8D;\u000a    const GLenum TRANSFORM_FEEDBACK_BUFFER                     = 0x8C8E;\u000a    const GLenum TRANSFORM_FEEDBACK_BUFFER_BINDING             = 0x8C8F;\u000a    const GLenum RGBA32UI                                      = 0x8D70;\u000a    const GLenum RGB32UI                                       = 0x8D71;\u000a    const GLenum RGBA16UI                                      = 0x8D76;\u000a    const GLenum RGB16UI                                       = 0x8D77;\u000a    const GLenum RGBA8UI                                       = 0x8D7C;\u000a    const GLenum RGB8UI                                        = 0x8D7D;\u000a    const GLenum RGBA32I                                       = 0x8D82;\u000a    const GLenum RGB32I                                        = 0x8D83;\u000a    const GLenum RGBA16I                                       = 0x8D88;\u000a    const GLenum RGB16I                                        = 0x8D89;\u000a    const GLenum RGBA8I                                        = 0x8D8E;\u000a    const GLenum RGB8I                                         = 0x8D8F;\u000a    const GLenum RED_INTEGER                                   = 0x8D94;\u000a    const GLenum RGB_INTEGER                                   = 0x8D98;\u000a    const GLenum RGBA_INTEGER                                  = 0x8D99;\u000a    const GLenum SAMPLER_2D_ARRAY                              = 0x8DC1;\u000a    const GLenum SAMPLER_2D_ARRAY_SHADOW                       = 0x8DC4;\u000a    const GLenum SAMPLER_CUBE_SHADOW                           = 0x8DC5;\u000a    const GLenum UNSIGNED_INT_VEC2                             = 0x8DC6;\u000a    const GLenum UNSIGNED_INT_VEC3                             = 0x8DC7;\u000a    const GLenum UNSIGNED_INT_VEC4                             = 0x8DC8;\u000a    const GLenum INT_SAMPLER_2D                                = 0x8DCA;\u000a    const GLenum INT_SAMPLER_3D                                = 0x8DCB;\u000a    const GLenum INT_SAMPLER_CUBE                              = 0x8DCC;\u000a    const GLenum INT_SAMPLER_2D_ARRAY                          = 0x8DCF;\u000a    const GLenum UNSIGNED_INT_SAMPLER_2D                       = 0x8DD2;\u000a    const GLenum UNSIGNED_INT_SAMPLER_3D                       = 0x8DD3;\u000a    const GLenum UNSIGNED_INT_SAMPLER_CUBE                     = 0x8DD4;\u000a    const GLenum UNSIGNED_INT_SAMPLER_2D_ARRAY                 = 0x8DD7;\u000a    const GLenum DEPTH_COMPONENT32F                            = 0x8CAC;\u000a    const GLenum DEPTH32F_STENCIL8                             = 0x8CAD;\u000a    const GLenum FLOAT_32_UNSIGNED_INT_24_8_REV                = 0x8DAD;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING         = 0x8210;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE         = 0x8211;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_RED_SIZE               = 0x8212;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_GREEN_SIZE             = 0x8213;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_BLUE_SIZE              = 0x8214;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE             = 0x8215;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE             = 0x8216;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE           = 0x8217;\u000a    const GLenum FRAMEBUFFER_DEFAULT                           = 0x8218;\u000a    const GLenum UNSIGNED_INT_24_8                             = 0x84FA;\u000a    const GLenum DEPTH24_STENCIL8                              = 0x88F0;\u000a    const GLenum UNSIGNED_NORMALIZED                           = 0x8C17;\u000a    const GLenum DRAW_FRAMEBUFFER_BINDING                      = 0x8CA6; /* Same as FRAMEBUFFER_BINDING */\u000a    const GLenum READ_FRAMEBUFFER                              = 0x8CA8;\u000a    const GLenum DRAW_FRAMEBUFFER                              = 0x8CA9;\u000a    const GLenum READ_FRAMEBUFFER_BINDING                      = 0x8CAA;\u000a    const GLenum RENDERBUFFER_SAMPLES                          = 0x8CAB;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER          = 0x8CD4;\u000a    const GLenum MAX_COLOR_ATTACHMENTS                         = 0x8CDF;\u000a    const GLenum COLOR_ATTACHMENT1                             = 0x8CE1;\u000a    const GLenum COLOR_ATTACHMENT2                             = 0x8CE2;\u000a    const GLenum COLOR_ATTACHMENT3                             = 0x8CE3;\u000a    const GLenum COLOR_ATTACHMENT4                             = 0x8CE4;\u000a    const GLenum COLOR_ATTACHMENT5                             = 0x8CE5;\u000a    const GLenum COLOR_ATTACHMENT6                             = 0x8CE6;\u000a    const GLenum COLOR_ATTACHMENT7                             = 0x8CE7;\u000a    const GLenum COLOR_ATTACHMENT8                             = 0x8CE8;\u000a    const GLenum COLOR_ATTACHMENT9                             = 0x8CE9;\u000a    const GLenum COLOR_ATTACHMENT10                            = 0x8CEA;\u000a    const GLenum COLOR_ATTACHMENT11                            = 0x8CEB;\u000a    const GLenum COLOR_ATTACHMENT12                            = 0x8CEC;\u000a    const GLenum COLOR_ATTACHMENT13                            = 0x8CED;\u000a    const GLenum COLOR_ATTACHMENT14                            = 0x8CEE;\u000a    const GLenum COLOR_ATTACHMENT15                            = 0x8CEF;\u000a    const GLenum FRAMEBUFFER_INCOMPLETE_MULTISAMPLE            = 0x8D56;\u000a    const GLenum MAX_SAMPLES                                   = 0x8D57;\u000a    const GLenum HALF_FLOAT                                    = 0x140B;\u000a    const GLenum RG                                            = 0x8227;\u000a    const GLenum RG_INTEGER                                    = 0x8228;\u000a    const GLenum R8                                            = 0x8229;\u000a    const GLenum RG8                                           = 0x822B;\u000a    const GLenum R16F                                          = 0x822D;\u000a    const GLenum R32F                                          = 0x822E;\u000a    const GLenum RG16F                                         = 0x822F;\u000a    const GLenum RG32F                                         = 0x8230;\u000a    const GLenum R8I                                           = 0x8231;\u000a    const GLenum R8UI                                          = 0x8232;\u000a    const GLenum R16I                                          = 0x8233;\u000a    const GLenum R16UI                                         = 0x8234;\u000a    const GLenum R32I                                          = 0x8235;\u000a    const GLenum R32UI                                         = 0x8236;\u000a    const GLenum RG8I                                          = 0x8237;\u000a    const GLenum RG8UI                                         = 0x8238;\u000a    const GLenum RG16I                                         = 0x8239;\u000a    const GLenum RG16UI                                        = 0x823A;\u000a    const GLenum RG32I                                         = 0x823B;\u000a    const GLenum RG32UI                                        = 0x823C;\u000a    const GLenum VERTEX_ARRAY_BINDING                          = 0x85B5;\u000a    const GLenum R8_SNORM                                      = 0x8F94;\u000a    const GLenum RG8_SNORM                                     = 0x8F95;\u000a    const GLenum RGB8_SNORM                                    = 0x8F96;\u000a    const GLenum RGBA8_SNORM                                   = 0x8F97;\u000a    const GLenum SIGNED_NORMALIZED                             = 0x8F9C;\u000a    const GLenum COPY_READ_BUFFER                              = 0x8F36;\u000a    const GLenum COPY_WRITE_BUFFER                             = 0x8F37;\u000a    const GLenum COPY_READ_BUFFER_BINDING                      = 0x8F36; /* Same as COPY_READ_BUFFER */\u000a    const GLenum COPY_WRITE_BUFFER_BINDING                     = 0x8F37; /* Same as COPY_WRITE_BUFFER */\u000a    const GLenum UNIFORM_BUFFER                                = 0x8A11;\u000a    const GLenum UNIFORM_BUFFER_BINDING                        = 0x8A28;\u000a    const GLenum UNIFORM_BUFFER_START                          = 0x8A29;\u000a    const GLenum UNIFORM_BUFFER_SIZE                           = 0x8A2A;\u000a    const GLenum MAX_VERTEX_UNIFORM_BLOCKS                     = 0x8A2B;\u000a    const GLenum MAX_FRAGMENT_UNIFORM_BLOCKS                   = 0x8A2D;\u000a    const GLenum MAX_COMBINED_UNIFORM_BLOCKS                   = 0x8A2E;\u000a    const GLenum MAX_UNIFORM_BUFFER_BINDINGS                   = 0x8A2F;\u000a    const GLenum MAX_UNIFORM_BLOCK_SIZE                        = 0x8A30;\u000a    const GLenum MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS        = 0x8A31;\u000a    const GLenum MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS      = 0x8A33;\u000a    const GLenum UNIFORM_BUFFER_OFFSET_ALIGNMENT               = 0x8A34;\u000a    const GLenum ACTIVE_UNIFORM_BLOCKS                         = 0x8A36;\u000a    const GLenum UNIFORM_TYPE                                  = 0x8A37;\u000a    const GLenum UNIFORM_SIZE                                  = 0x8A38;\u000a    const GLenum UNIFORM_BLOCK_INDEX                           = 0x8A3A;\u000a    const GLenum UNIFORM_OFFSET                                = 0x8A3B;\u000a    const GLenum UNIFORM_ARRAY_STRIDE                          = 0x8A3C;\u000a    const GLenum UNIFORM_MATRIX_STRIDE                         = 0x8A3D;\u000a    const GLenum UNIFORM_IS_ROW_MAJOR                          = 0x8A3E;\u000a    const GLenum UNIFORM_BLOCK_BINDING                         = 0x8A3F;\u000a    const GLenum UNIFORM_BLOCK_DATA_SIZE                       = 0x8A40;\u000a    const GLenum UNIFORM_BLOCK_ACTIVE_UNIFORMS                 = 0x8A42;\u000a    const GLenum UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES          = 0x8A43;\u000a    const GLenum UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER     = 0x8A44;\u000a    const GLenum UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER   = 0x8A46;\u000a    const GLenum INVALID_INDEX                                 = 0xFFFFFFFF;\u000a    const GLenum MAX_VERTEX_OUTPUT_COMPONENTS                  = 0x9122;\u000a    const GLenum MAX_FRAGMENT_INPUT_COMPONENTS                 = 0x9125;\u000a    const GLenum MAX_SERVER_WAIT_TIMEOUT                       = 0x9111;\u000a    const GLenum OBJECT_TYPE                                   = 0x9112;\u000a    const GLenum SYNC_CONDITION                                = 0x9113;\u000a    const GLenum SYNC_STATUS                                   = 0x9114;\u000a    const GLenum SYNC_FLAGS                                    = 0x9115;\u000a    const GLenum SYNC_FENCE                                    = 0x9116;\u000a    const GLenum SYNC_GPU_COMMANDS_COMPLETE                    = 0x9117;\u000a    const GLenum UNSIGNALED                                    = 0x9118;\u000a    const GLenum SIGNALED                                      = 0x9119;\u000a    const GLenum ALREADY_SIGNALED                              = 0x911A;\u000a    const GLenum TIMEOUT_EXPIRED                               = 0x911B;\u000a    const GLenum CONDITION_SATISFIED                           = 0x911C;\u000a    [NeedsWindowsUndef]\u000a    const GLenum WAIT_FAILED                                   = 0x911D;\u000a    const GLenum SYNC_FLUSH_COMMANDS_BIT                       = 0x00000001;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_DIVISOR                   = 0x88FE;\u000a    const GLenum ANY_SAMPLES_PASSED                            = 0x8C2F;\u000a    const GLenum ANY_SAMPLES_PASSED_CONSERVATIVE               = 0x8D6A;\u000a    const GLenum SAMPLER_BINDING                               = 0x8919;\u000a    const GLenum RGB10_A2UI                                    = 0x906F;\u000a    const GLenum INT_2_10_10_10_REV                            = 0x8D9F;\u000a    const GLenum TRANSFORM_FEEDBACK                            = 0x8E22;\u000a    const GLenum TRANSFORM_FEEDBACK_PAUSED                     = 0x8E23;\u000a    const GLenum TRANSFORM_FEEDBACK_ACTIVE                     = 0x8E24;\u000a    const GLenum TRANSFORM_FEEDBACK_BINDING                    = 0x8E25;\u000a    const GLenum TEXTURE_IMMUTABLE_FORMAT                      = 0x912F;\u000a    const GLenum MAX_ELEMENT_INDEX                             = 0x8D6B;\u000a    const GLenum TEXTURE_IMMUTABLE_LEVELS                      = 0x82DF;\u000a\u000a    const GLint64 TIMEOUT_IGNORED                              = -1;\u000a\u000a    /* WebGL-specific enums */\u000a    const GLenum MAX_CLIENT_WAIT_TIMEOUT_WEBGL                 = 0x9247;\u000a\u000a    /* Buffer objects */\u000a    // WebGL1:\u000a    void bufferData(GLenum target, GLsizeiptr size, GLenum usage);\u000a    void bufferData(GLenum target, ArrayBuffer? srcData, GLenum usage);\u000a    void bufferData(GLenum target, ArrayBufferView srcData, GLenum usage);\u000a    void bufferSubData(GLenum target, GLintptr offset, ArrayBuffer srcData);\u000a    void bufferSubData(GLenum target, GLintptr offset, ArrayBufferView srcData);\u000a    // WebGL2:\u000a    void bufferData(GLenum target, ArrayBufferView srcData, GLenum usage,\u000a                    GLuint srcOffset, optional GLuint length = 0);\u000a    void bufferSubData(GLenum target, GLintptr dstByteOffset, ArrayBufferView srcData,\u000a                       GLuint srcOffset, optional GLuint length = 0);\u000a\u000a    void copyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset,\u000a                           GLintptr writeOffset, GLsizeiptr size);\u000a    // MapBufferRange, in particular its read-only and write-only modes,\u000a    // can not be exposed safely to JavaScript. GetBufferSubData\u000a    // replaces it for the purpose of fetching data back from the GPU.\u000a    void getBufferSubData(GLenum target, GLintptr srcByteOffset, ArrayBufferView dstData,\u000a                          optional GLuint dstOffset = 0, optional GLuint length = 0);\u000a\u000a    /* Framebuffer objects */\u000a    void blitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0,\u000a                         GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);\u000a    void framebufferTextureLayer(GLenum target, GLenum attachment, WebGLTexture? texture, GLint level,\u000a                                 GLint layer);\u000a\u000a    [Throws]\u000a    void invalidateFramebuffer(GLenum target, sequence<GLenum> attachments);\u000a\u000a    [Throws]\u000a    void invalidateSubFramebuffer(GLenum target, sequence<GLenum> attachments,\u000a                                  GLint x, GLint y, GLsizei width, GLsizei height);\u000a\u000a    void readBuffer(GLenum src);\u000a\u000a    /* Renderbuffer objects */\u000a    [Throws]\u000a    any getInternalformatParameter(GLenum target, GLenum internalformat, GLenum pname);\u000a    void renderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat,\u000a                                        GLsizei width, GLsizei height);\u000a\u000a    /* Texture objects */\u000a    void texStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width,\u000a                      GLsizei height);\u000a    void texStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width,\u000a                      GLsizei height, GLsizei depth);\u000a\u000a    // WebGL1 legacy entrypoints:\u000a    [Throws] // Another overhead throws.\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLsizei width, GLsizei height, GLint border, GLenum format,\u000a                    GLenum type, ArrayBufferView? pixels);\u000a    [Throws]\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLenum format, GLenum type, HTMLCanvasElement source); // May throw DOMException\u000a    [Throws]\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLenum format, GLenum type, HTMLImageElement source); // May throw DOMException\u000a    [Throws]\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLenum format, GLenum type, HTMLVideoElement source); // May throw DOMException\u000a    [Throws] // Another overhead throws.\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLenum format, GLenum type, ImageBitmap source);\u000a    [Throws] // Another overhead throws.\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLenum format, GLenum type, ImageData source);\u000a\u000a    [Throws] // Another overhead throws.\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLsizei width, GLsizei height,\u000a                       GLenum format, GLenum type, ArrayBufferView? pixels);\u000a    [Throws]\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLenum format, GLenum type, HTMLCanvasElement source); // May throw DOMException\u000a    [Throws]\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLenum format, GLenum type, HTMLImageElement source); // May throw DOMException\u000a    [Throws]\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLenum format, GLenum type, HTMLVideoElement source); // May throw DOMException\u000a    [Throws] // Another overhead throws.\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLenum format, GLenum type, ImageBitmap source);\u000a    [Throws] // Another overhead throws.\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLenum format, GLenum type, ImageData source);\u000a\u000a    // WebGL2 entrypoints:\u000a    [Throws] // Another overhead throws.\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLint border, GLenum format, GLenum type, GLintptr pboOffset);\u000a    [Throws]\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLint border, GLenum format, GLenum type,\u000a                    HTMLCanvasElement source); // May throw DOMException\u000a    [Throws]\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLint border, GLenum format, GLenum type,\u000a                    HTMLImageElement source); // May throw DOMException\u000a    [Throws]\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLint border, GLenum format, GLenum type,\u000a                    HTMLVideoElement source); // May throw DOMException\u000a    [Throws] // Another overhead throws.\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLint border, GLenum format, GLenum type,\u000a                    ImageBitmap source);\u000a    [Throws] // Another overhead throws.\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLint border, GLenum format, GLenum type,\u000a                    ImageData source);\u000a    [Throws] // Another overhead throws.\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLint border, GLenum format, GLenum type, ArrayBufferView srcData,\u000a                    GLuint srcOffset);\u000a\u000a    [Throws] // Another overhead throws.\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLsizei depth, GLint border, GLenum format, GLenum type, GLintptr pboOffset);\u000a    [Throws]\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLsizei depth, GLint border, GLenum format, GLenum type,\u000a                    HTMLCanvasElement source); // May throw DOMException\u000a    [Throws]\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLsizei depth, GLint border, GLenum format, GLenum type,\u000a                    HTMLImageElement source); // May throw DOMException\u000a    [Throws]\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLsizei depth, GLint border, GLenum format, GLenum type,\u000a                    HTMLVideoElement source); // May throw DOMException\u000a    [Throws] // Another overhead throws.\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLsizei depth, GLint border, GLenum format, GLenum type,\u000a                    ImageBitmap source);\u000a    [Throws] // Another overhead throws.\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLsizei depth, GLint border, GLenum format, GLenum type,\u000a                    ImageData source);\u000a    [Throws] // Another overhead throws.\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLsizei depth, GLint border, GLenum format, GLenum type, ArrayBufferView? srcData);\u000a    [Throws] // Another overhead throws.\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,\u000a                    GLsizei depth, GLint border, GLenum format, GLenum type, ArrayBufferView srcData,\u000a                    GLuint srcOffset);\u000a\u000a    [Throws] // Another overhead throws.\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width,\u000a                       GLsizei height, GLenum format, GLenum type, GLintptr pboOffset);\u000a    [Throws]\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width,\u000a                       GLsizei height, GLenum format, GLenum type,\u000a                       HTMLCanvasElement source); // May throw DOMException\u000a    [Throws]\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width,\u000a                       GLsizei height, GLenum format, GLenum type,\u000a                       HTMLImageElement source); // May throw DOMException\u000a    [Throws]\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width,\u000a                       GLsizei height, GLenum format, GLenum type,\u000a                       HTMLVideoElement source); // May throw DOMException\u000a    [Throws] // Another overhead throws.\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width,\u000a                       GLsizei height, GLenum format, GLenum type,\u000a                       ImageBitmap source);\u000a    [Throws] // Another overhead throws.\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width,\u000a                       GLsizei height, GLenum format, GLenum type,\u000a                       ImageData source);\u000a    [Throws] // Another overhead throws.\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width,\u000a                       GLsizei height, GLenum format, GLenum type, ArrayBufferView srcData,\u000a                       GLuint srcOffset);\u000a\u000a    [Throws] // Another overhead throws.\u000a    void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset,\u000a                       GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type,\u000a                       GLintptr pboOffset);\u000a    [Throws]\u000a    void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset,\u000a                       GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type,\u000a                       HTMLCanvasElement source); // May throw DOMException\u000a    [Throws]\u000a    void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset,\u000a                       GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type,\u000a                       HTMLImageElement source); // May throw DOMException\u000a    [Throws]\u000a    void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset,\u000a                       GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type,\u000a                       HTMLVideoElement source); // May throw DOMException\u000a    [Throws] // Another overhead throws.\u000a    void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset,\u000a                       GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type,\u000a                       ImageBitmap source);\u000a    [Throws] // Another overhead throws.\u000a    void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset,\u000a                       GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type,\u000a                       ImageData source);\u000a    [Throws] // Another overhead throws.\u000a    void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset,\u000a                       GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type,\u000a                       ArrayBufferView? srcData, optional GLuint srcOffset = 0);\u000a\u000a    void copyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset,\u000a                           GLint x, GLint y, GLsizei width, GLsizei height);\u000a\u000a    void compressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width,\u000a                              GLsizei height, GLint border, GLsizei imageSize,  GLintptr offset);\u000a    void compressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width,\u000a                              GLsizei height, GLint border, ArrayBufferView srcData,\u000a                              optional GLuint srcOffset = 0, optional GLuint srcLengthOverride = 0);\u000a\u000a    void compressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width,\u000a                              GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLintptr offset);\u000a    void compressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width,\u000a                              GLsizei height, GLsizei depth, GLint border, ArrayBufferView srcData,\u000a                              optional GLuint srcOffset = 0, optional GLuint srcLengthOverride = 0);\u000a\u000a    void compressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                                 GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLintptr offset);\u000a    void compressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                                 GLsizei width, GLsizei height, GLenum format,\u000a                                 ArrayBufferView srcData,\u000a                                 optional GLuint srcOffset = 0,\u000a                                 optional GLuint srcLengthOverride = 0);\u000a\u000a    void compressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                                 GLint zoffset, GLsizei width, GLsizei height, GLsizei depth,\u000a                                 GLenum format, GLsizei imageSize, GLintptr offset);\u000a    void compressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                                 GLint zoffset, GLsizei width, GLsizei height, GLsizei depth,\u000a                                 GLenum format, ArrayBufferView srcData,\u000a                                 optional GLuint srcOffset = 0,\u000a                                 optional GLuint srcLengthOverride = 0);\u000a\u000a    /* Programs and shaders */\u000a    [WebGLHandlesContextLoss] GLint getFragDataLocation(WebGLProgram program, DOMString name);\u000a\u000a    /* Uniforms */\u000a    void uniform1ui(WebGLUniformLocation? location, GLuint v0);\u000a    void uniform2ui(WebGLUniformLocation? location, GLuint v0, GLuint v1);\u000a    void uniform3ui(WebGLUniformLocation? location, GLuint v0, GLuint v1, GLuint v2);\u000a    void uniform4ui(WebGLUniformLocation? location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);\u000a\u000a    void uniform1fv(WebGLUniformLocation? location, Float32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a    void uniform2fv(WebGLUniformLocation? location, Float32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a    void uniform3fv(WebGLUniformLocation? location, Float32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a    void uniform4fv(WebGLUniformLocation? location, Float32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a\u000a    void uniform1iv(WebGLUniformLocation? location, Int32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a    void uniform2iv(WebGLUniformLocation? location, Int32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a    void uniform3iv(WebGLUniformLocation? location, Int32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a    void uniform4iv(WebGLUniformLocation? location, Int32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a\u000a    void uniform1uiv(WebGLUniformLocation? location, Uint32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a    void uniform2uiv(WebGLUniformLocation? location, Uint32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a    void uniform3uiv(WebGLUniformLocation? location, Uint32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a    void uniform4uiv(WebGLUniformLocation? location, Uint32List data, optional GLuint srcOffset = 0,\u000a                    optional GLuint srcLength = 0);\u000a\u000a    void uniformMatrix2fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data,\u000a                          optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix3x2fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix4x2fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a\u000a    void uniformMatrix2x3fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix3fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data,\u000a                          optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix4x3fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a\u000a    void uniformMatrix2x4fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix3x4fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix4fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data,\u000a                          optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a\u000a    /* Vertex attribs */\u000a    void vertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);\u000a    void vertexAttribI4iv(GLuint index, Int32List values);\u000a    void vertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);\u000a    void vertexAttribI4uiv(GLuint index, Uint32List values);\u000a    void vertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);\u000a\u000a    /* Writing to the drawing buffer */\u000a    void vertexAttribDivisor(GLuint index, GLuint divisor);\u000a    void drawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instanceCount);\u000a    void drawElementsInstanced(GLenum mode, GLsizei count, GLenum type, GLintptr offset, GLsizei instanceCount);\u000a    void drawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLintptr offset);\u000a\u000a    /* Reading back pixels */\u000a    // WebGL1:\u000a    [Throws, NeedsCallerType] // Throws on readback in a write-only context.\u000a    void readPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type,\u000a                    ArrayBufferView? dstData);\u000a    // WebGL2:\u000a    [Throws, NeedsCallerType] // Throws on readback in a write-only context.\u000a    void readPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type,\u000a                    GLintptr offset);\u000a    [Throws, NeedsCallerType] // Throws on readback in a write-only context.\u000a    void readPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type,\u000a                    ArrayBufferView dstData, GLuint dstOffset);\u000a\u000a    /* Multiple Render Targets */\u000a    void drawBuffers(sequence<GLenum> buffers);\u000a\u000a    void clearBufferfv(GLenum buffer, GLint drawbuffer, Float32List values,\u000a                       optional GLuint srcOffset = 0);\u000a    void clearBufferiv(GLenum buffer, GLint drawbuffer, Int32List values,\u000a                       optional GLuint srcOffset = 0);\u000a    void clearBufferuiv(GLenum buffer, GLint drawbuffer, Uint32List values,\u000a                        optional GLuint srcOffset = 0);\u000a\u000a    void clearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);\u000a\u000a    /* Query Objects */\u000a    WebGLQuery? createQuery();\u000a    void deleteQuery(WebGLQuery? query);\u000a    [WebGLHandlesContextLoss] GLboolean isQuery(WebGLQuery? query);\u000a    void beginQuery(GLenum target, WebGLQuery query);\u000a    void endQuery(GLenum target);\u000a    any getQuery(GLenum target, GLenum pname);\u000a    any getQueryParameter(WebGLQuery query, GLenum pname);\u000a\u000a    /* Sampler Objects */\u000a    WebGLSampler? createSampler();\u000a    void deleteSampler(WebGLSampler? sampler);\u000a    [WebGLHandlesContextLoss] GLboolean isSampler(WebGLSampler? sampler);\u000a    void bindSampler(GLuint unit, WebGLSampler? sampler);\u000a    void samplerParameteri(WebGLSampler sampler, GLenum pname, GLint param);\u000a    void samplerParameterf(WebGLSampler sampler, GLenum pname, GLfloat param);\u000a    any getSamplerParameter(WebGLSampler sampler, GLenum pname);\u000a\u000a    /* Sync objects */\u000a    WebGLSync? fenceSync(GLenum condition, GLbitfield flags);\u000a    [WebGLHandlesContextLoss] GLboolean isSync(WebGLSync? sync);\u000a    void deleteSync(WebGLSync? sync);\u000a    GLenum clientWaitSync(WebGLSync sync, GLbitfield flags, GLuint64 timeout);\u000a    void waitSync(WebGLSync sync, GLbitfield flags, GLint64 timeout);\u000a    any getSyncParameter(WebGLSync sync, GLenum pname);\u000a\u000a    /* Transform Feedback */\u000a    WebGLTransformFeedback? createTransformFeedback();\u000a    void deleteTransformFeedback(WebGLTransformFeedback? tf);\u000a    [WebGLHandlesContextLoss] GLboolean isTransformFeedback(WebGLTransformFeedback? tf);\u000a    void bindTransformFeedback(GLenum target, WebGLTransformFeedback? tf);\u000a    void beginTransformFeedback(GLenum primitiveMode);\u000a    void endTransformFeedback();\u000a    void transformFeedbackVaryings(WebGLProgram program, sequence<DOMString> varyings, GLenum bufferMode);\u000a    [NewObject]\u000a    WebGLActiveInfo? getTransformFeedbackVarying(WebGLProgram program, GLuint index);\u000a    void pauseTransformFeedback();\u000a    void resumeTransformFeedback();\u000a\u000a    /* Uniform Buffer Objects and Transform Feedback Buffers */\u000a    void bindBufferBase(GLenum target, GLuint index, WebGLBuffer? buffer);\u000a    void bindBufferRange(GLenum target, GLuint index, WebGLBuffer? buffer, GLintptr offset, GLsizeiptr size);\u000a    [Throws] // GetOrCreateDOMReflector can fail.\u000a    any getIndexedParameter(GLenum target, GLuint index);\u000a    sequence<GLuint>? getUniformIndices(WebGLProgram program, sequence<DOMString> uniformNames);\u000a    any getActiveUniforms(WebGLProgram program, sequence<GLuint> uniformIndices, GLenum pname);\u000a    GLuint getUniformBlockIndex(WebGLProgram program, DOMString uniformBlockName);\u000a    [Throws] // Creating a Uint32Array can fail.\u000a    any getActiveUniformBlockParameter(WebGLProgram program, GLuint uniformBlockIndex, GLenum pname);\u000a    DOMString? getActiveUniformBlockName(WebGLProgram program, GLuint uniformBlockIndex);\u000a    void uniformBlockBinding(WebGLProgram program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);\u000a\u000a    /* Vertex Array Objects */\u000a    WebGLVertexArrayObject? createVertexArray();\u000a    void deleteVertexArray(WebGLVertexArrayObject? vertexArray);\u000a    [WebGLHandlesContextLoss] GLboolean isVertexArray(WebGLVertexArrayObject? vertexArray);\u000a    void bindVertexArray(WebGLVertexArrayObject? array);\u000a};\u000a\u000aWebGL2RenderingContextBase implements WebGLRenderingContextBase;\u000aWebGL2RenderingContext implements WebGL2RenderingContextBase;\u000a\u000a[NoInterfaceObject]\u000ainterface EXT_color_buffer_float {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebGLContextEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebGLContextEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a\u000a * The origin of this IDL file is\u000a * https://www.khronos.org/registry/webgl/specs/latest/1.0/#fire-a-webgl-context-event\u000a */\u000a\u000a[Constructor(DOMString type, optional WebGLContextEventInit eventInit),\u000a Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::OffscreenCanvas::PrefEnabledOnWorkerThread\"]\u000ainterface WebGLContextEvent : Event {\u000a  readonly attribute DOMString statusMessage;\u000a};\u000a\u000a// EventInit is defined in the DOM4 specification.\u000adictionary WebGLContextEventInit : EventInit {\u000a  DOMString statusMessage = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebGLRenderingContext.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebGLRenderingContext.webidl"},contents:"/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://www.khronos.org/registry/webgl/specs/latest/webgl.idl\u000a *\u000a * Copyright © 2012 Khronos Group\u000a */\u000a\u000a// WebGL IDL definitions scraped from the Khronos specification:\u000a// https://www.khronos.org/registry/webgl/specs/latest/\u000a//\u000a// This IDL depends on the typed array specification defined at:\u000a// https://www.khronos.org/registry/typedarray/specs/latest/typedarrays.idl\u000a\u000atypedef unsigned long  GLenum;\u000atypedef boolean        GLboolean;\u000atypedef unsigned long  GLbitfield;\u000atypedef byte           GLbyte;         /* 'byte' should be a signed 8 bit type. */\u000atypedef short          GLshort;\u000atypedef long           GLint;\u000atypedef long           GLsizei;\u000atypedef long long      GLintptr;\u000atypedef long long      GLsizeiptr;\u000a// Ideally the typedef below would use 'unsigned byte', but that doesn't currently exist in Web IDL.\u000atypedef octet          GLubyte;        /* 'octet' should be an unsigned 8 bit type. */\u000atypedef unsigned short GLushort;\u000atypedef unsigned long  GLuint;\u000atypedef unrestricted float GLfloat;\u000atypedef unrestricted float GLclampf;\u000atypedef unsigned long long GLuint64EXT;\u000a\u000adictionary WebGLContextAttributes {\u000a    // boolean alpha = true;\u000a    // We deviate from the spec here.\u000a    // If alpha isn't specified, we rely on a pref (\"webgl.default-no-alpha\")\u000a    GLboolean alpha;\u000a    GLboolean depth = true;\u000a    GLboolean stencil = false;\u000a    GLboolean antialias = true;\u000a    GLboolean premultipliedAlpha = true;\u000a    GLboolean preserveDrawingBuffer = false;\u000a    GLboolean failIfMajorPerformanceCaveat = false;\u000a};\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::OffscreenCanvas::PrefEnabledOnWorkerThread\"]\u000ainterface WebGLBuffer {\u000a};\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::OffscreenCanvas::PrefEnabledOnWorkerThread\"]\u000ainterface WebGLFramebuffer {\u000a};\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::OffscreenCanvas::PrefEnabledOnWorkerThread\"]\u000ainterface WebGLProgram {\u000a};\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::OffscreenCanvas::PrefEnabledOnWorkerThread\"]\u000ainterface WebGLRenderbuffer {\u000a};\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::OffscreenCanvas::PrefEnabledOnWorkerThread\"]\u000ainterface WebGLShader {\u000a};\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::OffscreenCanvas::PrefEnabledOnWorkerThread\"]\u000ainterface WebGLTexture {\u000a};\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::OffscreenCanvas::PrefEnabledOnWorkerThread\"]\u000ainterface WebGLUniformLocation {\u000a};\u000a\u000ainterface WebGLVertexArrayObject {\u000a};\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::OffscreenCanvas::PrefEnabledOnWorkerThread\"]\u000ainterface WebGLActiveInfo {\u000a    readonly attribute GLint size;\u000a    readonly attribute GLenum type;\u000a    readonly attribute DOMString name;\u000a};\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::OffscreenCanvas::PrefEnabledOnWorkerThread\"]\u000ainterface WebGLShaderPrecisionFormat {\u000a    readonly attribute GLint rangeMin;\u000a    readonly attribute GLint rangeMax;\u000a    readonly attribute GLint precision;\u000a};\u000a\u000atypedef (Float32Array or sequence<GLfloat>) Float32List;\u000atypedef (Int32Array or sequence<GLint>) Int32List;\u000a\u000a// Shared interface for the things that WebGLRenderingContext and\u000a// WebGL2RenderingContext have in common.  This doesn't have all the things they\u000a// have in common, because we don't support splitting multiple overloads of the\u000a// same method across separate interfaces and pulling them in with \"implements\".\u000a[Exposed=(Window, Worker), NoInterfaceObject]\u000ainterface WebGLRenderingContextBase {\u000a    /* ClearBufferMask */\u000a    const GLenum DEPTH_BUFFER_BIT               = 0x00000100;\u000a    const GLenum STENCIL_BUFFER_BIT             = 0x00000400;\u000a    const GLenum COLOR_BUFFER_BIT               = 0x00004000;\u000a\u000a    /* BeginMode */\u000a    const GLenum POINTS                         = 0x0000;\u000a    const GLenum LINES                          = 0x0001;\u000a    const GLenum LINE_LOOP                      = 0x0002;\u000a    const GLenum LINE_STRIP                     = 0x0003;\u000a    const GLenum TRIANGLES                      = 0x0004;\u000a    const GLenum TRIANGLE_STRIP                 = 0x0005;\u000a    const GLenum TRIANGLE_FAN                   = 0x0006;\u000a\u000a    /* AlphaFunction (not supported in ES20) */\u000a    /*      NEVER */\u000a    /*      LESS */\u000a    /*      EQUAL */\u000a    /*      LEQUAL */\u000a    /*      GREATER */\u000a    /*      NOTEQUAL */\u000a    /*      GEQUAL */\u000a    /*      ALWAYS */\u000a\u000a    /* BlendingFactorDest */\u000a    const GLenum ZERO                           = 0;\u000a    const GLenum ONE                            = 1;\u000a    const GLenum SRC_COLOR                      = 0x0300;\u000a    const GLenum ONE_MINUS_SRC_COLOR            = 0x0301;\u000a    const GLenum SRC_ALPHA                      = 0x0302;\u000a    const GLenum ONE_MINUS_SRC_ALPHA            = 0x0303;\u000a    const GLenum DST_ALPHA                      = 0x0304;\u000a    const GLenum ONE_MINUS_DST_ALPHA            = 0x0305;\u000a\u000a    /* BlendingFactorSrc */\u000a    /*      ZERO */\u000a    /*      ONE */\u000a    const GLenum DST_COLOR                      = 0x0306;\u000a    const GLenum ONE_MINUS_DST_COLOR            = 0x0307;\u000a    const GLenum SRC_ALPHA_SATURATE             = 0x0308;\u000a    /*      SRC_ALPHA */\u000a    /*      ONE_MINUS_SRC_ALPHA */\u000a    /*      DST_ALPHA */\u000a    /*      ONE_MINUS_DST_ALPHA */\u000a\u000a    /* BlendEquationSeparate */\u000a    const GLenum FUNC_ADD                       = 0x8006;\u000a    const GLenum BLEND_EQUATION                 = 0x8009;\u000a    const GLenum BLEND_EQUATION_RGB             = 0x8009;   /* same as BLEND_EQUATION */\u000a    const GLenum BLEND_EQUATION_ALPHA           = 0x883D;\u000a\u000a    /* BlendSubtract */\u000a    const GLenum FUNC_SUBTRACT                  = 0x800A;\u000a    const GLenum FUNC_REVERSE_SUBTRACT          = 0x800B;\u000a\u000a    /* Separate Blend Functions */\u000a    const GLenum BLEND_DST_RGB                  = 0x80C8;\u000a    const GLenum BLEND_SRC_RGB                  = 0x80C9;\u000a    const GLenum BLEND_DST_ALPHA                = 0x80CA;\u000a    const GLenum BLEND_SRC_ALPHA                = 0x80CB;\u000a    const GLenum CONSTANT_COLOR                 = 0x8001;\u000a    const GLenum ONE_MINUS_CONSTANT_COLOR       = 0x8002;\u000a    const GLenum CONSTANT_ALPHA                 = 0x8003;\u000a    const GLenum ONE_MINUS_CONSTANT_ALPHA       = 0x8004;\u000a    const GLenum BLEND_COLOR                    = 0x8005;\u000a\u000a    /* Buffer Objects */\u000a    const GLenum ARRAY_BUFFER                   = 0x8892;\u000a    const GLenum ELEMENT_ARRAY_BUFFER           = 0x8893;\u000a    const GLenum ARRAY_BUFFER_BINDING           = 0x8894;\u000a    const GLenum ELEMENT_ARRAY_BUFFER_BINDING   = 0x8895;\u000a\u000a    const GLenum STREAM_DRAW                    = 0x88E0;\u000a    const GLenum STATIC_DRAW                    = 0x88E4;\u000a    const GLenum DYNAMIC_DRAW                   = 0x88E8;\u000a\u000a    const GLenum BUFFER_SIZE                    = 0x8764;\u000a    const GLenum BUFFER_USAGE                   = 0x8765;\u000a\u000a    const GLenum CURRENT_VERTEX_ATTRIB          = 0x8626;\u000a\u000a    /* CullFaceMode */\u000a    const GLenum FRONT                          = 0x0404;\u000a    const GLenum BACK                           = 0x0405;\u000a    const GLenum FRONT_AND_BACK                 = 0x0408;\u000a\u000a    /* DepthFunction */\u000a    /*      NEVER */\u000a    /*      LESS */\u000a    /*      EQUAL */\u000a    /*      LEQUAL */\u000a    /*      GREATER */\u000a    /*      NOTEQUAL */\u000a    /*      GEQUAL */\u000a    /*      ALWAYS */\u000a\u000a    /* EnableCap */\u000a    /* TEXTURE_2D */\u000a    const GLenum CULL_FACE                      = 0x0B44;\u000a    const GLenum BLEND                          = 0x0BE2;\u000a    const GLenum DITHER                         = 0x0BD0;\u000a    const GLenum STENCIL_TEST                   = 0x0B90;\u000a    const GLenum DEPTH_TEST                     = 0x0B71;\u000a    const GLenum SCISSOR_TEST                   = 0x0C11;\u000a    const GLenum POLYGON_OFFSET_FILL            = 0x8037;\u000a    const GLenum SAMPLE_ALPHA_TO_COVERAGE       = 0x809E;\u000a    const GLenum SAMPLE_COVERAGE                = 0x80A0;\u000a\u000a    /* ErrorCode */\u000a    [NeedsWindowsUndef]\u000a    const GLenum NO_ERROR                       = 0;\u000a    const GLenum INVALID_ENUM                   = 0x0500;\u000a    const GLenum INVALID_VALUE                  = 0x0501;\u000a    const GLenum INVALID_OPERATION              = 0x0502;\u000a    const GLenum OUT_OF_MEMORY                  = 0x0505;\u000a\u000a    /* FrontFaceDirection */\u000a    const GLenum CW                             = 0x0900;\u000a    const GLenum CCW                            = 0x0901;\u000a\u000a    /* GetPName */\u000a    const GLenum LINE_WIDTH                     = 0x0B21;\u000a    const GLenum ALIASED_POINT_SIZE_RANGE       = 0x846D;\u000a    const GLenum ALIASED_LINE_WIDTH_RANGE       = 0x846E;\u000a    const GLenum CULL_FACE_MODE                 = 0x0B45;\u000a    const GLenum FRONT_FACE                     = 0x0B46;\u000a    const GLenum DEPTH_RANGE                    = 0x0B70;\u000a    const GLenum DEPTH_WRITEMASK                = 0x0B72;\u000a    const GLenum DEPTH_CLEAR_VALUE              = 0x0B73;\u000a    const GLenum DEPTH_FUNC                     = 0x0B74;\u000a    const GLenum STENCIL_CLEAR_VALUE            = 0x0B91;\u000a    const GLenum STENCIL_FUNC                   = 0x0B92;\u000a    const GLenum STENCIL_FAIL                   = 0x0B94;\u000a    const GLenum STENCIL_PASS_DEPTH_FAIL        = 0x0B95;\u000a    const GLenum STENCIL_PASS_DEPTH_PASS        = 0x0B96;\u000a    const GLenum STENCIL_REF                    = 0x0B97;\u000a    const GLenum STENCIL_VALUE_MASK             = 0x0B93;\u000a    const GLenum STENCIL_WRITEMASK              = 0x0B98;\u000a    const GLenum STENCIL_BACK_FUNC              = 0x8800;\u000a    const GLenum STENCIL_BACK_FAIL              = 0x8801;\u000a    const GLenum STENCIL_BACK_PASS_DEPTH_FAIL   = 0x8802;\u000a    const GLenum STENCIL_BACK_PASS_DEPTH_PASS   = 0x8803;\u000a    const GLenum STENCIL_BACK_REF               = 0x8CA3;\u000a    const GLenum STENCIL_BACK_VALUE_MASK        = 0x8CA4;\u000a    const GLenum STENCIL_BACK_WRITEMASK         = 0x8CA5;\u000a    const GLenum VIEWPORT                       = 0x0BA2;\u000a    const GLenum SCISSOR_BOX                    = 0x0C10;\u000a    /*      SCISSOR_TEST */\u000a    const GLenum COLOR_CLEAR_VALUE              = 0x0C22;\u000a    const GLenum COLOR_WRITEMASK                = 0x0C23;\u000a    const GLenum UNPACK_ALIGNMENT               = 0x0CF5;\u000a    const GLenum PACK_ALIGNMENT                 = 0x0D05;\u000a    const GLenum MAX_TEXTURE_SIZE               = 0x0D33;\u000a    const GLenum MAX_VIEWPORT_DIMS              = 0x0D3A;\u000a    const GLenum SUBPIXEL_BITS                  = 0x0D50;\u000a    const GLenum RED_BITS                       = 0x0D52;\u000a    const GLenum GREEN_BITS                     = 0x0D53;\u000a    const GLenum BLUE_BITS                      = 0x0D54;\u000a    const GLenum ALPHA_BITS                     = 0x0D55;\u000a    const GLenum DEPTH_BITS                     = 0x0D56;\u000a    const GLenum STENCIL_BITS                   = 0x0D57;\u000a    const GLenum POLYGON_OFFSET_UNITS           = 0x2A00;\u000a    /*      POLYGON_OFFSET_FILL */\u000a    const GLenum POLYGON_OFFSET_FACTOR          = 0x8038;\u000a    const GLenum TEXTURE_BINDING_2D             = 0x8069;\u000a    const GLenum SAMPLE_BUFFERS                 = 0x80A8;\u000a    const GLenum SAMPLES                        = 0x80A9;\u000a    const GLenum SAMPLE_COVERAGE_VALUE          = 0x80AA;\u000a    const GLenum SAMPLE_COVERAGE_INVERT         = 0x80AB;\u000a\u000a    /* GetTextureParameter */\u000a    /*      TEXTURE_MAG_FILTER */\u000a    /*      TEXTURE_MIN_FILTER */\u000a    /*      TEXTURE_WRAP_S */\u000a    /*      TEXTURE_WRAP_T */\u000a\u000a    const GLenum COMPRESSED_TEXTURE_FORMATS     = 0x86A3;\u000a\u000a    /* HintMode */\u000a    const GLenum DONT_CARE                      = 0x1100;\u000a    const GLenum FASTEST                        = 0x1101;\u000a    const GLenum NICEST                         = 0x1102;\u000a\u000a    /* HintTarget */\u000a    const GLenum GENERATE_MIPMAP_HINT            = 0x8192;\u000a\u000a    /* DataType */\u000a    const GLenum BYTE                           = 0x1400;\u000a    const GLenum UNSIGNED_BYTE                  = 0x1401;\u000a    const GLenum SHORT                          = 0x1402;\u000a    const GLenum UNSIGNED_SHORT                 = 0x1403;\u000a    const GLenum INT                            = 0x1404;\u000a    const GLenum UNSIGNED_INT                   = 0x1405;\u000a    const GLenum FLOAT                          = 0x1406;\u000a\u000a    /* PixelFormat */\u000a    const GLenum DEPTH_COMPONENT                = 0x1902;\u000a    const GLenum ALPHA                          = 0x1906;\u000a    const GLenum RGB                            = 0x1907;\u000a    const GLenum RGBA                           = 0x1908;\u000a    const GLenum LUMINANCE                      = 0x1909;\u000a    const GLenum LUMINANCE_ALPHA                = 0x190A;\u000a\u000a    /* PixelType */\u000a    /*      UNSIGNED_BYTE */\u000a    const GLenum UNSIGNED_SHORT_4_4_4_4         = 0x8033;\u000a    const GLenum UNSIGNED_SHORT_5_5_5_1         = 0x8034;\u000a    const GLenum UNSIGNED_SHORT_5_6_5           = 0x8363;\u000a\u000a    /* Shaders */\u000a    const GLenum FRAGMENT_SHADER                  = 0x8B30;\u000a    const GLenum VERTEX_SHADER                    = 0x8B31;\u000a    const GLenum MAX_VERTEX_ATTRIBS               = 0x8869;\u000a    const GLenum MAX_VERTEX_UNIFORM_VECTORS       = 0x8DFB;\u000a    const GLenum MAX_VARYING_VECTORS              = 0x8DFC;\u000a    const GLenum MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\u000a    const GLenum MAX_VERTEX_TEXTURE_IMAGE_UNITS   = 0x8B4C;\u000a    const GLenum MAX_TEXTURE_IMAGE_UNITS          = 0x8872;\u000a    const GLenum MAX_FRAGMENT_UNIFORM_VECTORS     = 0x8DFD;\u000a    const GLenum SHADER_TYPE                      = 0x8B4F;\u000a    const GLenum DELETE_STATUS                    = 0x8B80;\u000a    const GLenum LINK_STATUS                      = 0x8B82;\u000a    const GLenum VALIDATE_STATUS                  = 0x8B83;\u000a    const GLenum ATTACHED_SHADERS                 = 0x8B85;\u000a    const GLenum ACTIVE_UNIFORMS                  = 0x8B86;\u000a    const GLenum ACTIVE_ATTRIBUTES                = 0x8B89;\u000a    const GLenum SHADING_LANGUAGE_VERSION         = 0x8B8C;\u000a    const GLenum CURRENT_PROGRAM                  = 0x8B8D;\u000a\u000a    /* StencilFunction */\u000a    const GLenum NEVER                          = 0x0200;\u000a    const GLenum LESS                           = 0x0201;\u000a    const GLenum EQUAL                          = 0x0202;\u000a    const GLenum LEQUAL                         = 0x0203;\u000a    const GLenum GREATER                        = 0x0204;\u000a    const GLenum NOTEQUAL                       = 0x0205;\u000a    const GLenum GEQUAL                         = 0x0206;\u000a    const GLenum ALWAYS                         = 0x0207;\u000a\u000a    /* StencilOp */\u000a    /*      ZERO */\u000a    const GLenum KEEP                           = 0x1E00;\u000a    const GLenum REPLACE                        = 0x1E01;\u000a    const GLenum INCR                           = 0x1E02;\u000a    const GLenum DECR                           = 0x1E03;\u000a    const GLenum INVERT                         = 0x150A;\u000a    const GLenum INCR_WRAP                      = 0x8507;\u000a    const GLenum DECR_WRAP                      = 0x8508;\u000a\u000a    /* StringName */\u000a    const GLenum VENDOR                         = 0x1F00;\u000a    const GLenum RENDERER                       = 0x1F01;\u000a    const GLenum VERSION                        = 0x1F02;\u000a\u000a    /* TextureMagFilter */\u000a    const GLenum NEAREST                        = 0x2600;\u000a    const GLenum LINEAR                         = 0x2601;\u000a\u000a    /* TextureMinFilter */\u000a    /*      NEAREST */\u000a    /*      LINEAR */\u000a    const GLenum NEAREST_MIPMAP_NEAREST         = 0x2700;\u000a    const GLenum LINEAR_MIPMAP_NEAREST          = 0x2701;\u000a    const GLenum NEAREST_MIPMAP_LINEAR          = 0x2702;\u000a    const GLenum LINEAR_MIPMAP_LINEAR           = 0x2703;\u000a\u000a    /* TextureParameterName */\u000a    const GLenum TEXTURE_MAG_FILTER             = 0x2800;\u000a    const GLenum TEXTURE_MIN_FILTER             = 0x2801;\u000a    const GLenum TEXTURE_WRAP_S                 = 0x2802;\u000a    const GLenum TEXTURE_WRAP_T                 = 0x2803;\u000a\u000a    /* TextureTarget */\u000a    const GLenum TEXTURE_2D                     = 0x0DE1;\u000a    const GLenum TEXTURE                        = 0x1702;\u000a\u000a    const GLenum TEXTURE_CUBE_MAP               = 0x8513;\u000a    const GLenum TEXTURE_BINDING_CUBE_MAP       = 0x8514;\u000a    const GLenum TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\u000a    const GLenum TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\u000a    const GLenum TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\u000a    const GLenum TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\u000a    const GLenum TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\u000a    const GLenum TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851A;\u000a    const GLenum MAX_CUBE_MAP_TEXTURE_SIZE      = 0x851C;\u000a\u000a    /* TextureUnit */\u000a    const GLenum TEXTURE0                       = 0x84C0;\u000a    const GLenum TEXTURE1                       = 0x84C1;\u000a    const GLenum TEXTURE2                       = 0x84C2;\u000a    const GLenum TEXTURE3                       = 0x84C3;\u000a    const GLenum TEXTURE4                       = 0x84C4;\u000a    const GLenum TEXTURE5                       = 0x84C5;\u000a    const GLenum TEXTURE6                       = 0x84C6;\u000a    const GLenum TEXTURE7                       = 0x84C7;\u000a    const GLenum TEXTURE8                       = 0x84C8;\u000a    const GLenum TEXTURE9                       = 0x84C9;\u000a    const GLenum TEXTURE10                      = 0x84CA;\u000a    const GLenum TEXTURE11                      = 0x84CB;\u000a    const GLenum TEXTURE12                      = 0x84CC;\u000a    const GLenum TEXTURE13                      = 0x84CD;\u000a    const GLenum TEXTURE14                      = 0x84CE;\u000a    const GLenum TEXTURE15                      = 0x84CF;\u000a    const GLenum TEXTURE16                      = 0x84D0;\u000a    const GLenum TEXTURE17                      = 0x84D1;\u000a    const GLenum TEXTURE18                      = 0x84D2;\u000a    const GLenum TEXTURE19                      = 0x84D3;\u000a    const GLenum TEXTURE20                      = 0x84D4;\u000a    const GLenum TEXTURE21                      = 0x84D5;\u000a    const GLenum TEXTURE22                      = 0x84D6;\u000a    const GLenum TEXTURE23                      = 0x84D7;\u000a    const GLenum TEXTURE24                      = 0x84D8;\u000a    const GLenum TEXTURE25                      = 0x84D9;\u000a    const GLenum TEXTURE26                      = 0x84DA;\u000a    const GLenum TEXTURE27                      = 0x84DB;\u000a    const GLenum TEXTURE28                      = 0x84DC;\u000a    const GLenum TEXTURE29                      = 0x84DD;\u000a    const GLenum TEXTURE30                      = 0x84DE;\u000a    const GLenum TEXTURE31                      = 0x84DF;\u000a    const GLenum ACTIVE_TEXTURE                 = 0x84E0;\u000a\u000a    /* TextureWrapMode */\u000a    const GLenum REPEAT                         = 0x2901;\u000a    const GLenum CLAMP_TO_EDGE                  = 0x812F;\u000a    const GLenum MIRRORED_REPEAT                = 0x8370;\u000a\u000a    /* Uniform Types */\u000a    const GLenum FLOAT_VEC2                     = 0x8B50;\u000a    const GLenum FLOAT_VEC3                     = 0x8B51;\u000a    const GLenum FLOAT_VEC4                     = 0x8B52;\u000a    const GLenum INT_VEC2                       = 0x8B53;\u000a    const GLenum INT_VEC3                       = 0x8B54;\u000a    const GLenum INT_VEC4                       = 0x8B55;\u000a    const GLenum BOOL                           = 0x8B56;\u000a    const GLenum BOOL_VEC2                      = 0x8B57;\u000a    const GLenum BOOL_VEC3                      = 0x8B58;\u000a    const GLenum BOOL_VEC4                      = 0x8B59;\u000a    const GLenum FLOAT_MAT2                     = 0x8B5A;\u000a    const GLenum FLOAT_MAT3                     = 0x8B5B;\u000a    const GLenum FLOAT_MAT4                     = 0x8B5C;\u000a    const GLenum SAMPLER_2D                     = 0x8B5E;\u000a    const GLenum SAMPLER_CUBE                   = 0x8B60;\u000a\u000a    /* Vertex Arrays */\u000a    const GLenum VERTEX_ATTRIB_ARRAY_ENABLED        = 0x8622;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_SIZE           = 0x8623;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_STRIDE         = 0x8624;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_TYPE           = 0x8625;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_NORMALIZED     = 0x886A;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_POINTER        = 0x8645;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\u000a\u000a    /* Read Format */\u000a    const GLenum IMPLEMENTATION_COLOR_READ_TYPE   = 0x8B9A;\u000a    const GLenum IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B;\u000a\u000a    /* Shader Source */\u000a    const GLenum COMPILE_STATUS                 = 0x8B81;\u000a\u000a    /* Shader Precision-Specified Types */\u000a    const GLenum LOW_FLOAT                      = 0x8DF0;\u000a    const GLenum MEDIUM_FLOAT                   = 0x8DF1;\u000a    const GLenum HIGH_FLOAT                     = 0x8DF2;\u000a    const GLenum LOW_INT                        = 0x8DF3;\u000a    const GLenum MEDIUM_INT                     = 0x8DF4;\u000a    const GLenum HIGH_INT                       = 0x8DF5;\u000a\u000a    /* Framebuffer Object. */\u000a    const GLenum FRAMEBUFFER                    = 0x8D40;\u000a    const GLenum RENDERBUFFER                   = 0x8D41;\u000a\u000a    const GLenum RGBA4                          = 0x8056;\u000a    const GLenum RGB5_A1                        = 0x8057;\u000a    const GLenum RGB565                         = 0x8D62;\u000a    const GLenum DEPTH_COMPONENT16              = 0x81A5;\u000a    const GLenum STENCIL_INDEX8                 = 0x8D48;\u000a    const GLenum DEPTH_STENCIL                  = 0x84F9;\u000a\u000a    const GLenum RENDERBUFFER_WIDTH             = 0x8D42;\u000a    const GLenum RENDERBUFFER_HEIGHT            = 0x8D43;\u000a    const GLenum RENDERBUFFER_INTERNAL_FORMAT   = 0x8D44;\u000a    const GLenum RENDERBUFFER_RED_SIZE          = 0x8D50;\u000a    const GLenum RENDERBUFFER_GREEN_SIZE        = 0x8D51;\u000a    const GLenum RENDERBUFFER_BLUE_SIZE         = 0x8D52;\u000a    const GLenum RENDERBUFFER_ALPHA_SIZE        = 0x8D53;\u000a    const GLenum RENDERBUFFER_DEPTH_SIZE        = 0x8D54;\u000a    const GLenum RENDERBUFFER_STENCIL_SIZE      = 0x8D55;\u000a\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE           = 0x8CD0;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_OBJECT_NAME           = 0x8CD1;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL         = 0x8CD2;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\u000a\u000a    const GLenum COLOR_ATTACHMENT0              = 0x8CE0;\u000a    const GLenum DEPTH_ATTACHMENT               = 0x8D00;\u000a    const GLenum STENCIL_ATTACHMENT             = 0x8D20;\u000a    const GLenum DEPTH_STENCIL_ATTACHMENT       = 0x821A;\u000a\u000a    const GLenum NONE                           = 0;\u000a\u000a    const GLenum FRAMEBUFFER_COMPLETE                      = 0x8CD5;\u000a    const GLenum FRAMEBUFFER_INCOMPLETE_ATTACHMENT         = 0x8CD6;\u000a    const GLenum FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\u000a    const GLenum FRAMEBUFFER_INCOMPLETE_DIMENSIONS         = 0x8CD9;\u000a    const GLenum FRAMEBUFFER_UNSUPPORTED                   = 0x8CDD;\u000a\u000a    const GLenum FRAMEBUFFER_BINDING            = 0x8CA6;\u000a    const GLenum RENDERBUFFER_BINDING           = 0x8CA7;\u000a    const GLenum MAX_RENDERBUFFER_SIZE          = 0x84E8;\u000a\u000a    const GLenum INVALID_FRAMEBUFFER_OPERATION  = 0x0506;\u000a\u000a    /* WebGL-specific enums */\u000a    const GLenum UNPACK_FLIP_Y_WEBGL            = 0x9240;\u000a    const GLenum UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\u000a    const GLenum CONTEXT_LOST_WEBGL             = 0x9242;\u000a    const GLenum UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\u000a    const GLenum BROWSER_DEFAULT_WEBGL          = 0x9244;\u000a\u000a    // The canvas might actually be null in some cases, apparently.\u000a    readonly attribute (HTMLCanvasElement or OffscreenCanvas)? canvas;\u000a    readonly attribute GLsizei drawingBufferWidth;\u000a    readonly attribute GLsizei drawingBufferHeight;\u000a\u000a    [WebGLHandlesContextLoss] WebGLContextAttributes? getContextAttributes();\u000a    [WebGLHandlesContextLoss] boolean isContextLost();\u000a\u000a    [NeedsCallerType]\u000a    sequence<DOMString>? getSupportedExtensions();\u000a\u000a    [Throws, NeedsCallerType]\u000a    object? getExtension(DOMString name);\u000a\u000a    void activeTexture(GLenum texture);\u000a    void attachShader(WebGLProgram program, WebGLShader shader);\u000a    void bindAttribLocation(WebGLProgram program, GLuint index, DOMString name);\u000a    void bindBuffer(GLenum target, WebGLBuffer? buffer);\u000a    void bindFramebuffer(GLenum target, WebGLFramebuffer? framebuffer);\u000a    void bindRenderbuffer(GLenum target, WebGLRenderbuffer? renderbuffer);\u000a    void bindTexture(GLenum target, WebGLTexture? texture);\u000a    void blendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);\u000a    void blendEquation(GLenum mode);\u000a    void blendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);\u000a    void blendFunc(GLenum sfactor, GLenum dfactor);\u000a    void blendFuncSeparate(GLenum srcRGB, GLenum dstRGB,\u000a                           GLenum srcAlpha, GLenum dstAlpha);\u000a\u000a    [WebGLHandlesContextLoss] GLenum checkFramebufferStatus(GLenum target);\u000a    void clear(GLbitfield mask);\u000a    void clearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);\u000a    void clearDepth(GLclampf depth);\u000a    void clearStencil(GLint s);\u000a    void colorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);\u000a    void compileShader(WebGLShader shader);\u000a\u000a    void copyTexImage2D(GLenum target, GLint level, GLenum internalformat,\u000a                        GLint x, GLint y, GLsizei width, GLsizei height,\u000a                        GLint border);\u000a    void copyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                           GLint x, GLint y, GLsizei width, GLsizei height);\u000a\u000a    WebGLBuffer? createBuffer();\u000a    WebGLFramebuffer? createFramebuffer();\u000a    WebGLProgram? createProgram();\u000a    WebGLRenderbuffer? createRenderbuffer();\u000a    WebGLShader? createShader(GLenum type);\u000a    WebGLTexture? createTexture();\u000a\u000a    void cullFace(GLenum mode);\u000a\u000a    void deleteBuffer(WebGLBuffer? buffer);\u000a    void deleteFramebuffer(WebGLFramebuffer? framebuffer);\u000a    void deleteProgram(WebGLProgram? program);\u000a    void deleteRenderbuffer(WebGLRenderbuffer? renderbuffer);\u000a    void deleteShader(WebGLShader? shader);\u000a    void deleteTexture(WebGLTexture? texture);\u000a\u000a    void depthFunc(GLenum func);\u000a    void depthMask(GLboolean flag);\u000a    void depthRange(GLclampf zNear, GLclampf zFar);\u000a    void detachShader(WebGLProgram program, WebGLShader shader);\u000a    void disable(GLenum cap);\u000a    void disableVertexAttribArray(GLuint index);\u000a    void drawArrays(GLenum mode, GLint first, GLsizei count);\u000a    void drawElements(GLenum mode, GLsizei count, GLenum type, GLintptr offset);\u000a\u000a    void enable(GLenum cap);\u000a    void enableVertexAttribArray(GLuint index);\u000a    void finish();\u000a    void flush();\u000a    void framebufferRenderbuffer(GLenum target, GLenum attachment,\u000a                                 GLenum renderbuffertarget,\u000a                                 WebGLRenderbuffer? renderbuffer);\u000a    void framebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget,\u000a                              WebGLTexture? texture, GLint level);\u000a    void frontFace(GLenum mode);\u000a\u000a    void generateMipmap(GLenum target);\u000a\u000a    [NewObject]\u000a    WebGLActiveInfo? getActiveAttrib(WebGLProgram program, GLuint index);\u000a    [NewObject]\u000a    WebGLActiveInfo? getActiveUniform(WebGLProgram program, GLuint index);\u000a\u000a    sequence<WebGLShader>? getAttachedShaders(WebGLProgram program);\u000a\u000a    [WebGLHandlesContextLoss] GLint getAttribLocation(WebGLProgram program, DOMString name);\u000a\u000a    any getBufferParameter(GLenum target, GLenum pname);\u000a    [Throws]\u000a    any getParameter(GLenum pname);\u000a\u000a    [WebGLHandlesContextLoss] GLenum getError();\u000a\u000a    [Throws]\u000a    any getFramebufferAttachmentParameter(GLenum target, GLenum attachment,\u000a                                          GLenum pname);\u000a    any getProgramParameter(WebGLProgram program, GLenum pname);\u000a    DOMString? getProgramInfoLog(WebGLProgram program);\u000a    any getRenderbufferParameter(GLenum target, GLenum pname);\u000a    any getShaderParameter(WebGLShader shader, GLenum pname);\u000a\u000a    [NewObject]\u000a    WebGLShaderPrecisionFormat? getShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype);\u000a\u000a    DOMString? getShaderInfoLog(WebGLShader shader);\u000a\u000a    DOMString? getShaderSource(WebGLShader shader);\u000a\u000a    any getTexParameter(GLenum target, GLenum pname);\u000a\u000a    any getUniform(WebGLProgram program, WebGLUniformLocation location);\u000a\u000a    [NewObject]\u000a    WebGLUniformLocation? getUniformLocation(WebGLProgram program, DOMString name);\u000a\u000a    [Throws]\u000a    any getVertexAttrib(GLuint index, GLenum pname);\u000a\u000a    [WebGLHandlesContextLoss] GLintptr getVertexAttribOffset(GLuint index, GLenum pname);\u000a\u000a    void hint(GLenum target, GLenum mode);\u000a    [WebGLHandlesContextLoss] GLboolean isBuffer(WebGLBuffer? buffer);\u000a    [WebGLHandlesContextLoss] GLboolean isEnabled(GLenum cap);\u000a    [WebGLHandlesContextLoss] GLboolean isFramebuffer(WebGLFramebuffer? framebuffer);\u000a    [WebGLHandlesContextLoss] GLboolean isProgram(WebGLProgram? program);\u000a    [WebGLHandlesContextLoss] GLboolean isRenderbuffer(WebGLRenderbuffer? renderbuffer);\u000a    [WebGLHandlesContextLoss] GLboolean isShader(WebGLShader? shader);\u000a    [WebGLHandlesContextLoss] GLboolean isTexture(WebGLTexture? texture);\u000a    void lineWidth(GLfloat width);\u000a    void linkProgram(WebGLProgram program);\u000a    void pixelStorei(GLenum pname, GLint param);\u000a    void polygonOffset(GLfloat factor, GLfloat units);\u000a\u000a    void renderbufferStorage(GLenum target, GLenum internalformat,\u000a                             GLsizei width, GLsizei height);\u000a    void sampleCoverage(GLclampf value, GLboolean invert);\u000a    void scissor(GLint x, GLint y, GLsizei width, GLsizei height);\u000a\u000a    void shaderSource(WebGLShader shader, DOMString source);\u000a\u000a    void stencilFunc(GLenum func, GLint ref, GLuint mask);\u000a    void stencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);\u000a    void stencilMask(GLuint mask);\u000a    void stencilMaskSeparate(GLenum face, GLuint mask);\u000a    void stencilOp(GLenum fail, GLenum zfail, GLenum zpass);\u000a    void stencilOpSeparate(GLenum face, GLenum fail, GLenum zfail, GLenum zpass);\u000a\u000a    void texParameterf(GLenum target, GLenum pname, GLfloat param);\u000a    void texParameteri(GLenum target, GLenum pname, GLint param);\u000a\u000a    void uniform1f(WebGLUniformLocation? location, GLfloat x);\u000a    void uniform2f(WebGLUniformLocation? location, GLfloat x, GLfloat y);\u000a    void uniform3f(WebGLUniformLocation? location, GLfloat x, GLfloat y, GLfloat z);\u000a    void uniform4f(WebGLUniformLocation? location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\u000a\u000a    void uniform1i(WebGLUniformLocation? location, GLint x);\u000a    void uniform2i(WebGLUniformLocation? location, GLint x, GLint y);\u000a    void uniform3i(WebGLUniformLocation? location, GLint x, GLint y, GLint z);\u000a    void uniform4i(WebGLUniformLocation? location, GLint x, GLint y, GLint z, GLint w);\u000a\u000a    void useProgram(WebGLProgram? program);\u000a    void validateProgram(WebGLProgram program);\u000a\u000a    void vertexAttrib1f(GLuint indx, GLfloat x);\u000a    void vertexAttrib1fv(GLuint indx, Float32List values);\u000a    void vertexAttrib2f(GLuint indx, GLfloat x, GLfloat y);\u000a    void vertexAttrib2fv(GLuint indx, Float32List values);\u000a    void vertexAttrib3f(GLuint indx, GLfloat x, GLfloat y, GLfloat z);\u000a    void vertexAttrib3fv(GLuint indx, Float32List values);\u000a    void vertexAttrib4f(GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\u000a    void vertexAttrib4fv(GLuint indx, Float32List values);\u000a    void vertexAttribPointer(GLuint indx, GLint size, GLenum type,\u000a                             GLboolean normalized, GLsizei stride, GLintptr offset);\u000a\u000a    void viewport(GLint x, GLint y, GLsizei width, GLsizei height);\u000a};\u000a\u000a[Exposed=(Window,Worker),\u000a Func=\"mozilla::dom::OffscreenCanvas::PrefEnabledOnWorkerThread\"]\u000ainterface WebGLRenderingContext {\u000a    // bufferData has WebGL2 overloads.\u000a    void bufferData(GLenum target, GLsizeiptr size, GLenum usage);\u000a    void bufferData(GLenum target, ArrayBuffer? data, GLenum usage);\u000a    void bufferData(GLenum target, ArrayBufferView data, GLenum usage);\u000a    // bufferSubData has WebGL2 overloads.\u000a    void bufferSubData(GLenum target, GLintptr offset, ArrayBuffer data);\u000a    void bufferSubData(GLenum target, GLintptr offset, ArrayBufferView data);\u000a\u000a    // compressedTexImage2D has WebGL2 overloads.\u000a    void compressedTexImage2D(GLenum target, GLint level, GLenum internalformat,\u000a                              GLsizei width, GLsizei height, GLint border,\u000a                              ArrayBufferView data);\u000a    // compressedTexSubImage2D has WebGL2 overloads.\u000a    void compressedTexSubImage2D(GLenum target, GLint level,\u000a                                 GLint xoffset, GLint yoffset,\u000a                                 GLsizei width, GLsizei height, GLenum format,\u000a                                 ArrayBufferView data);\u000a\u000a    // readPixels has WebGL2 overloads.\u000a    [Throws, NeedsCallerType]\u000a    void readPixels(GLint x, GLint y, GLsizei width, GLsizei height,\u000a                    GLenum format, GLenum type, ArrayBufferView? pixels);\u000a\u000a    // texImage2D has WebGL2 overloads.\u000a    // Overloads must share [Throws].\u000a    [Throws] // Can't actually throw.\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLsizei width, GLsizei height, GLint border, GLenum format,\u000a                    GLenum type, ArrayBufferView? pixels);\u000a    [Throws] // Can't actually throw.\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLenum format, GLenum type, ImageBitmap pixels);\u000a    [Throws] // Can't actually throw.\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLenum format, GLenum type, ImageData pixels);\u000a    [Throws]\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLenum format, GLenum type, HTMLImageElement image); // May throw DOMException\u000a    [Throws]\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLenum format, GLenum type, HTMLCanvasElement canvas); // May throw DOMException\u000a    [Throws]\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat,\u000a                    GLenum format, GLenum type, HTMLVideoElement video); // May throw DOMException\u000a\u000a    // texSubImage2D has WebGL2 overloads.\u000a    [Throws] // Can't actually throw.\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLsizei width, GLsizei height,\u000a                       GLenum format, GLenum type, ArrayBufferView? pixels);\u000a    [Throws] // Can't actually throw.\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLenum format, GLenum type, ImageBitmap pixels);\u000a    [Throws] // Can't actually throw.\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLenum format, GLenum type, ImageData pixels);\u000a    [Throws]\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLenum format, GLenum type, HTMLImageElement image); // May throw DOMException\u000a    [Throws]\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLenum format, GLenum type, HTMLCanvasElement canvas); // May throw DOMException\u000a    [Throws]\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                       GLenum format, GLenum type, HTMLVideoElement video); // May throw DOMException\u000a\u000a    // uniform*fv have WebGL2 overloads, or rather extensions, that are not\u000a    // distinguishable from the WebGL1 versions when called with two arguments.\u000a    void uniform1fv(WebGLUniformLocation? location, Float32List data);\u000a    void uniform2fv(WebGLUniformLocation? location, Float32List data);\u000a    void uniform3fv(WebGLUniformLocation? location, Float32List data);\u000a    void uniform4fv(WebGLUniformLocation? location, Float32List data);\u000a\u000a    // uniform*iv have WebGL2 overloads, or rather extensions, that are not\u000a    // distinguishable from the WebGL1 versions when called with two arguments.\u000a    void uniform1iv(WebGLUniformLocation? location, Int32List data);\u000a    void uniform2iv(WebGLUniformLocation? location, Int32List data);\u000a    void uniform3iv(WebGLUniformLocation? location, Int32List data);\u000a    void uniform4iv(WebGLUniformLocation? location, Int32List data);\u000a\u000a    // uniformMatrix*fv have WebGL2 overloads, or rather extensions, that are\u000a    // not distinguishable from the WebGL1 versions when called with two\u000a    // arguments.\u000a    void uniformMatrix2fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data);\u000a    void uniformMatrix3fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data);\u000a    void uniformMatrix4fv(WebGLUniformLocation? location, GLboolean transpose, Float32List data);\u000a};\u000a\u000aWebGLRenderingContext implements WebGLRenderingContextBase;\u000a\u000a// For OffscreenCanvas\u000a// Reference: https://wiki.whatwg.org/wiki/OffscreenCanvas\u000a[Exposed=(Window,Worker)]\u000apartial interface WebGLRenderingContext {\u000a    [Func=\"mozilla::dom::DOMPrefs::OffscreenCanvasEnabled\"]\u000a    void commit();\u000a};\u000a\u000a////////////////////////////////////////\u000a// specific extension interfaces\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_compressed_texture_s3tc\u000a{\u000a    const GLenum COMPRESSED_RGB_S3TC_DXT1_EXT  = 0x83F0;\u000a    const GLenum COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\u000a    const GLenum COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\u000a    const GLenum COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_compressed_texture_s3tc_srgb {\u000a    /* Compressed Texture Formats */\u000a    const GLenum COMPRESSED_SRGB_S3TC_DXT1_EXT        = 0x8C4C;\u000a    const GLenum COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT  = 0x8C4D;\u000a    const GLenum COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT  = 0x8C4E;\u000a    const GLenum COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT  = 0x8C4F;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_compressed_texture_astc {\u000a    /* Compressed Texture Format */\u000a    const GLenum COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93B0;\u000a    const GLenum COMPRESSED_RGBA_ASTC_5x4_KHR = 0x93B1;\u000a    const GLenum COMPRESSED_RGBA_ASTC_5x5_KHR = 0x93B2;\u000a    const GLenum COMPRESSED_RGBA_ASTC_6x5_KHR = 0x93B3;\u000a    const GLenum COMPRESSED_RGBA_ASTC_6x6_KHR = 0x93B4;\u000a    const GLenum COMPRESSED_RGBA_ASTC_8x5_KHR = 0x93B5;\u000a    const GLenum COMPRESSED_RGBA_ASTC_8x6_KHR = 0x93B6;\u000a    const GLenum COMPRESSED_RGBA_ASTC_8x8_KHR = 0x93B7;\u000a    const GLenum COMPRESSED_RGBA_ASTC_10x5_KHR = 0x93B8;\u000a    const GLenum COMPRESSED_RGBA_ASTC_10x6_KHR = 0x93B9;\u000a    const GLenum COMPRESSED_RGBA_ASTC_10x8_KHR = 0x93BA;\u000a    const GLenum COMPRESSED_RGBA_ASTC_10x10_KHR = 0x93BB;\u000a    const GLenum COMPRESSED_RGBA_ASTC_12x10_KHR = 0x93BC;\u000a    const GLenum COMPRESSED_RGBA_ASTC_12x12_KHR = 0x93BD;\u000a\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 0x93D0;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 0x93D1;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 0x93D2;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 0x93D3;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 0x93D4;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 0x93D5;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 0x93D6;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 0x93D7;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 0x93D8;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 0x93D9;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 0x93DA;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93DB;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93DC;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93DD;\u000a\u000a    // Profile query support.\u000a    sequence<DOMString>? getSupportedProfiles();\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_compressed_texture_atc\u000a{\u000a    const GLenum COMPRESSED_RGB_ATC_WEBGL                     = 0x8C92;\u000a    const GLenum COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL     = 0x8C93;\u000a    const GLenum COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87EE;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_compressed_texture_etc\u000a{\u000a    const GLenum COMPRESSED_R11_EAC                                 = 0x9270;\u000a    const GLenum COMPRESSED_SIGNED_R11_EAC                          = 0x9271;\u000a    const GLenum COMPRESSED_RG11_EAC                                = 0x9272;\u000a    const GLenum COMPRESSED_SIGNED_RG11_EAC                         = 0x9273;\u000a    const GLenum COMPRESSED_RGB8_ETC2                               = 0x9274;\u000a    const GLenum COMPRESSED_SRGB8_ETC2                              = 0x9275;\u000a    const GLenum COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2           = 0x9276;\u000a    const GLenum COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2          = 0x9277;\u000a    const GLenum COMPRESSED_RGBA8_ETC2_EAC                          = 0x9278;\u000a    const GLenum COMPRESSED_SRGB8_ALPHA8_ETC2_EAC                   = 0x9279;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_compressed_texture_etc1\u000a{\u000a    const GLenum COMPRESSED_RGB_ETC1_WEBGL = 0x8D64;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_compressed_texture_pvrtc\u000a{\u000a    const GLenum COMPRESSED_RGB_PVRTC_4BPPV1_IMG  = 0x8C00;\u000a    const GLenum COMPRESSED_RGB_PVRTC_2BPPV1_IMG  = 0x8C01;\u000a    const GLenum COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02;\u000a    const GLenum COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_debug_renderer_info\u000a{\u000a    const GLenum UNMASKED_VENDOR_WEBGL        = 0x9245;\u000a    const GLenum UNMASKED_RENDERER_WEBGL      = 0x9246;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_debug_shaders\u000a{\u000a    DOMString getTranslatedShaderSource(WebGLShader shader);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_depth_texture\u000a{\u000a    const GLenum UNSIGNED_INT_24_8_WEBGL = 0x84FA;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface OES_element_index_uint\u000a{\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface EXT_frag_depth\u000a{\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_lose_context {\u000a    void loseContext();\u000a    void restoreContext();\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface EXT_texture_filter_anisotropic\u000a{\u000a    const GLenum TEXTURE_MAX_ANISOTROPY_EXT     = 0x84FE;\u000a    const GLenum MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface EXT_sRGB\u000a{\u000a    const GLenum SRGB_EXT                                  = 0x8C40;\u000a    const GLenum SRGB_ALPHA_EXT                            = 0x8C42;\u000a    const GLenum SRGB8_ALPHA8_EXT                          = 0x8C43;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT = 0x8210;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface OES_standard_derivatives {\u000a    const GLenum FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8B8B;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface OES_texture_float\u000a{\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_draw_buffers {\u000a    const GLenum COLOR_ATTACHMENT0_WEBGL     = 0x8CE0;\u000a    const GLenum COLOR_ATTACHMENT1_WEBGL     = 0x8CE1;\u000a    const GLenum COLOR_ATTACHMENT2_WEBGL     = 0x8CE2;\u000a    const GLenum COLOR_ATTACHMENT3_WEBGL     = 0x8CE3;\u000a    const GLenum COLOR_ATTACHMENT4_WEBGL     = 0x8CE4;\u000a    const GLenum COLOR_ATTACHMENT5_WEBGL     = 0x8CE5;\u000a    const GLenum COLOR_ATTACHMENT6_WEBGL     = 0x8CE6;\u000a    const GLenum COLOR_ATTACHMENT7_WEBGL     = 0x8CE7;\u000a    const GLenum COLOR_ATTACHMENT8_WEBGL     = 0x8CE8;\u000a    const GLenum COLOR_ATTACHMENT9_WEBGL     = 0x8CE9;\u000a    const GLenum COLOR_ATTACHMENT10_WEBGL    = 0x8CEA;\u000a    const GLenum COLOR_ATTACHMENT11_WEBGL    = 0x8CEB;\u000a    const GLenum COLOR_ATTACHMENT12_WEBGL    = 0x8CEC;\u000a    const GLenum COLOR_ATTACHMENT13_WEBGL    = 0x8CED;\u000a    const GLenum COLOR_ATTACHMENT14_WEBGL    = 0x8CEE;\u000a    const GLenum COLOR_ATTACHMENT15_WEBGL    = 0x8CEF;\u000a\u000a    const GLenum DRAW_BUFFER0_WEBGL          = 0x8825;\u000a    const GLenum DRAW_BUFFER1_WEBGL          = 0x8826;\u000a    const GLenum DRAW_BUFFER2_WEBGL          = 0x8827;\u000a    const GLenum DRAW_BUFFER3_WEBGL          = 0x8828;\u000a    const GLenum DRAW_BUFFER4_WEBGL          = 0x8829;\u000a    const GLenum DRAW_BUFFER5_WEBGL          = 0x882A;\u000a    const GLenum DRAW_BUFFER6_WEBGL          = 0x882B;\u000a    const GLenum DRAW_BUFFER7_WEBGL          = 0x882C;\u000a    const GLenum DRAW_BUFFER8_WEBGL          = 0x882D;\u000a    const GLenum DRAW_BUFFER9_WEBGL          = 0x882E;\u000a    const GLenum DRAW_BUFFER10_WEBGL         = 0x882F;\u000a    const GLenum DRAW_BUFFER11_WEBGL         = 0x8830;\u000a    const GLenum DRAW_BUFFER12_WEBGL         = 0x8831;\u000a    const GLenum DRAW_BUFFER13_WEBGL         = 0x8832;\u000a    const GLenum DRAW_BUFFER14_WEBGL         = 0x8833;\u000a    const GLenum DRAW_BUFFER15_WEBGL         = 0x8834;\u000a\u000a    const GLenum MAX_COLOR_ATTACHMENTS_WEBGL = 0x8CDF;\u000a    const GLenum MAX_DRAW_BUFFERS_WEBGL      = 0x8824;\u000a\u000a    void drawBuffersWEBGL(sequence<GLenum> buffers);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface OES_texture_float_linear\u000a{\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface EXT_shader_texture_lod\u000a{\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface OES_texture_half_float\u000a{\u000a    const GLenum HALF_FLOAT_OES = 0x8D61;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface OES_texture_half_float_linear\u000a{\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface WEBGL_color_buffer_float\u000a{\u000a    const GLenum RGBA32F_EXT = 0x8814;\u000a    const GLenum RGB32F_EXT = 0x8815;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = 0x8211;\u000a    const GLenum UNSIGNED_NORMALIZED_EXT = 0x8C17;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface EXT_color_buffer_half_float\u000a{\u000a    const GLenum RGBA16F_EXT = 0x881A;\u000a    const GLenum RGB16F_EXT = 0x881B;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = 0x8211;\u000a    const GLenum UNSIGNED_NORMALIZED_EXT = 0x8C17;\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface OES_vertex_array_object {\u000a    const GLenum VERTEX_ARRAY_BINDING_OES = 0x85B5;\u000a\u000a    WebGLVertexArrayObject? createVertexArrayOES();\u000a    void deleteVertexArrayOES(WebGLVertexArrayObject? arrayObject);\u000a    [WebGLHandlesContextLoss] GLboolean isVertexArrayOES(WebGLVertexArrayObject? arrayObject);\u000a    void bindVertexArrayOES(WebGLVertexArrayObject? arrayObject);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface ANGLE_instanced_arrays {\u000a    const GLenum VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = 0x88FE;\u000a\u000a    void drawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);\u000a    void drawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, GLintptr offset, GLsizei primcount);\u000a    void vertexAttribDivisorANGLE(GLuint index, GLuint divisor);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface EXT_blend_minmax {\u000a    const GLenum MIN_EXT = 0x8007;\u000a    const GLenum MAX_EXT = 0x8008;\u000a};\u000a\u000ainterface WebGLQuery {\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface EXT_disjoint_timer_query {\u000a    const GLenum QUERY_COUNTER_BITS_EXT = 0x8864;\u000a    const GLenum CURRENT_QUERY_EXT = 0x8865;\u000a    const GLenum QUERY_RESULT_EXT = 0x8866;\u000a    const GLenum QUERY_RESULT_AVAILABLE_EXT = 0x8867;\u000a    const GLenum TIME_ELAPSED_EXT = 0x88BF;\u000a    const GLenum TIMESTAMP_EXT = 0x8E28;\u000a    const GLenum GPU_DISJOINT_EXT = 0x8FBB;\u000a\u000a    WebGLQuery? createQueryEXT();\u000a    void deleteQueryEXT(WebGLQuery? query);\u000a    [WebGLHandlesContextLoss] boolean isQueryEXT(WebGLQuery? query);\u000a    void beginQueryEXT(GLenum target, WebGLQuery query);\u000a    void endQueryEXT(GLenum target);\u000a    void queryCounterEXT(WebGLQuery query, GLenum target);\u000a    any getQueryEXT(GLenum target, GLenum pname);\u000a    any getQueryObjectEXT(WebGLQuery query, GLenum pname);\u000a};\u000a\u000a[NoInterfaceObject]\u000ainterface MOZ_debug {\u000a    const GLenum EXTENSIONS = 0x1F03;\u000a    const GLenum WSI_INFO   = 0x10000;\u000a    const GLenum UNPACK_REQUIRE_FASTPATH = 0x10001;\u000a\u000a    [Throws]\u000a    any getParameter(GLenum pname);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebKitCSSMatrix.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebKitCSSMatrix.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://compat.spec.whatwg.org/#webkitcssmatrix-interface\u000a */\u000a\u000a[Constructor,\u000a Constructor(DOMString transformList),\u000a Constructor(WebKitCSSMatrix other),\u000a Exposed=Window,\u000a Func=\"mozilla::dom::WebKitCSSMatrix::FeatureEnabled\"]\u000ainterface WebKitCSSMatrix : DOMMatrix {\u000a    // Mutable transform methods\u000a    [Throws]\u000a    WebKitCSSMatrix setMatrixValue(DOMString transformList);\u000a\u000a    // Immutable transform methods\u000a    WebKitCSSMatrix multiply(WebKitCSSMatrix other);\u000a    [Throws]\u000a    WebKitCSSMatrix inverse();\u000a    WebKitCSSMatrix translate(optional unrestricted double tx = 0,\u000a                              optional unrestricted double ty = 0,\u000a                              optional unrestricted double tz = 0);\u000a    WebKitCSSMatrix scale(optional unrestricted double scaleX = 1,\u000a                          optional unrestricted double scaleY,\u000a                          optional unrestricted double scaleZ = 1);\u000a    WebKitCSSMatrix rotate(optional unrestricted double rotX = 0,\u000a                           optional unrestricted double rotY,\u000a                           optional unrestricted double rotZ);\u000a    WebKitCSSMatrix rotateAxisAngle(optional unrestricted double x = 0,\u000a                                    optional unrestricted double y = 0,\u000a                                    optional unrestricted double z = 0,\u000a                                    optional unrestricted double angle = 0);\u000a    WebKitCSSMatrix skewX(optional unrestricted double sx = 0);\u000a    WebKitCSSMatrix skewY(optional unrestricted double sy = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebSocket.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebSocket.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/html/#network\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and Opera Software ASA.\u000a * You are granted a license to use, reproduce and create derivative works of this document.\u000a */\u000a\u000aenum BinaryType { \"blob\", \"arraybuffer\" };\u000a\u000a[Exposed=(Window,Worker),\u000a Constructor(DOMString url),\u000a Constructor(DOMString url, DOMString protocols),\u000a Constructor(DOMString url, sequence<DOMString> protocols)]\u000ainterface WebSocket : EventTarget {\u000a\u000a  readonly attribute DOMString url;\u000a\u000a  // ready state\u000a  const unsigned short CONNECTING = 0;\u000a  const unsigned short OPEN = 1;\u000a  const unsigned short CLOSING = 2;\u000a  const unsigned short CLOSED = 3;\u000a\u000a  readonly attribute unsigned short readyState;\u000a\u000a  readonly attribute unsigned long bufferedAmount;\u000a\u000a  // networking\u000a\u000a  attribute EventHandler onopen;\u000a\u000a  attribute EventHandler onerror;\u000a\u000a  attribute EventHandler onclose;\u000a\u000a  readonly attribute DOMString extensions;\u000a\u000a  readonly attribute DOMString protocol;\u000a\u000a  [Throws]\u000a  void close([Clamp] optional unsigned short code, optional DOMString reason);\u000a\u000a  // messaging\u000a\u000a  attribute EventHandler onmessage;\u000a\u000a  attribute BinaryType binaryType;\u000a\u000a  [Throws]\u000a  void send(DOMString data);\u000a\u000a  [Throws]\u000a  void send(Blob data);\u000a\u000a  [Throws]\u000a  void send(ArrayBuffer data);\u000a\u000a  [Throws]\u000a  void send(ArrayBufferView data);\u000a};\u000a\u000a// Support for creating server-side chrome-only WebSocket. Used in\u000a// devtools remote debugging server.\u000ainterface nsITransportProvider;\u000a\u000apartial interface WebSocket {\u000a  [ChromeOnly, NewObject, Throws]\u000a  static WebSocket createServerWebSocket(DOMString url,\u000a                                         sequence<DOMString> protocols,\u000a                                         nsITransportProvider transportProvider,\u000a                                         DOMString negotiatedExtensions);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebrtcDeprecated.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebrtcDeprecated.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * This file includes all the deprecated mozRTC prefixed interfaces.\u000a *\u000a * The declaration of each should match the declaration of the real, unprefixed\u000a * interface.  These aliases will be removed at some point (Bug 1155923).\u000a */\u000a\u000a[Deprecated=\"WebrtcDeprecatedPrefix\",\u000a Pref=\"media.peerconnection.enabled\",\u000a JSImplementation=\"@mozilla.org/dom/rtcicecandidate;1\",\u000a Constructor(optional RTCIceCandidateInit candidateInitDict)]\u000ainterface mozRTCIceCandidate : RTCIceCandidate {};\u000a\u000a[Deprecated=\"WebrtcDeprecatedPrefix\",\u000a Pref=\"media.peerconnection.enabled\",\u000a JSImplementation=\"@mozilla.org/dom/peerconnection;1\",\u000a Constructor (optional RTCConfiguration configuration,\u000a              optional object? constraints)]\u000ainterface mozRTCPeerConnection : RTCPeerConnection {};\u000a\u000a[Deprecated=\"WebrtcDeprecatedPrefix\",\u000a Pref=\"media.peerconnection.enabled\",\u000a JSImplementation=\"@mozilla.org/dom/rtcsessiondescription;1\",\u000a Constructor(optional RTCSessionDescriptionInit descriptionInitDict)]\u000ainterface mozRTCSessionDescription : RTCSessionDescription {};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebrtcGlobalInformation.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WebrtcGlobalInformation.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000adictionary WebrtcGlobalStatisticsReport {\u000a  sequence<RTCStatsReportInternal> reports;\u000a};\u000a\u000acallback WebrtcGlobalStatisticsCallback = void (WebrtcGlobalStatisticsReport reports);\u000acallback WebrtcGlobalLoggingCallback = void (sequence<DOMString> logMessages);\u000a\u000a[ChromeOnly]\u000ainterface WebrtcGlobalInformation {\u000a\u000a  [Throws]\u000a  static void getAllStats(WebrtcGlobalStatisticsCallback callback,\u000a                          optional DOMString pcIdFilter);\u000a\u000a  static void clearAllStats();\u000a\u000a  [Throws]\u000a  static void getLogging(DOMString pattern,\u000a                         WebrtcGlobalLoggingCallback callback);\u000a\u000a  static void clearLogging();\u000a\u000a  // NSPR WebRTC Trace debug level (0 - 65535)\u000a  //\u000a  // Notes:\u000a  // - Setting a non-zero debug level turns on gathering of log for file output.\u000a  // - Subsequently setting a zero debug level writes that log to disk.\u000a\u000a  static attribute long debugLevel;\u000a\u000a  // WebRTC AEC debugging enable\u000a  static attribute boolean aecDebug;\u000a\u000a  static readonly attribute DOMString aecDebugLogDir;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WheelEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WheelEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * For more information on this interface please see\u000a * http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Constructor(DOMString type, optional WheelEventInit eventInitDict)]\u000ainterface WheelEvent : MouseEvent\u000a{\u000a  const unsigned long DOM_DELTA_PIXEL = 0x00;\u000a  const unsigned long DOM_DELTA_LINE  = 0x01;\u000a  const unsigned long DOM_DELTA_PAGE  = 0x02;\u000a\u000a  readonly attribute double        deltaX;\u000a  readonly attribute double        deltaY;\u000a  readonly attribute double        deltaZ;\u000a  readonly attribute unsigned long deltaMode;\u000a\u000a};\u000a\u000adictionary WheelEventInit : MouseEventInit\u000a{\u000a  double deltaX = 0;\u000a  double deltaY = 0;\u000a  double deltaZ = 0;\u000a  unsigned long deltaMode = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WidevineCDMManifest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WidevineCDMManifest.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000d\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000d\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000d\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000d\u000a */\u000d\u000a\u000d\u000adictionary WidevineCDMManifest {\u000d\u000a  required DOMString name;\u000d\u000a  required DOMString description;\u000d\u000a  required DOMString version;\u000d\u000a  required DOMString x-cdm-module-versions;\u000d\u000a  required DOMString x-cdm-interface-versions;\u000d\u000a  required DOMString x-cdm-host-versions;\u000d\u000a  required DOMString x-cdm-codecs;\u000d\u000a};\u000d\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Window.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Window.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is:\u000a * http://www.whatwg.org/specs/web-apps/current-work/\u000a * https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html\u000a * https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html\u000a * http://dev.w3.org/csswg/cssom/\u000a * http://dev.w3.org/csswg/cssom-view/\u000a * https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/RequestAnimationFrame/Overview.html\u000a * https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/NavigationTiming/Overview.html\u000a * https://dvcs.w3.org/hg/webcrypto-api/raw-file/tip/spec/Overview.html\u000a * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a * https://w3c.github.io/webappsec-secure-contexts/#monkey-patching-global-object\u000a * https://w3c.github.io/requestidlecallback/\u000a * https://webaudio.github.io/web-audio-api/#widl-Window-audioWorklet\u000a * https://drafts.css-houdini.org/css-paint-api-1/#dom-window-paintworklet\u000a */\u000a\u000ainterface ApplicationCache;\u000ainterface IID;\u000ainterface nsIBrowserDOMWindow;\u000ainterface nsIMessageBroadcaster;\u000ainterface XULControllers;\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/\u000a[PrimaryGlobal, LegacyUnenumerableNamedProperties, NeedResolve]\u000a/*sealed*/ interface Window : EventTarget {\u000a  // the current browsing context\u000a  [Unforgeable, Constant, StoreInSlot,\u000a   CrossOriginReadable] readonly attribute Window window;\u000a  [Replaceable, Constant, StoreInSlot,\u000a   CrossOriginReadable] readonly attribute Window self;\u000a  [Unforgeable, StoreInSlot, Pure] readonly attribute Document? document;\u000a  [Throws] attribute DOMString name;\u000a  [PutForwards=href, Unforgeable, BinaryName=\"getLocation\",\u000a   CrossOriginReadable, CrossOriginWritable] readonly attribute Location location;\u000a  [Throws] readonly attribute History history;\u000a  [Func=\"CustomElementRegistry::IsCustomElementEnabled\"]\u000a  readonly attribute CustomElementRegistry customElements;\u000a  [Replaceable, Throws] readonly attribute BarProp locationbar;\u000a  [Replaceable, Throws] readonly attribute BarProp menubar;\u000a  [Replaceable, Throws] readonly attribute BarProp personalbar;\u000a  [Replaceable, Throws] readonly attribute BarProp scrollbars;\u000a  [Replaceable, Throws] readonly attribute BarProp statusbar;\u000a  [Replaceable, Throws] readonly attribute BarProp toolbar;\u000a  [Throws] attribute DOMString status;\u000a  [Throws, CrossOriginCallable] void close();\u000a  [Throws, CrossOriginReadable] readonly attribute boolean closed;\u000a  [Throws] void stop();\u000a  [Throws, CrossOriginCallable] void focus();\u000a  [Throws, CrossOriginCallable] void blur();\u000a\u000a  // other browsing contexts\u000a  [Replaceable, Throws, CrossOriginReadable] readonly attribute WindowProxy frames;\u000a  [Replaceable, CrossOriginReadable] readonly attribute unsigned long length;\u000a  //[Unforgeable, Throws, CrossOriginReadable] readonly attribute WindowProxy top;\u000a  [Unforgeable, Throws, CrossOriginReadable] readonly attribute WindowProxy? top;\u000a  [Throws, CrossOriginReadable] attribute any opener;\u000a  //[Throws] readonly attribute WindowProxy parent;\u000a  [Replaceable, Throws, CrossOriginReadable] readonly attribute WindowProxy? parent;\u000a  [Throws, NeedsSubjectPrincipal] readonly attribute Element? frameElement;\u000a  //[Throws] WindowProxy? open(optional USVString url = \"about:blank\", optional DOMString target = \"_blank\", [TreatNullAs=EmptyString] optional DOMString features = \"\");\u000a  [Throws] WindowProxy? open(optional DOMString url = \"\", optional DOMString target = \"\", [TreatNullAs=EmptyString] optional DOMString features = \"\");\u000a  getter object (DOMString name);\u000a\u000a  // the user agent\u000a  readonly attribute Navigator navigator;\u000a#ifdef HAVE_SIDEBAR\u000a  [Replaceable, Throws] readonly attribute External external;\u000a#endif\u000a  [Throws, Pref=\"browser.cache.offline.enable\", Func=\"nsGlobalWindowInner::OfflineCacheAllowedForContext\"] readonly attribute ApplicationCache applicationCache;\u000a\u000a  // user prompts\u000a  [Throws, NeedsSubjectPrincipal] void alert();\u000a  [Throws, NeedsSubjectPrincipal] void alert(DOMString message);\u000a  [Throws, NeedsSubjectPrincipal] boolean confirm(optional DOMString message = \"\");\u000a  [Throws, NeedsSubjectPrincipal] DOMString? prompt(optional DOMString message = \"\", optional DOMString default = \"\");\u000a  [Throws, Func=\"nsGlobalWindowInner::IsWindowPrintEnabled\"]\u000a  void print();\u000a\u000a  [Throws, CrossOriginCallable, NeedsSubjectPrincipal]\u000a  void postMessage(any message, DOMString targetOrigin, optional sequence<object> transfer = []);\u000a\u000a  // also has obsolete members\u000a};\u000aWindow implements GlobalEventHandlers;\u000aWindow implements WindowEventHandlers;\u000a\u000a// https://www.w3.org/TR/appmanifest/#onappinstalled-attribute\u000apartial interface Window {\u000a  [Pref=\"dom.manifest.onappinstalled\"]\u000a  attribute EventHandler onappinstalled;\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/\u000a[NoInterfaceObject]\u000ainterface WindowSessionStorage {\u000a  //[Throws] readonly attribute Storage sessionStorage;\u000a  [Throws] readonly attribute Storage? sessionStorage;\u000a};\u000aWindow implements WindowSessionStorage;\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/\u000a[NoInterfaceObject]\u000ainterface WindowLocalStorage {\u000a  [Throws] readonly attribute Storage? localStorage;\u000a};\u000aWindow implements WindowLocalStorage;\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/\u000apartial interface Window {\u000a  void captureEvents();\u000a  void releaseEvents();\u000a};\u000a\u000a// https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html\u000apartial interface Window {\u000a  //[Throws] Selection getSelection();\u000a  [Throws] Selection? getSelection();\u000a};\u000a\u000a// http://dev.w3.org/csswg/cssom/\u000apartial interface Window {\u000a  //[NewObject, Throws] CSSStyleDeclaration getComputedStyle(Element elt, optional DOMString pseudoElt = \"\");\u000a  [NewObject, Throws] CSSStyleDeclaration? getComputedStyle(Element elt, optional DOMString pseudoElt = \"\");\u000a};\u000a\u000a// http://dev.w3.org/csswg/cssom-view/\u000aenum ScrollBehavior { \"auto\", \"instant\", \"smooth\" };\u000a\u000adictionary ScrollOptions {\u000a  ScrollBehavior behavior = \"auto\";\u000a};\u000a\u000adictionary ScrollToOptions : ScrollOptions {\u000a  unrestricted double left;\u000a  unrestricted double top;\u000a};\u000a\u000apartial interface Window {\u000a  //[Throws, NewObject, NeedsCallerType] MediaQueryList matchMedia(DOMString query);\u000a  [Throws, NewObject, NeedsCallerType] MediaQueryList? matchMedia(DOMString query);\u000a  // Per spec, screen is SameObject, but we don't actually guarantee that given\u000a  // nsGlobalWindow::Cleanup.  :(\u000a  //[SameObject, Replaceable, Throws] readonly attribute Screen screen;\u000a  [Replaceable, Throws] readonly attribute Screen screen;\u000a\u000a  // browsing context\u000a  //[Throws] void moveTo(double x, double y);\u000a  //[Throws] void moveBy(double x, double y);\u000a  //[Throws] void resizeTo(double x, double y);\u000a  //[Throws] void resizeBy(double x, double y);\u000a  [Throws, NeedsCallerType] void moveTo(long x, long y);\u000a  [Throws, NeedsCallerType] void moveBy(long x, long y);\u000a  [Throws, NeedsCallerType] void resizeTo(long x, long y);\u000a  [Throws, NeedsCallerType] void resizeBy(long x, long y);\u000a\u000a  // viewport\u000a  // These are writable because we allow chrome to write them.  And they need\u000a  // to use 'any' as the type, because non-chrome writing them needs to act\u000a  // like a [Replaceable] attribute would, which needs the original JS value.\u000a  //[Replaceable, Throws] readonly attribute double innerWidth;\u000a  //[Replaceable, Throws] readonly attribute double innerHeight;\u000a  [Throws, NeedsCallerType] attribute any innerWidth;\u000a  [Throws, NeedsCallerType] attribute any innerHeight;\u000a\u000a  // viewport scrolling\u000a  void scroll(unrestricted double x, unrestricted double y);\u000a  void scroll(optional ScrollToOptions options);\u000a  void scrollTo(unrestricted double x, unrestricted double y);\u000a  void scrollTo(optional ScrollToOptions options);\u000a  void scrollBy(unrestricted double x, unrestricted double y);\u000a  void scrollBy(optional ScrollToOptions options);\u000a  // mozScrollSnap is used by chrome to perform scroll snapping after the\u000a  // user performs actions that may affect scroll position\u000a  // mozScrollSnap is deprecated, to be replaced by a web accessible API, such\u000a  // as an extension to the ScrollOptions dictionary.  See bug 1137937.\u000a  [ChromeOnly] void mozScrollSnap();\u000a  // The four properties below are double per spec at the moment, but whether\u000a  // that will continue is unclear.\u000a  [Replaceable, Throws] readonly attribute double scrollX;\u000a  [Replaceable, Throws] readonly attribute double pageXOffset;\u000a  [Replaceable, Throws] readonly attribute double scrollY;\u000a  [Replaceable, Throws] readonly attribute double pageYOffset;\u000a\u000a  // client\u000a  // These are writable because we allow chrome to write them.  And they need\u000a  // to use 'any' as the type, because non-chrome writing them needs to act\u000a  // like a [Replaceable] attribute would, which needs the original JS value.\u000a  //[Replaceable, Throws] readonly attribute double screenX;\u000a  //[Replaceable, Throws] readonly attribute double screenY;\u000a  //[Replaceable, Throws] readonly attribute double outerWidth;\u000a  //[Replaceable, Throws] readonly attribute double outerHeight;\u000a  [Throws, NeedsCallerType] attribute any screenX;\u000a  [Throws, NeedsCallerType] attribute any screenY;\u000a  [Throws, NeedsCallerType] attribute any outerWidth;\u000a  [Throws, NeedsCallerType] attribute any outerHeight;\u000a};\u000a\u000a// https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/RequestAnimationFrame/Overview.html\u000apartial interface Window {\u000a  [Throws] long requestAnimationFrame(FrameRequestCallback callback);\u000a  [Throws] void cancelAnimationFrame(long handle);\u000a};\u000acallback FrameRequestCallback = void (DOMHighResTimeStamp time);\u000a\u000a// https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/NavigationTiming/Overview.html\u000apartial interface Window {\u000a  [Replaceable, Pure, StoreInSlot] readonly attribute Performance? performance;\u000a};\u000a\u000a// https://dvcs.w3.org/hg/webcrypto-api/raw-file/tip/spec/Overview.html\u000aWindow implements GlobalCrypto;\u000a\u000a// https://fidoalliance.org/specifications/download/\u000aWindow implements GlobalU2F;\u000a\u000a#ifdef MOZ_WEBSPEECH\u000a// http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html\u000a[NoInterfaceObject]\u000ainterface SpeechSynthesisGetter {\u000a  [Throws, Pref=\"media.webspeech.synth.enabled\"] readonly attribute SpeechSynthesis speechSynthesis;\u000a};\u000a\u000aWindow implements SpeechSynthesisGetter;\u000a#endif\u000a\u000a// Mozilla-specific stuff\u000apartial interface Window {\u000a  //[NewObject, Throws] CSSStyleDeclaration getDefaultComputedStyle(Element elt, optional DOMString pseudoElt = \"\");\u000a  [NewObject, Throws] CSSStyleDeclaration? getDefaultComputedStyle(Element elt, optional DOMString pseudoElt = \"\");\u000a\u000a  // Mozilla extensions\u000a  /**\u000a   * Method for scrolling this window by a number of lines.\u000a   */\u000a  void                      scrollByLines(long numLines, optional ScrollOptions options);\u000a\u000a  /**\u000a   * Method for scrolling this window by a number of pages.\u000a   */\u000a  void                      scrollByPages(long numPages, optional ScrollOptions options);\u000a\u000a  /**\u000a   * Method for sizing this window to the content in the window.\u000a   */\u000a  [Throws, NeedsCallerType] void sizeToContent();\u000a\u000a  // XXX Shouldn't this be in nsIDOMChromeWindow?\u000a  [ChromeOnly, Replaceable, Throws] readonly attribute XULControllers controllers;\u000a\u000a  [ChromeOnly, Throws] readonly attribute Element? realFrameElement;\u000a\u000a  [Throws, NeedsCallerType]\u000a  readonly attribute float mozInnerScreenX;\u000a  [Throws, NeedsCallerType]\u000a  readonly attribute float mozInnerScreenY;\u000a  [Replaceable, Throws, NeedsCallerType]\u000a  readonly attribute double devicePixelRatio;\u000a\u000a  /* The maximum offset that the window can be scrolled to\u000a     (i.e., the document width/height minus the scrollport width/height) */\u000a  [ChromeOnly, Throws]  readonly attribute long   scrollMinX;\u000a  [ChromeOnly, Throws]  readonly attribute long   scrollMinY;\u000a  [Replaceable, Throws] readonly attribute long   scrollMaxX;\u000a  [Replaceable, Throws] readonly attribute long   scrollMaxY;\u000a\u000a  [Throws] attribute boolean fullScreen;\u000a\u000a  [Throws, ChromeOnly] void back();\u000a  [Throws, ChromeOnly] void forward();\u000a  [Throws, ChromeOnly, NeedsSubjectPrincipal] void home();\u000a\u000a  // XXX Should this be in nsIDOMChromeWindow?\u000a  void                      updateCommands(DOMString action,\u000a                                           optional Selection? sel = null,\u000a                                           optional short reason = 0);\u000a\u000a  /* Find in page.\u000a   * @param str: the search pattern\u000a   * @param caseSensitive: is the search caseSensitive\u000a   * @param backwards: should we search backwards\u000a   * @param wrapAround: should we wrap the search\u000a   * @param wholeWord: should we search only for whole words\u000a   * @param searchInFrames: should we search through all frames\u000a   * @param showDialog: should we show the Find dialog\u000a   */\u000a  [Throws] boolean    find(optional DOMString str = \"\",\u000a                           optional boolean caseSensitive = false,\u000a                           optional boolean backwards = false,\u000a                           optional boolean wrapAround = false,\u000a                           optional boolean wholeWord = false,\u000a                           optional boolean searchInFrames = false,\u000a                           optional boolean showDialog = false);\u000a\u000a  /**\u000a   * Returns the number of times this document for this window has\u000a   * been painted to the screen.\u000a   */\u000a  [Throws] readonly attribute unsigned long long mozPaintCount;\u000a\u000a           attribute EventHandler ondevicemotion;\u000a           attribute EventHandler ondeviceorientation;\u000a           attribute EventHandler onabsolutedeviceorientation;\u000a           attribute EventHandler ondeviceproximity;\u000a           attribute EventHandler onuserproximity;\u000a           attribute EventHandler ondevicelight;\u000a\u000a  void                      dump(DOMString str);\u000a\u000a  /**\u000a   * This method is here for backwards compatibility with 4.x only,\u000a   * its implementation is a no-op\u000a   */\u000a  void                      setResizable(boolean resizable);\u000a\u000a  /**\u000a   * This is the scriptable version of\u000a   * nsIDOMWindow::openDialog() that takes 3 optional\u000a   * arguments, plus any additional arguments are passed on as\u000a   * arguments on the dialog's window object (window.arguments).\u000a   */\u000a  [Throws, ChromeOnly] WindowProxy? openDialog(optional DOMString url = \"\",\u000a                                               optional DOMString name = \"\",\u000a                                               optional DOMString options = \"\",\u000a                                               any... extraArguments);\u000a\u000a  [\u000a#ifdef NIGHTLY_BUILD\u000a   ChromeOnly,\u000a#endif\u000a   NonEnumerable, Replaceable, Throws, NeedsCallerType]\u000a  readonly attribute object? content;\u000a\u000a  [Throws, ChromeOnly] any getInterface(IID iid);\u000a\u000a  /**\u000a   * Same as nsIDOMWindow.windowRoot, useful for event listener targeting.\u000a   */\u000a  [ChromeOnly, Throws]\u000a  readonly attribute WindowRoot? windowRoot;\u000a\u000a  /**\u000a   * ChromeOnly method to determine if a particular window should see console\u000a   * reports from service workers of the given scope.\u000a   */\u000a  [ChromeOnly]\u000a  boolean shouldReportForServiceWorkerScope(USVString aScope);\u000a};\u000a\u000aWindow implements TouchEventHandlers;\u000a\u000aWindow implements OnErrorEventHandlerForWindow;\u000a\u000a#if defined(MOZ_WIDGET_ANDROID)\u000a// https://compat.spec.whatwg.org/#windoworientation-interface\u000apartial interface Window {\u000a  [NeedsCallerType]\u000a  readonly attribute short orientation;\u000a           attribute EventHandler onorientationchange;\u000a};\u000a#endif\u000a\u000a#ifdef HAVE_SIDEBAR\u000a// Mozilla extension\u000apartial interface Window {\u000a  [Replaceable, Throws, UseCounter]\u000a  readonly attribute (External or WindowProxy) sidebar;\u000a};\u000a#endif\u000a\u000a// Mozilla extensions for Chrome windows.\u000apartial interface Window {\u000a  // The STATE_* constants need to match the corresponding enum in nsGlobalWindow.cpp.\u000a  [Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  const unsigned short STATE_MAXIMIZED = 1;\u000a  [Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  const unsigned short STATE_MINIMIZED = 2;\u000a  [Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  const unsigned short STATE_NORMAL = 3;\u000a  [Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  const unsigned short STATE_FULLSCREEN = 4;\u000a\u000a  [Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  readonly attribute unsigned short windowState;\u000a\u000a  [Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  readonly attribute boolean isFullyOccluded;\u000a\u000a  /**\u000a   * browserDOMWindow provides access to yet another layer of\u000a   * utility functions implemented by chrome script. It will be null\u000a   * for DOMWindows not corresponding to browsers.\u000a   */\u000a  [Throws, Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a           attribute nsIBrowserDOMWindow? browserDOMWindow;\u000a\u000a  [Throws, Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  void                      getAttention();\u000a\u000a  [Throws, Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  void                      getAttentionWithCycleCount(long aCycleCount);\u000a\u000a  [Throws, Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  void                      setCursor(DOMString cursor);\u000a\u000a  [Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  void                      maximize();\u000a  [Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  void                      minimize();\u000a  [Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  void                      restore();\u000a\u000a  /**\u000a   * Notify a default button is loaded on a dialog or a wizard.\u000a   * defaultButton is the default button.\u000a   */\u000a  [Throws, Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  void notifyDefaultButtonLoaded(Element defaultButton);\u000a\u000a  [Throws, Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  readonly attribute nsIMessageBroadcaster messageManager;\u000a\u000a  /**\u000a   * Returns the message manager identified by the given group name that\u000a   * manages all frame loaders belonging to that group.\u000a   */\u000a  [Throws, Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  nsIMessageBroadcaster getGroupMessageManager(DOMString aGroup);\u000a\u000a  /**\u000a   * On some operating systems, we must allow the window manager to\u000a   * handle window dragging. This function tells the window manager to\u000a   * start dragging the window. This function will fail unless called\u000a   * while the left mouse button is held down, callers must check this.\u000a   *\u000a   * The optional panel argument should be set when moving a panel.\u000a   *\u000a   * Throws NS_ERROR_NOT_IMPLEMENTED if the OS doesn't support this.\u000a   */\u000a  [Throws, Func=\"nsGlobalWindowInner::IsPrivilegedChromeWindow\"]\u000a  void beginWindowMove(Event mouseDownEvent, optional Element? panel = null);\u000a\u000a  [Func=\"IsChromeOrXBL\"]\u000a  readonly attribute boolean isChromeWindow;\u000a};\u000a\u000apartial interface Window {\u000a  [Pref=\"dom.vr.enabled\"]\u000a  attribute EventHandler onvrdisplayconnect;\u000a  [Pref=\"dom.vr.enabled\"]\u000a  attribute EventHandler onvrdisplaydisconnect;\u000a  [Pref=\"dom.vr.enabled\"]\u000a  attribute EventHandler onvrdisplayactivate;\u000a  [Pref=\"dom.vr.enabled\"]\u000a  attribute EventHandler onvrdisplaydeactivate;\u000a  [Pref=\"dom.vr.enabled\"]\u000a  attribute EventHandler onvrdisplaypresentchange;\u000a};\u000a\u000a// https://webaudio.github.io/web-audio-api/#widl-Window-audioWorklet\u000apartial interface Window {\u000a  [Pref=\"dom.audioWorklet.enabled\", Throws]\u000a  readonly attribute Worklet audioWorklet;\u000a};\u000a\u000a// https://drafts.css-houdini.org/css-paint-api-1/#dom-window-paintworklet\u000apartial interface Window {\u000a    [Pref=\"dom.paintWorklet.enabled\", Throws]\u000a    readonly attribute Worklet paintWorklet;\u000a};\u000a\u000aWindow implements WindowOrWorkerGlobalScope;\u000a\u000apartial interface Window {\u000a  [Throws, Func=\"nsGlobalWindowInner::IsRequestIdleCallbackEnabled\"]\u000a  unsigned long requestIdleCallback(IdleRequestCallback callback,\u000a                                    optional IdleRequestOptions options);\u000a  [Func=\"nsGlobalWindowInner::IsRequestIdleCallbackEnabled\"]\u000a  void          cancelIdleCallback(unsigned long handle);\u000a};\u000a\u000adictionary IdleRequestOptions {\u000a  unsigned long timeout;\u000a};\u000a\u000acallback IdleRequestCallback = void (IdleDeadline deadline);\u000a\u000apartial interface Window {\u000a  /**\u000a   * Returns a list of locales that the internationalization components\u000a   * should be localized to.\u000a   *\u000a   * The function name refers to Regional Preferences which can be either\u000a   * fetched from the internal internationalization database (CLDR), or\u000a   * from the host environment.\u000a   *\u000a   * The result is a sorted list of valid locale IDs and it should be\u000a   * used for all APIs that accept list of locales, like ECMA402 and L10n APIs.\u000a   *\u000a   * This API always returns at least one locale.\u000a   *\u000a   * Example: [\"en-US\", \"de\", \"pl\", \"sr-Cyrl\", \"zh-Hans-HK\"]\u000a   */\u000a  [Func=\"IsChromeOrXBL\"]\u000a  sequence<DOMString> getRegionalPrefsLocales();\u000a\u000a  /**\u000a   * Getter funcion for IntlUtils, which provides helper functions for\u000a   * localization.\u000a   */\u000a  [Throws, Func=\"IsChromeOrXBL\"]\u000a  readonly attribute IntlUtils intlUtils;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WindowOrWorkerGlobalScope.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WindowOrWorkerGlobalScope.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is:\u000a * https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope-mixin\u000a * https://fetch.spec.whatwg.org/#fetch-method\u000a * https://w3c.github.io/webappsec-secure-contexts/#monkey-patching-global-object\u000a * https://w3c.github.io/ServiceWorker/#self-caches\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope-mixin\u000a[NoInterfaceObject, Exposed=(Window,Worker)]\u000ainterface WindowOrWorkerGlobalScope {\u000a  [Replaceable] readonly attribute USVString origin;\u000a\u000a  // base64 utility methods\u000a  [Throws]\u000a  DOMString btoa(DOMString btoa);\u000a  [Throws]\u000a  DOMString atob(DOMString atob);\u000a\u000a  // timers\u000a  // NOTE: We're using overloads where the spec uses a union.  Should\u000a  // be black-box the same.\u000a  [Throws]\u000a  long setTimeout(Function handler, optional long timeout = 0, any... arguments);\u000a  [Throws]\u000a  long setTimeout(DOMString handler, optional long timeout = 0, any... unused);\u000a  void clearTimeout(optional long handle = 0);\u000a  [Throws]\u000a  long setInterval(Function handler, optional long timeout, any... arguments);\u000a  [Throws]\u000a  long setInterval(DOMString handler, optional long timeout, any... unused);\u000a  void clearInterval(optional long handle = 0);\u000a\u000a  // ImageBitmap\u000a  [Throws]\u000a  Promise<ImageBitmap> createImageBitmap(ImageBitmapSource aImage);\u000a  [Throws]\u000a  Promise<ImageBitmap> createImageBitmap(ImageBitmapSource aImage, long aSx, long aSy, long aSw, long aSh);\u000a};\u000a\u000a// https://fetch.spec.whatwg.org/#fetch-method\u000apartial interface WindowOrWorkerGlobalScope {\u000a  [NewObject, NeedsCallerType]\u000a  Promise<Response> fetch(RequestInfo input, optional RequestInit init);\u000a};\u000a\u000a// https://w3c.github.io/webappsec-secure-contexts/#monkey-patching-global-object\u000apartial interface WindowOrWorkerGlobalScope {\u000a  readonly attribute boolean isSecureContext;\u000a};\u000a\u000a// http://w3c.github.io/IndexedDB/#factory-interface\u000apartial interface WindowOrWorkerGlobalScope {\u000a   // readonly attribute IDBFactory indexedDB;\u000a   [Throws]\u000a   readonly attribute IDBFactory? indexedDB;\u000a};\u000a\u000a// https://w3c.github.io/ServiceWorker/#self-caches\u000apartial interface WindowOrWorkerGlobalScope {\u000a  [Throws, Func=\"mozilla::dom::DOMPrefs::DOMCachesEnabled\", SameObject]\u000a  readonly attribute CacheStorage caches;\u000a};\u000a\u000a// Mozilla extensions\u000apartial interface WindowOrWorkerGlobalScope {\u000a  // Extensions to ImageBitmap bits.\u000a  // Bug 1141979 - [FoxEye] Extend ImageBitmap with interfaces to access its\u000a  // underlying image data\u000a  //\u000a  // Note:\u000a  // Overloaded functions cannot have different \"extended attributes\",\u000a  // so I cannot add preference on the extended version of createImageBitmap().\u000a  // To work around, I will then check the preference at run time and throw if\u000a  // the preference is set to be false.\u000a  [Throws]\u000a  Promise<ImageBitmap> createImageBitmap(ImageBitmapSource aImage, long aOffset, long aLength, ImageBitmapFormat aFormat, ImagePixelLayout aLayout);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WindowRoot.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WindowRoot.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[ChromeOnly]\u000ainterface WindowRoot : EventTarget {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Worker.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Worker.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://html.spec.whatwg.org/multipage/workers.html\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and Opera\u000a * Software ASA.\u000a * You are granted a license to use, reproduce and create derivative works of\u000a * this document.\u000a */\u000a\u000a[Constructor(USVString scriptURL, optional WorkerOptions options),\u000a Exposed=(Window,DedicatedWorker,SharedWorker,System)]\u000ainterface Worker : EventTarget {\u000a  void terminate();\u000a\u000a  [Throws]\u000a  void postMessage(any message, optional sequence<object> transfer = []);\u000a\u000a  attribute EventHandler onmessage;\u000a  attribute EventHandler onmessageerror;\u000a};\u000a\u000aWorker implements AbstractWorker;\u000a\u000adictionary WorkerOptions {\u000a  // WorkerType type = \"classic\"; TODO: Bug 1247687\u000a  // RequestCredentials credentials = \"omit\"; // credentials is only used if type is \"module\" TODO: Bug 1247687\u000a  DOMString name = \"\";\u000a};\u000a\u000a[Constructor(USVString scriptURL),\u000a Func=\"mozilla::dom::ChromeWorker::WorkerAvailable\",\u000a Exposed=(Window,DedicatedWorker,SharedWorker,System)]\u000ainterface ChromeWorker : Worker {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WorkerDebuggerGlobalScope.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WorkerDebuggerGlobalScope.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a[Global=(WorkerDebugger), Exposed=WorkerDebugger]\u000ainterface WorkerDebuggerGlobalScope : EventTarget {\u000a  [Throws]\u000a  readonly attribute object global;\u000a\u000a  [Throws]\u000a  object createSandbox(DOMString name, object prototype);\u000a\u000a  [Throws]\u000a  void loadSubScript(DOMString url, optional object sandbox);\u000a\u000a  void enterEventLoop();\u000a\u000a  void leaveEventLoop();\u000a\u000a  void postMessage(DOMString message);\u000a\u000a  attribute EventHandler onmessage;\u000a\u000a  [Throws]\u000a  void setImmediate(Function handler);\u000a\u000a  void reportError(DOMString message);\u000a\u000a  [Throws]\u000a  sequence<any> retrieveConsoleEvents();\u000a\u000a  [Throws]\u000a  void setConsoleEventHandler(AnyCallback? handler);\u000a};\u000a\u000a// So you can debug while you debug\u000apartial interface WorkerDebuggerGlobalScope {\u000a  void dump(optional DOMString string);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WorkerGlobalScope.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WorkerGlobalScope.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html#the-workerglobalscope-common-interface\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and Opera\u000a * Software ASA.\u000a * You are granted a license to use, reproduce and create derivative works of\u000a * this document.\u000a */\u000a\u000a[Exposed=(Worker)]\u000ainterface WorkerGlobalScope : EventTarget {\u000a  [Constant, Cached]\u000a  readonly attribute WorkerGlobalScope self;\u000a  readonly attribute WorkerLocation location;\u000a  readonly attribute WorkerNavigator navigator;\u000a\u000a  [Throws]\u000a  void importScripts(DOMString... urls);\u000a\u000a  attribute OnErrorEventHandler onerror;\u000a\u000a  attribute EventHandler onoffline;\u000a  attribute EventHandler ononline;\u000a  // also has additional members in a partial interface\u000a};\u000a\u000aWorkerGlobalScope implements GlobalCrypto;\u000aWorkerGlobalScope implements WindowOrWorkerGlobalScope;\u000a\u000a// Not implemented yet: bug 1072107.\u000a// WorkerGlobalScope implements FontFaceSource;\u000a\u000a// Mozilla extensions\u000apartial interface WorkerGlobalScope {\u000a\u000a  void dump(optional DOMString str);\u000a\u000a  // XXXbz no spec for this yet, because the webperf WG is a bit dysfunctional\u000a  [Constant, Cached]\u000a  readonly attribute Performance performance;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WorkerLocation.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WorkerLocation.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/html/#worker-locations\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and Opera\u000a * Software ASA.\u000a * You are granted a license to use, reproduce and create derivative works of\u000a * this document.\u000a */\u000a\u000a[Exposed=Worker]\u000ainterface WorkerLocation {\u000a  // Bug 824857: no support for stringifier attributes yet.\u000a  //  stringifier attribute USVString href;\u000a\u000a  // Bug 824857 should remove this.\u000a  stringifier;\u000a\u000a  readonly attribute USVString href;\u000a\u000a  readonly attribute USVString origin;\u000a  readonly attribute USVString protocol;\u000a  readonly attribute USVString host;\u000a  readonly attribute USVString hostname;\u000a  readonly attribute USVString port;\u000a  readonly attribute USVString pathname;\u000a  readonly attribute USVString search;\u000a  readonly attribute USVString hash;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WorkerNavigator.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WorkerNavigator.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000a\u000a[Exposed=Worker]\u000ainterface WorkerNavigator {\u000a};\u000a\u000aWorkerNavigator implements NavigatorID;\u000aWorkerNavigator implements NavigatorLanguage;\u000aWorkerNavigator implements NavigatorOnLine;\u000aWorkerNavigator implements NavigatorConcurrentHardware;\u000aWorkerNavigator implements NavigatorStorage;\u000a\u000a// http://wicg.github.io/netinfo/#extensions-to-the-navigator-interface\u000a[Exposed=(Worker)]\u000apartial interface WorkerNavigator {\u000a    [Func=\"mozilla::dom::DOMPrefs::NetworkInformationEnabled\", Throws]\u000a    readonly attribute NetworkInformation connection;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Worklet.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/Worklet.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.css-houdini.org/worklets/#idl-index\u000a */\u000a\u000a[Pref=\"dom.worklet.enabled\"]\u000ainterface Worklet {\u000a  [NewObject, Throws, NeedsCallerType]\u000a  Promise<void> import(USVString moduleURL);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WorkletGlobalScope.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/WorkletGlobalScope.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://drafts.css-houdini.org/worklets/#idl-index\u000a */\u000a\u000a[Exposed=Worklet]\u000ainterface WorkletGlobalScope {\u000a};\u000a\u000a// Mozilla extensions\u000apartial interface WorkletGlobalScope {\u000a  void dump(optional DOMString str);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLDocument.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLDocument.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is:\u000a * http://dom.spec.whatwg.org/#xmldocument\u000a * http://www.whatwg.org/specs/web-apps/current-work/#xmldocument\u000a */\u000a\u000a// http://dom.spec.whatwg.org/#xmldocument\u000ainterface XMLDocument : Document {};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#xmldocument\u000apartial interface XMLDocument {\u000a  [Throws, NeedsCallerType]\u000a  boolean load(DOMString url);\u000a};\u000a\u000a// Gecko extensions?\u000apartial interface XMLDocument {\u000a  [UseCounter]\u000a  attribute boolean async;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLHttpRequest.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLHttpRequest.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * https://xhr.spec.whatwg.org/#interface-xmlhttprequest\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000ainterface InputStream;\u000ainterface MozChannel;\u000ainterface IID;\u000a\u000aenum XMLHttpRequestResponseType {\u000a  \"\",\u000a  \"arraybuffer\",\u000a  \"blob\",\u000a  \"document\",\u000a  \"json\",\u000a  \"text\",\u000a\u000a  // Mozilla-specific stuff\u000a  \"moz-chunked-arraybuffer\",\u000a};\u000a\u000a/**\u000a * Parameters for instantiating an XMLHttpRequest. They are passed as an\u000a * optional argument to the constructor:\u000a *\u000a *  new XMLHttpRequest({anon: true, system: true});\u000a */\u000adictionary MozXMLHttpRequestParameters\u000a{\u000a  /**\u000a   * If true, the request will be sent without cookie and authentication\u000a   * headers.\u000a   */\u000a  boolean mozAnon = false;\u000a\u000a  /**\u000a   * If true, the same origin policy will not be enforced on the request.\u000a   */\u000a  boolean mozSystem = false;\u000a};\u000a\u000a[Constructor(optional MozXMLHttpRequestParameters params),\u000a // There are apparently callers, specifically CoffeeScript, who do\u000a // things like this:\u000a //   c = new(window.ActiveXObject || XMLHttpRequest)(\"Microsoft.XMLHTTP\")\u000a // To handle that, we need a constructor that takes a string.\u000a Constructor(DOMString ignored),\u000a Exposed=(Window,DedicatedWorker,SharedWorker)]\u000ainterface XMLHttpRequest : XMLHttpRequestEventTarget {\u000a  // event handler\u000a  attribute EventHandler onreadystatechange;\u000a\u000a  // states\u000a  const unsigned short UNSENT = 0;\u000a  const unsigned short OPENED = 1;\u000a  const unsigned short HEADERS_RECEIVED = 2;\u000a  const unsigned short LOADING = 3;\u000a  const unsigned short DONE = 4;\u000a\u000a  readonly attribute unsigned short readyState;\u000a\u000a  // request\u000a  [Throws]\u000a  void open(ByteString method, USVString url);\u000a  [Throws]\u000a  void open(ByteString method, USVString url, boolean async,\u000a            optional USVString? user=null, optional USVString? password=null);\u000a  [Throws]\u000a  void setRequestHeader(ByteString header, ByteString value);\u000a\u000a  [SetterThrows]\u000a  attribute unsigned long timeout;\u000a\u000a  [SetterThrows]\u000a  attribute boolean withCredentials;\u000a\u000a  [Throws]\u000a  readonly attribute XMLHttpRequestUpload upload;\u000a\u000a  [Throws]\u000a  void send(optional (Document or BodyInit)? body = null);\u000a\u000a  [Throws]\u000a  void abort();\u000a\u000a  // response\u000a  readonly attribute USVString responseURL;\u000a\u000a  [Throws]\u000a  readonly attribute unsigned short status;\u000a\u000a  [Throws]\u000a  readonly attribute ByteString statusText;\u000a\u000a  [Throws]\u000a  ByteString? getResponseHeader(ByteString header);\u000a\u000a  [Throws]\u000a  ByteString getAllResponseHeaders();\u000a\u000a  [Throws]\u000a  void overrideMimeType(DOMString mime);\u000a\u000a  [SetterThrows]\u000a  attribute XMLHttpRequestResponseType responseType;\u000a  [Throws]\u000a  readonly attribute any response;\u000a  [Cached, Pure, Throws]\u000a  readonly attribute USVString? responseText;\u000a\u000a  [Throws, Exposed=Window]\u000a  readonly attribute Document? responseXML;\u000a\u000a  // Mozilla-specific stuff\u000a\u000a  [ChromeOnly, SetterThrows]\u000a  attribute boolean mozBackgroundRequest;\u000a\u000a  [ChromeOnly, Exposed=Window]\u000a  readonly attribute MozChannel? channel;\u000a\u000a  // A platform-specific identifer to represent the network interface \u000a  // which the HTTP request would occur on.\u000a  [ChromeOnly, Exposed=Window]\u000a  attribute ByteString? networkInterfaceId;\u000a\u000a  [Throws, ChromeOnly, Exposed=Window]\u000a  any getInterface(IID iid);\u000a\u000a  [ChromeOnly, Exposed=Window]\u000a  void setOriginAttributes(optional OriginAttributesDictionary originAttributes);\u000a\u000a  [ChromeOnly, Throws]\u000a  void sendInputStream(InputStream body);\u000a\u000a  // Only works on MainThread.\u000a  // Its permanence is to be evaluated in bug 1368540 for Firefox 60.\u000a  [ChromeOnly]\u000a  readonly attribute unsigned short errorCode;\u000a\u000a  readonly attribute boolean mozAnon;\u000a  readonly attribute boolean mozSystem;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLHttpRequestEventTarget.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLHttpRequestEventTarget.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * www.w3.org/TR/2012/WD-XMLHttpRequest-20120117/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Exposed=(Window,DedicatedWorker,SharedWorker)]\u000ainterface XMLHttpRequestEventTarget : EventTarget {\u000a  // event handlers\u000a  attribute EventHandler onloadstart;\u000a\u000a  attribute EventHandler onprogress;\u000a\u000a  attribute EventHandler onabort;\u000a\u000a  attribute EventHandler onerror;\u000a\u000a  attribute EventHandler onload;\u000a\u000a  attribute EventHandler ontimeout;\u000a\u000a  attribute EventHandler onloadend;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLHttpRequestUpload.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLHttpRequestUpload.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * www.w3.org/TR/2012/WD-XMLHttpRequest-20120117/\u000a *\u000a * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C\u000a * liability, trademark and document use rules apply.\u000a */\u000a\u000a[Exposed=(Window,DedicatedWorker,SharedWorker)]\u000ainterface XMLHttpRequestUpload : XMLHttpRequestEventTarget {\u000a\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLSerializer.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLSerializer.webidl"},contents:"/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://domparsing.spec.whatwg.org/#the-xmlserializer-interface\u000a */\u000a\u000ainterface OutputStream;\u000a\u000a[Constructor]\u000ainterface XMLSerializer {\u000a  [Throws]\u000a  DOMString serializeToString(Node root);\u000a\u000a  // Mozilla-specific stuff\u000a  [Throws, ChromeOnly]\u000a  void serializeToStream(Node root, OutputStream stream, DOMString? charset);\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLStylesheetProcessingInstruction.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XMLStylesheetProcessingInstruction.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface XMLStylesheetProcessingInstruction : ProcessingInstruction {\u000a  readonly attribute StyleSheet? sheet;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XPathEvaluator.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XPathEvaluator.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Constructor]\u000ainterface XPathEvaluator {\u000a  [NewObject, Throws]\u000a  XPathExpression createExpression(DOMString expression,\u000a                                   optional XPathNSResolver? resolver = null);\u000a  [Pure]\u000a  Node createNSResolver(Node nodeResolver);\u000a  [Throws]\u000a  XPathResult evaluate(DOMString expression,\u000a                       Node contextNode,\u000a                       optional XPathNSResolver? resolver = null,\u000a                       optional unsigned short type = 0 /* XPathResult.ANY_TYPE */,\u000a                       optional object? result = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XPathExpression.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XPathExpression.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface XPathExpression {\u000a  // The result specifies a specific result object which may be reused and\u000a  // returned by this method. If this is specified as null or it's not an\u000a  // XPathResult object, a new result object will be constructed and returned.\u000a  [Throws]\u000a  XPathResult evaluate(Node contextNode,\u000a                       optional unsigned short type = 0  /* XPathResult.ANY_TYPE */,\u000a                       optional object? result = null);\u000a\u000a  // The result specifies a specific result object which may be reused and\u000a  // returned by this method. If this is specified as null or it's not an\u000a  // XPathResult object, a new result object will be constructed and returned.\u000a  [Throws, ChromeOnly]\u000a  XPathResult evaluateWithContext(Node contextNode,\u000a                                  unsigned long contextPosition,\u000a                                  unsigned long contextSize,\u000a                                  optional unsigned short type = 0  /* XPathResult.ANY_TYPE */,\u000a                                  optional object? result = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XPathNSResolver.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XPathNSResolver.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000acallback interface XPathNSResolver\u000a{\u000a  DOMString? lookupNamespaceURI(DOMString? prefix);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XPathResult.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XPathResult.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * Corresponds to http://www.w3.org/TR/2002/WD-DOM-Level-3-XPath-20020208\u000a */\u000a\u000ainterface XPathResult {\u000a  // XPathResultType\u000a  const unsigned short ANY_TYPE = 0;\u000a  const unsigned short NUMBER_TYPE = 1;\u000a  const unsigned short STRING_TYPE = 2;\u000a  const unsigned short BOOLEAN_TYPE = 3;\u000a  const unsigned short UNORDERED_NODE_ITERATOR_TYPE = 4;\u000a  const unsigned short ORDERED_NODE_ITERATOR_TYPE = 5;\u000a  const unsigned short UNORDERED_NODE_SNAPSHOT_TYPE = 6;\u000a  const unsigned short ORDERED_NODE_SNAPSHOT_TYPE = 7;\u000a  const unsigned short ANY_UNORDERED_NODE_TYPE = 8;\u000a  const unsigned short FIRST_ORDERED_NODE_TYPE = 9;\u000a\u000a  readonly attribute unsigned short resultType;\u000a  [Throws]\u000a  readonly attribute double numberValue;\u000a  [Throws]\u000a  readonly attribute DOMString stringValue;\u000a  [Throws]\u000a  readonly attribute boolean booleanValue;\u000a  [Throws]\u000a  readonly attribute Node? singleNodeValue;\u000a  readonly attribute boolean invalidIteratorState;\u000a  [Throws]\u000a  readonly attribute unsigned long snapshotLength;\u000a  [Throws]\u000a  Node? iterateNext();\u000a  [Throws]\u000a  Node? snapshotItem(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XSLTProcessor.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XSLTProcessor.webidl"},contents:"/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this\u000a * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\u000a\u000ainterface nsIVariant;\u000a\u000a[Constructor]\u000ainterface XSLTProcessor {\u000a    /**\u000a     * Import the stylesheet into this XSLTProcessor for transformations.\u000a     *\u000a     * @param style The root-node of a XSLT stylesheet. This can be either\u000a     *              a document node or an element node. If a document node\u000a     *              then the document can contain either a XSLT stylesheet\u000a     *              or a LRE stylesheet.\u000a     *              If the argument is an element node it must be the\u000a     *              xsl:stylesheet (or xsl:transform) element of an XSLT\u000a     *              stylesheet.\u000a     */\u000a    [Throws]\u000a    void importStylesheet(Node style);\u000a\u000a    /**\u000a     * Transforms the node source applying the stylesheet given by\u000a     * the importStylesheet() function. The owner document of the output node\u000a     * owns the returned document fragment.\u000a     *\u000a     * @param source The node to be transformed\u000a     * @param output This document is used to generate the output\u000a     * @return DocumentFragment The result of the transformation\u000a     */\u000a    [CEReactions, Throws]\u000a    DocumentFragment transformToFragment(Node source,\u000a                                         Document output);\u000a\u000a    /**\u000a     * Transforms the node source applying the stylesheet given by the\u000a     * importStylesheet() function.\u000a     *\u000a     * @param source The node to be transformed\u000a     * @return Document The result of the transformation\u000a     */\u000a    [CEReactions, Throws]\u000a    Document transformToDocument(Node source);\u000a\u000a    /**\u000a     * Sets a parameter to be used in subsequent transformations with this\u000a     * XSLTProcessor. If the parameter doesn't exist in the stylesheet the\u000a     * parameter will be ignored.\u000a     *\u000a     * @param namespaceURI The namespaceURI of the XSLT parameter\u000a     * @param localName    The local name of the XSLT parameter\u000a     * @param value        The new value of the XSLT parameter\u000a     */\u000a    [Throws]\u000a    void setParameter([TreatNullAs=EmptyString] DOMString namespaceURI,\u000a                      DOMString localName,\u000a                      any value);\u000a\u000a    /**\u000a     * Gets a parameter if previously set by setParameter. Returns null\u000a     * otherwise.\u000a     *\u000a     * @param namespaceURI The namespaceURI of the XSLT parameter\u000a     * @param localName    The local name of the XSLT parameter\u000a     * @return nsIVariant  The value of the XSLT parameter\u000a     */\u000a    [Throws]\u000a    nsIVariant? getParameter([TreatNullAs=EmptyString] DOMString namespaceURI,\u000a                             DOMString localName);\u000a    /**\u000a     * Removes a parameter, if set. This will make the processor use the\u000a     * default-value for the parameter as specified in the stylesheet.\u000a     *\u000a     * @param namespaceURI The namespaceURI of the XSLT parameter\u000a     * @param localName    The local name of the XSLT parameter\u000a     */\u000a    [Throws]\u000a    void removeParameter([TreatNullAs=EmptyString] DOMString namespaceURI,\u000a                         DOMString localName);\u000a\u000a    /**\u000a     * Removes all set parameters from this XSLTProcessor. This will make\u000a     * the processor use the default-value for all parameters as specified in\u000a     * the stylesheet.\u000a     */\u000a    void clearParameters();\u000a\u000a    /**\u000a     * Remove all parameters and stylesheets from this XSLTProcessor.\u000a     */\u000a    void reset();\u000a\u000a    /**\u000a    * Disables all loading of external documents, such as from\u000a    * <xsl:import> and document()\u000a    * Defaults to off and is *not* reset by calls to reset()\u000a    */\u000a    [ChromeOnly]\u000a    const unsigned long DISABLE_ALL_LOADS = 1;\u000a\u000a    /**\u000a    * Flags for this processor. Defaults to 0. See individual flags above\u000a    * for documentation for effect of reset()\u000a    */\u000a    [ChromeOnly, NeedsCallerType]\u000a    attribute unsigned long flags;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XULCommandEvent.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XULCommandEvent.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[Func=\"IsChromeOrXBL\"]\u000ainterface XULCommandEvent : UIEvent\u000a{\u000a  readonly attribute boolean ctrlKey;\u000a  readonly attribute boolean shiftKey;\u000a  readonly attribute boolean altKey;\u000a  readonly attribute boolean metaKey;\u000a\u000a  readonly attribute unsigned short inputSource;\u000a\u000a  readonly attribute Event? sourceEvent;\u000a\u000a  void initCommandEvent(DOMString type,\u000a                        optional boolean canBubble = false,\u000a                        optional boolean cancelable = false,\u000a                        optional Window? view = null,\u000a                        optional long detail = 0,\u000a                        optional boolean ctrlKey = false,\u000a                        optional boolean altKey = false,\u000a                        optional boolean shiftKey = false,\u000a                        optional boolean metaKey = false,\u000a                        optional Event? sourceEvent = null,\u000a                        optional unsigned short inputSource = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XULDocument.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XULDocument.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface XULCommandDispatcher;\u000ainterface MozObserver;\u000a\u000a[Func=\"IsChromeOrXBL\"]\u000ainterface XULDocument : Document {\u000a           attribute Node? popupNode;\u000a\u000a  /**\u000a   * These attributes correspond to trustedGetPopupNode().rangeOffset and\u000a   * rangeParent. They will help you find where in the DOM the popup is\u000a   * happening. Can be accessed only during a popup event. Accessing any other\u000a   * time will be an error.\u000a   */\u000a  [Throws, ChromeOnly]\u000a  readonly attribute Node? popupRangeParent;\u000a  [Throws, ChromeOnly]\u000a  readonly attribute long  popupRangeOffset;\u000a\u000a           attribute Node? tooltipNode;\u000a\u000a  readonly attribute XULCommandDispatcher? commandDispatcher;\u000a\u000a  [Throws]\u000a  readonly attribute long width;\u000a  [Throws]\u000a  readonly attribute long height;\u000a\u000a  NodeList getElementsByAttribute(DOMString name,\u000a                                  [TreatNullAs=EmptyString] DOMString value);\u000a  [Throws]\u000a  NodeList getElementsByAttributeNS(DOMString? namespaceURI, DOMString name,\u000a                                    [TreatNullAs=EmptyString] DOMString value);\u000a\u000a  [Throws]\u000a  void addBroadcastListenerFor(Element broadcaster, Element observer,\u000a                               DOMString attr);\u000a  void removeBroadcastListenerFor(Element broadcaster, Element observer,\u000a                                  DOMString attr);\u000a\u000a  [Throws]\u000a  void persist([TreatNullAs=EmptyString] DOMString id, DOMString attr);\u000a\u000a  [Throws]\u000a  BoxObject? getBoxObjectFor(Element? element);\u000a\u000a  /**\u000a   * Loads a XUL overlay and merges it with the current document, notifying an\u000a   * observer when the merge is complete.\u000a   * @param   url\u000a   *          The URL of the overlay to load and merge\u000a   * @param   observer\u000a   *          An object implementing nsIObserver that will be notified with a\u000a   *          message of topic \"xul-overlay-merged\" when the merge is complete.\u000a   *          The subject parameter of |observe| will QI to a nsIURI - the URI\u000a   *          of the merged overlay. This parameter is optional and may be null.\u000a   *\u000a   * NOTICE:  In the 2.0 timeframe this API will change such that the\u000a   *          implementation will fire a DOMXULOverlayMerged event upon merge\u000a   *          completion rather than notifying an observer. Do not rely on this\u000a   *          API's behavior _not_ to change because it will!\u000a   *          - Ben Goodger (8/23/2005)\u000a   */\u000a  [Throws]\u000a  void loadOverlay(DOMString url, MozObserver? observer);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XULElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/XULElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000ainterface XULControllers;\u000a\u000a[HTMLConstructor, Func=\"IsChromeOrXBL\"]\u000ainterface XULElement : Element {\u000a  // Layout properties\u000a  [SetterThrows]\u000a  attribute DOMString align;\u000a  [SetterThrows]\u000a  attribute DOMString dir;\u000a  [SetterThrows]\u000a  attribute DOMString flex;\u000a  [SetterThrows]\u000a  attribute DOMString flexGroup;\u000a  [SetterThrows]\u000a  attribute DOMString ordinal;\u000a  [SetterThrows]\u000a  attribute DOMString orient;\u000a  [SetterThrows]\u000a  attribute DOMString pack;\u000a\u000a  // Properties for hiding elements.\u000a  attribute boolean hidden;\u000a  attribute boolean collapsed;\u000a\u000a  // Property for hooking up to broadcasters\u000a  [SetterThrows]\u000a  attribute DOMString observes;\u000a\u000a  // Properties for hooking up to popups\u000a  [SetterThrows]\u000a  attribute DOMString menu;\u000a  [SetterThrows]\u000a  attribute DOMString contextMenu;\u000a  [SetterThrows]\u000a  attribute DOMString tooltip;\u000a\u000a  // Width/height properties\u000a  [SetterThrows]\u000a  attribute DOMString width;\u000a  [SetterThrows]\u000a  attribute DOMString height;\u000a  [SetterThrows]\u000a  attribute DOMString minWidth;\u000a  [SetterThrows]\u000a  attribute DOMString minHeight;\u000a  [SetterThrows]\u000a  attribute DOMString maxWidth;\u000a  [SetterThrows]\u000a  attribute DOMString maxHeight;\u000a\u000a  // Persistence\u000a  [SetterThrows]\u000a  attribute DOMString persist;\u000a\u000a  // Position properties for\u000a  // * popups - these are screen coordinates\u000a  // * other elements - these are client coordinates relative to parent stack.\u000a  [SetterThrows]\u000a  attribute DOMString left;\u000a  [SetterThrows]\u000a  attribute DOMString top;\u000a\u000a  // Tooltip and status info\u000a  [SetterThrows]\u000a  attribute DOMString tooltipText;\u000a  [SetterThrows]\u000a  attribute DOMString statusText;\u000a\u000a  // Properties for images\u000a  [SetterThrows]\u000a  attribute DOMString src;\u000a\u000a  attribute boolean allowEvents;\u000a\u000a  [Throws, ChromeOnly]\u000a  readonly attribute XULControllers             controllers;\u000a  [Throws]\u000a  readonly attribute BoxObject?                 boxObject;\u000a\u000a  [Throws]\u000a  void                      focus();\u000a  [Throws]\u000a  void                      blur();\u000a  [NeedsCallerType]\u000a  void                      click();\u000a  void                      doCommand();\u000a\u000a  // XXXbz this isn't really a nodelist!  See bug 818548\u000a  NodeList            getElementsByAttribute(DOMString name,\u000a                                             DOMString value);\u000a  // XXXbz this isn't really a nodelist!  See bug 818548\u000a  [Throws]\u000a  NodeList            getElementsByAttributeNS(DOMString namespaceURI,\u000a                                               DOMString name,\u000a                                               DOMString value);\u000a  [Constant]\u000a  readonly attribute CSSStyleDeclaration style;\u000a};\u000a\u000a// And the things from nsIFrameLoaderOwner\u000a[NoInterfaceObject]\u000ainterface MozFrameLoaderOwner {\u000a  [ChromeOnly]\u000a  readonly attribute FrameLoader? frameLoader;\u000a\u000a  [ChromeOnly, Throws]\u000a  void presetOpenerWindow(WindowProxy? window);\u000a\u000a  [ChromeOnly, Throws]\u000a  void swapFrameLoaders(XULElement aOtherLoaderOwner);\u000a\u000a  [ChromeOnly, Throws]\u000a  void swapFrameLoaders(HTMLIFrameElement aOtherLoaderOwner);\u000a};\u000a\u000aXULElement implements GlobalEventHandlers;\u000aXULElement implements TouchEventHandlers;\u000aXULElement implements MozFrameLoaderOwner;\u000aXULElement implements OnErrorEventHandlerForNodes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLParagraphElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLParagraphElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-p-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-p-element\u000a[HTMLConstructor]\u000ainterface HTMLParagraphElement : HTMLElement {\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLParagraphElement {\u000a           [CEReactions, SetterThrows]\u000a           attribute DOMString align;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLParamElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLParamElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a *\u000a * The origin of this IDL file is\u000a * http://www.whatwg.org/specs/web-apps/current-work/#the-param-element\u000a * http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000a *\u000a * © Copyright 2004-2011 Apple Computer, Inc., Mozilla Foundation, and\u000a * Opera Software ASA. You are granted a license to use, reproduce\u000a * and create derivative works of this document.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#the-param-element\u000a[HTMLConstructor]\u000ainterface HTMLParamElement : HTMLElement {\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString name;\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString value;\u000a};\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/#other-elements,-attributes-and-apis\u000apartial interface HTMLParamElement {\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString type;\u000a           [CEReactions, SetterThrows, Pure]\u000a           attribute DOMString valueType;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:{class:"org.chromium.webidl.IDLFileId",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLPictureElement.webidl"},metadata:{class:"org.chromium.webidl.GithubIDLFile",githubBaseURL:"https://github.com/mozilla/gecko-dev",repository:"https://github.com/mozilla/gecko-dev.git",revision:"7be9fed7d0125483c298bbc1ede677ba8e5abc42",path:"dom/webidl/HTMLPictureElement.webidl"},contents:"/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\u000a/* This Source Code Form is subject to the terms of the Mozilla Public\u000a * License, v. 2.0. If a copy of the MPL was not distributed with this file,\u000a * You can obtain one at http://mozilla.org/MPL/2.0/.\u000a */\u000a\u000a[HTMLConstructor]\u000ainterface HTMLPictureElement : HTMLElement {\u000a};\u000a"}));

put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/Animation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/Animation.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/web-animations/#animation\u000a\u000aenum AnimationPlayState { \"idle\", \"pending\", \"running\", \"paused\", \"finished\" };\u000a\u000a[\u000a    Constructor(optional AnimationEffectReadOnly? effect = null, optional AnimationTimeline? timeline),\u000a    Exposed(Window WebAnimationsAPI),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor,\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface Animation : EventTarget {\u000a    // TODO(suzyh): Make timeline mutable.\u000a    [RuntimeEnabled=WebAnimationsAPI] attribute AnimationEffectReadOnly? effect;\u000a    [RuntimeEnabled=WebAnimationsAPI] readonly attribute AnimationTimeline? timeline;\u000a    [Measure] attribute double?    startTime;\u000a    [Measure] attribute double?    currentTime;\u000a    [Measure] attribute double     playbackRate;\u000a    [Measure] readonly attribute AnimationPlayState playState;\u000a    [Measure, RaisesException] void finish();\u000a    [Measure, RaisesException] void play();\u000a    [Measure, RaisesException] void pause();\u000a    [Measure, RaisesException] void reverse();\u000a    [Measure] attribute DOMString id;\u000a    [Measure] void cancel();\u000a    [Measure] attribute EventHandler onfinish;\u000a    [Measure] attribute EventHandler oncancel;\u000a    [RuntimeEnabled=WebAnimationsAPI, CallWith=ScriptState] readonly attribute Promise<Animation> finished;\u000a    [RuntimeEnabled=WebAnimationsAPI, CallWith=ScriptState] readonly attribute Promise<Animation> ready;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/AnimationEffectReadOnly.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/AnimationEffectReadOnly.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/web-animations/#the-animationeffectreadonly-interface\u000a\u000a[\u000a    RuntimeEnabled=WebAnimationsAPI\u000a] interface AnimationEffectReadOnly {\u000a    readonly attribute AnimationEffectTimingReadOnly timing;\u000a    ComputedTimingProperties getComputedTiming();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/AnimationEffectTiming.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/AnimationEffectTiming.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#the-animationeffecttiming-interface\u000a\u000a[\u000a    RuntimeEnabled=WebAnimationsAPI\u000a] interface AnimationEffectTiming : AnimationEffectTimingReadOnly {\u000a    attribute double delay;\u000a    attribute double endDelay;\u000a    attribute DOMString fill;\u000a    [RaisesException=Setter] attribute double iterationStart;\u000a    [RaisesException=Setter] attribute unrestricted double iterations;\u000a    [RaisesException=Setter] attribute (unrestricted double or DOMString) duration;\u000a    attribute PlaybackDirection direction;\u000a    [RaisesException=Setter] attribute DOMString easing;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/AnimationEffectTimingProperties.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/AnimationEffectTimingProperties.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#the-animationeffecttimingproperties-dictionary\u000a\u000aenum FillMode { \"none\", \"forwards\", \"backwards\", \"both\", \"auto\" };\u000aenum PlaybackDirection { \"normal\", \"reverse\", \"alternate\", \"alternate-reverse\" };\u000a\u000adictionary AnimationEffectTimingProperties {\u000a    double                             delay = 0;\u000a    double                             endDelay = 0;\u000a    FillMode                           fill = \"auto\";\u000a    double                             iterationStart = 0.0;\u000a    unrestricted double                iterations = 1.0;\u000a    (unrestricted double or DOMString) duration = \"auto\";\u000a    PlaybackDirection                  direction = \"normal\";\u000a    DOMString                          easing = \"linear\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/AnimationEffectTimingReadOnly.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/AnimationEffectTimingReadOnly.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#the-animationeffecttimingreadonly-interface\u000a// TODO(suzyh): Use enums instead of DOMStrings where specced\u000a\u000a[\u000a    RuntimeEnabled=WebAnimationsAPI\u000a] interface AnimationEffectTimingReadOnly {\u000a    readonly attribute double delay;\u000a    readonly attribute double endDelay;\u000a    readonly attribute DOMString fill;\u000a    readonly attribute double iterationStart;\u000a    readonly attribute unrestricted double iterations;\u000a    readonly attribute (unrestricted double or DOMString) duration;\u000a    readonly attribute PlaybackDirection direction;\u000a    readonly attribute DOMString easing;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/AnimationTimeline.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/AnimationTimeline.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#the-animationtimeline-interface\u000a\u000a[\u000a    RuntimeEnabled=WebAnimationsAPI\u000a] interface AnimationTimeline {\u000a    readonly attribute double? currentTime;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/ComputedTimingProperties.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/ComputedTimingProperties.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#the-computedtimingproperties-dictionary\u000a\u000adictionary ComputedTimingProperties : AnimationEffectTimingProperties {\u000a    unrestricted double  endTime;\u000a    unrestricted double  activeDuration;\u000a    double?              localTime;\u000a    double?              progress;\u000a    unrestricted double? currentIteration;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/DocumentAnimation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/DocumentAnimation.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#extensions-to-the-document-interface\u000a\u000a[\u000a    ImplementedAs=DocumentAnimation,\u000a    RuntimeEnabled=WebAnimationsAPI\u000a] partial interface Document {\u000a    readonly attribute DocumentTimeline timeline;\u000a\u000a    sequence<Animation> getAnimations();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/DocumentTimeline.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/DocumentTimeline.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#the-documenttimeline-interface\u000a\u000a[\u000a    Constructor(optional DocumentTimelineOptions options),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RuntimeEnabled=WebAnimationsAPI\u000a] interface DocumentTimeline : AnimationTimeline {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/DocumentTimelineOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/DocumentTimelineOptions.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#dictdef-documenttimelineoptions\u000a\u000adictionary DocumentTimelineOptions {\u000a  DOMHighResTimeStamp originTime = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/ElementAnimation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/ElementAnimation.idl"},specUrls:["https://w3c.github.io/web-animations/","https://w3c.github.io/web-animations/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/web-animations/#the-animatable-interface\u000a// https://w3c.github.io/web-animations/#extensions-to-the-element-interface\u000a\u000a// TODO(dstockwell): This should be an Animatable interface, where Element\u000a// implements Animatable.\u000a\u000a[\u000a    ImplementedAs=ElementAnimation\u000a] partial interface Element {\u000a    // TODO(dstockwell): The argument types do not match the spec.\u000a    [CallWith=ScriptState, Measure, RaisesException] Animation animate((sequence<Dictionary> or Dictionary)? effect, optional (unrestricted double or KeyframeAnimationOptions) options);\u000a    [RuntimeEnabled=WebAnimationsAPI] sequence<Animation> getAnimations();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/KeyframeAnimationOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/KeyframeAnimationOptions.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#dictdef-keyframeanimationoptions\u000a\u000adictionary KeyframeAnimationOptions : KeyframeEffectOptions {\u000a    DOMString id = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/KeyframeEffect.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/KeyframeEffect.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/web-animations/#the-keyframeeffect-interfaces\u000a\u000a[\u000a    Constructor(Element? target, (sequence<Dictionary> or Dictionary)? effect, optional (unrestricted double or KeyframeEffectOptions) options),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=WebAnimationsAPI\u000a] interface KeyframeEffect : KeyframeEffectReadOnly {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/KeyframeEffectOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/KeyframeEffectOptions.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#the-keyframeeffectoptions-dictionary\u000a\u000adictionary KeyframeEffectOptions : AnimationEffectTimingProperties {\u000a    // TODO(alancutter): Implement iterationComposite, composite and spacing.\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/KeyframeEffectReadOnly.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/KeyframeEffectReadOnly.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#the-keyframeeffect-interfaces\u000a\u000a[\u000a    Constructor(Element? target, (sequence<Dictionary> or Dictionary)? effect, optional (unrestricted double or KeyframeEffectOptions) options),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=WebAnimationsAPI\u000a] interface KeyframeEffectReadOnly : AnimationEffectReadOnly {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/ScrollTimeline.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/ScrollTimeline.idl"},specUrls:["https://wicg.github.io/scroll-animations/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/scroll-animations/#scrolltimeline-interface\u000a\u000a[\u000a    Constructor(optional ScrollTimelineOptions options),\u000a    ConstructorCallWith=Document,\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=AnimationWorklet\u000a] interface ScrollTimeline : AnimationTimeline {\u000a    readonly attribute Element? scrollSource;\u000a    readonly attribute ScrollDirection orientation;\u000a    readonly attribute (double or ScrollTimelineAutoKeyword) timeRange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/animation/ScrollTimelineOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/animation/ScrollTimelineOptions.idl"},specUrls:["https://wicg.github.io/scroll-animations/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/scroll-animations/#dictdef-scrolltimelineoptions\u000a\u000aenum ScrollDirection {\u000a    \"block\",\u000a    \"inline\",\u000a};\u000a\u000aenum ScrollTimelineAutoKeyword { \"auto\" };\u000a\u000adictionary ScrollTimelineOptions {\u000a        Element scrollSource;\u000a        ScrollDirection orientation = \"block\";\u000a        (double or ScrollTimelineAutoKeyword) timeRange = \"auto\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/clipboard/Clipboard.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/clipboard/Clipboard.idl"},specUrls:["https://w3c.github.io/clipboard-apis/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/clipboard-apis/#clipboard-interface\u000a\u000a[SecureContext]\u000ainterface Clipboard : EventTarget {\u000a  [CallWith=ScriptState] Promise<DataTransfer> read();\u000a  [CallWith=ScriptState] Promise<DOMString> readText();\u000a\u000a  [CallWith=ScriptState] Promise<void> write(DataTransfer data);\u000a  [CallWith=ScriptState] Promise<void> writeText(DOMString data);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/clipboard/DataTransfer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/clipboard/DataTransfer.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-datatransfer-interface\u000a\u000a[\u000a    Constructor\u000a] interface DataTransfer {\u000a    attribute DOMString dropEffect;\u000a    attribute DOMString effectAllowed;\u000a\u000a    [SameObject] readonly attribute DataTransferItemList items;\u000a\u000a    void setDragImage(Element image, long x, long y);\u000a\u000a    /* old interface */\u000a    [CachedAttribute=hasDataStoreItemListChanged] readonly attribute FrozenArray<DOMString> types;\u000a    DOMString getData(DOMString format);\u000a    void setData(DOMString format, DOMString data);\u000a    void clearData(optional DOMString format);\u000a    [SameObject] readonly attribute FileList files;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/clipboard/DataTransferItem.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/clipboard/DataTransferItem.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-datatransferitem-interface\u000a\u000ainterface DataTransferItem {\u000a    readonly attribute DOMString kind;\u000a    readonly attribute DOMString type;\u000a    [CallWith=ScriptState] void getAsString(FunctionStringCallback? callback);\u000a    File? getAsFile();\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/clipboard/DataTransferItemList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/clipboard/DataTransferItemList.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-datatransferitemlist-interface\u000a\u000ainterface DataTransferItemList {\u000a    readonly attribute unsigned long length;\u000a    [ImplementedAs=item] getter DataTransferItem (unsigned long index);\u000a    [RaisesException] DataTransferItem? add(DOMString data, DOMString type);\u000a    DataTransferItem? add(File file);\u000a    [RaisesException, ImplementedAs=deleteItem] void remove(unsigned long index);\u000a    void clear();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSS.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSS.idl"},specUrls:["https://drafts.csswg.org/css-conditional/"],contents:"/*\u000a * Copyright (C) 2012 Motorola Mobility Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above\u000a *    copyright notice, this list of conditions and the following disclaimer in\u000a *    the documentation and/or other materials provided with the distribution.\u000a * 3. Neither the name of Motorola Mobility Inc. nor the names of its\u000a *    contributors may be used to endorse or promote products derived from this\u000a *    software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/css-conditional/#the-css-interface\u000a\u000a[\u000a    ImplementedAs=DOMWindowCSS\u000a] interface CSS {\u000a    static boolean supports(DOMString property, DOMString value);\u000a    static boolean supports(DOMString conditionText);\u000a    static DOMString escape(DOMString ident);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSConditionRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSConditionRule.idl"},specUrls:["https://drafts.csswg.org/css-conditional/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.csswg.org/css-conditional/#the-cssconditionrule-interface\u000a\u000ainterface CSSConditionRule : CSSGroupingRule {\u000a    // TODO(xing.xu): readonly should be removed.\u000a    readonly attribute DOMString conditionText;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSFontFaceRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSFontFaceRule.idl"},specUrls:["https://dev.w3.org/csswg/css-fonts/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// The CSSFontFaceRule interface was introduced in DOM Level 2 Style, but has\u000a// been replaced by an entirely different interface in CSS Fonts:\u000a// https://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSFontFaceRule\u000a// https://dev.w3.org/csswg/css-fonts/#om-fontface\u000a//\u000a// TODO(foolip): Make CSSFontFaceRule match new spec and/or change spec to match\u000a// what's implemented. https://crbug.com/709013\u000a// https://github.com/w3c/csswg-drafts/issues/825\u000a\u000ainterface CSSFontFaceRule : CSSRule {\u000a    [Measure] readonly attribute CSSStyleDeclaration style;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSGroupingRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSGroupingRule.idl"},specUrls:["https://drafts.csswg.org/cssom/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssgroupingrule-interface\u000a\u000ainterface CSSGroupingRule : CSSRule {\u000a    [SameObject] readonly attribute CSSRuleList cssRules;\u000a    [RaisesException] unsigned long insertRule(DOMString rule, unsigned long index);\u000a    [RaisesException] void deleteRule(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSImportRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSImportRule.idl"},specUrls:["https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssimportrule-interface\u000a\u000ainterface CSSImportRule : CSSRule {\u000a    readonly attribute DOMString href;\u000a    // TODO(foolip): media should have [PutForwards=mediaText].\u000a    [SameObject] readonly attribute MediaList media;\u000a    [SameObject] readonly attribute CSSStyleSheet styleSheet;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSKeyframeRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSKeyframeRule.idl"},specUrls:["https://drafts.csswg.org/css-animations/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/css-animations/#interface-csskeyframerule\u000a\u000ainterface CSSKeyframeRule : CSSRule {\u000a    [RaisesException=Setter] attribute DOMString keyText;\u000a    readonly attribute CSSStyleDeclaration style;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSKeyframesRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSKeyframesRule.idl"},specUrls:["https://drafts.csswg.org/css-animations/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/css-animations/#interface-csskeyframesrule\u000a\u000ainterface CSSKeyframesRule : CSSRule {\u000a    attribute DOMString name;\u000a    readonly attribute CSSRuleList cssRules;\u000a\u000a    void appendRule(DOMString rule);\u000a    void deleteRule(DOMString select);\u000a    CSSKeyframeRule? findRule(DOMString select);\u000a\u000a    // Non-standard APIs\u000a    [NotEnumerable] getter CSSKeyframeRule (unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSMediaRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSMediaRule.idl"},specUrls:["https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssmediarule-interface\u000a\u000ainterface CSSMediaRule : CSSConditionRule {\u000a    // TODO(foolip): media should have [PutForwards=mediaText].\u000a    [SameObject] readonly attribute MediaList media;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSNamespaceRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSNamespaceRule.idl"},specUrls:["https://drafts.csswg.org/cssom/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssnamespacerule-interface\u000a\u000ainterface CSSNamespaceRule : CSSRule {\u000a\u000a    readonly attribute DOMString namespaceURI;\u000a    readonly attribute DOMString prefix;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSPageRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSPageRule.idl"},specUrls:["https://drafts.csswg.org/cssom/","https://drafts.csswg.org/css-page/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-csspagerule-interface\u000a\u000a// TODO(foolip): CSSPageRule should inherit from CSSGroupingRule.\u000a// crbug.com/496381. To internally implement this as grouping rule,\u000a// margin at-rules should be implemented crbug.com/320370, since the\u000a// spec https://drafts.csswg.org/css-page/#at-page-rule allows only\u000a// margin at-rules inside @page.\u000ainterface CSSPageRule : CSSRule {\u000a    attribute DOMString selectorText;\u000a    // TODO(foolip): style should have [PutForwards=cssText].\u000a    [SameObject] readonly attribute CSSStyleDeclaration style;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSRule.idl"},specUrls:["https://drafts.csswg.org/cssom/","https://drafts.csswg.org/css-animations/","https://drafts.csswg.org/css-conditional/","https://drafts.csswg.org/css-device-adapt/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssrule-interface\u000a\u000a[\u000a    DependentLifetime\u000a] interface CSSRule {\u000a    const unsigned short STYLE_RULE = 1;\u000a    const unsigned short CHARSET_RULE = 2;\u000a    const unsigned short IMPORT_RULE = 3;\u000a    const unsigned short MEDIA_RULE = 4;\u000a    const unsigned short FONT_FACE_RULE = 5;\u000a    const unsigned short PAGE_RULE = 6;\u000a    // TODO(foolip): Implement CSSMarginRule.\u000a    // const unsigned short MARGIN_RULE = 9;\u000a    const unsigned short NAMESPACE_RULE = 10;\u000a    readonly attribute unsigned short type;\u000a    attribute DOMString cssText;\u000a    readonly attribute CSSRule? parentRule;\u000a    readonly attribute CSSStyleSheet? parentStyleSheet;\u000a\u000a    // CSS Animations\u000a    // https://drafts.csswg.org/css-animations/#interface-cssrule\u000a    const unsigned short KEYFRAMES_RULE = 7;\u000a    const unsigned short KEYFRAME_RULE = 8;\u000a\u000a    // CSS Conditional Rules\u000a    // https://drafts.csswg.org/css-conditional/#extentions-to-cssrule-interface\u000a    const unsigned short SUPPORTS_RULE = 12;\u000a\u000a    // CSS Device Adaptation\u000a    // https://drafts.csswg.org/css-device-adapt/#css-rule-interface\u000a    [RuntimeEnabled=CSSViewport] const unsigned short VIEWPORT_RULE = 15;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSRuleList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSRuleList.idl"},specUrls:["https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssrulelist-interface\u000a\u000a// TODO(foolip): CSSRuleList should be an [ArrayClass].\u000a[\u000a    DependentLifetime\u000a] interface CSSRuleList {\u000a    [Measure] getter CSSRule? item(unsigned long index);\u000a    readonly attribute unsigned long length;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSStyleDeclaration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSStyleDeclaration.idl"},specUrls:["https://drafts.csswg.org/cssom/","https://drafts.csswg.org/cssom/","https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssstyledeclaration-interface\u000a\u000a[\u000a    DependentLifetime\u000a] interface CSSStyleDeclaration {\u000a    [CEReactions, RaisesException=Setter] attribute DOMString cssText;\u000a    readonly attribute unsigned long length;\u000a    getter DOMString item(unsigned long index);\u000a    DOMString getPropertyValue(DOMString property);\u000a    DOMString getPropertyPriority(DOMString property);\u000a    // TODO(foolip): The value and priority arguments should have\u000a    // [TreatNullAs=EmptyString] and should not be nullable.\u000a    [CEReactions, RaisesException] void setProperty(DOMString property, DOMString? value, optional DOMString? priority = null);\u000a    // void setPropertyValue(DOMString property, [TreatNullAs=EmptyString] DOMString value);\u000a    // void setPropertyPriority(DOMString property, [TreatNullAs=EmptyString] DOMString priority);\u000a    [CEReactions, RaisesException] DOMString removeProperty(DOMString property);\u000a    readonly attribute CSSRule? parentRule;\u000a    [CEReactions, RaisesException=Setter, TreatNullAs=EmptyString] attribute DOMString cssFloat;\u000a\u000a    // The camel-cased and dashed attribute getters have custom bindings.\u000a    // https://drafts.csswg.org/cssom/#dom-cssstyledeclaration-camel-cased-attribute\u000a    // https://drafts.csswg.org/cssom/#dom-cssstyledeclaration-dashed-attribute\u000a    [Custom=(PropertyGetter,PropertyEnumerator,PropertyQuery)] getter (DOMString or float) (DOMString name);\u000a    [Custom] setter void (DOMString property, DOMString? propertyValue);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSStyleRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSStyleRule.idl"},specUrls:["https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssstylerule-interface\u000a\u000a[\u000a    DependentLifetime\u000a] interface CSSStyleRule : CSSRule {\u000a    attribute DOMString selectorText;\u000a    [SameObject, PutForwards=cssText] readonly attribute CSSStyleDeclaration style;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSStyleSheet.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSStyleSheet.idl"},specUrls:["https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2008 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-cssstylesheet-interface\u000a\u000a[\u000a    DependentLifetime\u000a] interface CSSStyleSheet : StyleSheet {\u000a    readonly attribute CSSRule? ownerRule;\u000a    [SameObject] readonly attribute CSSRuleList cssRules;\u000a    [RaisesException] unsigned long insertRule(DOMString rule, optional unsigned long index = 0);\u000a    [RaisesException] void deleteRule(unsigned long index);\u000a\u000a    // Non-standard APIs\u000a    [MeasureAs=CSSStyleSheetRules] readonly attribute CSSRuleList rules;\u000a    [MeasureAs=CSSStyleSheetAddRule, RaisesException] long addRule([Default=Undefined] optional DOMString selector, [Default=Undefined] optional DOMString style, optional unsigned long index);\u000a    [MeasureAs=CSSStyleSheetRemoveRule, RaisesException] void removeRule([Default=Undefined] optional unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSSupportsRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSSupportsRule.idl"},specUrls:["https://drafts.csswg.org/css-conditional/"],contents:"/* Copyright (C) 2012 Motorola Mobility Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above\u000a *    copyright notice, this list of conditions and the following disclaimer in\u000a *    the documentation and/or other materials provided with the distribution.\u000a * 3. Neither the name of Motorola Mobility Inc. nor the names of its\u000a *    contributors may be used to endorse or promote products derived from this\u000a *    software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/css-conditional/#the-csssupportsrule-interface\u000a\u000ainterface CSSSupportsRule : CSSConditionRule {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/CSSViewportRule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/CSSViewportRule.idl"},specUrls:["https://drafts.csswg.org/css-device-adapt/"],contents:"/*\u000a * Copyright (C) 2012 Intel Corporation. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1. Redistributions of source code must retain the above\u000a *    copyright notice, this list of conditions and the following\u000a *    disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above\u000a *    copyright notice, this list of conditions and the following\u000a *    disclaimer in the documentation and/or other materials\u000a *    provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\u000a * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\u000a * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\u000a * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\u000a * THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\u000a * SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/css-device-adapt/#css-viewport-rule-interface\u000a\u000a[\u000a    RuntimeEnabled=CSSViewport\u000a] interface CSSViewportRule : CSSRule {\u000a    readonly attribute CSSStyleDeclaration style;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/FontFace.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/FontFace.idl"},specUrls:["https://drafts.csswg.org/css-font-loading/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/css-font-loading/#fontface-interface\u000a\u000aenum FontFaceLoadStatus {\u000a    \"unloaded\",\u000a    \"loading\",\u000a    \"loaded\",\u000a    \"error\"\u000a};\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Exposed(Window StableBlinkFeatures, Worker ExperimentalCanvasFeatures),\u000a    // FIXME: This should be (DOMString or BinaryData), where BinaryData is typedef of (ArrayBuffer or ArrayBufferView)\u000a    Constructor(DOMString family, (DOMString or ArrayBuffer or ArrayBufferView) source, optional FontFaceDescriptors descriptors),\u000a    ConstructorCallWith=ExecutionContext,\u000a    MeasureAs=FontFaceConstructor\u000a] interface FontFace {\u000a    [RaisesException=Setter, SetterCallWith=ExecutionContext] attribute DOMString family;\u000a    [RaisesException=Setter, SetterCallWith=ExecutionContext] attribute DOMString style;\u000a    [RaisesException=Setter, SetterCallWith=ExecutionContext] attribute DOMString weight;\u000a    [RaisesException=Setter, SetterCallWith=ExecutionContext] attribute DOMString stretch;\u000a    [RaisesException=Setter, SetterCallWith=ExecutionContext] attribute DOMString unicodeRange;\u000a    [RaisesException=Setter, SetterCallWith=ExecutionContext] attribute DOMString variant;\u000a    [RaisesException=Setter, SetterCallWith=ExecutionContext] attribute DOMString featureSettings;\u000a    [RaisesException=Setter, SetterCallWith=ExecutionContext] attribute DOMString display;\u000a\u000a    readonly attribute FontFaceLoadStatus status;\u000a\u000a    [CallWith=ScriptState] Promise<FontFace> load();\u000a    [CallWith=ScriptState] readonly attribute Promise<FontFace> loaded;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/FontFaceDescriptors.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/FontFaceDescriptors.idl"},specUrls:["https://drafts.csswg.org/css-font-loading/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.csswg.org/css-font-loading/#dictdef-fontfacedescriptors\u000a\u000adictionary FontFaceDescriptors {\u000a    DOMString style = \"normal\";\u000a    DOMString weight = \"normal\";\u000a    DOMString stretch = \"normal\";\u000a    DOMString unicodeRange = \"U+0-10FFFF\";\u000a    DOMString variant = \"normal\";\u000a    DOMString featureSettings = \"normal\";\u000a    DOMString display = \"auto\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/FontFaceSet.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/FontFaceSet.idl"},specUrls:["https://drafts.csswg.org/css-font-loading/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/css-font-loading/#FontFaceSet-interface\u000a\u000aenum FontFaceSetLoadStatus { \"loading\", \"loaded\" };\u000a\u000a// TODO(foolip): This interface should be [Exposed=Window,Worker] and should\u000a// have a constructor, and thus not have [NoInterfaceObject].\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface FontFaceSet : EventTarget {\u000a    setlike<FontFace>;\u000a\u000a    // events for when loading state changes\u000a    attribute EventHandler onloading;\u000a    attribute EventHandler onloadingdone;\u000a    attribute EventHandler onloadingerror;\u000a\u000a    // check and start loads if appropriate\u000a    // and fulfill promise when all loads complete\u000a    [CallWith=ScriptState] Promise<sequence<FontFace>> load(DOMString font, optional DOMString text = \" \");\u000a\u000a    // return whether all fonts in the fontlist are loaded\u000a    // (does not initiate load if not available)\u000a    [RaisesException] boolean check(DOMString font, optional DOMString text = \" \");\u000a\u000a    // async notification that font loading and layout operations are done\u000a    [CallWith=ScriptState] readonly attribute Promise<FontFaceSet> ready;\u000a\u000a    // loading state, \"loading\" while one or more fonts loading, \"loaded\" otherwise\u000a    readonly attribute FontFaceSetLoadStatus status;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/FontFaceSetLoadEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/FontFaceSetLoadEvent.idl"},specUrls:["https://drafts.csswg.org/css-font-loading/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/css-font-loading/#fontfacesetloadevent\u000a\u000a[\u000a  Constructor(DOMString type, optional FontFaceSetLoadEventInit eventInitDict),\u000a  // TODO(loonybear): Exposed=(Window,Worker)\u000a  Exposed=Window\u000a] interface FontFaceSetLoadEvent : Event {\u000a    [SameObject] readonly attribute FrozenArray<FontFace> fontfaces;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/FontFaceSetLoadEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/FontFaceSetLoadEventInit.idl"},specUrls:["https://drafts.csswg.org/css-font-loading/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.csswg.org/css-font-loading/#fontfacesetloadevent\u000a\u000adictionary FontFaceSetLoadEventInit : EventInit {\u000a    sequence<FontFace> fontfaces = [];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/FontFaceSource.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/FontFaceSource.idl"},specUrls:["https://drafts.csswg.org/css-font-loading/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// spec: https://drafts.csswg.org/css-font-loading/#font-face-source\u000a\u000a[\u000a  LegacyTreatAsPartialInterface,\u000a  NoInterfaceObject\u000a] interface FontFaceSource {\u000a  [MeasureAs=DocumentFonts] readonly attribute FontFaceSet fonts;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/MediaList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/MediaList.idl"},specUrls:["https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-medialist-interface\u000a\u000a// TODO(foolip): MediaList should be an [ArrayClass].\u000ainterface MediaList {\u000a    // TODO(foolip): [TreatNullAs=EmptyString] stringifier attribute DOMString mediaText;\u000a    attribute DOMString? mediaText;\u000a    readonly attribute unsigned long length;\u000a    [Measure] getter DOMString? item(unsigned long index);\u000a    // TODO(foolip): appendMedium() and deleteMedium() should never throw.\u000a    [RaisesException] void appendMedium(DOMString medium);\u000a    [RaisesException] void deleteMedium(DOMString medium);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/MediaQueryList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/MediaQueryList.idl"},specUrls:["https://drafts.csswg.org/cssom-view/","https://drafts.csswg.org/cssom-view/"],contents:"/*\u000a * Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies)\u000a *\u000a *  This library is free software; you can redistribute it and/or\u000a *  modify it under the terms of the GNU Library General Public\u000a *  License as published by the Free Software Foundation; either\u000a *  version 2 of the License, or (at your option) any later version.\u000a *\u000a *  This library is distributed in the hope that it will be useful,\u000a *  but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a *  Library General Public License for more details.\u000a *\u000a *  You should have received a copy of the GNU Library General Public License\u000a *  along with this library; see the file COPYING.LIB.  If not, write to\u000a *  the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a *  Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom-view/#the-mediaquerylist-interface\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface MediaQueryList : EventTarget {\u000a    readonly attribute DOMString media;\u000a    readonly attribute boolean matches;\u000a    // Even though this interface is now an event target, these functions\u000a    // exist as aliases for addEventListener for backwards compatibility\u000a    // with older versions of this interface. See the note at\u000a    // https://drafts.csswg.org/cssom-view/#dom-mediaquerylist-removelistener\u000a    [ImplementedAs=addDeprecatedListener] void addListener(EventListener? listener);\u000a    [ImplementedAs=removeDeprecatedListener] void removeListener(EventListener? listener);\u000a    attribute EventHandler onchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/MediaQueryListEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/MediaQueryListEvent.idl"},specUrls:["https://drafts.csswg.org/cssom-view/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.csswg.org/cssom-view/#mediaquerylistevent\u000a\u000a[\u000a    Constructor(DOMString type, optional MediaQueryListEventInit eventInitDict)\u000a] interface MediaQueryListEvent : Event {\u000a    readonly attribute DOMString media;\u000a    readonly attribute boolean matches;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/MediaQueryListEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/MediaQueryListEventInit.idl"},specUrls:["https://drafts.csswg.org/cssom-view/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.csswg.org/cssom-view/#mediaquerylistevent\u000a\u000adictionary MediaQueryListEventInit : EventInit {\u000a    DOMString media = \"\";\u000a    boolean matches = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/PropertyDescriptor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/PropertyDescriptor.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000adictionary PropertyDescriptor {\u000a    required DOMString name;\u000a    DOMString syntax = \"*\";\u000a    boolean inherits = false;\u000a    DOMString initialValue;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/PropertyRegistration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/PropertyRegistration.idl"},specUrls:["https://drafts.css-houdini.org/css-properties-values-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.css-houdini.org/css-properties-values-api/#registering-custom-properties\u000a[\u000a    ImplementedAs=PropertyRegistration\u000a] partial interface CSS {\u000a    [RuntimeEnabled=CSSVariables2, MeasureAs=CSSRegisterProperty, CallWith=ExecutionContext, RaisesException]\u000a        static void registerProperty(PropertyDescriptor descriptor);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/StyleMedia.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/StyleMedia.idl"},contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies)\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// This interface was originally named Media, and was removed from the spec\u000a// shortly after it was renamed to StyleMedia:\u000a// https://www.w3.org/TR/2009/WD-cssom-view-20090804/#the-media-interface\u000a// https://web.archive.org/web/20100206142043/http://dev.w3.org/csswg/cssom-view#the-stylemedia-interface\u000a//\u000a// TODO(foolip): Remove this interface. https://crbug.com/692839\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface StyleMedia {\u000a    [MeasureAs=StyleMediaType] readonly attribute DOMString type;\u000a    [MeasureAs=StyleMediaMatchMedium] boolean matchMedium([Default=Undefined] optional DOMString mediaquery);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/StyleSheet.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/StyleSheet.idl"},specUrls:["https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-stylesheet-interface\u000a\u000a[\u000a    DependentLifetime\u000a] interface StyleSheet {\u000a    readonly attribute DOMString type;\u000a    readonly attribute DOMString? href;\u000a    // TODO(foolip): ownerNode should be (Element or ProcessingInstruction).\u000a    readonly attribute Node? ownerNode;\u000a    readonly attribute StyleSheet? parentStyleSheet;\u000a    readonly attribute DOMString? title;\u000a    // TODO(foolip): media should have [PutForwards=mediaText].\u000a    [SameObject] readonly attribute MediaList media;\u000a    attribute boolean disabled;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSImageValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSImageValue.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// CSSImageValue is the base class for Typed OM's representation of various\u000a// image types.\u000a// https://drafts.css-houdini.org/css-typed-om/#imagevalue-objects\u000a[\u000a    Exposed=(Window,PaintWorklet),\u000a    RuntimeEnabled=CSSTypedOM,\u000a    ImplementedAs=CSSStyleImageValue\u000a] interface CSSImageValue : CSSResourceValue {\u000a    readonly attribute double? intrinsicWidth;\u000a    readonly attribute double? intrinsicHeight;\u000a    readonly attribute double? intrinsicRatio;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSKeywordValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSKeywordValue.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// CSSKeywordValue represents CSS Values that are specified as keywords, for\u000a// example \"initial\".\u000a// https://drafts.css-houdini.org/css-typed-om/#keywordvalue-objects\u000a[\u000a    Constructor(DOMString keyword),\u000a    Exposed(Window CSSTypedOM, PaintWorklet CSSTypedOM),\u000a    RaisesException=Constructor\u000a] interface CSSKeywordValue : CSSStyleValue {\u000a    attribute DOMString value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSMathInvert.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSMathInvert.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om-1/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents the inverse a CSSNumericValue.\u000a// https://drafts.css-houdini.org/css-typed-om-1/#cssmathinvert\u000a[\u000a  Constructor(CSSNumberish arg),\u000a  Exposed=(Window,PaintWorklet),\u000a  RuntimeEnabled=CSSTypedOM\u000a] interface CSSMathInvert : CSSMathValue {\u000a  attribute CSSNumberish value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSMathMax.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSMathMax.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om-1/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents the maximum of one or more CSSNumericValues.\u000a// https://drafts.css-houdini.org/css-typed-om-1/#cssmathsum\u000a[\u000a  Constructor(CSSNumberish... args),\u000a  Exposed=(Window,PaintWorklet),\u000a  RaisesException=Constructor,\u000a  RuntimeEnabled=CSSTypedOM\u000a] interface CSSMathMax : CSSMathValue {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSMathMin.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSMathMin.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om-1/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents the minimum of one or more CSSNumericValues.\u000a// https://drafts.css-houdini.org/css-typed-om-1/#cssmathsum\u000a[\u000a  Constructor(CSSNumberish... args),\u000a  Exposed=(Window,PaintWorklet),\u000a  RaisesException=Constructor,\u000a  RuntimeEnabled=CSSTypedOM\u000a] interface CSSMathMin : CSSMathValue {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSMathNegate.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSMathNegate.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om-1/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents the negation of a CSSNumericValue.\u000a// https://drafts.css-houdini.org/css-typed-om-1/#cssmathnegate\u000a[\u000a  Constructor(CSSNumberish arg),\u000a  Exposed=(Window,PaintWorklet),\u000a  RuntimeEnabled=CSSTypedOM\u000a] interface CSSMathNegate : CSSMathValue {\u000a  attribute CSSNumberish value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSMathProduct.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSMathProduct.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om-1/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents the product of one or more CSSNumericValues.\u000a// https://drafts.css-houdini.org/css-typed-om-1/#cssmathsub\u000a[\u000a  Constructor(CSSNumberish... args),\u000a  Exposed=(Window,PaintWorklet),\u000a  RaisesException=Constructor,\u000a  RuntimeEnabled=CSSTypedOM\u000a] interface CSSMathProduct : CSSMathValue {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSMathSum.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSMathSum.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om-1/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents the sum of one or more CSSNumericValues.\u000a// https://drafts.css-houdini.org/css-typed-om-1/#cssmathsum\u000a[\u000a  Constructor(CSSNumberish... args),\u000a  Exposed=(Window,PaintWorklet),\u000a  RaisesException=Constructor,\u000a  RuntimeEnabled=CSSTypedOM\u000a] interface CSSMathSum : CSSMathValue {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSMathValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSMathValue.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om-1/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents mathematical expresssions that form a tree.\u000a// https://drafts.css-houdini.org/css-typed-om-1/#cssmathvalue\u000aenum CSSMathOperator {\u000a  \"sum\",\u000a  \"product\",\u000a  \"negate\",\u000a  \"invert\",\u000a  \"min\",\u000a  \"max\"\u000a};\u000a\u000a[\u000a  Exposed=(Window,PaintWorklet),\u000a  RuntimeEnabled=CSSTypedOM\u000a] interface CSSMathValue : CSSNumericValue {\u000a  [ImplementedAs=getOperator] readonly attribute CSSMathOperator operator;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSMatrixComponent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSMatrixComponent.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents a matrix value in a CSSTransformValue used for properties like\u000a// \"transform\".\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#cssmatrixcomponent\u000a[\u000a    Constructor(DOMMatrixReadOnly matrix,\u000a        optional CSSMatrixComponentOptions options),\u000a    Exposed=(Window,PaintWorklet),\u000a    RuntimeEnabled=CSSTypedOM\u000a] interface CSSMatrixComponent : CSSTransformComponent {\u000a    attribute DOMMatrix matrix;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSMatrixComponentOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSMatrixComponentOptions.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Options for creating a CSSMatrixComponent. See CSSMatrixComponent for usage.\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#dictdef-cssmatrixcomponentoptions\u000adictionary CSSMatrixComponentOptions {\u000a  boolean is2D = false;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSNumericValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSNumericValue.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// CSSNumericValue is the base class for numeric and length typed CSS Values.\u000a// https://drafts.css-houdini.org/css-typed-om/#numeric-objects\u000atypedef (double or CSSNumericValue) CSSNumberish;\u000a\u000a[\u000a  Exposed(Window CSSTypedOM, PaintWorklet CSSTypedOM)\u000a] interface CSSNumericValue : CSSStyleValue {\u000a  [RaisesException, NewObject] CSSNumericValue add(CSSNumericValue value);\u000a  [RaisesException, NewObject] CSSNumericValue sub(CSSNumericValue value);\u000a  [RaisesException, NewObject] CSSNumericValue mul(double value);\u000a  [RaisesException, NewObject] CSSNumericValue div(double value);\u000a\u000a  [RaisesException, NewObject] CSSNumericValue to(DOMString unit);\u000a\u000a  // Putting Exposed=Window in the next line makes |parse| not exposed to PaintWorklet.\u000a  [RaisesException, NewObject, Exposed=Window] static CSSNumericValue parse(DOMString cssText);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSPerspective.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSPerspective.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents a perspective value in a CSSTransformValue used for properties\u000a// like \"transform\".\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#cssperspective\u000a[\u000a    Constructor(CSSNumericValue length),\u000a    Exposed=(Window,PaintWorklet),\u000a    RuntimeEnabled=CSSTypedOM,\u000a    RaisesException=Constructor\u000a] interface CSSPerspective : CSSTransformComponent {\u000a    [RaisesException=Setter] attribute CSSNumericValue length;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSPositionValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSPositionValue.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents a <position> value, i.e. a coordinate for properties like\u000a// background-position.\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#positionvalue-objects\u000a[\u000a  Constructor(CSSNumericValue x, CSSNumericValue y),\u000a  Exposed(Window CSSTypedOM, PaintWorklet CSSTypedOM),\u000a  RaisesException=Constructor\u000a] interface CSSPositionValue : CSSStyleValue {\u000a  [RaisesException=Setter] attribute CSSNumericValue x;\u000a  [RaisesException=Setter] attribute CSSNumericValue y;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSResourceValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSResourceValue.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// CSSResourceValue is the base class used for representing loadable resources\u000a// in Typed OM. Example subclasses may include images and fonts.\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#resourcevalue-objects\u000aenum CSSResourceState {\u000a    \"unloaded\", \"loading\", \"loaded\", \"error\"\u000a};\u000a\u000a[\u000a    Exposed(Window CSSTypedOM, PaintWorklet CSSTypedOM)\u000a] interface CSSResourceValue : CSSStyleValue {\u000a    readonly attribute CSSResourceState state;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSRotation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSRotation.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents a rotation value in a CSSTransformValue used for properties like\u000a// \"transform\".\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#cssrotation\u000a[\u000a    Constructor(CSSNumericValue angleValue),\u000a    Constructor(double x, double y, double z, CSSNumericValue angle),\u000a    Exposed=(Window,PaintWorklet),\u000a    RuntimeEnabled=CSSTypedOM,\u000a    RaisesException=Constructor\u000a] interface CSSRotation : CSSTransformComponent {\u000a    [RaisesException=Setter] attribute CSSNumericValue angle;\u000a    attribute double x;\u000a    attribute double y;\u000a    attribute double z;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSScale.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSScale.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents a scale value in a CSSTransformValue used for properties like\u000a// \"transform\".\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#cssscale\u000a[\u000a    Constructor(double x, double y),\u000a    Constructor(double x, double y, double z),\u000a    Exposed=(Window,PaintWorklet),\u000a    RuntimeEnabled=CSSTypedOM\u000a] interface CSSScale : CSSTransformComponent {\u000a    attribute double x;\u000a    attribute double y;\u000a    attribute double z;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSSkew.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSSkew.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents a skew value in a CSSTransformValue used for properties like\u000a// \"transform\".\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#cssskew\u000a[\u000a    Constructor(CSSNumericValue ax, CSSNumericValue ay),\u000a    Exposed=(Window,PaintWorklet),\u000a    RuntimeEnabled=CSSTypedOM\u000a] interface CSSSkew : CSSTransformComponent {\u000a    [RaisesException=Setter] attribute CSSNumericValue ax;\u000a    [RaisesException=Setter] attribute CSSNumericValue ay;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSStyleValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSStyleValue.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// CSSStyleValue is the base class for all CSS values accessible from Typed OM.\u000a// Values that are not yet supported as specific types are also returned as\u000a// base CSSStyleValues.\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#stylevalue-objects\u000a[\u000a  Exposed(Window CSSTypedOM, PaintWorklet CSSPaintAPI)\u000a] interface CSSStyleValue {\u000a  stringifier;\u000a  // TODO(meade): Should be (CSSStyleValue or sequence<CSSStyleValue>)? instead of object?. Fix when the code generator supports this.\u000a  // Putting Exposed=Window in the next line makes |parse| not exposed to PaintWorklet.\u000a  [RaisesException, CallWith=ScriptState, Exposed=Window] static object? parse(DOMString property, DOMString cssText);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSTransformComponent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSTransformComponent.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// CSSTransformComponent is the base class used for the representations of\u000a// the individual CSS transforms. They are combined in a CSSTransformValue\u000a// before they can be used as a value for properties like \"transform\".\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#csstransformcomponent\u000a[\u000a    Exposed=(Window,PaintWorklet),\u000a    RuntimeEnabled=CSSTypedOM\u000a] interface CSSTransformComponent {\u000a    stringifier;\u000a    attribute boolean is2D;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSTransformValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSTransformValue.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    Constructor(),\u000a    Constructor(sequence<CSSTransformComponent> transformComponents),\u000a    Exposed(Window CSSTypedOM, PaintWorklet CSSTypedOM)\u000a] interface CSSTransformValue : CSSStyleValue {\u000a    // https://github.com/w3c/css-houdini-drafts/issues/358\u000a    readonly attribute unsigned long length;\u000a    [ImplementedAs=componentAtIndex] getter CSSTransformComponent (unsigned long index);\u000a    iterable<CSSTransformComponent>;\u000a\u000a    readonly attribute boolean is2D;\u000a    [RaisesException, RuntimeEnabled=GeometryInterfaces] DOMMatrix toMatrix();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSTranslation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSTranslation.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents a translation value in a CSSTransformValue used for properties\u000a// like \"transform\".\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#csstranslation\u000a[\u000a    Constructor(CSSNumericValue x, CSSNumericValue y),\u000a    Constructor(CSSNumericValue x, CSSNumericValue y, CSSNumericValue z),\u000a    Exposed=(Window,PaintWorklet),\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=CSSTypedOM\u000a] interface CSSTranslation : CSSTransformComponent {\u000a    [RaisesException=Setter] attribute CSSNumericValue x;\u000a    [RaisesException=Setter] attribute CSSNumericValue y;\u000a    [RaisesException=Setter] attribute CSSNumericValue z;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSURLImageValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSURLImageValue.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents image values that are specified using \"url(...)\".\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#cssurlimagevalue\u000a[\u000a    Constructor(USVString url),\u000a    Exposed=(Window,PaintWorklet),\u000a    RuntimeEnabled=CSSTypedOM\u000a] interface CSSURLImageValue : CSSImageValue {\u000a    readonly attribute USVString url;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSUnitValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSUnitValue.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents numeric values that can be expressed as a single number plus a\u000a// unit (or a naked number or percentage).\u000a// https://drafts.css-houdini.org/css-typed-om/#cssunitvalue\u000a[\u000a  Constructor(double value, DOMString unit),\u000a  RaisesException=Constructor,\u000a  Exposed=(Window,PaintWorklet),\u000a  RuntimeEnabled=CSSTypedOM\u000a] interface CSSUnitValue : CSSNumericValue {\u000a  [EnforceRange] attribute double value;\u000a  [RaisesException=Setter] attribute DOMString unit;\u000a  readonly attribute DOMString type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSUnitValues.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSUnitValues.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.css-houdini.org/css-typed-om/#numeric-factory\u000a\u000a[\u000a  ImplementedAs=CSSUnitValues,\u000a  RuntimeEnabled=CSSTypedOM\u000a] partial interface CSS {\u000a  [NewObject] static CSSUnitValue number(double value);\u000a  [NewObject] static CSSUnitValue percent(double value);\u000a\u000a  // <length>\u000a  [NewObject] static CSSUnitValue em(double value);\u000a  [NewObject] static CSSUnitValue ex(double value);\u000a  [NewObject] static CSSUnitValue ch(double value);\u000a  [NewObject] static CSSUnitValue rem(double value);\u000a  [NewObject] static CSSUnitValue vw(double value);\u000a  [NewObject] static CSSUnitValue vh(double value);\u000a  [NewObject] static CSSUnitValue vmin(double value);\u000a  [NewObject] static CSSUnitValue vmax(double value);\u000a  [NewObject] static CSSUnitValue cm(double value);\u000a  [NewObject] static CSSUnitValue mm(double value);\u000a  [NewObject] static CSSUnitValue in(double value);\u000a  [NewObject] static CSSUnitValue pt(double value);\u000a  [NewObject] static CSSUnitValue pc(double value);\u000a  [NewObject] static CSSUnitValue px(double value);\u000a  // Currently unsupported length units that are specified\u000a  // [NewObject] static CSSUnitValue ic(double value);\u000a  // [NewObject] static CSSUnitValue lh(double value);\u000a  // [NewObject] static CSSUnitValue rlh(double value);\u000a  // [NewObject] static CSSUnitValue vi(double value);\u000a  // [NewObject] static CSSUnitValue vb(double value);\u000a  // [NewObject] static CSSUnitValue q(double value);\u000a\u000a  // <angle>\u000a  [NewObject] static CSSUnitValue deg(double value);\u000a  [NewObject] static CSSUnitValue grad(double value);\u000a  [NewObject] static CSSUnitValue rad(double value);\u000a  [NewObject] static CSSUnitValue turn(double value);\u000a\u000a  // <time>\u000a  [NewObject] static CSSUnitValue s(double value);\u000a  [NewObject] static CSSUnitValue ms(double value);\u000a\u000a  // <frequency>\u000a  [NewObject] static CSSUnitValue Hz(double value);\u000a  [NewObject] static CSSUnitValue kHz(double value);\u000a\u000a  // <resolution>\u000a  [NewObject] static CSSUnitValue dpi(double value);\u000a  [NewObject] static CSSUnitValue dpcm(double value);\u000a  [NewObject] static CSSUnitValue dppx(double value);\u000a\u000a  // <flex>\u000a  [NewObject] static CSSUnitValue fr(double value);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSUnparsedValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSUnparsedValue.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// CSSUnparsedValue objects represent values that reference custom properties.\u000a// They represent a list of string fragments and variable references.\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#unparsedvalue-objects\u000a[\u000a    Exposed(Window CSSTypedOM, PaintWorklet CSSTypedOM)\u000a] interface CSSUnparsedValue : CSSStyleValue {\u000a    // https://github.com/w3c/css-houdini-drafts/issues/358\u000a    readonly attribute unsigned long length;\u000a    [ImplementedAs=fragmentAtIndex] getter (DOMString or CSSVariableReferenceValue) (unsigned long index);\u000a\u000a    iterable<(DOMString or CSSVariableReferenceValue)>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/CSSVariableReferenceValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/CSSVariableReferenceValue.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents a CSS var() reference in a CSS value.\u000a// Spec: https://drafts.css-houdini.org/css-typed-om/#cssvariablereferencevalue\u000a[\u000a    Exposed=(Window,PaintWorklet),\u000a    RuntimeEnabled=CSSTypedOM,\u000a    ImplementedAs=CSSStyleVariableReferenceValue\u000a] interface CSSVariableReferenceValue {\u000a    readonly attribute DOMString variable;\u000a    readonly attribute CSSUnparsedValue fallback;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/StylePropertyMap.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/StylePropertyMap.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.css-houdini.org/css-typed-om/#the-stylepropertymap\u000a[\u000a    Exposed=(Window,PaintWorklet),\u000a    RuntimeEnabled=CSSTypedOM\u000a] interface StylePropertyMap : StylePropertyMapReadonly {\u000a    [RaisesException] void append(DOMString property, (CSSStyleValue or sequence<CSSStyleValue> or DOMString) value);\u000a    [RaisesException, ImplementedAs=remove] void delete(DOMString property);\u000a    [RaisesException] void set(DOMString property, (CSSStyleValue or sequence<CSSStyleValue> or DOMString) value);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/StylePropertyMapReadonly.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/StylePropertyMapReadonly.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    Exposed(Window CSSTypedOM, PaintWorklet CSSPaintAPI)\u000a] interface StylePropertyMapReadonly {\u000a    [RaisesException] CSSStyleValue? get(DOMString property);\u000a    [RaisesException] sequence<CSSStyleValue> getAll(DOMString property);\u000a    [RaisesException] boolean has(DOMString property);\u000a    iterable<DOMString, (CSSStyleValue or sequence<CSSStyleValue>)>;\u000a    sequence<DOMString> getProperties();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/StyleSheetList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/StyleSheetList.idl"},specUrls:["https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom/#the-stylesheetlist-interface\u000a\u000a// TODO(foolip): StyleSheetList should be an [ArrayClass].\u000a[\u000a    DependentLifetime\u000a] interface StyleSheetList {\u000a    [Measure] getter StyleSheet? item(unsigned long index);\u000a    readonly attribute unsigned long length;\u000a\u000a    // Non-standard APIs\u000a    [NotEnumerable] getter CSSStyleSheet (DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/css/cssom/WindowGetComputedStyle.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/css/cssom/WindowGetComputedStyle.idl"},specUrls:["https://drafts.css-houdini.org/css-typed-om/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.css-houdini.org/css-typed-om/#computed-stylepropertymap-objects\u000a\u000a[\u000a    ImplementedAs=WindowGetComputedStyle,\u000a    RuntimeEnabled=CSSTypedOM\u000a] partial interface Window {\u000a    [NewObject] StylePropertyMapReadonly getComputedStyleMap(Element element, optional DOMString? pseudoElement = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/AccessibleNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/AccessibleNode.idl"},specUrls:["https://wicg.github.io/aom/spec/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Accessibility Object Model node\u000a// Explainer: https://github.com/WICG/aom/blob/master/explainer.md\u000a// Spec: https://wicg.github.io/aom/spec/\u000a[\u000a    Constructor,\u000a    ConstructorCallWith=Document,\u000a    RuntimeEnabled=AccessibilityObjectModel\u000a] interface AccessibleNode : EventTarget {\u000a    attribute AccessibleNode? activeDescendant;\u000a    attribute boolean? atomic;\u000a    attribute DOMString? autocomplete;\u000a    attribute boolean? busy;\u000a    attribute DOMString? checked;\u000a    attribute long? colCount;\u000a    attribute unsigned long? colIndex;\u000a    attribute unsigned long? colSpan;\u000a    attribute AccessibleNodeList? controls;\u000a    attribute DOMString? current;\u000a    attribute AccessibleNodeList? describedBy;\u000a    attribute AccessibleNode? details;\u000a    attribute boolean? disabled;\u000a    attribute AccessibleNode? errorMessage;\u000a    attribute boolean? expanded;\u000a    attribute AccessibleNodeList? flowTo;\u000a    attribute DOMString? hasPopUp;\u000a    attribute boolean? hidden;\u000a    attribute DOMString? invalid;\u000a    attribute DOMString? keyShortcuts;\u000a    attribute DOMString? label;\u000a    attribute AccessibleNodeList? labeledBy;\u000a    attribute unsigned long? level;\u000a    attribute DOMString? live;\u000a    attribute boolean? modal;\u000a    attribute boolean? multiline;\u000a    attribute boolean? multiselectable;\u000a    attribute DOMString? orientation;\u000a    attribute AccessibleNodeList? owns;\u000a    attribute DOMString? placeholder;\u000a    attribute unsigned long? posInSet;\u000a    attribute DOMString? pressed;\u000a    attribute boolean? readOnly;\u000a    attribute DOMString? relevant;\u000a    attribute boolean? required;\u000a    attribute DOMString? role;\u000a    attribute DOMString? roleDescription;\u000a    attribute long? rowCount;\u000a    attribute unsigned long? rowIndex;\u000a    attribute unsigned long? rowSpan;\u000a    attribute boolean? selected;\u000a    attribute long? setSize;\u000a    attribute DOMString? sort;\u000a    attribute double? valueMax;\u000a    attribute double? valueMin;\u000a    attribute double? valueNow;\u000a    attribute DOMString? valueText;\u000a\u000a    attribute EventHandler onaccessibleclick;\u000a    attribute EventHandler onaccessiblecontextmenu;\u000a    attribute EventHandler onaccessibledecrement;\u000a    attribute EventHandler onaccessiblefocus;\u000a    attribute EventHandler onaccessibleincrement;\u000a    attribute EventHandler onaccessiblescrollintoview;\u000a\u000a    [RaisesException] void appendChild(AccessibleNode child);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/AccessibleNodeList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/AccessibleNodeList.idl"},specUrls:["https://wicg.github.io/aom/spec/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Accessibility Object Model node list\u000a// Explainer: https://github.com/WICG/aom/blob/master/explainer.md\u000a// Spec: https://wicg.github.io/aom/spec/\u000a[\u000a    Constructor(optional sequence<AccessibleNode> nodes = []),\u000a    RuntimeEnabled=AccessibilityObjectModel\u000a] interface AccessibleNodeList {\u000a  attribute unsigned long length;\u000a  getter AccessibleNode? item(unsigned long index);\u000a  [RaisesException] setter void (unsigned long index, AccessibleNode node);\u000a  void add(AccessibleNode node, optional AccessibleNode? before = null);\u000a  void remove(long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/Attr.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/Attr.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-attr\u000a\u000ainterface Attr : Node {\u000a    readonly attribute DOMString? namespaceURI;\u000a    readonly attribute DOMString? prefix;\u000a    readonly attribute DOMString localName;\u000a    readonly attribute DOMString name;\u000a    [CEReactions, CustomElementCallbacks] attribute DOMString value;\u000a\u000a    readonly attribute Element? ownerElement;\u000a\u000a    readonly attribute boolean specified; // useless; always returns true\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/CDATASection.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/CDATASection.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-cdatasection\u000a\u000ainterface CDATASection : Text {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/CharacterData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/CharacterData.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-characterdata\u000a\u000ainterface CharacterData : Node {\u000a    attribute [TreatNullAs=NullString] DOMString data;\u000a    readonly attribute unsigned long length;\u000a    [RaisesException] DOMString substringData(unsigned long offset, unsigned long count);\u000a    void appendData(DOMString data);\u000a    [RaisesException] void insertData(unsigned long offset, DOMString data);\u000a    [RaisesException] void deleteData(unsigned long offset, unsigned long count);\u000a    [RaisesException] void replaceData(unsigned long offset, unsigned long count, DOMString data);\u000a};\u000a\u000aCharacterData implements ChildNode;\u000aCharacterData implements NonDocumentTypeChildNode;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/ChildNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/ChildNode.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-childnode\u000a\u000a[\u000a    LegacyTreatAsPartialInterface,\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface ChildNode {\u000a    [Unscopable, RaisesException, CEReactions, CustomElementCallbacks] void before((Node or DOMString) ... nodes);\u000a    [Unscopable, RaisesException, CEReactions, CustomElementCallbacks] void after((Node or DOMString)... nodes);\u000a    [Unscopable, RaisesException, CEReactions, CustomElementCallbacks] void replaceWith((Node or DOMString)... nodes);\u000a    [Unscopable, RaisesException, CEReactions, CustomElementCallbacks] void remove();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/Comment.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/Comment.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-comment\u000a\u000a[\u000a    Constructor(optional DOMString data = \"\"),\u000a    ConstructorCallWith=Document\u000a] interface Comment : CharacterData {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/CommonDefinitions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/CommonDefinitions.idl"},specUrls:["https://heycam.github.io/webidl/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://heycam.github.io/webidl/#common\u000a\u000atypedef (ArrayBuffer or ArrayBufferView) BufferSource;\u000atypedef unsigned long long DOMTimeStamp;\u000a\u000a// typedefs used in multiple files.\u000a\u000atypedef object JSON;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/DOMException.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/DOMException.idl"},specUrls:["https://heycam.github.io/webidl/","https://heycam.github.io/webidl/"],contents:"/*\u000a * Copyright (C) 2007 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// Web IDL exceptions are defined in prose rather than IDL.\u000a// https://heycam.github.io/webidl/#idl-exceptions\u000a// https://heycam.github.io/webidl/#es-DOMException\u000a\u000a[\u000a    Constructor(optional DOMString message = \"\", optional DOMString name = \"Error\"),\u000a    Exposed=(Window,Worker),\u000a    DoNotCheckConstants\u000a] interface DOMException {\u000a\u000a    readonly attribute unsigned short   code;\u000a    readonly attribute DOMString        name;\u000a    readonly attribute DOMString        message;\u000a\u000a    // ExceptionCode\u000a    const unsigned short      INDEX_SIZE_ERR                 = 1;\u000a    const unsigned short      DOMSTRING_SIZE_ERR             = 2;\u000a    const unsigned short      HIERARCHY_REQUEST_ERR          = 3;\u000a    const unsigned short      WRONG_DOCUMENT_ERR             = 4;\u000a    const unsigned short      INVALID_CHARACTER_ERR          = 5;\u000a    const unsigned short      NO_DATA_ALLOWED_ERR            = 6;\u000a    const unsigned short      NO_MODIFICATION_ALLOWED_ERR    = 7;\u000a    const unsigned short      NOT_FOUND_ERR                  = 8;\u000a    const unsigned short      NOT_SUPPORTED_ERR              = 9;\u000a    const unsigned short      INUSE_ATTRIBUTE_ERR            = 10;\u000a    // Introduced in DOM Level 2:\u000a    const unsigned short      INVALID_STATE_ERR              = 11;\u000a    // Introduced in DOM Level 2:\u000a    const unsigned short      SYNTAX_ERR                     = 12;\u000a    // Introduced in DOM Level 2:\u000a    const unsigned short      INVALID_MODIFICATION_ERR       = 13;\u000a    // Introduced in DOM Level 2:\u000a    const unsigned short      NAMESPACE_ERR                  = 14;\u000a    // Introduced in DOM Level 2:\u000a    const unsigned short      INVALID_ACCESS_ERR             = 15;\u000a    // Introduced in DOM Level 3:\u000a    const unsigned short      VALIDATION_ERR                 = 16;\u000a    // Introduced in DOM Level 3:\u000a    const unsigned short      TYPE_MISMATCH_ERR              = 17;\u000a    // Introduced as an XHR extension:\u000a    const unsigned short      SECURITY_ERR                   = 18;\u000a    // Introduced in HTML5:\u000a    const unsigned short      NETWORK_ERR                    = 19;\u000a    const unsigned short      ABORT_ERR                      = 20;\u000a    const unsigned short      URL_MISMATCH_ERR               = 21;\u000a    const unsigned short      QUOTA_EXCEEDED_ERR             = 22;\u000a    // TIMEOUT_ERR is currently unused but was added for completeness.\u000a    const unsigned short      TIMEOUT_ERR                    = 23;\u000a    // INVALID_NODE_TYPE_ERR is currently unused but was added for completeness.\u000a    const unsigned short      INVALID_NODE_TYPE_ERR          = 24;\u000a    const unsigned short      DATA_CLONE_ERR                 = 25;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/DOMImplementation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/DOMImplementation.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-domimplementation\u000a\u000a[\u000a    DependentLifetime\u000a] interface DOMImplementation {\u000a    [NewObject, RaisesException] DocumentType createDocumentType(DOMString qualifiedName, DOMString publicId, DOMString systemId);\u000a    [NewObject, RaisesException] XMLDocument createDocument(DOMString? namespaceURI, [TreatNullAs=EmptyString] DOMString qualifiedName, optional DocumentType? doctype = null);\u000a    // FIXME: createHTMLDocument should return a Document. crbug.com/238368\u000a    [NewObject] Document createHTMLDocument(optional DOMString title);\u000a\u000a    // useless; always returns true\u000a    boolean hasFeature();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/DOMStringList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/DOMStringList.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/infrastructure.html#domstringlist\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface DOMStringList {\u000a    readonly attribute unsigned long length;\u000a    getter DOMString? item(unsigned long index);\u000a    boolean contains(DOMString string);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/DOMStringMap.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/DOMStringMap.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2010 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''\u000a * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\u000a * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS\u000a * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\u000a * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\u000a * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\u000a * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\u000a * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\u000a * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\u000a * THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-domstringmap-interface\u000a\u000a[\u000a    DependentLifetime,\u000a    OverrideBuiltins\u000a] interface DOMStringMap {\u000a    [ImplementedAs=item] getter DOMString (DOMString name);\u000a    [CEReactions, RaisesException] setter void (DOMString name, DOMString value);\u000a    [CEReactions] deleter void (DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/DOMTokenList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/DOMTokenList.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-domtokenlist\u000a\u000a[\u000a    DependentLifetime\u000a] interface DOMTokenList {\u000a    readonly attribute unsigned long length;\u000a    getter DOMString? item(unsigned long index);\u000a    boolean contains(DOMString token);\u000a    [RaisesException, CEReactions, CustomElementCallbacks] void add(DOMString... tokens);\u000a    [RaisesException, CEReactions, CustomElementCallbacks] void remove(DOMString... tokens);\u000a    [RaisesException, CEReactions, CustomElementCallbacks] boolean toggle(DOMString token, optional boolean force);\u000a    [RaisesException, CEReactions] void replace(DOMString token, DOMString newToken);\u000a    [RaisesException, CustomElementCallbacks] boolean supports(DOMString token);\u000a    [CEReactions] attribute DOMString value;\u000a    stringifier;\u000a    iterable<DOMString>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/Document.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/Document.idl"},specUrls:["https://html.spec.whatwg.org/","https://w3c.github.io/page-visibility/","https://wicg.github.io/cors-rfc1918/","https://dom.spec.whatwg.org/","https://html.spec.whatwg.org/","https://html.spec.whatwg.org/","https://drafts.csswg.org/cssom/","https://w3c.github.io/pointerlock/","https://w3c.github.io/touch-events/","https://w3c.github.io/webcomponents/spec/custom/","https://w3c.github.io/webcomponents/spec/custom/","https://w3c.github.io/page-visibility/","https://wicg.github.io/cors-rfc1918/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2011 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006, 2007 Samuel Weinig <sam@webkit.org>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a[Custom] callback CustomElementConstructor = Element ();\u000a\u000a// https://html.spec.whatwg.org/#the-document-object\u000aenum DocumentReadyState { \"loading\", \"interactive\", \"complete\" };\u000a\u000a\u000a// https://w3c.github.io/page-visibility/#visibility-states-and-the-visibilitystate-enum\u000aenum VisibilityState { \"hidden\", \"visible\", \"prerender\"};\u000a\u000a// https://wicg.github.io/cors-rfc1918/#feature-detect\u000aenum AddressSpace { \"local\", \"private\", \"public\" };\u000a\u000atypedef (HTMLScriptElement or SVGScriptElement) HTMLOrSVGScriptElement;\u000a\u000a// https://dom.spec.whatwg.org/#interface-document\u000a\u000a[\u000a    Constructor(),\u000a    ConstructorCallWith=Document\u000a] interface Document : Node {\u000a    [SameObject] readonly attribute DOMImplementation implementation;\u000a    [ImplementedAs=urlForBinding] readonly attribute DOMString URL;\u000a    // FIXME: documentURI should not be nullable.\u000a    [ImplementedAs=urlForBinding] readonly attribute DOMString? documentURI;\u000a    [MeasureAs=DocumentOrigin] readonly attribute DOMString origin;\u000a    [RuntimeEnabled=Suborigins] readonly attribute DOMString suborigin;\u000a    readonly attribute DOMString compatMode;\u000a\u000a    readonly attribute DOMString characterSet;\u000a    [ImplementedAs=characterSet] readonly attribute DOMString charset; // legacy alias of .characterSet\u000a    [ImplementedAs=characterSet] readonly attribute DOMString inputEncoding; // legacy alias of .characterSet\u000a    readonly attribute DOMString contentType;\u000a\u000a    readonly attribute DocumentType? doctype;\u000a    readonly attribute Element? documentElement;\u000a    HTMLCollection getElementsByTagName(DOMString localName);\u000a    HTMLCollection getElementsByTagNameNS(DOMString? namespaceURI, DOMString localName);\u000a    HTMLCollection getElementsByClassName(DOMString classNames);\u000a\u000a    [NewObject, DoNotTestNewObject, CustomElementCallbacks, PerWorldBindings, RaisesException] Element createElement(DOMString localName);\u000a    [NewObject, DoNotTestNewObject, CustomElementCallbacks, RaisesException] Element createElementNS(DOMString? namespaceURI, DOMString qualifiedName);\u000a    [NewObject] DocumentFragment createDocumentFragment();\u000a    [NewObject] Text createTextNode(DOMString data);\u000a    [NewObject, RaisesException] CDATASection createCDATASection(DOMString data);\u000a    [NewObject] Comment createComment(DOMString data);\u000a    [NewObject, RaisesException] ProcessingInstruction createProcessingInstruction(DOMString target, DOMString data);\u000a\u000a    [NewObject, DoNotTestNewObject, CEReactions, CustomElementCallbacks, RaisesException] Node importNode(Node node, optional boolean deep = false);\u000a    [RaisesException, CEReactions, CustomElementCallbacks] Node adoptNode(Node node);\u000a\u000a    [NewObject, RaisesException, MeasureAs=DocumentCreateAttribute] Attr createAttribute(DOMString localName);\u000a    [NewObject, RaisesException, MeasureAs=DocumentCreateAttributeNS] Attr createAttributeNS(DOMString? namespaceURI, DOMString qualifiedName);\u000a\u000a    [NewObject, RaisesException, CallWith=ScriptState] Event createEvent(DOMString eventType);\u000a\u000a    [NewObject] Range createRange();\u000a\u000a    // NodeFilter.SHOW_ALL = 0xFFFFFFFF\u000a    [NewObject] NodeIterator createNodeIterator(Node root, optional unsigned long whatToShow = 0xFFFFFFFF, optional NodeFilter? filter = null);\u000a    [NewObject] TreeWalker createTreeWalker(Node root, optional unsigned long whatToShow = 0xFFFFFFFF, optional NodeFilter? filter = null);\u000a\u000a    // NonDocumentRootScroller (https://github.com/bokand/NonDocumentRootScroller)\u000a    [RaisesException=Setter, RuntimeEnabled=SetRootScroller, Measure] attribute Element? rootScroller;\u000a\u000a    // FIXME: xmlEncoding/xmlVersion/xmlStandalone have been removed from the spec.\u000a    [MeasureAs=DocumentXMLEncoding] readonly attribute DOMString? xmlEncoding;\u000a    [RaisesException=Setter, MeasureAs=DocumentXMLVersion] attribute DOMString? xmlVersion;\u000a    [RaisesException=Setter, MeasureAs=DocumentXMLStandalone] attribute boolean xmlStandalone;\u000a\u000a    // HTML\u000a    // https://html.spec.whatwg.org/#the-document-object\u000a\u000a    // resource metadata management\u000a\u000a    [PutForwards=href, Unforgeable] readonly attribute Location? location;\u000a    [RaisesException=Setter] attribute DOMString domain;\u000a    readonly attribute DOMString referrer;\u000a    [RaisesException, RuntimeCallStatsCounter=DocumentCookie] attribute DOMString cookie;\u000a    readonly attribute DOMString lastModified;\u000a    readonly attribute DocumentReadyState readyState;\u000a\u000a    // DOM tree accessors\u000a    // Named getter is implemented without IDL code generation for better\u000a    // performance. See LocalWindowProxy.cpp.\u000a    // getter object (DOMString name);\u000a    [CEReactions, CustomElementCallbacks] attribute DOMString title;\u000a    [CEReactions, CustomElementCallbacks] attribute DOMString dir;\u000a    [CEReactions, RaisesException=Setter, CustomElementCallbacks, PerWorldBindings] attribute HTMLElement? body;\u000a    readonly attribute HTMLHeadElement? head;\u000a    [SameObject, Measure] readonly attribute HTMLCollection images;\u000a    [SameObject, Measure] readonly attribute HTMLCollection embeds;\u000a    [SameObject, ImplementedAs=embeds, Measure] readonly attribute HTMLCollection plugins;\u000a    [SameObject, Measure] readonly attribute HTMLCollection links;\u000a    [SameObject, Measure] readonly attribute HTMLCollection forms;\u000a    [SameObject, Measure] readonly attribute HTMLCollection scripts;\u000a    [PerWorldBindings] NodeList getElementsByName(DOMString elementName);\u000a    [ImplementedAs=currentScriptForBinding] readonly attribute HTMLOrSVGScriptElement? currentScript;\u000a\u000a    // dynamic markup insertion\u000a    // FIXME: There are two open() methods in the spec.\u000a    [Custom, CEReactions, CustomElementCallbacks, RaisesException, MeasureAs=DocumentOpen] void open();\u000a    [CEReactions, RaisesException] void close();\u000a    [CallWith=EnteredWindow, CEReactions, CustomElementCallbacks, RaisesException] void write(DOMString... text);\u000a    [CallWith=EnteredWindow, CEReactions, CustomElementCallbacks, RaisesException] void writeln(DOMString... text);\u000a\u000a    // TrustedTypes variants of the above.\u000a    // TODO(mkwst): Write a spec for this.\u000a    [RuntimeEnabled=TrustedDOMTypes, CallWith=EnteredWindow, CEReactions, CustomElementCallbacks, RaisesException] void write(TrustedHTML text);\u000a    [RuntimeEnabled=TrustedDOMTypes, CallWith=EnteredWindow, CEReactions, CustomElementCallbacks, RaisesException] void writeln(TrustedHTML text);\u000a\u000a    // user interaction\u000a    readonly attribute Window? defaultView;\u000a    boolean hasFocus();\u000a    [CEReactions, CustomElementCallbacks, MeasureAs=DocumentDesignMode] attribute DOMString designMode;\u000a    [CEReactions, CustomElementCallbacks, RaisesException] boolean execCommand(DOMString commandId, optional boolean showUI = false, optional DOMString value = \"\");\u000a    [RaisesException] boolean queryCommandEnabled(DOMString commandId);\u000a    [RaisesException] boolean queryCommandIndeterm(DOMString commandId);\u000a    [RaisesException] boolean queryCommandState(DOMString commandId);\u000a    [RaisesException] boolean queryCommandSupported(DOMString commandId);\u000a    [RaisesException] DOMString queryCommandValue(DOMString commandId);\u000a\u000a    [LenientThis] attribute EventHandler onreadystatechange;\u000a\u000a    // HTML obsolete features\u000a    // https://html.spec.whatwg.org/#Document-partial\u000a\u000a    [Measure] readonly attribute HTMLCollection anchors;\u000a    [Measure] readonly attribute HTMLCollection applets;\u000a\u000a    [CEReactions, CustomElementCallbacks] attribute [TreatNullAs=EmptyString] DOMString fgColor;\u000a    [CEReactions, CustomElementCallbacks] attribute [TreatNullAs=EmptyString] DOMString linkColor;\u000a    [CEReactions, CustomElementCallbacks] attribute [TreatNullAs=EmptyString] DOMString vlinkColor;\u000a    [CEReactions, CustomElementCallbacks] attribute [TreatNullAs=EmptyString] DOMString alinkColor;\u000a    [CEReactions, CustomElementCallbacks] attribute [TreatNullAs=EmptyString] DOMString bgColor;\u000a\u000a    [MeasureAs=DocumentClear] void clear();\u000a    [MeasureAs=DocumentCaptureEvents] void captureEvents();\u000a    [MeasureAs=DocumentReleaseEvents] void releaseEvents();\u000a\u000a    // FIXME: all should not be [Replaceable].\u000a    [Replaceable, MeasureAs=DocumentAll] readonly attribute HTMLAllCollection all;\u000a\u000a    // CSS Object Model (CSSOM)\u000a    // https://drafts.csswg.org/cssom/#extensions-to-the-document-interface\u000a    attribute DOMString? selectedStylesheetSet;\u000a    readonly attribute DOMString? preferredStylesheetSet;\u000a\u000a    readonly attribute Element? scrollingElement;\u000a\u000a    // Pointer Lock\u000a    // https://w3c.github.io/pointerlock/#extensions-to-the-document-interface\u000a    attribute EventHandler onpointerlockchange;\u000a    attribute EventHandler onpointerlockerror;\u000a    [MeasureAs=DocumentExitPointerLock] void exitPointerLock();\u000a\u000a    // Touch Events\u000a    // https://w3c.github.io/touch-events/#extensions-to-the-document-interface\u000a    [OriginTrialEnabled=TouchEventFeatureDetection, Measure, LegacyInterfaceTypeChecking, Custom=CallPrologue]\u000a    Touch createTouch(Window view,\u000a                      EventTarget target,\u000a                      long identifier,\u000a                      double pageX,\u000a                      double pageY,\u000a                      double screenX,\u000a                      double screenY,\u000a                      optional unrestricted double radiusX = 0,\u000a                      optional unrestricted double radiusY = 0,\u000a                      optional unrestricted float rotationAngle = 0,\u000a                      optional unrestricted float force = 0);\u000a    [OriginTrialEnabled=TouchEventFeatureDetection] TouchList createTouchList(Touch... touches);\u000a\u000a    // Custom Elements\u000a    // https://w3c.github.io/webcomponents/spec/custom/#extensions-to-document-interface-to-register\u000a    // FIXME: The registerElement return type should be Function.\u000a    [CallWith=ScriptState, CustomElementCallbacks, RaisesException, MeasureAs=DocumentRegisterElement] CustomElementConstructor registerElement(DOMString type, optional ElementRegistrationOptions options);\u000a    // https://w3c.github.io/webcomponents/spec/custom/#extensions-to-document-interface-to-instantiate\u000a    // FIXME: The typeExtension arguments should not be nullable.\u000a    [CustomElementCallbacks, PerWorldBindings, RaisesException] Element createElement(DOMString localName, (DOMString or Dictionary)? options);\u000a    [CustomElementCallbacks, RaisesException] Element createElementNS(DOMString? namespaceURI, DOMString qualifiedName, (DOMString or Dictionary)? options);\u000a\u000a    // Page Visibility\u000a    // https://w3c.github.io/page-visibility/#extensions-to-the-document-interface\u000a    readonly attribute boolean hidden;\u000a    readonly attribute VisibilityState visibilityState;\u000a\u000a    // CORS and RFC1918\u000a    // https://wicg.github.io/cors-rfc1918/#feature-detect\u000a    [RuntimeEnabled=CorsRFC1918, ImplementedAs=addressSpaceForBindings] readonly attribute AddressSpace addressSpace;\u000a\u000a    // Non-standard APIs\u000a    [MeasureAs=DocumentCaretRangeFromPoint] Range caretRangeFromPoint([Default=Undefined] optional long x, [Default=Undefined] optional long y);\u000a\u000a    // Deprecated prefixed page visibility API.\u000a    // TODO(davidben): This is a property so attaching a deprecation warning results in false positives when outputting\u000a    // document in the console. It's possible https://crbug.com/43394 will resolve this.\u000a    [MeasureAs=PrefixedPageVisibility, ImplementedAs=visibilityState] readonly attribute DOMString webkitVisibilityState;\u000a    [MeasureAs=PrefixedPageVisibility, ImplementedAs=hidden] readonly attribute boolean webkitHidden;\u000a\u000a    // Event handler attributes\u000a    attribute EventHandler onbeforecopy;\u000a    attribute EventHandler onbeforecut;\u000a    attribute EventHandler onbeforepaste;\u000a    attribute EventHandler oncopy;\u000a    attribute EventHandler oncut;\u000a    attribute EventHandler onpaste;\u000a    attribute EventHandler onsearch;\u000a    [RuntimeEnabled=ExperimentalContentSecurityPolicyFeatures] attribute EventHandler onsecuritypolicyviolation;\u000a    attribute EventHandler onselectionchange;\u000a    attribute EventHandler onselectstart;\u000a    attribute EventHandler onvisibilitychange;\u000a};\u000a\u000aDocument implements GlobalEventHandlers;\u000aDocument implements ParentNode;\u000aDocument implements NonElementParentNode;\u000aDocument implements DocumentOrShadowRoot;\u000aDocument implements FontFaceSource;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/DocumentFragment.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/DocumentFragment.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2008 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-documentfragment\u000a\u000a[\u000a    Constructor,\u000a    ConstructorCallWith=Document\u000a] interface DocumentFragment : Node {\u000a};\u000a\u000aDocumentFragment implements ParentNode;\u000aDocumentFragment implements NonElementParentNode;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/DocumentOrShadowRoot.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/DocumentOrShadowRoot.idl"},specUrls:["https://dom.spec.whatwg.org/","https://w3c.github.io/webcomponents/spec/shadow/","https://w3c.github.io/selection-api/","https://drafts.csswg.org/cssom-view/","https://w3c.github.io/pointerlock/","https://fullscreen.spec.whatwg.org/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dom.spec.whatwg.org/#mixin-documentorshadowroot\u000a// https://w3c.github.io/webcomponents/spec/shadow/#extensions-to-the-documentorshadowroot-mixin\u000a[\u000a    LegacyTreatAsPartialInterface,\u000a    NoInterfaceObject\u000a] interface DocumentOrShadowRoot {\u000a    // Selection API\u000a    // https://w3c.github.io/selection-api/#extensions-to-document-interface\u000a    Selection? getSelection();\u000a    // CSSOM View Module\u000a    // https://drafts.csswg.org/cssom-view/#extensions-to-the-document-interface\u000a    // TODO(foolip): The x and y arguments should be of type double.\u000a    Element? elementFromPoint(long x, long y);\u000a    sequence<Element> elementsFromPoint(long x, long y);\u000a    readonly attribute Element? activeElement;\u000a    [SameObject] readonly attribute StyleSheetList styleSheets;\u000a    // PointerLock API\u000a    // https://w3c.github.io/pointerlock/\u000a    readonly attribute Element? pointerLockElement;\u000a    // Fullscreen API\u000a    // https://fullscreen.spec.whatwg.org/\u000a    [RuntimeEnabled=FullscreenUnprefixed] readonly attribute Element? fullscreenElement;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/DocumentType.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/DocumentType.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-documenttype\u000a\u000ainterface DocumentType : Node {\u000a    readonly attribute DOMString name;\u000a    readonly attribute DOMString publicId;\u000a    readonly attribute DOMString systemId;\u000a};\u000a\u000aDocumentType implements ChildNode;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/Element.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/Element.idl"},specUrls:["https://dom.spec.whatwg.org/","https://w3c.github.io/pointerevents/","https://dom.spec.whatwg.org/","https://w3c.github.io/DOM-Parsing/","https://w3c.github.io/pointerlock/","https://drafts.csswg.org/cssom-view/","https://drafts.css-houdini.org/css-typed-om/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// See\u000a// https://docs.google.com/document/d/1VnvAqeWFG9JFZfgG5evBqrLGDZYRE5w6G5jEDORekPY\u000a// for details.\u000aenum NativeScrollBehavior { \"disable-native-scroll\", \"perform-before-native-scroll\", \"perform-after-native-scroll\" };\u000a\u000a// https://dom.spec.whatwg.org/#interface-element\u000a\u000ainterface Element : Node {\u000a    readonly attribute DOMString? namespaceURI;\u000a    readonly attribute DOMString? prefix;\u000a    readonly attribute DOMString localName;\u000a    readonly attribute DOMString tagName;\u000a\u000a    [CEReactions, Reflect] attribute DOMString id;\u000a    [CEReactions, Reflect=class] attribute DOMString className;\u000a    [SameObject, CEReactions, PerWorldBindings, PutForwards=value] readonly attribute DOMTokenList classList;\u000a    [Unscopable, CEReactions, Reflect] attribute DOMString slot;\u000a\u000a    // Pointer Events\u000a    // https://w3c.github.io/pointerevents/#extensions-to-the-element-interface\u000a    [RaisesException] void setPointerCapture (long pointerId);\u000a    [RaisesException] void releasePointerCapture (long pointerId);\u000a    boolean hasPointerCapture (long pointerId);\u000a\u000a    boolean hasAttributes();\u000a    [SameObject, PerWorldBindings, ImplementedAs=attributesForBindings] readonly attribute NamedNodeMap attributes;\u000a    sequence<DOMString> getAttributeNames();\u000a    DOMString? getAttribute(DOMString name);\u000a    DOMString? getAttributeNS(DOMString? namespaceURI, DOMString localName);\u000a    [RaisesException, CEReactions, CustomElementCallbacks] void setAttribute(DOMString name, DOMString value);\u000a    [RaisesException, CEReactions, CustomElementCallbacks] void setAttributeNS(DOMString? namespaceURI, DOMString name, DOMString value);\u000a    [CEReactions, CustomElementCallbacks] void removeAttribute(DOMString name);\u000a    [CEReactions, CustomElementCallbacks] void removeAttributeNS(DOMString? namespaceURI, DOMString localName);\u000a    boolean hasAttribute(DOMString name);\u000a    boolean hasAttributeNS(DOMString? namespaceURI, DOMString localName);\u000a\u000a    Attr? getAttributeNode(DOMString name);\u000a    Attr? getAttributeNodeNS(DOMString? namespaceURI, DOMString localName);\u000a    [RaisesException, CEReactions, CustomElementCallbacks] Attr? setAttributeNode(Attr attr);\u000a    [RaisesException, CEReactions, CustomElementCallbacks] Attr? setAttributeNodeNS(Attr attr);\u000a    [RaisesException, CEReactions, CustomElementCallbacks] Attr removeAttributeNode(Attr attr);\u000a\u000a    [RaisesException] Element? closest(DOMString selectors);\u000a    [RaisesException] boolean matches(DOMString selectors);\u000a    [RaisesException, ImplementedAs=matches, MeasureAs=ElementPrefixedMatchesSelector] boolean webkitMatchesSelector(DOMString selectors); // historical alias of .matches\u000a\u000a    [RaisesException, CallWith=ScriptState, MeasureAs=ElementAttachShadow] ShadowRoot attachShadow(ShadowRootInit shadowRootInitDict);\u000a    [PerWorldBindings, ImplementedAs=OpenShadowRoot] readonly attribute ShadowRoot? shadowRoot;\u000a\u000a    HTMLCollection getElementsByTagName(DOMString localName);\u000a    HTMLCollection getElementsByTagNameNS(DOMString? namespaceURI, DOMString localName);\u000a    HTMLCollection getElementsByClassName(DOMString classNames);\u000a\u000a    [RaisesException, CEReactions, CustomElementCallbacks] Element? insertAdjacentElement(DOMString where, Element element);\u000a    [RaisesException] void insertAdjacentText(DOMString where, DOMString data);\u000a\u000a    // Mixin Slotable\u000a    // https://dom.spec.whatwg.org/#mixin-slotable\u000a    [ImplementedAs=assignedSlotForBinding] readonly attribute HTMLSlotElement? assignedSlot;\u000a\u000a    // DOM Parsing and Serialization\u000a    // https://w3c.github.io/DOM-Parsing/#extensions-to-the-element-interface\u000a    //\u000a    // TODO(mkwst): Write a spec for the `TrustedHTML` variants.\u000a    [TreatNullAs=NullString, CEReactions, CustomElementCallbacks, RaisesException=Setter, RuntimeCallStatsCounter=ElementInnerHTML] attribute HTMLString innerHTML;\u000a    [TreatNullAs=NullString, CEReactions, CustomElementCallbacks, RaisesException=Setter] attribute HTMLString outerHTML;\u000a    [CEReactions, CustomElementCallbacks, RaisesException] void insertAdjacentHTML(DOMString position, HTMLString text);\u000a\u000a    // Pointer Lock\u000a    // https://w3c.github.io/pointerlock/#extensions-to-the-element-interface\u000a    [MeasureAs=ElementRequestPointerLock] void requestPointerLock();\u000a\u000a    // CSSOM View Module\u000a    // https://drafts.csswg.org/cssom-view/#extension-to-the-element-interface\u000a    DOMRectList getClientRects();\u000a    [RuntimeCallStatsCounter=ElementGetBoundingClientRect] DOMRect getBoundingClientRect();\u000a\u000a    // TODO(sunyunjia): Add default value for scrollIntoView() once\u000a    // crbug.com/734599 is fixed.\u000a    void scrollIntoView(optional (ScrollIntoViewOptions or boolean) arg);\u000a    [RuntimeEnabled=CSSOMSmoothScroll, ImplementedAs=scrollTo] void scroll(optional ScrollToOptions options);\u000a    [RuntimeEnabled=CSSOMSmoothScroll, ImplementedAs=scrollTo] void scroll(unrestricted double x, unrestricted double y);\u000a    [RuntimeEnabled=CSSOMSmoothScroll] void scrollTo(optional ScrollToOptions options);\u000a    [RuntimeEnabled=CSSOMSmoothScroll] void scrollTo(unrestricted double x, unrestricted double y);\u000a    [RuntimeEnabled=CSSOMSmoothScroll] void scrollBy(optional ScrollToOptions options);\u000a    [RuntimeEnabled=CSSOMSmoothScroll] void scrollBy(unrestricted double x, unrestricted double y);\u000a    attribute unrestricted double scrollTop;\u000a    attribute unrestricted double scrollLeft;\u000a    readonly attribute long scrollWidth;\u000a    readonly attribute long scrollHeight;\u000a    readonly attribute long clientTop;\u000a    readonly attribute long clientLeft;\u000a    readonly attribute long clientWidth;\u000a    readonly attribute long clientHeight;\u000a\u000a    // Scroll Customization API. See crbug.com/410974 for details.\u000a    [RuntimeEnabled=ScrollCustomization] void setApplyScroll(ScrollStateCallback scrollStateCallback, NativeScrollBehavior nativeScrollBehavior);\u000a    [RuntimeEnabled=ScrollCustomization] void setDistributeScroll(ScrollStateCallback scrollStateCallback, NativeScrollBehavior nativeScrollBehavior);\u000a\u000a    // Typed OM\u000a    // https://drafts.css-houdini.org/css-typed-om/#inline-stylepropertymap-objects\u000a    [RuntimeEnabled=CSSTypedOM, SameObject] readonly attribute StylePropertyMap styleMap;\u000a\u000a    // Non-standard API\u000a    [MeasureAs=ElementScrollIntoViewIfNeeded] void scrollIntoViewIfNeeded(optional boolean centerIfNeeded);\u000a    [RuntimeEnabled=ShadowDOMV0, RaisesException, CallWith=ScriptState, MeasureAs=ElementCreateShadowRoot] ShadowRoot createShadowRoot();\u000a    [RuntimeEnabled=ShadowDOMV0] NodeList getDestinationInsertionPoints();\u000a\u000a    // Experimental accessibility API\u000a    [RuntimeEnabled=ComputedAccessibilityInfo] readonly attribute DOMString? computedRole;\u000a    [RuntimeEnabled=ComputedAccessibilityInfo] readonly attribute DOMString? computedName;\u000a\u000a    // Accessibility Object Model\u000a    [RuntimeEnabled=AccessibilityObjectModel] readonly attribute AccessibleNode? accessibleNode;\u000a\u000a    // Event handler attributes\u000a    attribute EventHandler onbeforecopy;\u000a    attribute EventHandler onbeforecut;\u000a    attribute EventHandler onbeforepaste;\u000a    attribute EventHandler oncopy;\u000a    attribute EventHandler oncut;\u000a    attribute EventHandler onpaste;\u000a    attribute EventHandler onsearch;\u000a    attribute EventHandler onselectstart;\u000a};\u000a\u000aElement implements ParentNode;\u000aElement implements ChildNode;\u000aElement implements NonDocumentTypeChildNode;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/ElementDefinitionOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/ElementDefinitionOptions.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a// Spec: https://html.spec.whatwg.org/#elementdefinitionoptions\u000adictionary ElementDefinitionOptions {\u000a    DOMString? extends = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/ElementRegistrationOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/ElementRegistrationOptions.idl"},specUrls:["https://w3c.github.io/webcomponents/spec/custom/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Spec: https://w3c.github.io/webcomponents/spec/custom/#api-element-registration-options\u000a\u000adictionary ElementRegistrationOptions {\u000a    object? prototype = null;\u000a    DOMString? extends = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/ElementCreationOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/ElementCreationOptions.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dom.spec.whatwg.org/#dictdef-elementcreationoptions\u000a\u000adictionary ElementCreationOptions {\u000a  DOMString is;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/FrameRequestCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/FrameRequestCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/window-object.html#framerequestcallback\u000a\u000acallback FrameRequestCallback = void(DOMHighResTimeStamp highResTime);\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/FunctionStringCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/FunctionStringCallback.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-datatransferitem-interface\u000a\u000acallback FunctionStringCallback = void (DOMString data);\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/GetRootNodeOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/GetRootNodeOptions.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dom.spec.whatwg.org/#dictdef-getrootnodeoptions\u000a\u000adictionary GetRootNodeOptions {\u000a     boolean composed = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/GlobalEventHandlers.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/GlobalEventHandlers.idl"},specUrls:["https://html.spec.whatwg.org/","https://wicg.github.io/auxclick/","https://w3c.github.io/pointerevents/","https://w3c.github.io/touch-events/"],contents:"/*\u000a * Copyright (c) 2013, Opera Software ASA. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a * 3. Neither the name of Opera Software ASA nor the names of its\u000a *    contributors may be used to endorse or promote products derived\u000a *    from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\u000a * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\u000a * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\u000a * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\u000a * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\u000a * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\u000a * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\u000a * OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#globaleventhandlers\u000a\u000a[\u000a    LegacyTreatAsPartialInterface,\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface GlobalEventHandlers {\u000a    attribute EventHandler onabort;\u000a    attribute EventHandler onblur;\u000a    attribute EventHandler oncancel;\u000a    attribute EventHandler oncanplay;\u000a    attribute EventHandler oncanplaythrough;\u000a    attribute EventHandler onchange;\u000a    attribute EventHandler onclick;\u000a    attribute EventHandler onclose;\u000a    attribute EventHandler oncontextmenu;\u000a    attribute EventHandler oncuechange;\u000a    attribute EventHandler ondblclick;\u000a    attribute EventHandler ondrag;\u000a    attribute EventHandler ondragend;\u000a    attribute EventHandler ondragenter;\u000a    //attribute EventHandler ondragexit;\u000a    attribute EventHandler ondragleave;\u000a    attribute EventHandler ondragover;\u000a    attribute EventHandler ondragstart;\u000a    attribute EventHandler ondrop;\u000a    attribute EventHandler ondurationchange;\u000a    attribute EventHandler onemptied;\u000a    attribute EventHandler onended;\u000a    // FIXME: onerror should be an OnErrorEventHandler.\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onfocus;\u000a    attribute EventHandler oninput;\u000a    attribute EventHandler oninvalid;\u000a    attribute EventHandler onkeydown;\u000a    attribute EventHandler onkeypress;\u000a    attribute EventHandler onkeyup;\u000a    attribute EventHandler onload;\u000a    attribute EventHandler onloadeddata;\u000a    attribute EventHandler onloadedmetadata;\u000a    attribute EventHandler onloadstart;\u000a    attribute EventHandler onmousedown;\u000a    [LenientThis] attribute EventHandler onmouseenter;\u000a    [LenientThis] attribute EventHandler onmouseleave;\u000a    attribute EventHandler onmousemove;\u000a    attribute EventHandler onmouseout;\u000a    attribute EventHandler onmouseover;\u000a    attribute EventHandler onmouseup;\u000a    attribute EventHandler onmousewheel;\u000a    attribute EventHandler onpause;\u000a    attribute EventHandler onplay;\u000a    attribute EventHandler onplaying;\u000a    attribute EventHandler onprogress;\u000a    attribute EventHandler onratechange;\u000a    attribute EventHandler onreset;\u000a    attribute EventHandler onresize;\u000a    attribute EventHandler onscroll;\u000a    attribute EventHandler onseeked;\u000a    attribute EventHandler onseeking;\u000a    attribute EventHandler onselect;\u000a    //attribute EventHandler onsort;\u000a    attribute EventHandler onstalled;\u000a    attribute EventHandler onsubmit;\u000a    attribute EventHandler onsuspend;\u000a    attribute EventHandler ontimeupdate;\u000a    attribute EventHandler ontoggle;\u000a    attribute EventHandler onvolumechange;\u000a    attribute EventHandler onwaiting;\u000a    attribute EventHandler onwheel;\u000a\u000a    // auxclick\u000a    // https://wicg.github.io/auxclick/\u000a    attribute EventHandler onauxclick;\u000a\u000a    // Pointer Events\u000a    // https://w3c.github.io/pointerevents/#extensions-to-the-globaleventhandlers-interface\u000a    attribute EventHandler ongotpointercapture;\u000a    attribute EventHandler onlostpointercapture;\u000a    attribute EventHandler onpointerdown;\u000a    attribute EventHandler onpointermove;\u000a    attribute EventHandler onpointerup;\u000a    attribute EventHandler onpointercancel;\u000a    attribute EventHandler onpointerover;\u000a    attribute EventHandler onpointerout;\u000a    attribute EventHandler onpointerenter;\u000a    attribute EventHandler onpointerleave;\u000a\u000a    // Touch Events\u000a    // https://w3c.github.io/touch-events/#extensions-to-the-globaleventhandlers-interface\u000a    [OriginTrialEnabled=TouchEventFeatureDetection] attribute EventHandler ontouchcancel;\u000a    [OriginTrialEnabled=TouchEventFeatureDetection] attribute EventHandler ontouchend;\u000a    [OriginTrialEnabled=TouchEventFeatureDetection] attribute EventHandler ontouchmove;\u000a    [OriginTrialEnabled=TouchEventFeatureDetection] attribute EventHandler ontouchstart;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/IdleDeadline.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/IdleDeadline.idl"},specUrls:["https://w3c.github.io/requestidlecallback/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/requestidlecallback/#window_extensions\u000a\u000ainterface IdleDeadline {\u000a    double timeRemaining();\u000a    readonly attribute boolean didTimeout;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/IdleRequestCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/IdleRequestCallback.idl"},specUrls:["https://w3c.github.io/requestidlecallback/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/requestidlecallback/#window_extensions\u000a\u000acallback IdleRequestCallback = void (IdleDeadline deadline);\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/Iterator.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/Iterator.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// http://people.mozilla.org/~jorendorff/es6-draft.html#sec-iterator-interface\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface Iterator {\u000a    [CallWith=ScriptState, RaisesException] any next(optional any value);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/MessageChannel.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/MessageChannel.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008, 2010 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a *\u000a */\u000a\u000a// https://html.spec.whatwg.org/#message-channels\u000a\u000a[\u000a    CustomConstructor,\u000a    Exposed=(Window,Worker),\u000a    Measure\u000a] interface MessageChannel {\u000a    readonly attribute MessagePort port1;\u000a    readonly attribute MessagePort port2;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/IdleRequestOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/IdleRequestOptions.idl"},specUrls:["https://w3c.github.io/requestidlecallback/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/requestidlecallback/#window_extensions\u000a\u000adictionary IdleRequestOptions {\u000a    unsigned long timeout = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/MessagePort.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/MessagePort.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a * Copyright (C) 2011 Google Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a *\u000a */\u000a\u000a// https://html.spec.whatwg.org/#message-ports\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Exposed=(Window,Worker)\u000a] interface MessagePort : EventTarget {\u000a    [PostMessage, RaisesException, Measure] void postMessage(any message, optional sequence<object> transfer = []);\u000a    [Measure] void start();\u000a    [Measure] void close();\u000a\u000a    // event handlers\u000a    attribute EventHandler onmessage;\u000a    attribute EventHandler onmessageerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/MutationObserver.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/MutationObserver.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-mutationobserver\u000a\u000acallback MutationCallback = void (sequence<MutationRecord> mutations,\u000a                                  MutationObserver observer);\u000a\u000a[\u000a    ConstructorCallWith=ScriptState,\u000a    Constructor(MutationCallback callback),\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface MutationObserver {\u000a    [RaisesException] void observe(Node target, optional MutationObserverInit options);\u000a    void disconnect();\u000a    sequence<MutationRecord> takeRecords();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/MutationObserverInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/MutationObserverInit.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Spec: https://dom.spec.whatwg.org/#interface-mutationobserver\u000a\u000adictionary MutationObserverInit {\u000a    boolean childList = false;\u000a    boolean attributes;\u000a    boolean characterData;\u000a    boolean subtree = false;\u000a    boolean attributeOldValue;\u000a    boolean characterDataOldValue;\u000a    sequence<DOMString> attributeFilter;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/MutationRecord.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/MutationRecord.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-mutationrecord\u000a\u000ainterface MutationRecord {\u000a    readonly attribute DOMString type;\u000a    readonly attribute Node target;\u000a    [SameObject] readonly attribute NodeList addedNodes;\u000a    [SameObject] readonly attribute NodeList removedNodes;\u000a    readonly attribute Node? previousSibling;\u000a    readonly attribute Node? nextSibling;\u000a    readonly attribute DOMString? attributeName;\u000a    readonly attribute DOMString? attributeNamespace;\u000a    readonly attribute DOMString? oldValue;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/NamedNodeMap.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/NamedNodeMap.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2007, 2009 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-namednodemap\u000a\u000a[\u000a    DependentLifetime,\u000a    LegacyUnenumerableNamedProperties\u000a] interface NamedNodeMap {\u000a    readonly attribute unsigned long length;\u000a    [MeasureAs=NamedNodeMapItem] getter Attr? item(unsigned long index);\u000a    [MeasureAs=NamedNodeMapGetNamedItem] getter Attr? getNamedItem(DOMString name);\u000a    [MeasureAs=NamedNodeMapGetNamedItemNS] Attr? getNamedItemNS(DOMString? namespaceURI, DOMString localName);\u000a    [RaisesException, CEReactions, CustomElementCallbacks, MeasureAs=NamedNodeMapSetNamedItem] Attr? setNamedItem(Attr attr);\u000a    [RaisesException, CEReactions, CustomElementCallbacks, MeasureAs=NamedNodeMapSetNamedItemNS] Attr? setNamedItemNS(Attr attr);\u000a    [RaisesException, CEReactions, CustomElementCallbacks, MeasureAs=NamedNodeMapRemoveNamedItem] Attr removeNamedItem(DOMString name);\u000a    [RaisesException, CEReactions, CustomElementCallbacks, MeasureAs=NamedNodeMapRemoveNamedItemNS] Attr removeNamedItemNS(DOMString? namespaceURI, DOMString localName);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/NodeFilter.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/NodeFilter.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2008 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-nodefilter\u000a\u000a[\u000a    DependentLifetime\u000a] callback interface NodeFilter {\u000a    // Constants for acceptNode()\u000a    const unsigned short FILTER_ACCEPT = 1;\u000a    const unsigned short FILTER_REJECT = 2;\u000a    const unsigned short FILTER_SKIP = 3;\u000a\u000a    // Constants for whatToShow\u000a    const unsigned long SHOW_ALL = 0xFFFFFFFF;\u000a    const unsigned long SHOW_ELEMENT = 0x1;\u000a    const unsigned long SHOW_ATTRIBUTE = 0x2; // historical\u000a    const unsigned long SHOW_TEXT = 0x4;\u000a    const unsigned long SHOW_CDATA_SECTION = 0x8;\u000a    const unsigned long SHOW_ENTITY_REFERENCE = 0x10; // historical\u000a    const unsigned long SHOW_ENTITY = 0x20; // historical\u000a    const unsigned long SHOW_PROCESSING_INSTRUCTION = 0x40;\u000a    const unsigned long SHOW_COMMENT = 0x80;\u000a    const unsigned long SHOW_DOCUMENT = 0x100;\u000a    const unsigned long SHOW_DOCUMENT_TYPE = 0x200;\u000a    const unsigned long SHOW_DOCUMENT_FRAGMENT = 0x400;\u000a    const unsigned long SHOW_NOTATION = 0x800; // historical\u000a\u000a    // This function declaration doesn't generate any code because\u000a    // V8NodeFilterCondition represents this callback interface in Blink.\u000a    // TODO(bashi): Fix crbug.com/630986, and use generated code.\u000a    [RaisesException] unsigned short acceptNode(Node node);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/Node.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/Node.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-node\u000a\u000a[\u000a    DependentLifetime\u000a] interface Node : EventTarget {\u000a    const unsigned short ELEMENT_NODE = 1;\u000a    const unsigned short ATTRIBUTE_NODE = 2;\u000a    const unsigned short TEXT_NODE = 3;\u000a    const unsigned short CDATA_SECTION_NODE = 4;\u000a    const unsigned short ENTITY_REFERENCE_NODE = 5; // historical\u000a    const unsigned short ENTITY_NODE = 6; // historical\u000a    const unsigned short PROCESSING_INSTRUCTION_NODE = 7;\u000a    const unsigned short COMMENT_NODE = 8;\u000a    const unsigned short DOCUMENT_NODE = 9;\u000a    const unsigned short DOCUMENT_TYPE_NODE = 10;\u000a    const unsigned short DOCUMENT_FRAGMENT_NODE = 11;\u000a    const unsigned short NOTATION_NODE = 12; // historical\u000a    [ImplementedAs=getNodeType] readonly attribute unsigned short nodeType;\u000a    [RuntimeCallStatsCounter=NodeName] readonly attribute DOMString nodeName;\u000a\u000a    readonly attribute USVString baseURI;\u000a\u000a    [Measure] readonly attribute boolean isConnected;\u000a    [PerWorldBindings] readonly attribute Document? ownerDocument;\u000a    [PerWorldBindings] readonly attribute Node? parentNode;\u000a    [PerWorldBindings] readonly attribute Element? parentElement;\u000a    [ImplementedAs=hasChildren] boolean hasChildNodes();\u000a    [SameObject, PerWorldBindings] readonly attribute NodeList childNodes;\u000a    [PerWorldBindings] readonly attribute Node? firstChild;\u000a    [PerWorldBindings] readonly attribute Node? lastChild;\u000a    [PerWorldBindings] readonly attribute Node? previousSibling;\u000a    [PerWorldBindings] readonly attribute Node? nextSibling;\u000a    [MeasureAs=NodeGetRootNode] Node getRootNode(optional GetRootNodeOptions options);\u000a\u000a    [CEReactions, CustomElementCallbacks] attribute DOMString? nodeValue;\u000a\u000a    [CEReactions, CustomElementCallbacks] attribute DOMString? textContent;\u000a    [CEReactions, CustomElementCallbacks] void normalize();\u000a\u000a    [NewObject, DoNotTestNewObject, CEReactions, CustomElementCallbacks, RaisesException] Node cloneNode(optional boolean deep = false);\u000a    boolean isEqualNode(Node? otherNode);\u000a    boolean isSameNode(Node? otherNode); // historical alias of ===\u000a\u000a    const unsigned short DOCUMENT_POSITION_DISCONNECTED = 0x01;\u000a    const unsigned short DOCUMENT_POSITION_PRECEDING = 0x02;\u000a    const unsigned short DOCUMENT_POSITION_FOLLOWING = 0x04;\u000a    const unsigned short DOCUMENT_POSITION_CONTAINS = 0x08;\u000a    const unsigned short DOCUMENT_POSITION_CONTAINED_BY = 0x10;\u000a    const unsigned short DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 0x20;\u000a    unsigned short compareDocumentPosition(Node other);\u000a    boolean contains(Node? other);\u000a\u000a    DOMString? lookupPrefix(DOMString? namespaceURI);\u000a    DOMString? lookupNamespaceURI(DOMString? prefix);\u000a    boolean isDefaultNamespace(DOMString? namespaceURI);\u000a\u000a    [CEReactions, CustomElementCallbacks, PerWorldBindings, RaisesException] Node insertBefore(Node node, Node? child);\u000a    [CEReactions, CustomElementCallbacks, PerWorldBindings, RaisesException, RuntimeCallStatsCounter=NodeAppendChild] Node appendChild(Node node);\u000a    [CEReactions, CustomElementCallbacks, PerWorldBindings, RaisesException] Node replaceChild(Node node, Node child);\u000a    [CEReactions, CustomElementCallbacks, RaisesException, RuntimeCallStatsCounter=NodeRemoveChild] Node removeChild(Node child);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/NodeIterator.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/NodeIterator.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2008 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-nodeiterator\u000a\u000a[\u000a    DependentLifetime\u000a] interface NodeIterator {\u000a    [SameObject] readonly attribute Node root;\u000a    readonly attribute Node referenceNode;\u000a    readonly attribute boolean pointerBeforeReferenceNode;\u000a    readonly attribute unsigned long whatToShow;\u000a    readonly attribute NodeFilter? filter;\u000a\u000a    [RaisesException] Node? nextNode();\u000a    [RaisesException] Node? previousNode();\u000a\u000a    [MeasureAs=NodeIteratorDetach] void detach();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/NodeList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/NodeList.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2007 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-nodelist\u000a\u000a[\u000a    DependentLifetime\u000a] interface NodeList {\u000a    getter Node? item(unsigned long index);\u000a    readonly attribute unsigned long length;\u000a    iterable<Node>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/NonDocumentTypeChildNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/NonDocumentTypeChildNode.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dom.spec.whatwg.org/#interface-nondocumenttypechildnode\u000a\u000a[\u000a    LegacyTreatAsPartialInterface,\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface NonDocumentTypeChildNode {\u000a    [PerWorldBindings] readonly attribute Element? previousElementSibling;\u000a    [PerWorldBindings] readonly attribute Element? nextElementSibling;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/NonElementParentNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/NonElementParentNode.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dom.spec.whatwg.org/#interface-nonelementparentnode\u000a\u000a[\u000a    LegacyTreatAsPartialInterface,\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface NonElementParentNode {\u000a    [PerWorldBindings] Element? getElementById(DOMString elementId);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/NoncedElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/NoncedElement.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/whatwg/html/pull/2373/\u000a//\u000a// TODO(mkwst): Update the link iff this lands.\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface NoncedElement {\u000a    [CEReactions] attribute DOMString nonce;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/ParentNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/ParentNode.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-parentnode\u000a\u000a[\u000a    LegacyTreatAsPartialInterface,\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface ParentNode {\u000a    [SameObject, PerWorldBindings] readonly attribute HTMLCollection children;\u000a    [PerWorldBindings] readonly attribute Element? firstElementChild;\u000a    [PerWorldBindings] readonly attribute Element? lastElementChild;\u000a    readonly attribute unsigned long childElementCount;\u000a\u000a    [Unscopable, RaisesException, CEReactions, CustomElementCallbacks] void prepend((Node or DOMString)... nodes);\u000a    [Unscopable, RaisesException, CEReactions, CustomElementCallbacks] void append((Node or DOMString)... nodes);\u000a\u000a    // [Unscopable] Element? query(DOMString relativeSelectors);\u000a    // [NewObject, Unscopable] Elements queryAll(DOMString relativeSelectors);\u000a    [RaisesException] Element? querySelector(DOMString selectors);\u000a    [NewObject, RaisesException] NodeList querySelectorAll(DOMString selectors);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/ProcessingInstruction.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/ProcessingInstruction.idl"},specUrls:["https://dom.spec.whatwg.org/","https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-processinginstruction\u000a\u000ainterface ProcessingInstruction : CharacterData {\u000a    readonly attribute DOMString target;\u000a\u000a    // ProcessingInstruction implements LinkStyle\u000a    // https://drafts.csswg.org/cssom/#requirements-on-user-agents-implementing-the-xml-stylesheet-processing-instruction\u000a    readonly attribute StyleSheet? sheet;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/Range.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/Range.idl"},specUrls:["https://dom.spec.whatwg.org/","https://drafts.csswg.org/cssom-view/","https://w3c.github.io/DOM-Parsing/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-range\u000a[\u000a    Constructor,\u000a    ConstructorCallWith=Document\u000a] interface Range {\u000a    readonly attribute Node startContainer;\u000a    readonly attribute unsigned long startOffset;\u000a    readonly attribute Node endContainer;\u000a    readonly attribute unsigned long endOffset;\u000a    readonly attribute boolean collapsed;\u000a    readonly attribute Node commonAncestorContainer;\u000a\u000a    [RaisesException] void setStart(Node node, unsigned long offset);\u000a    [RaisesException] void setEnd(Node node, unsigned long offset);\u000a    [RaisesException] void setStartBefore(Node node);\u000a    [RaisesException] void setStartAfter(Node node);\u000a    [RaisesException] void setEndBefore(Node node);\u000a    [RaisesException] void setEndAfter(Node node);\u000a    void collapse(optional boolean toStart = false);\u000a    [RaisesException] void selectNode(Node node);\u000a    [RaisesException] void selectNodeContents(Node node);\u000a\u000a    const unsigned short START_TO_START = 0;\u000a    const unsigned short START_TO_END = 1;\u000a    const unsigned short END_TO_END = 2;\u000a    const unsigned short END_TO_START = 3;\u000a    [RaisesException] short compareBoundaryPoints(unsigned short how, Range sourceRange);\u000a\u000a    [RaisesException, CEReactions, CustomElementCallbacks] void deleteContents();\u000a    [NewObject, RaisesException, CEReactions, CustomElementCallbacks] DocumentFragment extractContents();\u000a    [NewObject, RaisesException, CEReactions, CustomElementCallbacks] DocumentFragment cloneContents();\u000a    [RaisesException, CEReactions, CustomElementCallbacks] void insertNode(Node node);\u000a    [RaisesException, CEReactions, CustomElementCallbacks] void surroundContents(Node newParent);\u000a\u000a    [NewObject] Range cloneRange();\u000a    [MeasureAs=RangeDetach] void detach();\u000a\u000a    [RaisesException] boolean isPointInRange(Node node, unsigned long offset);\u000a    [RaisesException] short comparePoint(Node node, unsigned long offset);\u000a\u000a    [RaisesException] boolean intersectsNode(Node node);\u000a\u000a    stringifier;\u000a\u000a    // CSSOM View Module\u000a    // https://drafts.csswg.org/cssom-view/#extensions-to-the-range-interface\u000a    DOMRectList getClientRects();\u000a    DOMRect getBoundingClientRect();\u000a\u000a    // DOM Parsing and Serialization\u000a    // https://w3c.github.io/DOM-Parsing/#extensions-to-the-range-interface\u000a    [NewObject, RaisesException, CEReactions, CustomElementCallbacks] DocumentFragment createContextualFragment(DOMString fragment);\u000a\u000a    // Non-standard API\u000a    [RaisesException, DeprecateAs=RangeExpand] void expand([Default=Undefined] optional DOMString unit);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/ShadowRoot.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/ShadowRoot.idl"},specUrls:["https://w3c.github.io/webcomponents/spec/shadow/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webcomponents/spec/shadow/#the-shadowroot-interface\u000a\u000ainterface ShadowRoot : DocumentFragment {\u000a    readonly attribute ShadowRootMode mode;\u000a    readonly attribute Element host;\u000a    [TreatNullAs=NullString, CEReactions, CustomElementCallbacks, RaisesException=Setter] attribute HTMLString innerHTML;\u000a    readonly attribute boolean delegatesFocus;\u000a};\u000a\u000aShadowRoot implements DocumentOrShadowRoot;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/StaticRange.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/StaticRange.idl"},specUrls:["https://garykac.github.io/staticrange/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://garykac.github.io/staticrange/#interface-staticrange\u000a\u000a[\u000a    RuntimeEnabled=InputEvent\u000a] interface StaticRange {\u000a    readonly attribute Node startContainer;\u000a    readonly attribute unsigned long startOffset;\u000a    readonly attribute Node endContainer;\u000a    readonly attribute unsigned long endOffset;\u000a    readonly attribute boolean collapsed;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/ShadowRootInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/ShadowRootInit.idl"},specUrls:["https://w3c.github.io/webcomponents/spec/shadow/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Spec: https://w3c.github.io/webcomponents/spec/shadow/#shadowrootinit-dictionary\u000a\u000aenum ShadowRootMode { \"open\", \"closed\" };\u000a\u000adictionary ShadowRootInit {\u000a    required ShadowRootMode mode;\u000a    boolean delegatesFocus;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/Text.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/Text.idl"},specUrls:["https://dom.spec.whatwg.org/","https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-text\u000a\u000a[\u000a    Constructor(optional DOMString data = \"\"),\u000a    ConstructorCallWith=Document\u000a] interface Text : CharacterData {\u000a    [NewObject, DoNotTestNewObject, RaisesException] Text splitText(unsigned long offset);\u000a    [MeasureAs=TextWholeText] readonly attribute DOMString wholeText;\u000a\u000a    // Mixin Slotable\u000a    // https://dom.spec.whatwg.org/#mixin-slotable\u000a    [ImplementedAs=assignedSlotForBinding] readonly attribute HTMLSlotElement? assignedSlot;\u000a\u000a    // Non-standard API:\u000a    [RuntimeEnabled=ShadowDOMV0] NodeList getDestinationInsertionPoints();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/TreeWalker.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/TreeWalker.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-treewalker\u000a\u000a[\u000a    DependentLifetime\u000a] interface TreeWalker {\u000a    [SameObject] readonly attribute Node root;\u000a    readonly attribute unsigned long whatToShow;\u000a    readonly attribute NodeFilter? filter;\u000a    attribute Node currentNode;\u000a\u000a    [RaisesException] Node? parentNode();\u000a    [RaisesException] Node? firstChild();\u000a    [RaisesException] Node? lastChild();\u000a    [RaisesException] Node? previousSibling();\u000a    [RaisesException] Node? nextSibling();\u000a    [RaisesException] Node? previousNode();\u000a    [RaisesException] Node? nextNode();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/XMLDocument.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/XMLDocument.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2014 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#xmldocument\u000a\u000ainterface XMLDocument : Document {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/events/AddEventListenerOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/events/AddEventListenerOptions.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dom.spec.whatwg.org/#dictdef-addeventlisteneroptions\u000a\u000adictionary AddEventListenerOptions : EventListenerOptions {\u000a    boolean passive;\u000a    boolean once = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/events/CustomEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/events/CustomEvent.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies)\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-customevent\u000a\u000a[\u000a    Constructor(DOMString type, optional CustomEventInit eventInitDict),\u000a    ConstructorCallWith=ScriptState,\u000a    DependentLifetime,\u000a    Exposed=(Window,Worker)\u000a] interface CustomEvent : Event {\u000a    [CallWith=ScriptState] readonly attribute any detail;\u000a\u000a    [Measure, CallWith=ScriptState] void initCustomEvent(DOMString type, optional boolean bubbles = false, optional boolean cancelable = false, optional any detail = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/events/CustomEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/events/CustomEventInit.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dom.spec.whatwg.org/#interface-customevent\u000a\u000adictionary CustomEventInit : EventInit {\u000a    any detail = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/events/Event.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/events/Event.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009, 2011 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-event\u000a\u000a[\u000a    Constructor(DOMString type, optional EventInit eventInitDict),\u000a    Exposed=(Window,Worker)\u000a] interface Event {\u000a    readonly attribute DOMString type;\u000a    readonly attribute EventTarget? target;\u000a    readonly attribute EventTarget? currentTarget;\u000a    [MeasureAs=EventComposedPath, CallWith=ScriptState] sequence<EventTarget> composedPath();\u000a\u000a    const unsigned short NONE = 0;\u000a    const unsigned short CAPTURING_PHASE = 1;\u000a    const unsigned short AT_TARGET = 2;\u000a    const unsigned short BUBBLING_PHASE = 3;\u000a    readonly attribute unsigned short eventPhase;\u000a\u000a    [Measure] void stopPropagation();\u000a    [Measure] void stopImmediatePropagation();\u000a\u000a    readonly attribute boolean bubbles;\u000a    readonly attribute boolean cancelable;\u000a    void preventDefault();\u000a    readonly attribute boolean defaultPrevented;\u000a\u000a    [MeasureAs=EventComposed] readonly attribute boolean composed;\u000a\u000a    [Unforgeable] readonly attribute boolean isTrusted;\u000a\u000a    [CallWith=ScriptState] readonly attribute DOMHighResTimeStamp timeStamp;\u000a\u000a    [Measure] void initEvent(DOMString type, optional boolean bubbles = false, optional boolean cancelable = false);\u000a\u000a    // Non-standard APIs\u000a    [MeasureAs=EventSrcElement] readonly attribute EventTarget srcElement;\u000a    [MeasureAs=EventReturnValue, CallWith=ScriptState, ImplementedAs=legacyReturnValue] attribute boolean returnValue;\u000a    [MeasureAs=EventCancelBubble, CallWith=ScriptState] attribute boolean cancelBubble;\u000a    [MeasureAs=EventPath, CallWith=ScriptState] readonly attribute object path;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/events/EventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/events/EventInit.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dom.spec.whatwg.org/#interface-event\u000a\u000adictionary EventInit {\u000a    boolean bubbles = false;\u000a    boolean cancelable = false;\u000a    boolean composed = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/events/EventListener.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/events/EventListener.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#callbackdef-eventlistener\u000a\u000acallback interface EventListener {\u000a    void handleEvent(Event event);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/events/EventListenerOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/events/EventListenerOptions.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dom.spec.whatwg.org/#dictdef-eventlisteneroptions\u000a\u000adictionary EventListenerOptions {\u000a    boolean capture = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/events/EventModifierInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/events/EventModifierInit.idl"},specUrls:["https://w3c.github.io/uievents/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/uievents/#idl-def-EventModifierInit\u000a\u000adictionary EventModifierInit : UIEventInit {\u000a    boolean ctrlKey = false;\u000a    boolean shiftKey = false;\u000a    boolean altKey = false;\u000a    boolean metaKey = false;\u000a    boolean modifierAltGraph = false;\u000a    boolean modifierCapsLock = false;\u000a    boolean modifierFn = false;\u000a    boolean modifierNumLock = false;\u000a    boolean modifierScrollLock = false;\u000a    boolean modifierSymbol = false;\u000a    // FIXME: Add modifierXXX members when needed.\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/events/EventTarget.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/events/EventTarget.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-eventtarget\u000a\u000a[\u000a    CheckSecurity=Receiver,\u000a    Exposed=(Window,Worker),\u000a    ImmutablePrototype\u000a] interface EventTarget {\u000a    [Custom=CallPrologue] void addEventListener(DOMString type, EventListener? listener, optional (AddEventListenerOptions or boolean) options);\u000a    [Custom=CallPrologue] void removeEventListener(DOMString type, EventListener? listener, optional (EventListenerOptions or boolean) options);\u000a    [ImplementedAs=dispatchEventForBindings, RaisesException, RuntimeCallStatsCounter=EventTargetDispatchEvent] boolean dispatchEvent(Event event);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/trustedtypes/TrustedHTML.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/trustedtypes/TrustedHTML.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000atypedef (DOMString or TrustedHTML) HTMLString;\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=TrustedDOMTypes\u000a] interface TrustedHTML {\u000a    [CallWith=ScriptState] static TrustedHTML escape(DOMString html);\u000a    [CallWith=ScriptState] static TrustedHTML unsafelyCreate(DOMString html);\u000a\u000a\u000a    stringifier;\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/trustedtypes/TrustedScriptURL.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/trustedtypes/TrustedScriptURL.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000atypedef (DOMString or TrustedScriptURL) ScriptURLString;\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=TrustedDOMTypes\u000a] interface TrustedScriptURL {\u000a    [CallWith=ScriptState] static TrustedScriptURL unsafelyCreate(DOMString url);\u000a\u000a    stringifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/dom/trustedtypes/TrustedURL.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/dom/trustedtypes/TrustedURL.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000atypedef (DOMString or TrustedURL) URLString;\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=TrustedDOMTypes\u000a] interface TrustedURL {\u000a    [CallWith=ScriptState] static TrustedURL create(DOMString url);\u000a    [CallWith=ScriptState] static TrustedURL unsafelyCreate(DOMString url);\u000a\u000a    stringifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/editing/Selection.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/editing/Selection.idl"},specUrls:["https://w3c.github.io/selection-api/"],contents:"/*\u000a * Copyright (C) 2007 Apple Inc.  All rights reserved.\u000a * Copyright (C) 2009 Google Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/selection-api/#selection-interface\u000a[\u000a    ImplementedAs=DOMSelection\u000a] interface Selection {\u000a    [MeasureAs=SelectionAnchorNode] readonly attribute Node? anchorNode;\u000a    [MeasureAs=SelectionAnchorOffset] readonly attribute unsigned long anchorOffset;\u000a    [MeasureAs=SelectionFocusNode] readonly attribute Node? focusNode;\u000a    [MeasureAs=SelectionFocusOffset] readonly attribute unsigned long focusOffset;\u000a    [MeasureAs=SelectionIsCollapsed] readonly attribute boolean isCollapsed;\u000a    [MeasureAs=SelectionRangeCount] readonly attribute unsigned long rangeCount;\u000a    [MeasureAs=SelectionType] readonly attribute DOMString type;\u000a    [MeasureAs=SelectionGetRangeAt, RaisesException] Range getRangeAt(unsigned long index);\u000a    [MeasureAs=SelectionAddRange] void addRange(Range range);\u000a    void removeRange(Range range);\u000a    [MeasureAs=SelectionRemoveAllRanges] void removeAllRanges();\u000a    [MeasureAs=SelectionEmpty] void empty();\u000a    [MeasureAs=SelectionCollapse, RaisesException] void collapse(Node? node, optional unsigned long offset = 0);\u000a    [ImplementedAs=collapse, MeasureAs=SelectionSetPosition, RaisesException] void setPosition(Node? node, optional unsigned long offset = 0);\u000a    [MeasureAs=SelectionCollapseToStart, RaisesException] void collapseToStart();\u000a    [MeasureAs=SelectionCollapseToEnd, RaisesException] void collapseToEnd();\u000a    [MeasureAs=SelectionExtend, RaisesException] void extend(Node node, optional unsigned long offset = 0);\u000a    // TODO(foolip): The arguments should be anchorNode, anchorOffset,\u000a    // focusNode and focusOffset, and none of them are nullable in the spec.\u000a    [MeasureAs=SelectionSetBaseAndExtent, RaisesException] void setBaseAndExtent(Node? baseNode, unsigned long baseOffset,\u000a                                                                                 Node? extentNode, unsigned long extentOffset);\u000a    [MeasureAs=SelectionSelectAllChildren, RaisesException] void selectAllChildren(Node node);\u000a    [MeasureAs=SelectionDeleteDromDocument, CEReactions, CustomElementCallbacks] void deleteFromDocument();\u000a    [MeasureAs=SelectionContainsNode] boolean containsNode(Node node, optional boolean allowPartialContainment = false);\u000a    [MeasureAs=SelectionDOMString] stringifier;\u000a\u000a    // Non-standard APIs\u000a\u000a    // https://github.com/w3c/selection-api/issues/34\u000a    [MeasureAs=SelectionBaseNode] readonly attribute Node? baseNode;\u000a    [MeasureAs=SelectionBaseOffset] readonly attribute unsigned long baseOffset;\u000a    [MeasureAs=SelectionExtentNode] readonly attribute Node? extentNode;\u000a    [MeasureAs=SelectionExtentOffset] readonly attribute unsigned long extentOffset;\u000a\u000a    // https://github.com/w3c/selection-api/issues/37\u000a    [MeasureAs=SelectionModify] void modify([Default=Undefined] optional DOMString alter,\u000a                                            [Default=Undefined] optional DOMString direction,\u000a                                            [Default=Undefined] optional DOMString granularity);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/AnimationEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/AnimationEvent.idl"},specUrls:["https://drafts.csswg.org/css-animations/"],contents:"/*\u000a * Copyright (C) 2007, 2008 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/css-animations/#interface-animationevent\u000a\u000a[\u000a    Constructor(DOMString type, optional AnimationEventInit eventInitDict)\u000a] interface AnimationEvent : Event {\u000a    readonly attribute DOMString animationName;\u000a    // TODO(foolip): elapsedTime should be float.\u000a    readonly attribute double elapsedTime;\u000a    // TODO(foolip): readonly attribute DOMString pseudoElement;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/AnimationEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/AnimationEventInit.idl"},specUrls:["https://drafts.csswg.org/css-animations/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.csswg.org/css-animations/#interface-animationevent\u000a\u000adictionary AnimationEventInit : EventInit {\u000a    DOMString animationName = \"\";\u000a    // TODO(foolip): elapsedTime should be float.\u000a    double elapsedTime = 0.0;\u000a    // TODO(foolip): DOMString pseudoElement = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/AnimationPlaybackEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/AnimationPlaybackEvent.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#the-animationplaybackevent-interface\u000a\u000a[\u000a    Constructor(DOMString type, optional AnimationPlaybackEventInit eventInitDict),\u000a    RuntimeEnabled=WebAnimationsAPI\u000a] interface AnimationPlaybackEvent : Event {\u000a    readonly attribute double? currentTime;\u000a    readonly attribute double? timelineTime;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/AnimationPlaybackEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/AnimationPlaybackEventInit.idl"},specUrls:["https://w3c.github.io/web-animations/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-animations/#the-animationplaybackevent-interface\u000a\u000adictionary AnimationPlaybackEventInit : EventInit {\u000a    double? currentTime = null;\u000a    double? timelineTime = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/ApplicationCacheErrorEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/ApplicationCacheErrorEvent.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// ApplicationCache Error Detail Proposal:\u000a// https://docs.google.com/document/d/1nlk7WgRD3d0ZcfK1xrwBFVZ3DI_e44j7QoMd5gAJC4E/edit\u000a\u000a// TODO(foolip): Update the spec link once this is in the HTML spec:\u000a// https://www.w3.org/Bugs/Public/show_bug.cgi?id=22702\u000a\u000a[\u000a    Constructor(DOMString type, optional ApplicationCacheErrorEventInit eventInitDict)\u000a] interface ApplicationCacheErrorEvent : Event {\u000a    readonly attribute DOMString reason;\u000a    readonly attribute DOMString url;\u000a    readonly attribute unsigned short status;\u000a    readonly attribute DOMString message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/ApplicationCacheErrorEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/ApplicationCacheErrorEventInit.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000adictionary ApplicationCacheErrorEventInit : EventInit {\u000a    DOMString reason;\u000a    DOMString url;\u000a    unsigned short status;\u000a    DOMString message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/BeforeUnloadEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/BeforeUnloadEvent.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-beforeunloadevent-interface\u000a\u000ainterface BeforeUnloadEvent : Event {\u000a    attribute DOMString returnValue;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/ClipboardEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/ClipboardEvent.idl"},specUrls:["https://w3c.github.io/clipboard-apis/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/clipboard-apis/#clipboard-event-interfaces\u000a\u000a[\u000a    Constructor(DOMString type, optional ClipboardEventInit eventInitDict)\u000a] interface ClipboardEvent : Event {\u000a    readonly attribute DataTransfer? clipboardData;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/ClipboardEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/ClipboardEventInit.idl"},specUrls:["https://w3c.github.io/clipboard-apis/"],contents:"// Copyright 2016 The Chromium Authors. All rihts reserved.\u000a// Use of this source code is governed by a BST-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/clipboard-apis/#clipboard-event-interfaces\u000a\u000adictionary ClipboardEventInit : EventInit {\u000a  DataTransfer? clipboardData = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/CompositionEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/CompositionEvent.idl"},specUrls:["https://w3c.github.io/uievents/","https://w3c.github.io/uievents/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/uievents/#interface-CompositionEvent\u000a\u000a[\u000a    Constructor(DOMString type, optional CompositionEventInit eventInitDict)\u000a] interface CompositionEvent : UIEvent {\u000a    readonly attribute DOMString data;\u000a\u000a    // https://w3c.github.io/uievents/#idl-interface-CompositionEvent-initializers\u000a    // TODO(foolip): None of the initCompositionEvent() arguments should be\u000a    // optional, and the spec has a locale argument after data.\u000a    [Measure] void initCompositionEvent([Default=Undefined] optional DOMString type,\u000a                                        [Default=Undefined] optional boolean bubbles,\u000a                                        [Default=Undefined] optional boolean cancelable,\u000a                                        [Default=Undefined] optional Window? view,\u000a                                        [Default=Undefined] optional DOMString data);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/CompositionEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/CompositionEventInit.idl"},specUrls:["https://w3c.github.io/uievents/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/uievents/#idl-def-CompositionEventInit\u000a\u000adictionary CompositionEventInit : UIEventInit {\u000a    DOMString data = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/DragEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/DragEvent.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/interaction.html#dragevent\u000a\u000a[\u000a    Constructor(DOMString type, optional DragEventInit eventInitDict)\u000a] interface DragEvent : MouseEvent {\u000a    [ImplementedAs=getDataTransfer] readonly attribute DataTransfer? dataTransfer;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/DragEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/DragEventInit.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/interaction.html#drageventinit\u000a\u000adictionary DragEventInit : MouseEventInit {\u000a    [ImplementedAs=getDataTransfer] DataTransfer? dataTransfer;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/ErrorEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/ErrorEvent.idl"},contents:"/*\u000a * Copyright (C) 2009 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/webappapis.html#the-errorevent-interface\u000a\u000a[\u000a    Constructor(DOMString type, optional ErrorEventInit eventInitDict),\u000a    ConstructorCallWith=ScriptState\u000a    // TODO(foolip): Exposed=(Window,Worker)\u000a] interface ErrorEvent : Event {\u000a    readonly attribute DOMString message;\u000a    readonly attribute DOMString filename;\u000a    readonly attribute unsigned long lineno;\u000a    readonly attribute unsigned long colno;\u000a    [Custom=Getter] readonly attribute any error;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/ErrorEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/ErrorEventInit.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/webappapis.html#the-errorevent-interface\u000a\u000adictionary ErrorEventInit : EventInit {\u000a    DOMString message;\u000a    DOMString filename;\u000a    unsigned long lineno;\u000a    unsigned long colno;\u000a    any error;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/FocusEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/FocusEvent.idl"},specUrls:["https://w3c.github.io/uievents/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''\u000a * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\u000a * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS\u000a * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\u000a * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\u000a * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\u000a * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\u000a * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\u000a * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\u000a * THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/uievents/#interface-FocusEvent\u000a\u000a[\u000a    Constructor(DOMString type, optional FocusEventInit eventInitDict)\u000a] interface FocusEvent : UIEvent {\u000a    readonly attribute EventTarget? relatedTarget;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/FocusEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/FocusEventInit.idl"},specUrls:["https://w3c.github.io/uievents/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/uievents/#idl-def-FocusEventInit\u000a\u000adictionary FocusEventInit : UIEventInit {\u000a    EventTarget? relatedTarget = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/HashChangeEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/HashChangeEvent.idl"},contents:"/*\u000a * Copyright (C) 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/browsers.html#the-hashchangeevent-interface\u000a\u000a[\u000a    Constructor(DOMString type, optional HashChangeEventInit eventInitDict)\u000a    // TODO(foolip): Exposed=(Window,Worker)\u000a] interface HashChangeEvent : Event {\u000a    readonly attribute DOMString oldURL;\u000a    readonly attribute DOMString newURL;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/HashChangeEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/HashChangeEventInit.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/browsers.html#hashchangeevent\u000a\u000adictionary HashChangeEventInit : EventInit {\u000a    DOMString oldURL;\u000a    DOMString newURL;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/InputEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/InputEvent.idl"},specUrls:["https://w3c.github.io/uievents/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// UI Events\u000a// https://w3c.github.io/uievents/#idl-inputevent\u000a\u000a[\u000a    Constructor(DOMString type, optional InputEventInit eventInitDict),\u000a    RuntimeEnabled=InputEvent\u000a] interface InputEvent : UIEvent {\u000a    readonly attribute DOMString? data;\u000a    readonly attribute boolean isComposing;\u000a\u000a    // Input Events Level 1\u000a    // https://www.w3.org/TR/2017/WD-input-events-1-20170321/#interface-InputEvent\u000a    readonly attribute DOMString inputType;\u000a    readonly attribute DataTransfer? dataTransfer;\u000a    sequence<StaticRange> getTargetRanges();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/InputEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/InputEventInit.idl"},specUrls:["https://w3c.github.io/uievents/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// UI Events\u000a// https://w3c.github.io/uievents/#idl-inputeventinit\u000a\u000adictionary InputEventInit : UIEventInit {\u000a    DOMString? data;\u000a    boolean isComposing = false;\u000a\u000a    // Input Events Level 1\u000a    // https://www.w3.org/TR/2017/WD-input-events-1-20170321/#interface-InputEvent\u000a    DOMString inputType = \"\";\u000a    DataTransfer? dataTransfer;\u000a    sequence<StaticRange> targetRanges = [];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/KeyboardEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/KeyboardEvent.idl"},specUrls:["https://w3c.github.io/uievents/","https://w3c.github.io/uievents/","https://w3c.github.io/uievents/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://w3c.github.io/uievents/#interface-KeyboardEvent\u000a\u000a[\u000a    Constructor(DOMString type, optional KeyboardEventInit eventInitDict),\u000a    ConstructorCallWith=ScriptState\u000a] interface KeyboardEvent : UIEvent {\u000a    // KeyLocationCode\u000a    const unsigned long DOM_KEY_LOCATION_STANDARD = 0x00;\u000a    const unsigned long DOM_KEY_LOCATION_LEFT     = 0x01;\u000a    const unsigned long DOM_KEY_LOCATION_RIGHT    = 0x02;\u000a    const unsigned long DOM_KEY_LOCATION_NUMPAD   = 0x03;\u000a    readonly attribute DOMString        key;\u000a    readonly attribute DOMString        code;\u000a    readonly attribute unsigned long    location;\u000a    readonly attribute boolean          ctrlKey;\u000a    readonly attribute boolean          shiftKey;\u000a    readonly attribute boolean          altKey;\u000a    readonly attribute boolean          metaKey;\u000a    readonly attribute boolean          repeat;\u000a    readonly attribute boolean          isComposing;\u000a    boolean getModifierState(DOMString keyArg);\u000a\u000a    // https://w3c.github.io/uievents/#idl-interface-KeyboardEvent-initializers\u000a    [CallWith=ScriptState, Measure] void initKeyboardEvent(DOMString type,\u000a                                                           optional boolean bubbles = false,\u000a                                                           optional boolean cancelable = false,\u000a                                                           optional Window? view = null,\u000a                                                           optional DOMString keyIdentifier = \"\",\u000a                                                           optional unsigned long location = 0,\u000a                                                           optional boolean ctrlKey = false,\u000a                                                           optional boolean altKey = false,\u000a                                                           optional boolean shiftKey = false,\u000a                                                           optional boolean metaKey = false);\u000a\u000a    // https://w3c.github.io/uievents/#KeyboardEvent-supplemental-interface\u000a    readonly attribute long charCode;\u000a    readonly attribute long keyCode;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/KeyboardEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/KeyboardEventInit.idl"},specUrls:["https://w3c.github.io/uievents/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/uievents/#idl-def-KeyboardEventInit\u000a\u000adictionary KeyboardEventInit : EventModifierInit {\u000a    DOMString key = \"\";\u000a    DOMString code = \"\";\u000a    unsigned long location = 0;\u000a    boolean repeat = false;\u000a    boolean isComposing = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/MessageEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/MessageEvent.idl"},contents:"/*\u000a * Copyright (C) 2007 Henry Mason <hmason@mac.com>\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a *\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/comms.html#the-messageevent-interfaces\u000a\u000a[\u000a    Constructor(DOMString type, optional MessageEventInit eventInitDict),\u000a    Exposed=(Window,Worker),\u000a    RaisesException=Constructor\u000a] interface MessageEvent : Event {\u000a    [Custom=Getter] readonly attribute any data;\u000a    readonly attribute DOMString origin;\u000a    readonly attribute DOMString lastEventId;\u000a    // TODO(bashi): |source| should be (WindowProxy or MessagePort)?\u000a    readonly attribute EventTarget? source;\u000a    [CachedAttribute=isPortsDirty] readonly attribute FrozenArray<MessagePort> ports;\u000a    [RuntimeEnabled=Suborigins] readonly attribute DOMString suborigin;\u000a\u000a    // TODO(foolip): |typeArg| should not be optional, none of the arguments\u000a    // should have [Default=Undefined] (they have other default values in the\u000a    // spec) and |sourceArg|'s type is wrong.\u000a    [Custom, MeasureAs=InitMessageEvent] void initMessageEvent([Default=Undefined] optional DOMString typeArg,\u000a                                   [Default=Undefined] optional boolean canBubbleArg,\u000a                                   [Default=Undefined] optional boolean cancelableArg,\u000a                                   [Default=Undefined] optional any dataArg,\u000a                                   [Default=Undefined] optional DOMString originArg,\u000a                                   [Default=Undefined] optional DOMString lastEventIdArg,\u000a                                   [Default=Undefined] optional EventTarget sourceArg,\u000a                                   [Default=Undefined] optional sequence<MessagePort> portsArg);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/MessageEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/MessageEventInit.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/comms.html#the-messageevent-interfaces\u000a\u000adictionary MessageEventInit : EventInit {\u000a    any data;\u000a    DOMString origin;\u000a    DOMString lastEventId;\u000a    // TODO(bashi): |source| should be (WindowProxy or MessagePort)?\u000a    EventTarget? source;\u000a    sequence<MessagePort> ports = [];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/MouseEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/MouseEvent.idl"},specUrls:["https://w3c.github.io/uievents/","https://w3c.github.io/uievents/","https://w3c.github.io/pointerlock/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://w3c.github.io/uievents/#interface-MouseEvent\u000a\u000a[\u000a    Constructor(DOMString type, optional MouseEventInit eventInitDict),\u000a    ConstructorCallWith=ScriptState\u000a] interface MouseEvent : UIEvent {\u000a    readonly attribute double           screenX;\u000a    readonly attribute double           screenY;\u000a    readonly attribute double           clientX;\u000a    readonly attribute double           clientY;\u000a    readonly attribute boolean          ctrlKey;\u000a    readonly attribute boolean          shiftKey;\u000a    readonly attribute boolean          altKey;\u000a    readonly attribute boolean          metaKey;\u000a    readonly attribute short            button;\u000a    readonly attribute unsigned short   buttons;\u000a    readonly attribute EventTarget?     relatedTarget;\u000a    boolean getModifierState(DOMString keyArg);\u000a\u000a    // https://w3c.github.io/uievents/#idl-interface-MouseEvent-initializers\u000a    // TODO(foolip): None of the initMouseEvent() arguments should be optional.\u000a    [CallWith=ScriptState, Measure] void initMouseEvent([Default=Undefined] optional DOMString type,\u000a                                                        [Default=Undefined] optional boolean bubbles,\u000a                                                        [Default=Undefined] optional boolean cancelable,\u000a                                                        [Default=Undefined] optional Window? view,\u000a                                                        [Default=Undefined] optional long detail,\u000a                                                        [Default=Undefined] optional long screenX,\u000a                                                        [Default=Undefined] optional long screenY,\u000a                                                        [Default=Undefined] optional long clientX,\u000a                                                        [Default=Undefined] optional long clientY,\u000a                                                        [Default=Undefined] optional boolean ctrlKey,\u000a                                                        [Default=Undefined] optional boolean altKey,\u000a                                                        [Default=Undefined] optional boolean shiftKey,\u000a                                                        [Default=Undefined] optional boolean metaKey,\u000a                                                        [Default=Undefined] optional unsigned short button,\u000a                                                        [Default=Undefined] optional EventTarget? relatedTarget);\u000a\u000a    readonly attribute double pageX;\u000a    readonly attribute double pageY;\u000a    [MeasureAs=MouseEventX] readonly attribute double x;\u000a    [MeasureAs=MouseEventY] readonly attribute double y;\u000a    [MeasureAs=MouseEventOffsetX] readonly attribute double offsetX;\u000a    [MeasureAs=MouseEventOffsetY] readonly attribute double offsetY;\u000a\u000a    // Pointer Lock\u000a    // https://w3c.github.io/pointerlock/#extensions-to-the-mouseevent-interface\u000a    [MeasureAs=MouseEventMovementX] readonly attribute long movementX;\u000a    [MeasureAs=MouseEventMovementY] readonly attribute long movementY;\u000a\u000a    // Canvas Hit Regions\u000a    // https://html.spec.whatwg.org/multipage/scripting.html#MouseEvent-partial\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute DOMString? region;\u000a\u000a    // Non-standard\u000a    [MeasureAs=MouseEventFromElement] readonly attribute Node fromElement;\u000a    [MeasureAs=MouseEventToElement] readonly attribute Node toElement;\u000a    [Measure] readonly attribute long layerX;\u000a    [Measure] readonly attribute long layerY;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/MouseEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/MouseEventInit.idl"},specUrls:["https://w3c.github.io/uievents/","https://w3c.github.io/pointerlock/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/uievents/#idl-def-MouseEventInit\u000a\u000adictionary MouseEventInit : EventModifierInit {\u000a    double screenX = 0;\u000a    double screenY = 0;\u000a    double clientX = 0;\u000a    double clientY = 0;\u000a    short button = 0;\u000a    unsigned short buttons = 0;\u000a    EventTarget? relatedTarget = null;\u000a\u000a    // Pointer Lock\u000a    // https://w3c.github.io/pointerlock/#extensions-to-the-mouseeventinit-dictionary\u000a    long movementX = 0;\u000a    long movementY = 0;\u000a\u000a    // Canvas Hit Regions\u000a    // https://html.spec.whatwg.org/multipage/scripting.html#hit-regions:mouseeventinit\u000a    DOMString? region = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/MutationEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/MutationEvent.idl"},specUrls:["https://w3c.github.io/uievents/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://w3c.github.io/uievents/#interface-MutationEvent\u000a\u000ainterface MutationEvent : Event {\u000a    // attrChangeType\u000a    const unsigned short MODIFICATION = 1;\u000a    const unsigned short ADDITION     = 2;\u000a    const unsigned short REMOVAL      = 3;\u000a\u000a    readonly attribute Node?          relatedNode;\u000a    readonly attribute DOMString      prevValue;\u000a    readonly attribute DOMString      newValue;\u000a    readonly attribute DOMString      attrName;\u000a    readonly attribute unsigned short attrChange;\u000a    // TODO(foolip): None of the initMutationEvent() arguments should be optional.\u000a    [Measure] void initMutationEvent([Default=Undefined] optional DOMString type,\u000a                                     [Default=Undefined] optional boolean bubbles,\u000a                                     [Default=Undefined] optional boolean cancelable,\u000a                                     [Default=Undefined] optional Node? relatedNode,\u000a                                     [Default=Undefined] optional DOMString prevValue,\u000a                                     [Default=Undefined] optional DOMString newValue,\u000a                                     [Default=Undefined] optional DOMString attrName,\u000a                                     [Default=Undefined] optional unsigned short attrChange);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/NavigatorEvents.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/NavigatorEvents.idl"},specUrls:["https://w3c.github.io/pointerevents/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/pointerevents/#extensions-to-the-navigator-interface\u000a\u000a[\u000a    ImplementedAs=NavigatorEvents\u000a] partial interface Navigator {\u000a    readonly attribute long maxTouchPoints;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/PageTransitionEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/PageTransitionEvent.idl"},contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/browsers.html#the-pagetransitionevent-interface\u000a\u000a[\u000a    Constructor(DOMString type, optional PageTransitionEventInit eventInitDict)\u000a    // TODO(foolip): Exposed=(Window,Worker)\u000a] interface PageTransitionEvent : Event {\u000a    readonly attribute boolean persisted;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/PageTransitionEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/PageTransitionEventInit.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/browsers.html#the-pagetransitionevent-interface\u000a\u000adictionary PageTransitionEventInit : EventInit {\u000a    boolean persisted;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/PointerEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/PointerEvent.idl"},specUrls:["https://w3c.github.io/pointerevents/","https://w3c.github.io/pointerevents/extension.html"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/pointerevents/#pointerevent-interface\u000a\u000a[\u000a    Constructor(DOMString type, optional PointerEventInit eventInitDict)\u000a] interface PointerEvent : MouseEvent {\u000a    [MeasureAs=PointerEventAttributeCount]   readonly    attribute long      pointerId;\u000a    [MeasureAs=PointerEventAttributeCount]   readonly    attribute double    width;\u000a    [MeasureAs=PointerEventAttributeCount]   readonly    attribute double    height;\u000a    [MeasureAs=PointerEventAttributeCount]   readonly    attribute float     pressure;\u000a    [MeasureAs=PointerEventAttributeCount]   readonly    attribute long      tiltX;\u000a    [MeasureAs=PointerEventAttributeCount]   readonly    attribute long      tiltY;\u000a    [MeasureAs=PointerEventAttributeCount]   readonly    attribute float     tangentialPressure;\u000a    [MeasureAs=PointerEventAttributeCount]   readonly    attribute long      twist;\u000a    [MeasureAs=PointerEventAttributeCount]   readonly    attribute DOMString pointerType;\u000a    [MeasureAs=PointerEventAttributeCount]   readonly    attribute boolean   isPrimary;\u000a\u000a    // https://w3c.github.io/pointerevents/extension.html#extensions-to-the-pointerevent-interface\u000a    [RuntimeEnabled=CoalescedEvents] sequence<PointerEvent> getCoalescedEvents();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/PointerEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/PointerEventInit.idl"},specUrls:["https://w3c.github.io/pointerevents/","https://w3c.github.io/pointerevents/extension.html"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/pointerevents/#pointerevent-interface\u000a\u000adictionary PointerEventInit : MouseEventInit {\u000a    long      pointerId = 0;\u000a    double    width = 1;\u000a    double    height = 1;\u000a    float     pressure = 0;\u000a    long      tiltX = 0;\u000a    long      tiltY = 0;\u000a    float     tangentialPressure = 0;\u000a    long      twist = 0;\u000a    DOMString pointerType = \"\";\u000a    boolean   isPrimary = false;\u000a\u000a    // https://w3c.github.io/pointerevents/extension.html#extensions-to-the-pointerevent-interface\u000a    [RuntimeEnabled=CoalescedEvents] sequence<PointerEvent> coalescedEvents = [];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/PopStateEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/PopStateEvent.idl"},contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a *\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/browsers.html#the-popstateevent-interface\u000a\u000a[\u000a    Constructor(DOMString type, optional PopStateEventInit eventInitDict),\u000a    ConstructorCallWith=ScriptState\u000a    // TODO(foolip): Exposed=(Window,Worker)\u000a] interface PopStateEvent : Event {\u000a    [Custom=Getter] readonly attribute any state;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/PopStateEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/PopStateEventInit.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/browsers.html#the-popstateevent-interface\u000a\u000adictionary PopStateEventInit : EventInit {\u000a    any state;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/ProgressEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/ProgressEvent.idl"},specUrls:["https://xhr.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2007 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://xhr.spec.whatwg.org/#interface-progressevent\u000a\u000a[\u000a    Constructor(DOMString type, optional ProgressEventInit eventInitDict),\u000a    Exposed=(Window,DedicatedWorker,SharedWorker)\u000a] interface ProgressEvent : Event {\u000a    readonly attribute boolean lengthComputable;\u000a    readonly attribute unsigned long long loaded;\u000a    readonly attribute unsigned long long total;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/ProgressEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/ProgressEventInit.idl"},specUrls:["https://xhr.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://xhr.spec.whatwg.org/#interface-progressevent\u000a\u000adictionary ProgressEventInit : EventInit {\u000a    boolean lengthComputable = false;\u000a    unsigned long long loaded = 0;\u000a    unsigned long long total = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/PromiseRejectionEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/PromiseRejectionEvent.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/domenic/unhandled-rejections-browser-spec\u000a\u000a[\u000a    Constructor(DOMString type, PromiseRejectionEventInit eventInitDict),\u000a    ConstructorCallWith=ScriptState,\u000a    Exposed=(Window,Worker),\u000a    DependentLifetime\u000a] interface PromiseRejectionEvent : Event {\u000a    [Custom=Getter] readonly attribute Promise<any> promise;\u000a    [CallWith=ScriptState] readonly attribute any reason;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/PromiseRejectionEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/PromiseRejectionEventInit.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/domenic/unhandled-rejections-browser-spec\u000a\u000adictionary PromiseRejectionEventInit : EventInit {\u000a    required Promise<any> promise;\u000a    any reason;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/ResourceProgressEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/ResourceProgressEvent.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// ResourceProgressEvent is a non-standard class that is simply a ProgressEvent\u000a// with an additional read-only \"url\" property containing a string URL. This is\u000a// used by the Chromium NaCl integration to indicate to which resource the\u000a// event applies. This is useful because the NaCl integration will download\u000a// (and translate in the case of PNaCl) multiple binary files. It is not\u000a// constructable by web content at all, and so does not provide the usual\u000a// EventInit pattern for Event construction.\u000a[\u000a    NoInterfaceObject\u000a] interface ResourceProgressEvent : ProgressEvent {\u000a    readonly attribute DOMString url;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/SecurityPolicyViolationEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/SecurityPolicyViolationEvent.idl"},specUrls:["https://w3c.github.io/webappsec-csp/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webappsec-csp/#idl-index\u000a\u000aenum SecurityPolicyViolationEventDisposition {\u000a    \"enforce\", \"report\"\u000a};\u000a\u000a[\u000a    Constructor(DOMString type, optional SecurityPolicyViolationEventInit eventInitDict)\u000a] interface SecurityPolicyViolationEvent : Event {\u000a    // TODO(foolip): The spec says \"documentURL\".\u000a    [Measure] readonly attribute DOMString documentURI;\u000a    readonly attribute DOMString referrer;\u000a    // TODO(foolip): The spec says \"blockedURL\".\u000a    [Measure] readonly attribute DOMString blockedURI;\u000a    readonly attribute DOMString violatedDirective;\u000a    readonly attribute DOMString effectiveDirective;\u000a    readonly attribute DOMString originalPolicy;\u000a    readonly attribute SecurityPolicyViolationEventDisposition disposition;\u000a    readonly attribute DOMString sourceFile;\u000a    [Measure] readonly attribute unsigned short statusCode;\u000a    readonly attribute long      lineNumber;\u000a    readonly attribute long      columnNumber;\u000a    readonly attribute DOMString sample;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/SecurityPolicyViolationEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/SecurityPolicyViolationEventInit.idl"},specUrls:["https://w3c.github.io/webappsec-csp/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-csp/#idl-index\u000a\u000adictionary SecurityPolicyViolationEventInit : EventInit {\u000a    // TODO(foolip): The spec says \"documentURL\".\u000a    DOMString documentURI;\u000a    DOMString referrer;\u000a    // TODO(foolip): The spec says \"blockedURL\".\u000a    DOMString blockedURI;\u000a    DOMString violatedDirective;\u000a    DOMString effectiveDirective;\u000a    DOMString originalPolicy;\u000a    SecurityPolicyViolationEventDisposition disposition;\u000a    DOMString sourceFile;\u000a    unsigned short statusCode;\u000a    long      lineNumber;\u000a    long      columnNumber;\u000a    DOMString sample;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/TextEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/TextEvent.idl"},contents:"/*\u000a * Copyright (C) 2007 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// http://www.w3.org/TR/2011/WD-DOM-Level-3-Events-20110531/#webidl-events-TextEvent\u000a\u000a// TODO(foolip): Remove the textinput event and the TextEvent interface.\u000a// https://crbug.com/701480\u000a// They were removed from the spec in 2012:\u000a// https://www.w3.org/Bugs/Public/show_bug.cgi?id=12958\u000a// https://github.com/w3c/uievents/commit/1a2aa02b474fd4feaf43fdced06e6fd7214196a4\u000a\u000ainterface TextEvent : UIEvent {\u000a\u000a    [Measure] readonly attribute DOMString data;\u000a\u000a    [Measure] void initTextEvent([Default=Undefined] optional DOMString type,\u000a                                 [Default=Undefined] optional boolean bubbles,\u000a                                 [Default=Undefined] optional boolean cancelable,\u000a                                 [Default=Undefined] optional Window? view,\u000a                                 [Default=Undefined] optional DOMString data);\u000a\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/TouchEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/TouchEvent.idl"},specUrls:["https://w3c.github.io/touch-events/"],contents:"/*\u000a * Copyright 2008, The Android Open Source Project\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/touch-events/#touchevent-interface\u000a\u000a[\u000a    Constructor(DOMString type, optional TouchEventInit eventInitDict)\u000a] interface TouchEvent : UIEvent {\u000a    readonly attribute TouchList touches;\u000a    readonly attribute TouchList targetTouches;\u000a    readonly attribute TouchList changedTouches;\u000a    readonly attribute boolean altKey;\u000a    readonly attribute boolean metaKey;\u000a    readonly attribute boolean ctrlKey;\u000a    readonly attribute boolean shiftKey;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/TouchEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/TouchEventInit.idl"},specUrls:["https://w3c.github.io/touch-events/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/touch-events/#touchevent-interface\u000a\u000adictionary TouchEventInit : EventModifierInit {\u000a    sequence<Touch> touches = [];\u000a    sequence<Touch> targetTouches = [];\u000a    sequence<Touch> changedTouches = [];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/TransitionEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/TransitionEvent.idl"},specUrls:["https://dev.w3.org/csswg/css-transitions/"],contents:"/*\u000a * Copyright (C) 2007, 2008 Apple Inc. All rights reserved.\u000a * Copyright (C) 2013 Intel Corporation. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dev.w3.org/csswg/css-transitions/#transition-events\u000a\u000a[\u000a    Constructor(DOMString type, optional TransitionEventInit eventInitDict)\u000a] interface TransitionEvent : Event {\u000a    readonly attribute DOMString propertyName;\u000a    // TODO(foolip): elapsedTime should be float.\u000a    readonly attribute double elapsedTime;\u000a    readonly attribute DOMString pseudoElement;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/TransitionEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/TransitionEventInit.idl"},specUrls:["https://dev.w3.org/csswg/css-transitions/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dev.w3.org/csswg/css-transitions/#transition-events\u000a\u000adictionary TransitionEventInit : EventInit {\u000a    DOMString propertyName = \"\";\u000a    double elapsedTime = 0.0;\u000a    DOMString pseudoElement = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/UIEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/UIEvent.idl"},specUrls:["https://w3c.github.io/uievents/","https://w3c.github.io/uievents/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://w3c.github.io/uievents/#interface-UIEvent\u000a\u000a[\u000a    Constructor(DOMString type, optional UIEventInit eventInitDict)\u000a] interface UIEvent : Event {\u000a    readonly attribute Window? view;\u000a    readonly attribute long detail;\u000a    readonly attribute InputDeviceCapabilities? sourceCapabilities;\u000a\u000a    // https://w3c.github.io/uievents/#idl-interface-UIEvent-initializers\u000a    // TODO(foolip): None of the initUIEvent() arguments should be optional.\u000a    [Measure] void initUIEvent([Default=Undefined] optional DOMString type,\u000a                               [Default=Undefined] optional boolean bubbles,\u000a                               [Default=Undefined] optional boolean cancelable,\u000a                               [Default=Undefined] optional Window? view,\u000a                               [Default=Undefined] optional long detail);\u000a\u000a    readonly attribute unsigned long which;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/UIEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/UIEventInit.idl"},specUrls:["https://w3c.github.io/uievents/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/uievents/#idl-def-UIEventInit\u000a\u000adictionary UIEventInit : EventInit {\u000a    Window? view = null;\u000a    long detail = 0;\u000a    InputDeviceCapabilities? sourceCapabilities = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/WheelEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/WheelEvent.idl"},specUrls:["https://w3c.github.io/uievents/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://w3c.github.io/uievents/#interface-WheelEvent\u000a\u000a[\u000a    Constructor(DOMString type, optional WheelEventInit eventInitDict)\u000a] interface WheelEvent : MouseEvent {\u000a    // DeltaModeCode\u000a    const unsigned long DOM_DELTA_PIXEL = 0x00;\u000a    const unsigned long DOM_DELTA_LINE = 0x01;\u000a    const unsigned long DOM_DELTA_PAGE = 0x02;\u000a    readonly attribute double deltaX;\u000a    readonly attribute double deltaY;\u000a    readonly attribute double deltaZ;\u000a    readonly attribute unsigned long deltaMode;\u000a\u000a    // Non-standard APIs\u000a    [MeasureAs=WheelEventWheelDeltaX] readonly attribute long wheelDeltaX;\u000a    [MeasureAs=WheelEventWheelDeltaY] readonly attribute long wheelDeltaY;\u000a    [MeasureAs=WheelEventWheelDelta] readonly attribute long wheelDelta;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/events/WheelEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/events/WheelEventInit.idl"},specUrls:["https://w3c.github.io/uievents/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/uievents/#idl-def-WheelEventInit\u000a\u000adictionary WheelEventInit : MouseEventInit {\u000a    double deltaX = 0.0;\u000a    double deltaY = 0.0;\u000a    double deltaZ = 0.0;\u000a    unsigned long deltaMode = 0;\u000a\u000a    // Non-standard APIs\u000a    long wheelDeltaX = 0;\u000a    long wheelDeltaY = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/fileapi/Blob.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/fileapi/Blob.idl"},specUrls:["https://w3c.github.io/FileAPI/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/FileAPI/#blob\u000a\u000atypedef (ArrayBuffer or ArrayBufferView or Blob or USVString) BlobPart;\u000a[\u000a    Constructor(optional sequence<BlobPart> blobParts, optional BlobPropertyBag options),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor,\u000a    Exposed=(Window,Worker)\u000a] interface Blob {\u000a    readonly attribute unsigned long long size;\u000a    readonly attribute DOMString type;\u000a\u000a    // TODO(jsbell): start and end arguments should be [Clamp]\u000a    [RaisesException] Blob slice(optional long long start, optional long long end, optional DOMString contentType);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/fileapi/BlobCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/fileapi/BlobCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000acallback interface BlobCallback {\u000a    void handleEvent(Blob? blob);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/fileapi/BlobPropertyBag.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/fileapi/BlobPropertyBag.idl"},specUrls:["https://w3c.github.io/FileAPI/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/FileAPI/#blob\u000a\u000a// TODO(jsbell): This enum is non-standard.\u000a// https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob\u000aenum NormalizeLineEndings { \"transparent\", \"native\" };\u000a\u000adictionary BlobPropertyBag {\u000a    DOMString type = \"\";\u000a\u000a    // TODO(jsbell): This member is non-standard.\u000a    // https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob\u000a    NormalizeLineEndings endings = \"transparent\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/fileapi/File.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/fileapi/File.idl"},specUrls:["https://w3c.github.io/FileAPI/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/FileAPI/#file\u000a\u000a[\u000a    Constructor(sequence<BlobPart> fileBits, USVString fileName, optional FilePropertyBag options),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor,\u000a    Exposed=(Window,Worker)\u000a] interface File : Blob {\u000a    readonly attribute DOMString name;\u000a    readonly attribute long long lastModified;\u000a\u000a    // Non-standard APIs\u000a    [MeasureAs=FileGetLastModifiedDate] readonly attribute Date lastModifiedDate;\u000a    [MeasureAs=PrefixedFileRelativePath] readonly attribute DOMString webkitRelativePath;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/fileapi/FileList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/fileapi/FileList.idl"},specUrls:["https://w3c.github.io/FileAPI/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/FileAPI/#filelist-section\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface FileList {\u000a    getter File? item(unsigned long index);\u000a    readonly attribute unsigned long length;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/fileapi/FilePropertyBag.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/fileapi/FilePropertyBag.idl"},specUrls:["https://w3c.github.io/FileAPI/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/FileAPI/#file\u000a\u000adictionary FilePropertyBag : BlobPropertyBag {\u000a    long long lastModified;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/fileapi/FileReader.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/fileapi/FileReader.idl"},specUrls:["https://w3c.github.io/FileAPI/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc.  All rights reserved.\u000a * Copyright (C) 2011 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/FileAPI/#APIASynch\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Constructor,\u000a    ConstructorCallWith=ExecutionContext,\u000a    Exposed=(Window,Worker)\u000a] interface FileReader : EventTarget {\u000a    // async read methods\u000a    [RaisesException] void readAsArrayBuffer(Blob blob);\u000a    [RaisesException] void readAsBinaryString(Blob blob);\u000a    [RaisesException] void readAsText(Blob blob, optional DOMString label);\u000a    [RaisesException] void readAsDataURL(Blob blob);\u000a\u000a    void abort();\u000a\u000a    // states\u000a    const unsigned short EMPTY = 0;\u000a    const unsigned short LOADING = 1;\u000a    const unsigned short DONE = 2;\u000a\u000a    [ImplementedAs=getReadyState] readonly attribute unsigned short readyState;\u000a\u000a    // File or Blob data\u000a    [CallWith=ScriptState]\u000a    readonly attribute (DOMString or ArrayBuffer)? result;\u000a\u000a    readonly attribute DOMException? error;\u000a\u000a    // event handler attributes\u000a    attribute EventHandler onloadstart;\u000a    attribute EventHandler onprogress;\u000a    attribute EventHandler onload;\u000a    attribute EventHandler onabort;\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onloadend;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/fileapi/FileReaderSync.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/fileapi/FileReaderSync.idl"},specUrls:["https://w3c.github.io/FileAPI/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/FileAPI/#FileReaderSync\u000a\u000a[\u000a    Exposed=(DedicatedWorker,SharedWorker),\u000a    Constructor,\u000a    ConstructorCallWith=ExecutionContext,\u000a    Measure\u000a] interface FileReaderSync {\u000a    [CallWith=ScriptState, RaisesException] ArrayBuffer readAsArrayBuffer(Blob blob);\u000a    [CallWith=ScriptState, RaisesException] DOMString readAsBinaryString(Blob blob);\u000a    [CallWith=ScriptState, RaisesException] DOMString readAsText(Blob blob, optional DOMString label);\u000a    [CallWith=ScriptState, RaisesException] DOMString readAsDataURL(Blob blob);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/fileapi/URLFileAPI.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/fileapi/URLFileAPI.idl"},specUrls:["https://w3c.github.io/FileAPI/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/FileAPI/#creating-revoking\u000a[\u000a    ImplementedAs=URLFileAPI\u000a] partial interface URL {\u000a    [Exposed=(Window,DedicatedWorker,SharedWorker), CallWith=ScriptState, RaisesException] static DOMString createObjectURL(Blob blob);\u000a    [Exposed=(Window,DedicatedWorker,SharedWorker), CallWith=ScriptState] static void revokeObjectURL(DOMString url);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/BarProp.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/BarProp.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2007 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#barprop\u000a\u000ainterface BarProp {\u000a    readonly attribute boolean visible;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/DeprecationReport.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/DeprecationReport.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/reporting/blob/master/EXPLAINER.md#reportingobserver---observing-reports-from-javascript\u000a\u000a[\u000a    NoInterfaceObject,\u000a    RuntimeEnabled=ReportingObserver\u000a] interface DeprecationReport : ReportBody {\u000a  // TODO(paulmeyer): Add additional data, including: id, anticipatedRemoval.\u000a  readonly attribute DOMString message;\u000a  readonly attribute DOMString sourceFile;\u000a  readonly attribute long lineNumber;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/External.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/External.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[NoInterfaceObject]\u000ainterface External {\u000a  void AddSearchProvider();\u000a  void IsSearchProviderInstalled();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/History.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/History.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2007, 2008 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-history-interface\u000a\u000aenum ScrollRestoration {\"auto\", \"manual\"};\u000a\u000ainterface History {\u000a    [RaisesException] readonly attribute unsigned long length;\u000a    [Measure, RaisesException] attribute ScrollRestoration scrollRestoration;\u000a    // TODO(foolip): The SerializedScriptValue type should be any.\u000a    [CachedAttribute=stateChanged, RaisesException] readonly attribute SerializedScriptValue state;\u000a    [CallWith=ScriptState, RaisesException] void go(optional long delta = 0);\u000a    [CallWith=ScriptState, RaisesException] void back();\u000a    [CallWith=ScriptState, RaisesException] void forward();\u000a    [RaisesException] void pushState(SerializedScriptValue data, DOMString title, optional DOMString? url = null);\u000a    [RaisesException] void replaceState(SerializedScriptValue data, DOMString title, optional DOMString? url = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/InterventionReport.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/InterventionReport.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/reporting/blob/master/EXPLAINER.md#reportingobserver---observing-reports-from-javascript\u000a\u000a[\u000a    NoInterfaceObject,\u000a    RuntimeEnabled=ReportingObserver\u000a] interface InterventionReport : ReportBody {\u000a  // TODO(paulmeyer): Add additional data, such as id.\u000a  readonly attribute DOMString message;\u000a  readonly attribute DOMString sourceFile;\u000a  readonly attribute long lineNumber;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/Location.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/Location.idl"},contents:"/*\u000a * Copyright (C) 2008 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/browsers.html#location\u000a\u000a[\u000a    CheckSecurity=Receiver,\u000a    DependentLifetime,\u000a    Unforgeable\u000a] interface Location {\u000a    // |assign| is *NOT* cross-origin accessible in the spec, but it needs\u000a    // the Incumbent realm when navigating the page.  See the below link.\u000a    // https://html.spec.whatwg.org/multipage/browsers.html#location-object-navigate\u000a    // Unfortunately, Blink does not support the Incumbent realm so far, and\u000a    // we need a hack of assignOriginSafeMethodGetter to simulate the Incumbent\u000a    // realm.  Thus, we have [CrossOrigin] here just for the hack although\u000a    // |assign| itself is not cross-origin accessible.\u000a    // TODO(yukishiino): Remove [CrossOrigin] once we support the Incumbent\u000a    // realm correctly.\u000a    [CallWith=(CurrentWindow,EnteredWindow), CrossOrigin, RaisesException] void assign(DOMString url);\u000a\u000a    // |replace|, and *writing* |href| do not require a security check, as they\u000a    // *change* the page, and thus these do not change any property of an\u000a    // *existing* document at a different origin.\u000a    // However, *reading* |href|, or accessing any component, is a security\u000a    // problem, since that allows tracking navigation.\u000a    // https://html.spec.whatwg.org/multipage/browsers.html#crossoriginproperties-(-o-)\u000a    [CallWith=(CurrentWindow,EnteredWindow), CrossOrigin, RaisesException] void replace(DOMString url);\u000a    [CallWith=CurrentWindow] void reload();\u000a\u000a    // TODO(foolip): |ancestorOrigins| should have [Unforgeable, SameObject].\u000a    readonly attribute DOMStringList ancestorOrigins;\u000a\u000a    // TODO(foolip): Per spec, Location implements URLUtils. The below is\u000a    // mostly like the URLUtils interface, but with some members missing and\u000a    // using DOMString instead of USVString.\u000a    [SetterCallWith=(CurrentWindow,EnteredWindow), CrossOrigin=Setter, RaisesException=Setter] attribute URLString href;\u000a    [NotEnumerable] DOMString toString();\u000a    [MeasureAs=LocationOrigin] readonly attribute DOMString origin;\u000a\u000a    [SetterCallWith=(CurrentWindow,EnteredWindow), RaisesException=Setter] attribute DOMString protocol;\u000a    [SetterCallWith=(CurrentWindow,EnteredWindow), RaisesException=Setter] attribute DOMString host;\u000a    [SetterCallWith=(CurrentWindow,EnteredWindow), RaisesException=Setter] attribute DOMString hostname;\u000a    [SetterCallWith=(CurrentWindow,EnteredWindow), RaisesException=Setter] attribute DOMString port;\u000a    [SetterCallWith=(CurrentWindow,EnteredWindow), RaisesException=Setter] attribute DOMString pathname;\u000a    [SetterCallWith=(CurrentWindow,EnteredWindow), RaisesException=Setter] attribute DOMString search;\u000a    [SetterCallWith=(CurrentWindow,EnteredWindow), RaisesException=Setter] attribute DOMString hash;\u000a\u000a    // TODO(foolip): Location does not have a valueOf() override in the spec.\u000a    // See the comment in Location.h for the purpose of this.\u000a    [NotEnumerable, CallWith=ThisValue] any valueOf();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/Navigator.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/Navigator.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a    Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies)\u000a\u000a    This library is free software; you can redistribute it and/or\u000a    modify it under the terms of the GNU Library General Public\u000a    License as published by the Free Software Foundation; either\u000a    version 2 of the License, or (at your option) any later version.\u000a\u000a    This library is distributed in the hope that it will be useful,\u000a    but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a    Library General Public License for more details.\u000a\u000a    You should have received a copy of the GNU Library General Public License\u000a    along with this library; see the file COPYING.LIB.  If not, write to\u000a    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a    Boston, MA 02110-1301, USA.\u000a*/\u000a\u000a// https://html.spec.whatwg.org/#the-navigator-object\u000a\u000ainterface Navigator {\u000a    // objects implementing this interface also implement the interfaces given below\u000a\u000a    // TODO(foolip): vendorSub should be on NavigatorID.\u000a    [MeasureAs=NavigatorVendorSub] readonly attribute DOMString vendorSub;\u000a\u000a    // TODO(foolip): productSub and vendor are not yet in the spec:\u000a    // https://www.w3.org/Bugs/Public/show_bug.cgi?id=27954\u000a    [MeasureAs=NavigatorProductSub] readonly attribute DOMString productSub;\u000a    // https://www.w3.org/Bugs/Public/show_bug.cgi?id=27786\u000a    [MeasureAs=NavigatorVendor] readonly attribute DOMString vendor;\u000a    // https://github.com/w3c/device-memory#the-web-exposed-api\u000a    [MeasureAs=NavigatorDeviceMemory,RuntimeEnabled=NavigatorDeviceMemory,SecureContext]\u000a    readonly attribute float deviceMemory;\u000a};\u000a\u000aNavigator implements NavigatorConcurrentHardware;\u000aNavigator implements NavigatorCookies;\u000aNavigator implements NavigatorID;\u000aNavigator implements NavigatorLanguage;\u000aNavigator implements NavigatorOnLine;\u000aNavigator implements NavigatorAutomationInformation;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/NavigatorAutomationInformation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/NavigatorAutomationInformation.idl"},specUrls:["https://w3c.github.io/webdriver/webdriver-spec.html"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webdriver/webdriver-spec.html#interface\u000a\u000a[\u000a    NoInterfaceObject, // Always used on target of 'implements'\u000a    Exposed=(Window),\u000a    RuntimeEnabled=AutomationControlled\u000a] interface NavigatorAutomationInformation {\u000a    readonly attribute boolean webdriver;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/NavigatorClipboard.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/NavigatorClipboard.idl"},specUrls:["https://w3c.github.io/clipboard-apis/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/clipboard-apis/#navigator-interface\u000a\u000a[\u000a  ImplementedAs=NavigatorClipboard,\u000a  RuntimeEnabled=AsyncClipboard\u000a] partial interface Navigator {\u000a  [CallWith=ScriptState, SecureContext, SameObject]\u000a  readonly attribute Clipboard clipboard;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/NavigatorConcurrentHardware.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/NavigatorConcurrentHardware.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/workers.html#navigator.hardwareconcurrency\u000a\u000a[\u000a    NoInterfaceObject,\u000a    Exposed=(Window,Worker)\u000a] interface NavigatorConcurrentHardware {\u000a    readonly attribute unsigned long long hardwareConcurrency;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/NavigatorCookies.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/NavigatorCookies.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/webappapis.html#cookies\u000a\u000a[NoInterfaceObject]\u000ainterface NavigatorCookies {\u000a  readonly attribute boolean cookieEnabled;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/NavigatorID.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/NavigatorID.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#client-identification\u000a\u000a[\u000a    NoInterfaceObject, // Always used on target of 'implements'\u000a    Exposed=(Window,Worker)\u000a] interface NavigatorID {\u000a    readonly attribute DOMString appCodeName; // constant \"Mozilla\"\u000a    readonly attribute DOMString appName; // constant \"Netscape\"\u000a    readonly attribute DOMString appVersion;\u000a    readonly attribute DOMString platform;\u000a    readonly attribute DOMString product; // constant \"Gecko\"\u000a    // https://www.w3.org/Bugs/Public/show_bug.cgi?id=22555\u000a    // boolean taintEnabled(); // constant false\u000a    readonly attribute DOMString userAgent;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/NavigatorLanguage.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/NavigatorLanguage.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/#language-preferences\u000a\u000a[\u000a    NoInterfaceObject,\u000a    Exposed=(Window,Worker)\u000a] interface NavigatorLanguage {\u000a    readonly attribute DOMString language;\u000a    [CachedAttribute=hasLanguagesChanged] readonly attribute FrozenArray<DOMString> languages;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/Report.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/Report.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/reporting/blob/master/EXPLAINER.md#reportingobserver---observing-reports-from-javascript\u000a\u000a[\u000a    NoInterfaceObject,\u000a    RuntimeEnabled=ReportingObserver\u000a] interface Report {\u000a    readonly attribute DOMString type;\u000a    readonly attribute DOMString url;\u000a    readonly attribute ReportBody? body;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/NavigatorOnLine.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/NavigatorOnLine.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#navigator.online\u000a\u000a[\u000a    NoInterfaceObject, // Always used on target of 'implements'\u000a    Exposed=(Window,Worker)\u000a] interface NavigatorOnLine {\u000a    readonly attribute boolean onLine;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/ReportBody.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/ReportBody.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/reporting/blob/master/EXPLAINER.md#reportingobserver---observing-reports-from-javascript\u000a\u000a[\u000a    NoInterfaceObject,\u000a    RuntimeEnabled=ReportingObserver\u000a] interface ReportBody {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/ReportingObserver.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/ReportingObserver.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/reporting/blob/master/EXPLAINER.md#reportingobserver---observing-reports-from-javascript\u000a\u000acallback ReportingObserverCallback = void (sequence<Report> reports, ReportingObserver observer);\u000a\u000a[\u000a    Constructor(ReportingObserverCallback callback),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RuntimeEnabled=ReportingObserver\u000a] interface ReportingObserver {\u000a    void observe();\u000a    void disconnect();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/ScrollIntoViewOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/ScrollIntoViewOptions.idl"},contents:"enum ScrollLogicalPosition { \"start\", \"center\", \"end\", \"nearest\" };\u000a\u000adictionary ScrollIntoViewOptions : ScrollOptions {\u000a    ScrollLogicalPosition block = \"center\";\u000a    [ImplementedAs=inlinePosition] ScrollLogicalPosition inline = \"center\";\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/ScrollOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/ScrollOptions.idl"},specUrls:["https://drafts.csswg.org/cssom-view/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.csswg.org/cssom-view/#extensions-to-the-window-interface\u000a\u000aenum ScrollBehavior { \"auto\", \"instant\", \"smooth\" };\u000a\u000adictionary ScrollOptions {\u000a    ScrollBehavior behavior = \"auto\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/ScrollToOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/ScrollToOptions.idl"},specUrls:["https://drafts.csswg.org/cssom-view/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.csswg.org/cssom-view/#extensions-to-the-window-interface\u000a\u000adictionary ScrollToOptions : ScrollOptions {\u000a    unrestricted double left;\u000a    unrestricted double top;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/VisualViewport.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/VisualViewport.idl"},contents:"/*\u000a * Copyright (C) 2016 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a // Visual Viewport API.\u000a // WICG proposal: https://github.com/WICG/ViewportAPI\u000a\u000a[\u000a    RuntimeEnabled=VisualViewportAPI,\u000a    ImplementedAs=DOMVisualViewport\u000a] interface VisualViewport : EventTarget {\u000a    [Measure] readonly attribute double offsetLeft;\u000a    [Measure] readonly attribute double offsetTop;\u000a\u000a    [Measure] readonly attribute double pageLeft;\u000a    [Measure] readonly attribute double pageTop;\u000a\u000a    [Measure] readonly attribute double width;\u000a    [Measure] readonly attribute double height;\u000a\u000a    [Measure] readonly attribute double scale;\u000a\u000a    attribute EventHandler onresize;\u000a    attribute EventHandler onscroll;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/Screen.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/Screen.idl"},specUrls:["https://drafts.csswg.org/cssom-view/"],contents:"/*\u000a * Copyright (C) 2007 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.csswg.org/cssom-view/#the-screen-interface\u000a\u000ainterface Screen {\u000a    readonly attribute long availWidth;\u000a    readonly attribute long availHeight;\u000a    readonly attribute long width;\u000a    readonly attribute long height;\u000a    readonly attribute unsigned long colorDepth;\u000a    readonly attribute unsigned long pixelDepth;\u000a\u000a    // Non-standard\u000a    [Measure] readonly attribute long availLeft;\u000a    [Measure] readonly attribute long availTop;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/Window.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/Window.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/C/browsers.html","https://w3c.github.io/webcomponents/spec/custom/","https://html.spec.whatwg.org/","https://drafts.csswg.org/cssom/","https://drafts.csswg.org/cssom-view/","https://w3c.github.io/selection-api/","https://console.spec.whatwg.org/","https://compat.spec.whatwg.org/","https://w3c.github.io/webappsec/specs/powerfulfeatures/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-window-object\u000a\u000a// FIXME: explain all uses of [CrossOrigin]\u000a[\u000a    CheckSecurity=Receiver,\u000a    ImplementedAs=DOMWindow,\u000a    PrimaryGlobal\u000a] interface Window : EventTarget {\u000a    // the current browsing context\u000a    // FIXME: The spec uses the WindowProxy type for this and many other attributes.\u000a    [Unforgeable, CrossOrigin] readonly attribute Window window;\u000a    [Replaceable, CrossOrigin] readonly attribute Window self;\u000a    [Unforgeable, CachedAccessor] readonly attribute Document document;\u000a    [Replaceable] readonly attribute DOMString origin;\u000a    attribute DOMString name;\u000a    [PutForwards=href, Unforgeable, CrossOrigin=(Getter,Setter), Custom=Getter] readonly attribute Location location;\u000a    readonly attribute History history;\u000a    [Replaceable, MeasureAs=BarPropLocationbar] readonly attribute BarProp locationbar;\u000a    [Replaceable, MeasureAs=BarPropMenubar] readonly attribute BarProp menubar;\u000a    [Replaceable, MeasureAs=BarPropPersonalbar] readonly attribute BarProp personalbar;\u000a    [Replaceable, MeasureAs=BarPropScrollbars] readonly attribute BarProp scrollbars;\u000a    [Replaceable, MeasureAs=BarPropStatusbar] readonly attribute BarProp statusbar;\u000a    [Replaceable, MeasureAs=BarPropToolbar] readonly attribute BarProp toolbar;\u000a    attribute DOMString status;\u000a    // https://html.spec.whatwg.org/multipage/window-object.html#dom-window-close\u000a    // TODO(yukishiino): Replace |CurrentWindow| with the incumbent window or\u000a    // something once the incumbent realm is implemented.  Currently,\u000a    // OriginSafeMethodGetter + CurrentWindow are used instead of the incumbent\u000a    // one.\u000a    [CrossOrigin, CallWith=CurrentWindow] void close();\u000a    [CrossOrigin] readonly attribute boolean closed;\u000a    void stop();\u000a    // https://html.spec.whatwg.org/multipage/interaction.html#dom-window-focus\u000a    // https://html.spec.whatwg.org/multipage/interaction.html#focusing-steps\u000a    // TODO(yukishiino): Remove [CallWith=CurrentWindow] or clarify why\u000a    // we need it.  focus() is not supposed to use the incumbent realm.\u000a    // So, we shouldn't need to use CurrentWindow here, however, somehow\u000a    // DOMWindow::focus() is checking if the incumbent window is eligible to\u000a    // focus another window.\u000a    [CrossOrigin, CallWith=CurrentWindow] void focus();\u000a    [CrossOrigin] void blur();\u000a\u000a    // other browsing contexts\u000a    [Replaceable, CrossOrigin] readonly attribute Window frames;\u000a    [Replaceable, CrossOrigin] readonly attribute unsigned long length;\u000a    [Unforgeable, CrossOrigin] readonly attribute Window? top;\u000a    // FIXME: opener should be of type any.\u000a    [CrossOrigin, Custom=Setter] attribute Window opener;\u000a    [Replaceable, CrossOrigin] readonly attribute Window? parent;\u000a    [CheckSecurity=ReturnValue, Custom=Getter] readonly attribute Element? frameElement;\u000a    // FIXME: open() should have 4 optional arguments with defaults.\u000a    [Custom, RaisesException] Window? open(DOMString url, DOMString target, optional DOMString features);\u000a\u000a    // indexed properties\u000a    // https://html.spec.whatwg.org/C/browsers.html#windowproxy-getownproperty\u000a    [NotEnumerable, CrossOrigin] getter Window (unsigned long index);\u000a\u000a    // named properties\u000a    [Custom, NotEnumerable, CrossOrigin] getter object (DOMString name);\u000a\u000a    // the user agent\u000a    [LogActivity=GetterOnly] readonly attribute Navigator navigator;\u000a    [LogActivity=GetterOnly] readonly attribute ApplicationCache applicationCache;\u000a\u000a    // user prompts\u000a    [Measure, CallWith=ScriptState] void alert();\u000a    [Measure, CallWith=ScriptState] void alert(DOMString message);\u000a    [Measure, CallWith=ScriptState] boolean confirm(optional DOMString message = \"\");\u000a    [Measure, CallWith=ScriptState] DOMString? prompt(optional DOMString message = \"\", optional DOMString defaultValue = \"\");\u000a    [Measure, CallWith=ScriptState] void print();\u000a\u000a    [MeasureAs=UnprefixedRequestAnimationFrame] long requestAnimationFrame(FrameRequestCallback callback);\u000a    void cancelAnimationFrame(long handle);\u000a\u000a    [Measure] long requestIdleCallback(IdleRequestCallback callback, optional IdleRequestOptions options);\u000a    void cancelIdleCallback(long handle);\u000a\u000a    [CrossOrigin, Custom, RaisesException] void postMessage(any message, DOMString targetOrigin, optional sequence<object> transfer = []);\u000a\u000a    // Custom elements\u000a    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-api\u000a    [CallWith=ScriptState] readonly attribute CustomElementRegistry customElements;\u000a\u000a    // HTML obsolete features\u000a    // https://html.spec.whatwg.org/#Window-partial\u000a    [MeasureAs=WindowCaptureEvents] void captureEvents();\u000a    [MeasureAs=WindowReleaseEvents] void releaseEvents();\u000a\u000a    [Replaceable, SameObject] readonly attribute External external;\u000a\u000a    // CSS Object Model (CSSOM)\u000a    // https://drafts.csswg.org/cssom/#extensions-to-the-window-interface\u000a    [NewObject] CSSStyleDeclaration getComputedStyle(Element elt, optional DOMString? pseudoElt);\u000a\u000a    // CSSOM View Module\u000a    // https://drafts.csswg.org/cssom-view/#extensions-to-the-window-interface\u000a    [NewObject] MediaQueryList matchMedia(DOMString query);\u000a    [SameObject, Replaceable] readonly attribute Screen screen;\u000a\u000a    // browsing context\u000a    void moveTo(long x, long y);\u000a    void moveBy(long x, long y);\u000a    void resizeTo(long x, long y);\u000a    void resizeBy(long x, long y);\u000a\u000a    // viewport\u000a    [Replaceable] readonly attribute long innerWidth;\u000a    [Replaceable] readonly attribute long innerHeight;\u000a\u000a    // viewport scrolling\u000a    [Replaceable] readonly attribute double scrollX;\u000a    [Replaceable] readonly attribute double pageXOffset;\u000a    [Replaceable] readonly attribute double scrollY;\u000a    [Replaceable] readonly attribute double pageYOffset;\u000a    [RuntimeEnabled=CSSOMSmoothScroll] void scroll(optional ScrollToOptions options);\u000a    void scroll(unrestricted double x, unrestricted double y);\u000a    [RuntimeEnabled=CSSOMSmoothScroll] void scrollTo(optional ScrollToOptions options);\u000a    void scrollTo(unrestricted double x, unrestricted double y);\u000a    [RuntimeEnabled=CSSOMSmoothScroll] void scrollBy(optional ScrollToOptions options);\u000a    void scrollBy(unrestricted double x, unrestricted double y);\u000a\u000a    // Visual Viewport API\u000a    // https://github.com/WICG/ViewportAPI\u000a    [RuntimeEnabled=VisualViewportAPI, Replaceable, SameObject] readonly attribute VisualViewport visualViewport;\u000a\u000a    // client\u000a    [Replaceable] readonly attribute long screenX;\u000a    [Replaceable] readonly attribute long screenY;\u000a    [Replaceable] readonly attribute long outerWidth;\u000a    [Replaceable] readonly attribute long outerHeight;\u000a    [Replaceable] readonly attribute double devicePixelRatio;\u000a\u000a    // Selection API\u000a    // https://w3c.github.io/selection-api/#extensions-to-window-interface\u000a    Selection? getSelection();\u000a\u000a    // Console API\u000a    // https://console.spec.whatwg.org/#console-interface\u000a    // [Replaceable] readonly attribute Console console;\u000a    // Console is installed by v8 inspector when context is created\u000a    // and is left commented here just for documentation.\u000a\u000a    // Compatibility\u000a    // https://compat.spec.whatwg.org/#windoworientation-interface\u000a    [RuntimeEnabled=OrientationEvent] attribute EventHandler onorientationchange;\u000a    // This is the interface orientation in degrees. Some examples are:\u000a    //  0 is straight up; -90 is when the device is rotated 90 clockwise;\u000a    //  90 is when rotated counter clockwise.\u000a    [MeasureAs=WindowOrientation, RuntimeEnabled=OrientationEvent] readonly attribute long orientation;\u000a\u000a    // Non-standard APIs\u000a    [MeasureAs=WindowClientInformation, Replaceable] readonly attribute Navigator clientInformation;\u000a    [MeasureAs=WindowEvent, Custom, NotEnumerable] attribute Event event;\u000a    [MeasureAs=WindowFind] boolean find([Default=Undefined] optional DOMString string,\u000a                                        [Default=Undefined] optional boolean caseSensitive,\u000a                                        [Default=Undefined] optional boolean backwards,\u000a                                        [Default=Undefined] optional boolean wrap,\u000a                                        [Default=Undefined] optional boolean wholeWord,\u000a                                        [Default=Undefined] optional boolean searchInFrames,\u000a                                        [Default=Undefined] optional boolean showDialog);\u000a    [MeasureAs=WindowOffscreenBuffering, Replaceable, NotEnumerable] readonly attribute boolean offscreenBuffering;\u000a    [MeasureAs=WindowScreenLeft, Replaceable] readonly attribute long screenLeft;\u000a    [MeasureAs=WindowScreenTop, Replaceable] readonly attribute long screenTop;\u000a    [MeasureAs=WindowDefaultStatus] attribute DOMString defaultStatus;\u000a    [MeasureAs=WindowDefaultstatus, ImplementedAs=defaultStatus] attribute DOMString defaultstatus;\u000a    [MeasureAs=StyleMedia] readonly attribute StyleMedia styleMedia;\u000a    [RuntimeEnabled=GetMatchedCSSRules, DeprecateAs=GetMatchedCSSRules, LegacyInterfaceTypeChecking] CSSRuleList getMatchedCSSRules([Default=Undefined] optional Element element,\u000a                                                                                                                                    [Default=Undefined] optional DOMString? pseudoElement);\u000a    [DeprecateAs=PrefixedRequestAnimationFrame] long webkitRequestAnimationFrame(FrameRequestCallback callback);\u000a    [DeprecateAs=PrefixedCancelAnimationFrame, ImplementedAs=cancelAnimationFrame] void webkitCancelAnimationFrame(long id);\u000a    [MeasureAs=PrefixedTransitionEventConstructor] attribute TransitionEventConstructor WebKitTransitionEvent;\u000a    [Measure] attribute AnimationEventConstructor WebKitAnimationEvent;\u000a    [DeprecateAs=PrefixedWindowURL] attribute URLConstructor webkitURL;\u000a    [MeasureAs=PrefixedMutationObserverConstructor] attribute MutationObserverConstructor WebKitMutationObserver;\u000a\u000a    // Event handler attributes\u000a    attribute EventHandler onanimationend;\u000a    attribute EventHandler onanimationiteration;\u000a    attribute EventHandler onanimationstart;\u000a    attribute EventHandler onsearch;\u000a    attribute EventHandler ontransitionend;\u000a    attribute EventHandler onwebkitanimationend;\u000a    attribute EventHandler onwebkitanimationiteration;\u000a    attribute EventHandler onwebkitanimationstart;\u000a    attribute EventHandler onwebkittransitionend;\u000a\u000a    // https://w3c.github.io/webappsec/specs/powerfulfeatures/#monkey-patching-global-object\u000a    readonly attribute boolean isSecureContext;\u000a\u000a    attribute DOMMatrixConstructor WebKitCSSMatrix;\u000a};\u000a\u000aWindow implements GlobalEventHandlers;\u000aWindow implements WindowBase64;\u000aWindow implements WindowEventHandlers;\u000aWindow implements WindowTimers;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/WindowBase64.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/WindowBase64.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#atob\u000a\u000a[\u000a    NoInterfaceObject, // Always used on target of 'implements'\u000a    Exposed=(Window,Worker)\u000a] interface WindowBase64 {\u000a    [RaisesException] DOMString btoa(DOMString btoa);\u000a    [RaisesException] DOMString atob(DOMString atob);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/WindowEventHandlers.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/WindowEventHandlers.idl"},contents:"/*\u000a * Copyright (c) 2013, Opera Software ASA. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a * 3. Neither the name of Opera Software ASA nor the names of its\u000a *    contributors may be used to endorse or promote products derived\u000a *    from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\u000a * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\u000a * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\u000a * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\u000a * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\u000a * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\u000a * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\u000a * OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/webappapis.html#windoweventhandlers\u000a\u000a[\u000a    ImplementedAs=DOMWindowEventHandlers,\u000a    LegacyTreatAsPartialInterface,\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface WindowEventHandlers {\u000a    attribute EventHandler onafterprint;\u000a    attribute EventHandler onbeforeprint;\u000a    // FIXME: onbeforeunload should be an OnBeforeUnloadEventHandler.\u000a    attribute EventHandler onbeforeunload;\u000a    attribute EventHandler onhashchange;\u000a    attribute EventHandler onlanguagechange;\u000a    attribute EventHandler onmessage;\u000a    attribute EventHandler onmessageerror;\u000a    attribute EventHandler onoffline;\u000a    attribute EventHandler ononline;\u000a    attribute EventHandler onpagehide;\u000a    attribute EventHandler onpageshow;\u000a    attribute EventHandler onpopstate;\u000a    attribute EventHandler onrejectionhandled;\u000a    attribute EventHandler onstorage;\u000a    attribute EventHandler onunhandledrejection;\u000a    attribute EventHandler onunload;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/frame/WindowTimers.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/frame/WindowTimers.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#timers\u000a\u000a[\u000a    ImplementedAs=DOMWindowTimers,\u000a    LegacyTreatAsPartialInterface,\u000a    NoInterfaceObject, // Always used on target of 'implements'\u000a    Exposed=(Window,Worker)\u000a] interface WindowTimers {\u000a    // FIXME: would be clearer as a union type, like:\u000a    // typedef (Function or DOMString) Handler\u000a    // Needs spec update and better union support: http://crbug.com/240176\u000a    [CallWith=ScriptState, RuntimeCallStatsCounter=WindowSetTimeout] long setTimeout(Function handler, optional long timeout = 0, any... arguments);\u000a    [CallWith=ScriptState] long setTimeout(DOMString handler, optional long timeout = 0, any... arguments);\u000a    void clearTimeout(optional long handle = 0);\u000a    [CallWith=ScriptState] long setInterval(Function handler, optional long timeout = 0, any... arguments);\u000a    [CallWith=ScriptState] long setInterval(DOMString handler, optional long timeout = 0, any... arguments);\u000a    void clearInterval(optional long handle = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/fullscreen/DocumentFullscreen.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/fullscreen/DocumentFullscreen.idl"},specUrls:["https://fullscreen.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2011 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006, 2007 Samuel Weinig <sam@webkit.org>\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://fullscreen.spec.whatwg.org/#api\u000a\u000a[\u000a    ImplementedAs=DocumentFullscreen\u000a] partial interface Document {\u000a    [RuntimeEnabled=FullscreenUnprefixed] readonly attribute boolean fullscreenEnabled;\u000a\u000a    [RuntimeEnabled=FullscreenUnprefixed] void exitFullscreen();\u000a\u000a    [RuntimeEnabled=FullscreenUnprefixed] attribute EventHandler onfullscreenchange;\u000a    [RuntimeEnabled=FullscreenUnprefixed] attribute EventHandler onfullscreenerror;\u000a\u000a    // Mozilla version\u000a    [MeasureAs=PrefixedDocumentIsFullscreen, ImplementedAs=fullscreenElement] readonly attribute boolean webkitIsFullScreen;\u000a    [MeasureAs=PrefixedDocumentCurrentFullScreenElement, ImplementedAs=fullscreenElement] readonly attribute Element webkitCurrentFullScreenElement;\u000a    [MeasureAs=PrefixedDocumentCancelFullScreen, ImplementedAs=exitFullscreen] void webkitCancelFullScreen();\u000a\u000a    // W3C version\u000a    [MeasureAs=PrefixedDocumentFullscreenEnabled, ImplementedAs=fullscreenEnabled] readonly attribute boolean webkitFullscreenEnabled;\u000a    [MeasureAs=PrefixedDocumentFullscreenElement, ImplementedAs=fullscreenElement] readonly attribute Element webkitFullscreenElement;\u000a    [MeasureAs=PrefixedDocumentExitFullscreen, ImplementedAs=exitFullscreen] void webkitExitFullscreen();\u000a\u000a    attribute EventHandler onwebkitfullscreenchange;\u000a    attribute EventHandler onwebkitfullscreenerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/fullscreen/ElementFullscreen.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/fullscreen/ElementFullscreen.idl"},specUrls:["https://fullscreen.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://fullscreen.spec.whatwg.org/#api\u000a\u000a[\u000a    ImplementedAs=ElementFullscreen\u000a] partial interface Element {\u000a    [RuntimeEnabled=FullscreenUnprefixed] void requestFullscreen();\u000a\u000a    [RuntimeEnabled=FullscreenUnprefixed] attribute EventHandler onfullscreenchange;\u000a    [RuntimeEnabled=FullscreenUnprefixed] attribute EventHandler onfullscreenerror;\u000a\u000a    // Mozilla version\u000a    [LogActivity, LogAllWorlds, MeasureAs=PrefixedElementRequestFullScreen, ImplementedAs=webkitRequestFullscreen] void webkitRequestFullScreen();\u000a\u000a    // W3C version\u000a    [LogActivity, LogAllWorlds, MeasureAs=PrefixedElementRequestFullscreen] void webkitRequestFullscreen();\u000a\u000a    attribute EventHandler onwebkitfullscreenchange;\u000a    attribute EventHandler onwebkitfullscreenerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMMatrix.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMMatrix.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#DOMMatrix\u000a\u000a[\u000a    Constructor(optional (DOMString or sequence<unrestricted double>) init),\u000a    RaisesException=Constructor,\u000a    ConstructorCallWith=ExecutionContext,\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=GeometryInterfaces\u000a] interface DOMMatrix : DOMMatrixReadOnly {\u000a    [RaisesException, NewObject] static DOMMatrix fromMatrix(optional DOMMatrixInit other);\u000a    [RaisesException, NewObject] static DOMMatrix fromFloat32Array(Float32Array array32);\u000a    [RaisesException, NewObject] static DOMMatrix fromFloat64Array(Float64Array array64);\u000a\u000a    // These attributes are simple aliases for certain elements of the 4x4 matrix\u000a    inherit attribute unrestricted double a;\u000a    inherit attribute unrestricted double b;\u000a    inherit attribute unrestricted double c;\u000a    inherit attribute unrestricted double d;\u000a    inherit attribute unrestricted double e;\u000a    inherit attribute unrestricted double f;\u000a\u000a    inherit attribute unrestricted double m11;\u000a    inherit attribute unrestricted double m12;\u000a    inherit attribute unrestricted double m13;\u000a    inherit attribute unrestricted double m14;\u000a    inherit attribute unrestricted double m21;\u000a    inherit attribute unrestricted double m22;\u000a    inherit attribute unrestricted double m23;\u000a    inherit attribute unrestricted double m24;\u000a    inherit attribute unrestricted double m31;\u000a    inherit attribute unrestricted double m32;\u000a    inherit attribute unrestricted double m33;\u000a    inherit attribute unrestricted double m34;\u000a    inherit attribute unrestricted double m41;\u000a    inherit attribute unrestricted double m42;\u000a    inherit attribute unrestricted double m43;\u000a    inherit attribute unrestricted double m44;\u000a\u000a    // Mutable transform methods\u000a    [RaisesException] DOMMatrix multiplySelf(optional DOMMatrixInit other);\u000a    [RaisesException] DOMMatrix preMultiplySelf(optional DOMMatrixInit other);\u000a    DOMMatrix translateSelf(optional unrestricted double tx = 0,\u000a                            optional unrestricted double ty = 0,\u000a                            optional unrestricted double tz = 0);\u000a    DOMMatrix scaleSelf(optional unrestricted double scaleX = 1,\u000a                        optional unrestricted double scaleY,\u000a                        optional unrestricted double scaleZ = 1,\u000a                        optional unrestricted double originX = 0,\u000a                        optional unrestricted double originY = 0,\u000a                        optional unrestricted double originZ = 0);\u000a    DOMMatrix scale3dSelf(optional unrestricted double scale = 1,\u000a                          optional unrestricted double originX = 0,\u000a                          optional unrestricted double originY = 0,\u000a                          optional unrestricted double originZ = 0);\u000a    DOMMatrix rotateSelf(optional unrestricted double rotX = 0,\u000a                          optional unrestricted double rotY,\u000a                          optional unrestricted double rotZ);\u000a    DOMMatrix rotateFromVectorSelf(optional unrestricted double x = 0,\u000a                                  optional unrestricted double y = 0);\u000a    DOMMatrix rotateAxisAngleSelf(optional unrestricted double x = 0,\u000a                                  optional unrestricted double y = 0,\u000a                                  optional unrestricted double z = 0,\u000a                                  optional unrestricted double angle = 0);\u000a    DOMMatrix skewXSelf(optional unrestricted double sx = 0);\u000a    DOMMatrix skewYSelf(optional unrestricted double sy = 0);\u000a    DOMMatrix invertSelf();\u000a\u000a    [Exposed=Window, RaisesException] DOMMatrix setMatrixValue(DOMString transformList);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMMatrix2DInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMMatrix2DInit.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#dictdef-dommatrix2dinit\u000a\u000adictionary DOMMatrix2DInit {\u000a    unrestricted double a;\u000a    unrestricted double b;\u000a    unrestricted double c;\u000a    unrestricted double d;\u000a    unrestricted double e;\u000a    unrestricted double f;\u000a    unrestricted double m11;\u000a    unrestricted double m12;\u000a    unrestricted double m21;\u000a    unrestricted double m22;\u000a    unrestricted double m41;\u000a    unrestricted double m42;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMMatrixInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMMatrixInit.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#dictdef-dommatrixinit\u000a\u000adictionary DOMMatrixInit : DOMMatrix2DInit {\u000a    unrestricted double m13 = 0;\u000a    unrestricted double m14 = 0;\u000a    unrestricted double m23 = 0;\u000a    unrestricted double m24 = 0;\u000a    unrestricted double m31 = 0;\u000a    unrestricted double m32 = 0;\u000a    unrestricted double m33 = 1;\u000a    unrestricted double m34 = 0;\u000a    unrestricted double m43 = 0;\u000a    unrestricted double m44 = 1;\u000a    boolean is2D;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMMatrixReadOnly.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMMatrixReadOnly.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#DOMMatrix\u000a\u000a[\u000a    Constructor(optional (DOMString or sequence<unrestricted double>) init),\u000a    RaisesException=Constructor,\u000a    ConstructorCallWith=ExecutionContext,\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=GeometryInterfaces\u000a] interface DOMMatrixReadOnly {\u000a    [RaisesException, NewObject] static DOMMatrixReadOnly fromMatrix(optional DOMMatrixInit other);\u000a    [RaisesException, NewObject] static DOMMatrixReadOnly fromFloat32Array(Float32Array array32);\u000a    [RaisesException, NewObject] static DOMMatrixReadOnly fromFloat64Array(Float64Array array64);\u000a\u000a    // These attributes are simple aliases for certain elements of the 4x4 matrix\u000a    readonly attribute unrestricted double a;\u000a    readonly attribute unrestricted double b;\u000a    readonly attribute unrestricted double c;\u000a    readonly attribute unrestricted double d;\u000a    readonly attribute unrestricted double e;\u000a    readonly attribute unrestricted double f;\u000a\u000a    readonly attribute unrestricted double m11;\u000a    readonly attribute unrestricted double m12;\u000a    readonly attribute unrestricted double m13;\u000a    readonly attribute unrestricted double m14;\u000a    readonly attribute unrestricted double m21;\u000a    readonly attribute unrestricted double m22;\u000a    readonly attribute unrestricted double m23;\u000a    readonly attribute unrestricted double m24;\u000a    readonly attribute unrestricted double m31;\u000a    readonly attribute unrestricted double m32;\u000a    readonly attribute unrestricted double m33;\u000a    readonly attribute unrestricted double m34;\u000a    readonly attribute unrestricted double m41;\u000a    readonly attribute unrestricted double m42;\u000a    readonly attribute unrestricted double m43;\u000a    readonly attribute unrestricted double m44;\u000a\u000a    readonly attribute boolean is2D;\u000a    readonly attribute boolean isIdentity;\u000a\u000a    // Immutable transform methods\u000a    DOMMatrix translate(optional unrestricted double tx = 0,\u000a                        optional unrestricted double ty = 0,\u000a                        optional unrestricted double tz = 0);\u000a    DOMMatrix scale(optional unrestricted double scaleX = 1,\u000a                    optional unrestricted double scaleY,\u000a                    optional unrestricted double scaleZ = 1,\u000a                    optional unrestricted double originX = 0,\u000a                    optional unrestricted double originY = 0,\u000a                    optional unrestricted double originZ = 0);\u000a    DOMMatrix scale3d(optional unrestricted double scale = 1,\u000a                      optional unrestricted double originX = 0,\u000a                      optional unrestricted double originY = 0,\u000a                      optional unrestricted double originZ = 0);\u000a    DOMMatrix rotate(optional unrestricted double rotX = 0,\u000a                     optional unrestricted double rotY,\u000a                     optional unrestricted double rotZ);\u000a    DOMMatrix rotateFromVector(optional unrestricted double x = 0,\u000a                           optional unrestricted double y = 0);\u000a    DOMMatrix rotateAxisAngle(optional unrestricted double x = 0,\u000a                              optional unrestricted double y = 0,\u000a                              optional unrestricted double z = 0,\u000a                              optional unrestricted double angle = 0);\u000a    DOMMatrix skewX(optional unrestricted double sx = 0);\u000a    DOMMatrix skewY(optional unrestricted double sy = 0);\u000a    [RaisesException] DOMMatrix multiply(optional DOMMatrixInit other);\u000a    DOMMatrix flipX();\u000a    DOMMatrix flipY();\u000a    DOMMatrix inverse();\u000a\u000a    DOMPoint transformPoint(optional DOMPointInit point);\u000a    Float32Array toFloat32Array();\u000a    Float64Array toFloat64Array();\u000a    [Exposed=Window, RaisesException] stringifier;\u000a    serializer = { attribute };\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMPoint.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMPoint.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#DOMPoint\u000a\u000a[\u000a    Constructor(optional unrestricted double x = 0, optional unrestricted double y = 0,\u000a                optional unrestricted double z = 0, optional unrestricted double w = 1),\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=GeometryInterfaces\u000a] interface DOMPoint : DOMPointReadOnly {\u000a    [NewObject] static DOMPoint fromPoint(optional DOMPointInit other);\u000a    inherit attribute unrestricted double x;\u000a    inherit attribute unrestricted double y;\u000a    inherit attribute unrestricted double z;\u000a    inherit attribute unrestricted double w;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMPointInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMPointInit.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#DOMPoint\u000a\u000adictionary DOMPointInit {\u000a    unrestricted double x = 0;\u000a    unrestricted double y = 0;\u000a    unrestricted double z = 0;\u000a    unrestricted double w = 1;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMPointReadOnly.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMPointReadOnly.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#dompointreadonly\u000a\u000a[\u000a    Constructor(optional unrestricted double x = 0, optional unrestricted double y = 0,\u000a                optional unrestricted double z = 0, optional unrestricted double w = 1),\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=GeometryInterfaces\u000a] interface DOMPointReadOnly {\u000a    [NewObject] static DOMPointReadOnly fromPoint(optional DOMPointInit other);\u000a\u000a    readonly attribute unrestricted double x;\u000a    readonly attribute unrestricted double y;\u000a    readonly attribute unrestricted double z;\u000a    readonly attribute unrestricted double w;\u000a\u000a    [RaisesException] DOMPoint matrixTransform(optional DOMMatrixInit matrix);\u000a\u000a    serializer = { attribute };\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMQuad.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMQuad.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#domquad\u000a\u000a[\u000a Constructor(optional DOMPointInit p1, optional DOMPointInit p2,\u000a                  optional DOMPointInit p3, optional DOMPointInit p4),\u000a Exposed=(Window,Worker),\u000a RuntimeEnabled=GeometryInterfaces\u000a]\u000ainterface DOMQuad {\u000a    [NewObject] static DOMQuad fromRect(optional DOMRectInit other);\u000a    [NewObject] static DOMQuad fromQuad(optional DOMQuadInit other);\u000a\u000a    [SameObject] readonly attribute DOMPoint p1;\u000a    [SameObject] readonly attribute DOMPoint p2;\u000a    [SameObject] readonly attribute DOMPoint p3;\u000a    [SameObject] readonly attribute DOMPoint p4;\u000a    [NewObject] DOMRect getBounds();\u000a\u000a    serializer = { attribute };\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMQuadInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMQuadInit.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#dictdef-domquadinit\u000a\u000adictionary DOMQuadInit {\u000a    DOMPointInit p1;\u000a    DOMPointInit p2;\u000a    DOMPointInit p3;\u000a    DOMPointInit p4;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMRect.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMRect.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#DOMRect\u000a\u000a[\u000a    Constructor(optional unrestricted double x = 0,\u000a                optional unrestricted double y = 0,\u000a                optional unrestricted double width = 0,\u000a                optional unrestricted double height = 0),\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=GeometryInterfaces\u000a] interface DOMRect : DOMRectReadOnly {\u000a    [NewObject] static DOMRect fromRect(optional DOMRectInit other);\u000a\u000a    inherit attribute unrestricted double x;\u000a    inherit attribute unrestricted double y;\u000a    inherit attribute unrestricted double width;\u000a    inherit attribute unrestricted double height;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMRectInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMRectInit.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#dictdef-domrectinit\u000a\u000adictionary DOMRectInit {\u000a    unrestricted double x = 0;\u000a    unrestricted double y = 0;\u000a    unrestricted double width = 0;\u000a    unrestricted double height = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMRectList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMRectList.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#DOMRectList\u000a// Spec update: https://github.com/w3c/fxtf-drafts/pull/186\u000a\u000a// DOMRectList only exists for compatibility with legacy web content.\u000a// When specifying a new API, use sequence<DOMRect> instead.\u000a\u000a// TODO: Spec also includes LegacyArrayClass that our IDL doesn't support yet.\u000a[ NoInterfaceObject ] interface DOMRectList {\u000a    readonly attribute unsigned long length;\u000a    [MeasureAs=ClientRectListItem] getter DOMRect? item(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/geometry/DOMRectReadOnly.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/geometry/DOMRectReadOnly.idl"},specUrls:["https://drafts.fxtf.org/geometry/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.fxtf.org/geometry/#DOMRect\u000a\u000a[\u000a    Constructor(optional unrestricted double x = 0, optional unrestricted double y = 0,\u000a                optional unrestricted double width = 0, optional unrestricted double height = 0),\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=GeometryInterfaces\u000a] interface DOMRectReadOnly {\u000a    [NewObject] static DOMRectReadOnly fromRect(optional DOMRectInit other);\u000a\u000a    readonly attribute unrestricted double x;\u000a    readonly attribute unrestricted double y;\u000a    readonly attribute unrestricted double width;\u000a    readonly attribute unrestricted double height;\u000a    readonly attribute unrestricted double top;\u000a    readonly attribute unrestricted double right;\u000a    readonly attribute unrestricted double bottom;\u000a    readonly attribute unrestricted double left;\u000a\u000a    serializer = { attribute };\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/AssignedNodesOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/AssignedNodesOptions.idl"},specUrls:["https://w3c.github.io/webcomponents/spec/shadow/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webcomponents/spec/shadow/#idl-def-AssignedNodesOptions\u000a\u000adictionary AssignedNodesOptions {\u000a    boolean flatten = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLAllCollection.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLAllCollection.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2014 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-htmlallcollection-interface\u000a\u000a[\u000a    Custom=LegacyCallAsFunction,\u000a    DependentLifetime,\u000a    LegacyUnenumerableNamedProperties\u000a] interface HTMLAllCollection {\u000a    readonly attribute unsigned long length;\u000a    [ImplementedAs=item] getter Element (unsigned long index);\u000a    // FIXME: The custom item() implementation may return a NodeList, but the\u000a    // spec has a (HTMLCollection or Element)? item(DOMString name) method.\u000a    [Custom] Element? item([Default=Undefined] optional unsigned long index);\u000a    // FIXME: namedItem() should be a legacycaller.\u000a    // FIXME: namedItem() should return an (HTMLCollection or Element)? union.\u000a    [ImplementedAs=namedGetter] getter (NodeList or Element)? namedItem(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLAnchorElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLAnchorElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-a-element\u000a\u000ainterface HTMLAnchorElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString target;\u000a    [CEReactions, Reflect] attribute DOMString download;\u000a    // FIXME: ping should be a DOMTokenList.\u000a    [CEReactions, Reflect] attribute DOMString ping;\u000a    [CEReactions, Reflect] attribute DOMString rel;\u000a    // FIXME: readonly attribute DOMTokenList relList;\u000a    [CEReactions, Reflect] attribute DOMString hreflang;\u000a    [CEReactions, Reflect] attribute DOMString type;\u000a    [CEReactions, Reflect, ReflectOnly=(\"\",\"no-referrer\",\"origin\",\"no-referrer-when-downgrade\",\"origin-when-cross-origin\",\"unsafe-url\"), ReflectMissing=\"\", ReflectInvalid=\"\"] attribute DOMString referrerPolicy;\u000a\u000a    [CEReactions, ImplementedAs=textContent] attribute DOMString text;\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLAnchorElement-partial\u000a    [CEReactions, Reflect] attribute DOMString coords;\u000a    [CEReactions, Reflect] attribute DOMString charset;\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions, Reflect] attribute DOMString rev;\u000a    [CEReactions, Reflect] attribute DOMString shape;\u000a};\u000a\u000aHTMLAnchorElement implements HTMLHyperlinkElementUtils;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLAreaElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLAreaElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2009, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-area-element\u000a\u000ainterface HTMLAreaElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString alt;\u000a    [CEReactions, Reflect] attribute DOMString coords;\u000a    [CEReactions, Reflect] attribute DOMString download;\u000a    [CEReactions, Reflect] attribute DOMString shape;\u000a    [CEReactions, Reflect] attribute DOMString target;\u000a    // FIXME: ping should be a DOMTokenList.\u000a    [CEReactions, Reflect] attribute DOMString ping;\u000a    [CEReactions, Reflect] attribute DOMString rel;\u000a    // FIXME: relList is missing\u000a    [CEReactions, Reflect, ReflectOnly=(\"\",\"no-referrer\",\"origin\",\"no-referrer-when-downgrade\",\"origin-when-cross-origin\",\"unsafe-url\"), ReflectMissing=\"\", ReflectInvalid=\"\"] attribute DOMString referrerPolicy;\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLAreaElement-partial\u000a    [CEReactions, Reflect] attribute boolean noHref;\u000a};\u000a\u000aHTMLAreaElement implements HTMLHyperlinkElementUtils;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLBRElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLBRElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2009 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-br-element\u000a\u000ainterface HTMLBRElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLBRElement-partial\u000a    [CEReactions, Reflect] attribute DOMString clear;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLBaseElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLBaseElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2009, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-base-element\u000a\u000ainterface HTMLBaseElement : HTMLElement {\u000a    [CEReactions] attribute DOMString href;\u000a    [CEReactions, Reflect] attribute DOMString target;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLBodyElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLBodyElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/","https://compat.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2009, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-body-element\u000a\u000ainterface HTMLBodyElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLBodyElement-partial\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString text;\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString link;\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString vLink;\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString aLink;\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString bgColor;\u000a    [CEReactions, Reflect] attribute DOMString background;\u000a\u000a    // TODO(foolip): These event handler attributes should be inherited from\u000a    // HTMLElement (which implements GlobalEventHandlers), but have different\u000a    // behavior. See https://www.w3.org/Bugs/Public/show_bug.cgi?id=28166\u000a    attribute EventHandler onblur;\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onfocus;\u000a    attribute EventHandler onload;\u000a    attribute EventHandler onresize;\u000a    attribute EventHandler onscroll;\u000a\u000a    // Compatibility\u000a    // https://compat.spec.whatwg.org/#windoworientation-interface\u000a    [RuntimeEnabled=OrientationEvent] attribute EventHandler onorientationchange;\u000a};\u000a\u000aHTMLBodyElement implements WindowEventHandlers;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLCanvasElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLCanvasElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2008, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2010 Torch Mobile (Beijing) Co. Ltd. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-canvas-element\u000a\u000ainterface HTMLCanvasElement : HTMLElement\u000a{\u000a    // Note: Due to dependecies on modules, getContext is defined in a partial\u000a    // interface in HTMLCanvasElementModule.idl\u000a\u000a    [RaisesException=Setter, CEReactions] attribute unsigned long width;\u000a    [RaisesException=Setter, CEReactions] attribute unsigned long height;\u000a\u000a    // Note: The arguments argument is variadic in the spec, but not here as\u000a    // only one extra argument is actually used.\u000a    // FIXME: type should not have a default value.\u000a    [MeasureAs=CanvasToDataURL, RaisesException] DOMString toDataURL(optional DOMString type = null, optional any arguments);\u000a\u000a    [MeasureAs=CanvasToBlob, RaisesException] void toBlob(BlobCallback _callback, optional DOMString type = null, optional any arguments);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLCollection.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLCollection.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2014 Samsung Electronics. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#interface-htmlcollection\u000a\u000a[\u000a    DependentLifetime,\u000a    LegacyUnenumerableNamedProperties\u000a] interface HTMLCollection {\u000a    readonly attribute unsigned long length;\u000a    getter Element? item(unsigned long index);\u000a    getter Element? namedItem(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLContentElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLContentElement.idl"},specUrls:["https://w3c.github.io/webcomponents/spec/shadow/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webcomponents/spec/shadow/#the-content-element\u000a\u000ainterface HTMLContentElement : HTMLElement {\u000a    [Reflect] attribute DOMString select;\u000a    NodeList getDistributedNodes();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLDListElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLDListElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-dl-element\u000a\u000ainterface HTMLDListElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLDListElement-partial\u000a    [CEReactions, Reflect] attribute boolean compact;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLDataElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLDataElement.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-data-element\u000a\u000a[HTMLConstructor]\u000ainterface HTMLDataElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString value;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLDetailsElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLDetailsElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies)\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-details-element\u000a\u000ainterface HTMLDetailsElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute boolean open;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLDialogElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLDialogElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-dialog-element\u000a\u000ainterface HTMLDialogElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute boolean open;\u000a    attribute DOMString returnValue;\u000a    [CEReactions] void show();\u000a    [CEReactions, RaisesException] void showModal();\u000a    [CEReactions] void close(optional DOMString returnValue);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLDirectoryElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLDirectoryElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#htmldirectoryelement\u000a\u000ainterface HTMLDirectoryElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute boolean compact;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLDivElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLDivElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-div-element\u000a[HTMLConstructor]\u000ainterface HTMLDivElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLDivElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLDocument.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLDocument.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2008 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// FIXME: \"For historical reasons, Window objects must also have a\u000a// writable, configurable, non-enumerable property named HTMLDocument\u000a// whose value is the Document interface object.\"\u000a// https://html.spec.whatwg.org/#the-window-object\u000a\u000ainterface HTMLDocument : Document {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/","https://drafts.csswg.org/cssom-view/","https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#htmlelement\u000a[HTMLConstructor]\u000ainterface HTMLElement : Element {\u000a    // metadata attributes\u000a    [CEReactions, Reflect] attribute DOMString title;\u000a    [CEReactions, Reflect] attribute DOMString lang;\u000a    [CEReactions] attribute boolean translate;\u000a    [CEReactions] attribute DOMString dir;\u000a    [SameObject, PerWorldBindings] readonly attribute DOMStringMap dataset;\u000a\u000a    // user interaction\u000a    [CEReactions, Reflect] attribute boolean hidden;\u000a    [RuntimeCallStatsCounter=HTMLElementClick] void click();\u000a    [CEReactions, CustomElementCallbacks] attribute long tabIndex;\u000a    [CEReactions, RuntimeEnabled=InertAttribute, Reflect] attribute boolean inert;\u000a    void focus();\u000a    void blur();\u000a    [CEReactions, Reflect] attribute DOMString accessKey;\u000a    [CEReactions, CustomElementCallbacks] attribute boolean draggable;\u000a    [CEReactions] attribute boolean spellcheck;\u000a\u000a    // HTMLElement implements ElementContentEditable\u000a    // https://html.spec.whatwg.org/#contenteditable\u000a    [CEReactions, CustomElementCallbacks, RaisesException=Setter] attribute DOMString contentEditable;\u000a    [ImplementedAs=isContentEditableForBinding] readonly attribute boolean isContentEditable;\u000a    [RuntimeEnabled=InputModeAttribute, CEReactions, Reflect] attribute DOMString inputMode;\u000a\u000a    // CSSOM View Module\u000a    // https://drafts.csswg.org/cssom-view/#extensions-to-the-htmlelement-interface\u000a    [PerWorldBindings, ImplementedAs=unclosedOffsetParent] readonly attribute Element? offsetParent;\u000a    [ImplementedAs=offsetTopForBinding] readonly attribute long offsetTop;\u000a    [ImplementedAs=offsetLeftForBinding] readonly attribute long offsetLeft;\u000a    [ImplementedAs=offsetWidthForBinding] readonly attribute long offsetWidth;\u000a    [ImplementedAs=offsetHeightForBinding] readonly attribute long offsetHeight;\u000a\u000a    // CSS Object Model (CSSOM)\u000a    // https://drafts.csswg.org/cssom/#the-elementcssinlinestyle-interface\u000a    [SameObject, PerWorldBindings, PutForwards=cssText] readonly attribute CSSStyleDeclaration style;\u000a\u000a    // Non-standard APIs\u000a    [CEReactions, CustomElementCallbacks, RaisesException=Setter, MeasureAs=HTMLElementInnerText] attribute [TreatNullAs=NullString] DOMString innerText;\u000a    [CEReactions, CustomElementCallbacks, RaisesException=Setter, MeasureAs=HTMLElementOuterText] attribute [TreatNullAs=NullString] DOMString outerText;\u000a};\u000a\u000aHTMLElement implements GlobalEventHandlers;\u000aHTMLElement implements NoncedElement;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLEmbedElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLEmbedElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-embed-element\u000a\u000a// TODO(yukishiino): HTMLEmbedElement should not have [OverrideBuiltins].\u000a[\u000a    OverrideBuiltins,\u000a    ActiveScriptWrappable\u000a] interface HTMLEmbedElement : HTMLElement {\u000a    [CEReactions, Reflect, URL] attribute DOMString src;\u000a    [CEReactions, Reflect] attribute DOMString type;\u000a    [CEReactions, Reflect] attribute DOMString width;\u000a    [CEReactions, Reflect] attribute DOMString height;\u000a    [CheckSecurity=ReturnValue, RaisesException] Document? getSVGDocument();\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLEmbedElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a\u000a    // FIXME: None of these getters and setters are in the spec.\u000a    [Custom, NotEnumerable] getter Node (DOMString name);\u000a    [Custom] setter Node (DOMString name, Node value);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLFontElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLFontElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#htmlfontelement\u000a\u000ainterface HTMLFontElement : HTMLElement {\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString color;\u000a    [CEReactions, Reflect] attribute DOMString face;\u000a    [CEReactions, Reflect] attribute DOMString size;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLFrameElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLFrameElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#htmlframeelement\u000a\u000ainterface HTMLFrameElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions, Reflect] attribute DOMString scrolling;\u000a    [CEReactions, Reflect, URL] attribute DOMString src;\u000a    [CEReactions, Reflect] attribute DOMString frameBorder;\u000a    [CEReactions, Reflect, URL] attribute DOMString longDesc;\u000a    [CEReactions, Reflect] attribute boolean noResize;\u000a    [CheckSecurity=ReturnValue] readonly attribute Document? contentDocument;\u000a    readonly attribute Window? contentWindow;\u000a\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString marginHeight;\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString marginWidth;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLFrameSetElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLFrameSetElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009, 2010 Apple Inc. All rights reserve\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#htmlframesetelement\u000a\u000a// FIXME: HTMLFrameSetElement should not have [OverrideBuiltins].\u000a[\u000a    OverrideBuiltins\u000a] interface HTMLFrameSetElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString cols;\u000a    [CEReactions, Reflect] attribute DOMString rows;\u000a\u000a    // TODO(foolip): These event handler attributes should be inherited from\u000a    // HTMLElement (which implements GlobalEventHandlers), but have different\u000a    // behavior. See https://www.w3.org/Bugs/Public/show_bug.cgi?id=28166\u000a    attribute EventHandler onblur;\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onfocus;\u000a    attribute EventHandler onload;\u000a    attribute EventHandler onresize;\u000a    attribute EventHandler onscroll;\u000a\u000a    // Non-standard APIs\u000a    [NotEnumerable] getter Window (DOMString name);\u000a    [RuntimeEnabled=OrientationEvent] attribute EventHandler onorientationchange;\u000a};\u000a\u000aHTMLFrameSetElement implements WindowEventHandlers;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLHRElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLHRElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-hr-element\u000a\u000ainterface HTMLHRElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLHRElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a    [CEReactions, Reflect] attribute DOMString color;\u000a    [CEReactions, Reflect] attribute boolean noShade;\u000a    [CEReactions, Reflect] attribute DOMString size;\u000a    [CEReactions, Reflect] attribute DOMString width;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLHeadElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLHeadElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-head-element\u000a\u000ainterface HTMLHeadElement : HTMLElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLHeadingElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLHeadingElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements\u000a\u000ainterface HTMLHeadingElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLHeadingElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLHtmlElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLHtmlElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-html-element\u000a\u000ainterface HTMLHtmlElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLHtmlElement-partial\u000a    [CEReactions, Reflect] attribute DOMString version;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLHyperlinkElementUtils.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLHyperlinkElementUtils.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/#htmlhyperlinkelementutils\u000a\u000a[\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface HTMLHyperlinkElementUtils {\u000a    [CEReactions] stringifier attribute USVString href;\u000a    readonly attribute USVString origin;\u000a\u000a    [CEReactions] attribute USVString protocol;\u000a    [CEReactions] attribute USVString username;\u000a    [CEReactions] attribute USVString password;\u000a    [CEReactions] attribute USVString host;\u000a    [CEReactions] attribute USVString hostname;\u000a    [CEReactions] attribute USVString port;\u000a    [CEReactions] attribute USVString pathname;\u000a    [CEReactions] attribute USVString search;\u000a    [CEReactions] attribute USVString hash;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLIFrameElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLIFrameElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://w3c.github.io/webappsec-csp/embedded/","https://wicg.github.io/feature-policy/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-iframe-element\u000a\u000ainterface HTMLIFrameElement : HTMLElement {\u000a    [CEReactions, Reflect, URL] attribute DOMString src;\u000a    [CEReactions, Reflect] attribute DOMString srcdoc;\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions, PutForwards=value] readonly attribute DOMTokenList sandbox;\u000a    // Note: The seamless attribute was once supported, but was removed.\u000a    [CEReactions, Reflect] attribute boolean allowFullscreen;\u000a    [CEReactions, Reflect] attribute DOMString width;\u000a    [CEReactions, Reflect] attribute DOMString height;\u000a\u000a    [CheckSecurity=ReturnValue] readonly attribute Document? contentDocument;\u000a    readonly attribute Window? contentWindow;\u000a    [CheckSecurity=ReturnValue, RaisesException] Document? getSVGDocument();\u000a    [CEReactions, Reflect, ReflectOnly=(\"\",\"no-referrer\",\"origin\",\"no-referrer-when-downgrade\",\"origin-when-cross-origin\",\"unsafe-url\"), ReflectMissing=\"\", ReflectInvalid=\"\"] attribute DOMString referrerPolicy;\u000a    // https://w3c.github.io/webappsec-csp/embedded/#dom-htmliframeelement-csp\u000a    [RuntimeEnabled=EmbedderCSPEnforcement, CEReactions, Reflect] attribute DOMString csp;\u000a\u000a    // Feature Policy allow attribute\u000a    // https://wicg.github.io/feature-policy/\u000a    [RuntimeEnabled=FeaturePolicy, CEReactions, Reflect] attribute DOMString allow;\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLIFrameElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a    [CEReactions, Reflect] attribute DOMString scrolling;\u000a    [CEReactions, Reflect] attribute DOMString frameBorder;\u000a    [CEReactions, Reflect, URL] attribute DOMString longDesc;\u000a\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString marginHeight;\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString marginWidth;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLImageElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLImageElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/","https://drafts.csswg.org/cssom-view/"],contents:"/*\u000a * Copyright (C) 2006, 2009, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-img-element\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    ConstructorCallWith=Document,\u000a    NamedConstructor=Image(optional unsigned long width, optional unsigned long height)\u000a] interface HTMLImageElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString alt;\u000a    [CEReactions, Reflect, URL] attribute DOMString src;\u000a    [CEReactions, Reflect] attribute DOMString srcset;\u000a    [CEReactions, Reflect] attribute DOMString sizes;\u000a    [CEReactions, Reflect, ReflectOnly=(\"anonymous\",\"use-credentials\"), ReflectEmpty=\"anonymous\", ReflectInvalid=\"anonymous\"] attribute DOMString? crossOrigin;\u000a    [CEReactions, Reflect] attribute DOMString useMap;\u000a    [CEReactions, Reflect] attribute boolean isMap;\u000a    [CEReactions] attribute unsigned long width;\u000a    [CEReactions] attribute unsigned long height;\u000a    readonly attribute unsigned long naturalWidth;\u000a    readonly attribute unsigned long naturalHeight;\u000a    readonly attribute boolean complete;\u000a    readonly attribute DOMString currentSrc;\u000a    [CEReactions, Reflect, ReflectOnly=(\"\",\"no-referrer\",\"origin\",\"no-referrer-when-downgrade\",\"origin-when-cross-origin\",\"unsafe-url\"), ReflectMissing=\"\", ReflectInvalid=\"\"] attribute DOMString referrerPolicy;\u000a    [RuntimeEnabled=ImageAsyncAttribute, CEReactions, Reflect] attribute DOMString async;\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLImageElement-partial\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions, Reflect, URL] attribute DOMString lowsrc;\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a    [CEReactions, Reflect] attribute unsigned long hspace;\u000a    [CEReactions, Reflect] attribute unsigned long vspace;\u000a    [CEReactions, Reflect, URL] attribute DOMString longDesc;\u000a\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString border;\u000a\u000a    // CSSOM View Module\u000a    // https://drafts.csswg.org/cssom-view/#extensions-to-the-htmlimageelement-interface\u000a    [MeasureAs=HTMLImageElementX] readonly attribute long x;\u000a    [MeasureAs=HTMLImageElementY] readonly attribute long y;\u000a\u000a    [RuntimeEnabled=JSImageDecode, CallWith=ScriptState, RaisesException] Promise decode();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLLIElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLLIElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-li-element\u000a\u000ainterface HTMLLIElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute long value;\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLLIElement-partial\u000a    [CEReactions, Reflect] attribute DOMString type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLLinkElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLLinkElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/","https://drafts.csswg.org/cssom/","https://w3c.github.io/webcomponents/spec/imports/","https://w3c.github.io/webappsec-subresource-integrity/","https://w3c.github.io/ServiceWorker/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-link-element\u000a\u000ainterface HTMLLinkElement : HTMLElement {\u000a    // FIXME: The disabled attribute has been removed from the spec:\u000a    // https://www.w3.org/Bugs/Public/show_bug.cgi?id=14703\u000a    [Reflect, Measure] attribute boolean disabled;\u000a    [Reflect, URL] attribute DOMString href;\u000a    [CEReactions, Reflect, ReflectOnly=(\"anonymous\",\"use-credentials\"), ReflectEmpty=\"anonymous\", ReflectInvalid=\"anonymous\"] attribute DOMString? crossOrigin;\u000a    [CEReactions, Reflect] attribute DOMString rel;\u000a    [CEReactions, PutForwards=value] readonly attribute DOMTokenList relList;\u000a    [CEReactions, Reflect] attribute DOMString media;\u000a    [CEReactions, Reflect] attribute DOMString hreflang;\u000a    [CEReactions, Reflect] attribute DOMString type;\u000a    [Reflect, ReflectOnly=(\"script\",\"style\",\"image\",\"video\", \"audio\", \"track\", \"font\", \"fetch\")] attribute DOMString as;\u000a    [CEReactions, Reflect, ReflectOnly=(\"\",\"no-referrer\",\"origin\",\"no-referrer-when-downgrade\",\"origin-when-cross-origin\",\"unsafe-url\"), ReflectMissing=\"\", ReflectInvalid=\"\"] attribute DOMString referrerPolicy;\u000a    [CEReactions, PutForwards=value] readonly attribute DOMTokenList sizes;\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLLinkElement-partial\u000a    [CEReactions, Reflect] attribute DOMString charset;\u000a    [CEReactions, Reflect] attribute DOMString rev;\u000a    [CEReactions, Reflect] attribute DOMString target;\u000a\u000a    // HTMLLinkElement implements LinkStyle\u000a    // https://drafts.csswg.org/cssom/#the-linkstyle-interface\u000a    readonly attribute StyleSheet? sheet;\u000a\u000a    // HTML Imports\u000a    // https://w3c.github.io/webcomponents/spec/imports/#interface-import\u000a    readonly attribute Document? import;\u000a\u000a    // Subresource Integrity\u000a    // https://w3c.github.io/webappsec-subresource-integrity/#HTMLLinkElement\u000a    [Reflect] attribute DOMString integrity;\u000a\u000a    // Service workers\u000a    // https://w3c.github.io/ServiceWorker/#link-element-interface-extensions\u000a    [Reflect, OriginTrialEnabled=LinkServiceWorker] attribute USVString scope;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/FormData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/FormData.idl"},specUrls:["https://xhr.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://xhr.spec.whatwg.org/#interface-formdata\u000a\u000atypedef (File or USVString) FormDataEntryValue;\u000a\u000a// TODO(foolip): Remove LegacyInterfaceTypeChecking, which allows for\u000a// `append('name', null, 'filename')` and `set('name', null, 'filename')` to\u000a// append/set null values instead of throwing. https://crbug.com/561338\u000a[\u000a    Constructor(optional HTMLFormElement form),\u000a    Exposed=(Window,Worker),\u000a    LegacyInterfaceTypeChecking\u000a] interface FormData {\u000a    void append(USVString name, USVString value);\u000a    [CallWith=ScriptState] void append(USVString name, Blob value, optional USVString filename);\u000a    [ImplementedAs=deleteEntry] void delete(USVString name);\u000a    FormDataEntryValue? get(USVString name);\u000a    sequence<FormDataEntryValue> getAll(USVString name);\u000a    boolean has(USVString name);\u000a    void set(USVString name, USVString value);\u000a    void set(USVString name, Blob value, optional USVString filename);\u000a    iterable<USVString, FormDataEntryValue>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLButtonElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLButtonElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-button-element\u000a\u000ainterface HTMLButtonElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute boolean autofocus;\u000a    [CEReactions, Reflect] attribute boolean disabled;\u000a    [ImplementedAs=formOwner] readonly attribute HTMLFormElement? form;\u000a    [CEReactions] attribute DOMString formAction;\u000a    [CEReactions] attribute DOMString formEnctype;\u000a    [CEReactions] attribute DOMString formMethod;\u000a    [CEReactions, Reflect] attribute boolean formNoValidate;\u000a    [CEReactions, Reflect] attribute DOMString formTarget;\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions] attribute DOMString type;\u000a    [CEReactions, Reflect] attribute DOMString value;\u000a    // FIXME: attribute HTMLMenuElement? menu;\u000a\u000a    readonly attribute boolean willValidate;\u000a    readonly attribute ValidityState validity;\u000a    readonly attribute DOMString validationMessage;\u000a    boolean checkValidity();\u000a    boolean reportValidity();\u000a    void setCustomValidity(DOMString error);\u000a\u000a    readonly attribute NodeList labels;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLDataListElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLDataListElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (c) 2009, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-datalist-element\u000a\u000ainterface HTMLDataListElement : HTMLElement {\u000a    readonly attribute HTMLCollection options;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLFieldSetElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLFieldSetElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-fieldset-element\u000a\u000ainterface HTMLFieldSetElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute boolean disabled;\u000a    [ImplementedAs=formOwner] readonly attribute HTMLFormElement? form;\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a\u000a    readonly attribute DOMString type;\u000a\u000a    [Measure] readonly attribute HTMLCollection elements;\u000a\u000a    readonly attribute boolean willValidate;\u000a    [SameObject] readonly attribute ValidityState validity;\u000a    readonly attribute DOMString validationMessage;\u000a    boolean checkValidity();\u000a    boolean reportValidity();\u000a    void setCustomValidity(DOMString error);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLFormControlsCollection.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLFormControlsCollection.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2012 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2014 Samsung Electronics. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-htmlformcontrolscollection-interface\u000a\u000a[\u000a    DependentLifetime\u000a] interface HTMLFormControlsCollection : HTMLCollection {\u000a    // inherits length and item()\u000a    [ImplementedAs=namedGetter] getter (RadioNodeList or Element)? namedItem(DOMString name); // shadows inherited namedItem()\u000a    // FIXME: This getter is not in the spec.\u000a    [ImplementedAs=item] getter Node (unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLFormElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLFormElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-form-element\u000a\u000a[\u000a    OverrideBuiltins\u000a] interface HTMLFormElement : HTMLElement {\u000a    [CEReactions, Reflect=accept_charset] attribute DOMString acceptCharset;\u000a    [CEReactions, Reflect, URL] attribute DOMString action;\u000a    [CEReactions, Reflect, ReflectOnly=(\"on\",\"off\"), ReflectMissing=\"on\", ReflectInvalid=\"on\"] attribute DOMString autocomplete;\u000a    [CEReactions, CustomElementCallbacks] attribute DOMString enctype;\u000a    [CEReactions, CustomElementCallbacks] attribute DOMString encoding;\u000a    [CEReactions, CustomElementCallbacks] attribute DOMString method;\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions, Reflect] attribute boolean noValidate;\u000a    [CEReactions, Reflect] attribute DOMString target;\u000a\u000a    readonly attribute HTMLFormControlsCollection elements;\u000a    readonly attribute long length;\u000a    [ImplementedAs=item] getter Element (unsigned long index);\u000a    // FIXME: This getter should not have [NotEnumerable].\u000a    [NotEnumerable] getter (RadioNodeList or Element) (DOMString name);\u000a\u000a    [ImplementedAs=submitFromJavaScript] void submit();\u000a    [CEReactions, CustomElementCallbacks] void reset();\u000a    boolean checkValidity();\u000a    boolean reportValidity();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLInputElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLInputElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/","https://w3c.github.io/html-media-capture/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2012 Samsung Electronics. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-input-element\u000a\u000aenum SelectionMode { \"select\", \"start\", \"end\", \"preserve\" };\u000a\u000a[\u000a    ActiveScriptWrappable\u000a] interface HTMLInputElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString accept;\u000a    [CEReactions, Reflect] attribute DOMString alt;\u000a    [CEReactions, Reflect] attribute DOMString autocomplete;\u000a    [CEReactions, Reflect] attribute boolean autofocus;\u000a    [CEReactions, Reflect=checked] attribute boolean defaultChecked;\u000a    attribute boolean checked;\u000a    [CEReactions, Reflect] attribute DOMString dirName;\u000a    [CEReactions, Reflect] attribute boolean disabled;\u000a    [ImplementedAs=formOwner] readonly attribute HTMLFormElement? form;\u000a    // The 'files' attribute is intentionally not readonly.\u000a    // https://www.w3.org/Bugs/Public/show_bug.cgi?id=22682\u000a    attribute FileList? files;\u000a    [CEReactions] attribute DOMString formAction;\u000a    [CEReactions, CustomElementCallbacks] attribute DOMString formEnctype;\u000a    [CEReactions, CustomElementCallbacks] attribute DOMString formMethod;\u000a    [CEReactions, Reflect] attribute boolean formNoValidate;\u000a    [CEReactions, Reflect] attribute DOMString formTarget;\u000a    [CEReactions, CustomElementCallbacks] attribute unsigned long height;\u000a    attribute boolean indeterminate;\u000a    readonly attribute HTMLElement? list;\u000a    [CEReactions, Reflect] attribute DOMString max;\u000a    [CEReactions, RaisesException=Setter, CustomElementCallbacks] attribute long maxLength;\u000a    [CEReactions, Reflect] attribute DOMString min;\u000a    [CEReactions, RaisesException=Setter, CustomElementCallbacks] attribute long minLength;\u000a    [CEReactions, Reflect] attribute boolean multiple;\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions, Reflect] attribute DOMString pattern;\u000a    [CEReactions, Reflect] attribute DOMString placeholder;\u000a    [CEReactions, Reflect] attribute boolean readOnly;\u000a    [CEReactions, Reflect] attribute boolean required;\u000a    [CEReactions, RaisesException=Setter, CustomElementCallbacks] attribute unsigned long size;\u000a    [CEReactions, Reflect, URL] attribute DOMString src;\u000a    [CEReactions, Reflect] attribute DOMString step;\u000a    [CEReactions, CustomElementCallbacks] attribute DOMString type;\u000a    [CEReactions, Reflect=value, CustomElementCallbacks] attribute DOMString defaultValue;\u000a    [CEReactions, TreatNullAs=EmptyString, RaisesException=Setter, CustomElementCallbacks] attribute DOMString value;\u000a    [CEReactions, RaisesException=Setter, CustomElementCallbacks] attribute Date? valueAsDate;\u000a    [RaisesException=Setter, CustomElementCallbacks] attribute unrestricted double valueAsNumber;\u000a    // Note: The spec has valueLow and valueHigh for two-valued range controls.\u000a    // https://www.w3.org/Bugs/Public/show_bug.cgi?id=13154\u000a    [CEReactions, CustomElementCallbacks] attribute unsigned long width;\u000a\u000a    [RaisesException, CustomElementCallbacks] void stepUp(optional long n = 1);\u000a    [RaisesException, CustomElementCallbacks] void stepDown(optional long n = 1);\u000a\u000a    readonly attribute boolean willValidate;\u000a    readonly attribute ValidityState validity;\u000a    readonly attribute DOMString validationMessage;\u000a    boolean checkValidity();\u000a    boolean reportValidity();\u000a    void setCustomValidity(DOMString error);\u000a\u000a    readonly attribute NodeList labels;\u000a\u000a    void select();\u000a    [RaisesException, ImplementedAs=selectionStartForBinding] attribute unsigned long? selectionStart;\u000a    [RaisesException, ImplementedAs=selectionEndForBinding] attribute unsigned long? selectionEnd;\u000a    [RaisesException, ImplementedAs=selectionDirectionForBinding] attribute DOMString? selectionDirection;\u000a    [RaisesException] void setRangeText(DOMString replacement);\u000a    [RaisesException] void setRangeText(DOMString replacement,\u000a                                        unsigned long start,\u000a                                        unsigned long end,\u000a                                        optional SelectionMode selectionMode = \"preserve\");\u000a    [RaisesException, ImplementedAs=setSelectionRangeForBinding]\u000a    void setSelectionRange(unsigned long start,\u000a                           unsigned long end,\u000a                           optional DOMString direction);\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLInputElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a    [CEReactions, Reflect] attribute DOMString useMap;\u000a\u000a    // HTML autocapitalize proposal\u000a    // https://github.com/mounirlamouri/html-autocapitalize/blob/master/proposal.md\u000a    [Measure] attribute DOMString autocapitalize;\u000a\u000a    // HTML Media Capture\u000a    // https://w3c.github.io/html-media-capture/#the-capture-attribute\u000a    [Measure, RuntimeEnabled=MediaCapture, Reflect] attribute DOMString capture;\u000a\u000a    // Non-standard APIs\u000a    [Reflect, MeasureAs=PrefixedDirectoryAttribute] attribute boolean webkitdirectory;\u000a    [Reflect, MeasureAs=IncrementalAttribute] attribute boolean incremental;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLLabelElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLLabelElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-label-element\u000a\u000ainterface HTMLLabelElement : HTMLElement {\u000a    readonly attribute HTMLFormElement? form;\u000a    [CEReactions, Reflect=for] attribute DOMString htmlFor;\u000a    readonly attribute HTMLElement? control;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLLegendElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLLegendElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-legend-element\u000a\u000ainterface HTMLLegendElement : HTMLElement {\u000a    readonly attribute HTMLFormElement? form;\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLLegendElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLOptGroupElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLOptGroupElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-optgroup-element\u000a\u000ainterface HTMLOptGroupElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute boolean disabled;\u000a    [CEReactions, Reflect] attribute DOMString label;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLOptionElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLOptionElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2010 Apple, Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-option-element\u000a\u000a[\u000a    NamedConstructor=Option(optional DOMString data = null,\u000a                            optional DOMString value = null,\u000a                            optional boolean defaultSelected = false,\u000a                            optional boolean selected = false),\u000a    ConstructorCallWith=Document,\u000a    RaisesException=Constructor\u000a] interface HTMLOptionElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute boolean disabled;\u000a    readonly attribute HTMLFormElement? form;\u000a    [CEReactions] attribute DOMString label;\u000a    [CEReactions, Reflect=selected] attribute boolean defaultSelected;\u000a    [ImplementedAs=selectedForBinding] attribute boolean selected;\u000a    [CEReactions] attribute DOMString value;\u000a\u000a    // TODO(foolip): The text setter should never throw.\u000a    [CEReactions, RaisesException=Setter] attribute DOMString text;\u000a    readonly attribute long index;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLOptionsCollection.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLOptionsCollection.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2013, 2014 Samsung Electronics. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-htmloptionscollection-interface\u000a\u000a[\u000a    DependentLifetime\u000a] interface HTMLOptionsCollection : HTMLCollection {\u000a    // inherits item()\u000a    [CEReactions, RaisesException=Setter] attribute unsigned long length; // shadows inherited length\u000a    // FIXME: The spec has a legacycaller HTMLOptionElement? (DOMString name);\u000a    [CEReactions, RaisesException] setter void (unsigned long index, HTMLOptionElement? option);\u000a    [CEReactions, RaisesException] void add((HTMLOptionElement or HTMLOptGroupElement) element, optional (HTMLElement or long)? before = null);\u000a    [CEReactions] void remove(long index);\u000a    attribute long selectedIndex;\u000a\u000a    // TODO(tkent): We need to declare this indexed property getter because our\u000a    // IDL compiler doesn't support inheritance of indexed property\u000a    // getters. crbug.com/752877\u000a    [ImplementedAs=item] getter Element? (unsigned long index);\u000a\u000a    // TODO(tkent): This should return only Element. crbug.com/695902\u000a    [ImplementedAs=namedGetter] getter (NodeList or Element)? namedItem(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLOutputElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLOutputElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-output-element\u000a\u000ainterface HTMLOutputElement : HTMLElement {\u000a    [CEReactions, PutForwards=value] readonly attribute DOMTokenList htmlFor;\u000a    [ImplementedAs=formOwner] readonly attribute HTMLFormElement? form;\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a\u000a    readonly attribute DOMString type;\u000a    [CEReactions] attribute DOMString defaultValue;\u000a    [CEReactions] attribute DOMString value;\u000a\u000a    readonly attribute boolean willValidate;\u000a    readonly attribute ValidityState validity;\u000a    readonly attribute DOMString validationMessage;\u000a    boolean checkValidity();\u000a    boolean reportValidity();\u000a    void setCustomValidity(DOMString error);\u000a\u000a    readonly attribute NodeList labels;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLSelectElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLSelectElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-select-element\u000a\u000ainterface HTMLSelectElement : HTMLElement {\u000a    // TODO(foolip): attribute DOMString autocomplete;\u000a    [CEReactions, Reflect] attribute boolean autofocus;\u000a    [CEReactions, Reflect] attribute boolean disabled;\u000a    [ImplementedAs=formOwner] readonly attribute HTMLFormElement? form;\u000a    [CEReactions, Reflect] attribute boolean multiple;\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions, Reflect] attribute boolean required;\u000a    [CEReactions, Reflect] attribute unsigned long size;\u000a\u000a    readonly attribute DOMString type;\u000a\u000a    readonly attribute HTMLOptionsCollection options;\u000a    // TODO(foolip): The length setter should never throw.\u000a    [CEReactions, RaisesException=Setter] attribute unsigned long length;\u000a    getter Element? item(unsigned long index);\u000a    HTMLOptionElement? namedItem(DOMString name);\u000a    [CEReactions, RaisesException] void add((HTMLOptionElement or HTMLOptGroupElement) element,\u000a                               optional (HTMLElement or long)? before = null);\u000a    [CEReactions, RaisesException] void remove(); // ChildNode overload\u000a    [CEReactions] void remove(long index);\u000a    [CEReactions, RaisesException] setter void (unsigned long index, HTMLOptionElement? option);\u000a\u000a    readonly attribute HTMLCollection selectedOptions;\u000a    attribute long selectedIndex;\u000a    attribute DOMString value;\u000a\u000a    readonly attribute boolean willValidate;\u000a    readonly attribute ValidityState validity;\u000a    readonly attribute DOMString validationMessage;\u000a    boolean checkValidity();\u000a    boolean reportValidity();\u000a    void setCustomValidity(DOMString error);\u000a\u000a    readonly attribute NodeList labels;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/HTMLTextAreaElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/HTMLTextAreaElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2011 Motorola Mobility, Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-textarea-element\u000a\u000ainterface HTMLTextAreaElement : HTMLElement {\u000a    // attribute DOMString autocomplete;\u000a    [CEReactions, Reflect] attribute boolean autofocus;\u000a    [CEReactions] attribute unsigned long cols;\u000a    [CEReactions, Reflect] attribute DOMString dirName;\u000a    [CEReactions, Reflect] attribute boolean disabled;\u000a    [ImplementedAs=formOwner] readonly attribute HTMLFormElement? form;\u000a    [CEReactions, RaisesException=Setter] attribute long maxLength;\u000a    [CEReactions, RaisesException=Setter] attribute long minLength;\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions, Reflect] attribute DOMString placeholder;\u000a    [CEReactions, Reflect] attribute boolean readOnly;\u000a    [CEReactions, Reflect] attribute boolean required;\u000a    [CEReactions] attribute unsigned long rows;\u000a    [CEReactions, Reflect] attribute DOMString wrap;\u000a\u000a    readonly attribute DOMString type;\u000a    [CEReactions] attribute DOMString defaultValue;\u000a    [CEReactions, TreatNullAs=NullString] attribute DOMString value;\u000a    readonly attribute unsigned long textLength;\u000a\u000a    readonly attribute boolean willValidate;\u000a    readonly attribute ValidityState validity;\u000a    readonly attribute DOMString validationMessage;\u000a    boolean checkValidity();\u000a    boolean reportValidity();\u000a    void setCustomValidity(DOMString error);\u000a\u000a    readonly attribute NodeList labels;\u000a\u000a    void select();\u000a    attribute unsigned long selectionStart;\u000a    attribute unsigned long selectionEnd;\u000a    attribute DOMString selectionDirection;\u000a    [RaisesException] void setRangeText(DOMString replacement);\u000a    [RaisesException] void setRangeText(DOMString replacement,\u000a                                        unsigned long start,\u000a                                        unsigned long end,\u000a                                        optional SelectionMode selectionMode = \"preserve\");\u000a    [ImplementedAs=setSelectionRangeForBinding]\u000a    void setSelectionRange(unsigned long start,\u000a                           unsigned long end,\u000a                           optional DOMString direction);\u000a\u000a    // HTML autocapitalize proposal\u000a    // https://github.com/mounirlamouri/html-autocapitalize/blob/master/proposal.md\u000a    [Measure] attribute DOMString autocapitalize;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/RadioNodeList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/RadioNodeList.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (c) 2012 Motorola Mobility, Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY MOTOROLA MOBILITY, INC. AND ITS CONTRIBUTORS\u000a * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\u000a * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MOTOROLA MOBILITY, INC. OR ITS\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\u000a * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\u000a * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\u000a * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\u000a * THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#radionodelist\u000a\u000ainterface RadioNodeList : NodeList {\u000a    attribute DOMString value;\u000a\u000a    // TODO(tkent): We need to declare this indexed property getter because our\u000a    // IDL compiler doesn't support inheritance of indexed property\u000a    // getters. crbug.com/752877\u000a    [ImplementedAs=item] getter Node? (unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/forms/ValidityState.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/forms/ValidityState.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * This file is part of the WebKit project.\u000a *\u000a * Copyright (C) 2009 Michelangelo De Simone <micdesim@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a *\u000a */\u000a\u000a// https://html.spec.whatwg.org/#validitystate\u000a\u000ainterface ValidityState {\u000a    readonly attribute boolean valueMissing;\u000a    readonly attribute boolean typeMismatch;\u000a    readonly attribute boolean patternMismatch;\u000a    readonly attribute boolean tooLong;\u000a    readonly attribute boolean tooShort;\u000a    readonly attribute boolean rangeUnderflow;\u000a    readonly attribute boolean rangeOverflow;\u000a    readonly attribute boolean stepMismatch;\u000a    readonly attribute boolean badInput;\u000a    readonly attribute boolean customError;\u000a    readonly attribute boolean valid;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLMapElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLMapElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-map-element\u000a\u000ainterface HTMLMapElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    readonly attribute HTMLCollection areas;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLMarqueeElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLMarqueeElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2007 Apple Inc. All rights reserved\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#htmlmarqueeelement\u000a\u000ainterface HTMLMarqueeElement : HTMLElement {\u000a    [Reflect] attribute DOMString behavior;\u000a    [Reflect] attribute DOMString bgColor;\u000a    [Reflect] attribute DOMString direction;\u000a    [Reflect] attribute DOMString height;\u000a    [Reflect] attribute unsigned long hspace;\u000a    [RaisesException=Setter] attribute long loop;\u000a    attribute unsigned long scrollAmount;\u000a    attribute unsigned long scrollDelay;\u000a    [Reflect] attribute boolean trueSpeed;\u000a    [Reflect] attribute unsigned long vspace;\u000a    [Reflect] attribute DOMString width;\u000a\u000a    // FIXME: Implement the following event handler attributes\u000a    // https://bugs.webkit.org/show_bug.cgi?id=49788\u000a    // attribute EventHandler onbounce;\u000a    // attribute EventHandler onfinish;\u000a    // attribute EventHandler onstart;\u000a\u000a    void start();\u000a    void stop();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLMenuElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLMenuElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-menu-element\u000a\u000ainterface HTMLMenuElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLMenuElement-partial\u000a    [CEReactions, Reflect] attribute boolean compact;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLMetaElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLMetaElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-meta-element\u000a\u000ainterface HTMLMetaElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions, Reflect=http_equiv] attribute DOMString httpEquiv;\u000a    [CEReactions, Reflect] attribute DOMString content;\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLMetaElement-partial\u000a    [CEReactions, Reflect] attribute DOMString scheme;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLMeterElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLMeterElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-meter-element\u000a\u000ainterface HTMLMeterElement : HTMLElement {\u000a    [CEReactions] attribute double value;\u000a    [CEReactions] attribute double min;\u000a    [CEReactions] attribute double max;\u000a    [CEReactions] attribute double low;\u000a    [CEReactions] attribute double high;\u000a    [CEReactions] attribute double optimum;\u000a    readonly attribute NodeList labels;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLModElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLModElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-ins-element\u000a// https://html.spec.whatwg.org/#the-del-element\u000a\u000ainterface HTMLModElement : HTMLElement {\u000a    [CEReactions, Reflect, URL] attribute DOMString cite;\u000a    [CEReactions, Reflect] attribute DOMString dateTime;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLOListElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLOListElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-ol-element\u000a\u000ainterface HTMLOListElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute boolean reversed;\u000a    [CEReactions] attribute long start;\u000a    [CEReactions, Reflect] attribute DOMString type;\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLOListElement-partial\u000a    [CEReactions, Reflect] attribute boolean compact;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLObjectElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLObjectElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2009, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-object-element\u000a\u000a// TODO(yukishiino): HTMLObjectElement should not have [OverrideBuiltins].\u000a[\u000a    OverrideBuiltins,\u000a    ActiveScriptWrappable\u000a] interface HTMLObjectElement : HTMLElement {\u000a    [CEReactions, Reflect, URL] attribute DOMString data;\u000a    [CEReactions, Reflect] attribute DOMString type;\u000a    // TODO(foolip): attribute boolean typeMustMatch;\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions, Reflect] attribute DOMString useMap;\u000a    [ImplementedAs=formOwner] readonly attribute HTMLFormElement? form;\u000a    [CEReactions, Reflect] attribute DOMString width;\u000a    [CEReactions, Reflect] attribute DOMString height;\u000a    [CheckSecurity=ReturnValue] readonly attribute Document? contentDocument;\u000a    // TODO(shanmuga.m): The spec uses the WindowProxy type for this attribute.\u000a    readonly attribute Window? contentWindow;\u000a    [CheckSecurity=ReturnValue, RaisesException] Document? getSVGDocument();\u000a\u000a    readonly attribute boolean willValidate;\u000a    readonly attribute ValidityState validity;\u000a    readonly attribute DOMString validationMessage;\u000a    boolean checkValidity();\u000a    boolean reportValidity();\u000a    void setCustomValidity(DOMString error);\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLObjectElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a    [CEReactions, Reflect] attribute DOMString archive;\u000a    [CEReactions, Reflect] attribute DOMString code;\u000a    [CEReactions, Reflect] attribute boolean declare;\u000a    [CEReactions, Reflect] attribute unsigned long hspace;\u000a    [CEReactions, Reflect] attribute DOMString standby;\u000a    [CEReactions, Reflect] attribute unsigned long vspace;\u000a    [CEReactions, Reflect, URL] attribute DOMString codeBase;\u000a    [CEReactions, Reflect] attribute DOMString codeType;\u000a\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString border;\u000a\u000a    // TODO(foolip): These getters and setters are not in the spec.\u000a    [Custom, NotEnumerable] getter Node (DOMString name);\u000a    [Custom] setter Node (DOMString name, Node value);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLParagraphElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLParagraphElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-p-element\u000a[HTMLConstructor]\u000ainterface HTMLParagraphElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLParagraphElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLParamElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLParamElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-param-element\u000a\u000ainterface HTMLParamElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [CEReactions, Reflect] attribute DOMString value;\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLParamElement-partial\u000a    [CEReactions, Reflect] attribute DOMString type;\u000a    [CEReactions, Reflect] attribute DOMString valueType;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLPictureElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLPictureElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/#the-picture-element\u000a\u000ainterface HTMLPictureElement : HTMLElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLPreElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLPreElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All right reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-pre-element\u000a\u000ainterface HTMLPreElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLPreElement-partial\u000a    [CEReactions, Reflect] attribute long width;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLProgressElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLProgressElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-progress-element\u000a\u000ainterface HTMLProgressElement : HTMLElement {\u000a    [CEReactions] attribute double value;\u000a    [CEReactions] attribute double max;\u000a    readonly attribute double position;\u000a    readonly attribute NodeList labels;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLQuoteElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLQuoteElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-blockquote-element\u000a// https://html.spec.whatwg.org/#the-q-element\u000a\u000ainterface HTMLQuoteElement : HTMLElement {\u000a    [CEReactions, Reflect, URL] attribute DOMString cite;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLScriptElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLScriptElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/","https://w3c.github.io/webappsec-subresource-integrity/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-script-element\u000a\u000ainterface HTMLScriptElement : HTMLElement {\u000a    [CEReactions, Reflect, URL, RaisesException=Setter] attribute ScriptURLString src;\u000a    [CEReactions, Reflect] attribute DOMString type;\u000a    [CEReactions, Reflect, RuntimeEnabled=ModuleScripts] attribute boolean noModule;\u000a    [CEReactions, Reflect] attribute DOMString charset;\u000a    [CEReactions] attribute boolean async;\u000a    [CEReactions, Reflect] attribute boolean defer;\u000a    [CEReactions, Reflect, ReflectOnly=(\"anonymous\",\"use-credentials\"), ReflectEmpty=\"anonymous\", ReflectInvalid=\"anonymous\"] attribute DOMString? crossOrigin;\u000a    [CEReactions] attribute DOMString text;\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLScriptElement-partial\u000a    // TODO(foolip): The event and htmlFor attributes should return the empty\u000a    // string on getting, and do nothing on setting.\u000a    [CEReactions, Reflect] attribute DOMString event;\u000a    [CEReactions, Reflect=for] attribute DOMString htmlFor;\u000a\u000a    // Subresource Integrity\u000a    // https://w3c.github.io/webappsec-subresource-integrity/#HTMLScriptElement\u000a    [Reflect] attribute DOMString integrity;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLShadowElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLShadowElement.idl"},specUrls:["https://w3c.github.io/webcomponents/spec/shadow/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webcomponents/spec/shadow/#the-shadow-element\u000a\u000ainterface HTMLShadowElement : HTMLElement {\u000a    NodeList getDistributedNodes();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLSlotElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLSlotElement.idl"},specUrls:["https://w3c.github.io/webcomponents/spec/shadow/"],contents:"/*\u000a * Copyright (C) 2015 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webcomponents/spec/shadow/#the-slot-element\u000a\u000ainterface HTMLSlotElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString name;\u000a    [ImplementedAs=assignedNodesForBinding] sequence<Node> assignedNodes(optional AssignedNodesOptions options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLSourceElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLSourceElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2007, 2010 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-source-element\u000a\u000ainterface HTMLSourceElement : HTMLElement {\u000a    [CEReactions, Reflect, URL] attribute DOMString src;\u000a    [CEReactions] attribute DOMString type;\u000a\u000a    // https://html.spec.whatwg.org/#the-source-element-when-used-with-the-picture-element\u000a    [CEReactions, Reflect] attribute DOMString srcset;\u000a    [CEReactions, Reflect] attribute DOMString sizes;\u000a    [CEReactions, Reflect] attribute DOMString media;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLSpanElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLSpanElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Google, Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-span-element\u000a\u000ainterface HTMLSpanElement : HTMLElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLStyleElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLStyleElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-style-element\u000a\u000ainterface HTMLStyleElement : HTMLElement {\u000a    // TODO(foolip): The disabled attribute has been removed from the spec:\u000a    // https://www.w3.org/Bugs/Public/show_bug.cgi?id=14703\u000a    [Measure] attribute boolean disabled;\u000a    [CEReactions, Reflect] attribute DOMString media;\u000a    [CEReactions, Reflect] attribute DOMString type;\u000a\u000a    // HTMLStyleElement implements LinkStyle\u000a    // https://drafts.csswg.org/cssom/#the-linkstyle-interface\u000a    readonly attribute StyleSheet? sheet;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLTableCaptionElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLTableCaptionElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-caption-element\u000a\u000ainterface HTMLTableCaptionElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLTableCaptionElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLTableCellElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLTableCellElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#attributes-common-to-td-and-th-elements\u000a\u000ainterface HTMLTableCellElement : HTMLElement {\u000a    [CEReactions] attribute unsigned long colSpan;\u000a    [CEReactions] attribute unsigned long rowSpan;\u000a    // TODO(foolip): headers should be a [PutForwards=value] readonly attribute\u000a    // DOMTokenList.\u000a    [CEReactions, Reflect, TreatNullAs=NullString] attribute DOMString headers;\u000a    readonly attribute long cellIndex;\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLTableCellElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a    [CEReactions, Reflect] attribute DOMString axis;\u000a    [CEReactions, Reflect] attribute DOMString height;\u000a    [CEReactions, Reflect] attribute DOMString width;\u000a\u000a    [CEReactions, Reflect=char] attribute DOMString ch;\u000a    [CEReactions, Reflect=charoff] attribute DOMString chOff;\u000a    [CEReactions, Reflect] attribute boolean noWrap;\u000a    [CEReactions, Reflect] attribute DOMString vAlign;\u000a\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString bgColor;\u000a\u000a    // TODO(foolip): The spec has HTMLTableHeaderCellElement and\u000a    // HTMLTableDataCellElement interfaces for the th and td elements\u000a    // respectively. HTMLTableHeaderCellElement has the abbr and scope\u000a    // attributes, while HTMLTableDataCellElement has only abbr.\u000a    [CEReactions, Reflect] attribute DOMString abbr;\u000a    [CEReactions, Reflect, ReflectOnly=(\"row\", \"col\", \"rowgroup\", \"colgroup\")] attribute DOMString scope;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLTableColElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLTableColElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-colgroup-element\u000a// https://html.spec.whatwg.org/#the-col-element\u000a\u000ainterface HTMLTableColElement : HTMLElement {\u000a    [CEReactions] attribute unsigned long span;\u000a\u000a    // obsolete attributes\u000a    // https://html.spec.whatwg.org/#HTMLTableColElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a    [CEReactions, Reflect=char] attribute DOMString ch;\u000a    [CEReactions, Reflect=charoff] attribute DOMString chOff;\u000a    [CEReactions, Reflect] attribute DOMString vAlign;\u000a    [CEReactions, Reflect] attribute DOMString width;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLTableElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLTableElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-table-element\u000a\u000ainterface HTMLTableElement : HTMLElement {\u000a    [CEReactions, RaisesException=Setter] attribute HTMLTableCaptionElement? caption;\u000a    [CEReactions] HTMLTableCaptionElement createCaption();\u000a    [CEReactions] void deleteCaption();\u000a    [CEReactions, RaisesException=Setter] attribute HTMLTableSectionElement? tHead;\u000a    [CEReactions] HTMLTableSectionElement createTHead();\u000a    [CEReactions] void deleteTHead();\u000a    [CEReactions, RaisesException=Setter] attribute HTMLTableSectionElement? tFoot;\u000a    [CEReactions] HTMLTableSectionElement createTFoot();\u000a    [CEReactions] void deleteTFoot();\u000a    readonly attribute HTMLCollection tBodies;\u000a    [CEReactions] HTMLTableSectionElement createTBody();\u000a    readonly attribute HTMLCollection rows;\u000a    [CEReactions, RaisesException] HTMLTableRowElement insertRow(optional long index = -1);\u000a    [CEReactions, RaisesException] void deleteRow(long index);\u000a    // attribute boolean sortable;\u000a    // void stopSorting();\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLTableElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a    [CEReactions, Reflect] attribute DOMString border;\u000a    [CEReactions, Reflect] attribute DOMString frame;\u000a    [CEReactions, Reflect] attribute DOMString rules;\u000a    [CEReactions, Reflect] attribute DOMString summary;\u000a    [CEReactions, Reflect] attribute DOMString width;\u000a\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString bgColor;\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString cellPadding;\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString cellSpacing;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLTableRowElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLTableRowElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2010 Apple Inc. ALl rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-tr-element\u000a\u000ainterface HTMLTableRowElement : HTMLElement {\u000a    readonly attribute long rowIndex;\u000a    readonly attribute long sectionRowIndex;\u000a    readonly attribute HTMLCollection cells;\u000a    [CEReactions, RaisesException] HTMLElement insertCell(optional long index = -1);\u000a    [CEReactions, RaisesException] void deleteCell(long index);\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLTableRowElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a    [CEReactions, Reflect=char] attribute DOMString ch;\u000a    [CEReactions, Reflect=charoff] attribute DOMString chOff;\u000a    [CEReactions, Reflect] attribute DOMString vAlign;\u000a\u000a    [CEReactions, Reflect, TreatNullAs=EmptyString] attribute DOMString bgColor;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLTableSectionElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLTableSectionElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/","https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2007, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-tbody-element\u000a// https://html.spec.whatwg.org/#the-thead-element\u000a// https://html.spec.whatwg.org/#the-tfoot-element\u000a\u000ainterface HTMLTableSectionElement : HTMLElement {\u000a    readonly attribute HTMLCollection rows;\u000a    [CEReactions, RaisesException] HTMLElement insertRow(optional long index = -1);\u000a    [CEReactions, RaisesException] void deleteRow(long index);\u000a\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLTableSectionElement-partial\u000a    [CEReactions, Reflect] attribute DOMString align;\u000a    [CEReactions, Reflect=char] attribute DOMString ch;\u000a    [CEReactions, Reflect=charoff] attribute DOMString chOff;\u000a    [CEReactions, Reflect] attribute DOMString vAlign;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLTemplateElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLTemplateElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (c) 2012, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-template-element\u000a\u000ainterface HTMLTemplateElement : HTMLElement {\u000a    readonly attribute DocumentFragment content;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLTimeElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLTimeElement.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-time-element\u000a\u000a[HTMLConstructor]\u000ainterface HTMLTimeElement : HTMLElement {\u000a    [CEReactions, Reflect] attribute DOMString dateTime;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLTitleElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLTitleElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-title-element\u000a\u000ainterface HTMLTitleElement : HTMLElement {\u000a    [CEReactions] attribute DOMString text;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLTrackElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLTrackElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-track-element\u000a\u000ainterface HTMLTrackElement : HTMLElement {\u000a    [CEReactions] attribute DOMString kind;\u000a    [CEReactions, Reflect, URL] attribute DOMString src;\u000a    [CEReactions, Reflect] attribute DOMString srclang;\u000a    [CEReactions, Reflect] attribute DOMString label;\u000a    [CEReactions, Reflect] attribute boolean default;\u000a\u000a    const unsigned short NONE = 0;\u000a    const unsigned short LOADING = 1;\u000a    const unsigned short LOADED = 2;\u000a    const unsigned short ERROR = 3;\u000a    [ImplementedAs=getReadyState] readonly attribute unsigned short readyState;\u000a\u000a    readonly attribute TextTrack track;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLUListElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLUListElement.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2006, 2010 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-ul-element\u000a\u000ainterface HTMLUListElement : HTMLElement {\u000a    // obsolete members\u000a    // https://html.spec.whatwg.org/#HTMLUListElement-partial\u000a    [CEReactions, Reflect] attribute boolean compact;\u000a    [CEReactions, Reflect] attribute DOMString type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/media/HTMLAudioElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/media/HTMLAudioElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2007 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-audio-element\u000a\u000a[\u000a    NamedConstructor=Audio(optional DOMString src),\u000a    ConstructorCallWith=Document\u000a] interface HTMLAudioElement : HTMLMediaElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/HTMLUnknownElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/HTMLUnknownElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (c) 2011 Code Aurora Forum. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *     * Redistributions of source code must retain the above copyright\u000a *       notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a *       copyright notice, this list of conditions and the following\u000a *       disclaimer in the documentation and/or other materials provided\u000a *       with the distribution.\u000a *     * Neither the name of Code Aurora Forum, Inc. nor the names of its\u000a *       contributors may be used to endorse or promote products derived\u000a *       from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY EXPRESS OR IMPLIED\u000a * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\u000a * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT\u000a * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS\u000a * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\u000a * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\u000a * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\u000a * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\u000a * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\u000a * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\u000a * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#elements-in-the-dom\u000a\u000ainterface HTMLUnknownElement : HTMLElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/media/HTMLMediaElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/media/HTMLMediaElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2007, 2010, 2011, 2012 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#media-elements\u000a\u000aenum CanPlayTypeResult { \"\" /* empty string */, \"maybe\", \"probably\" };\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface HTMLMediaElement : HTMLElement {\u000a\u000a    // error state\u000a    readonly attribute MediaError? error;\u000a\u000a    // network state\u000a    [CEReactions, Reflect, URL] attribute DOMString src;\u000a    // FIXME: attribute MediaProvider? srcObject; crbug.com/387740\u000a    readonly attribute DOMString currentSrc;\u000a    [CEReactions, Reflect, ReflectOnly=(\"anonymous\",\"use-credentials\"), ReflectEmpty=\"anonymous\", ReflectInvalid=\"anonymous\"] attribute DOMString? crossOrigin;\u000a    const unsigned short NETWORK_EMPTY = 0;\u000a    const unsigned short NETWORK_IDLE = 1;\u000a    const unsigned short NETWORK_LOADING = 2;\u000a    const unsigned short NETWORK_NO_SOURCE = 3;\u000a    [ImplementedAs=getNetworkState] readonly attribute unsigned short networkState;\u000a    [CEReactions] attribute DOMString preload;\u000a    readonly attribute TimeRanges buffered;\u000a    void load();\u000a    CanPlayTypeResult canPlayType(DOMString type);\u000a\u000a    // ready state\u000a    const unsigned short HAVE_NOTHING = 0;\u000a    const unsigned short HAVE_METADATA = 1;\u000a    const unsigned short HAVE_CURRENT_DATA = 2;\u000a    const unsigned short HAVE_FUTURE_DATA = 3;\u000a    const unsigned short HAVE_ENOUGH_DATA = 4;\u000a    [ImplementedAs=getReadyState] readonly attribute unsigned short readyState;\u000a    readonly attribute boolean seeking;\u000a\u000a    // playback state\u000a    attribute double currentTime;\u000a    // FIXME: void fastSeek(double time);\u000a    readonly attribute unrestricted double duration;\u000a    // FIXME: Date getStartDate(); crbug.com/312699\u000a    readonly attribute boolean paused;\u000a    attribute double defaultPlaybackRate;\u000a    [RaisesException=Setter] attribute double playbackRate;\u000a    readonly attribute TimeRanges played;\u000a    readonly attribute TimeRanges seekable;\u000a    readonly attribute boolean ended;\u000a    [CEReactions, Reflect] attribute boolean autoplay;\u000a    [CEReactions, Reflect] attribute boolean loop;\u000a    [CallWith=ScriptState, ImplementedAs=playForBindings] Promise<void> play();\u000a    void pause();\u000a\u000a    // controls\u000a    [CEReactions, Reflect] attribute boolean controls;\u000a    // Spec: https://wicg.github.io/controls-list/html-output/multipage/embedded-content.html#attr-media-controlslist\u000a    [SameObject, PutForwards=value] readonly attribute DOMTokenList controlsList;\u000a    [RaisesException=Setter] attribute double volume;\u000a    attribute boolean muted;\u000a    [CEReactions, Reflect=muted] attribute boolean defaultMuted;\u000a\u000a    // tracks\u000a    [SameObject, RuntimeEnabled=AudioVideoTracks] readonly attribute AudioTrackList audioTracks;\u000a    [SameObject, RuntimeEnabled=AudioVideoTracks] readonly attribute VideoTrackList videoTracks;\u000a    [SameObject] readonly attribute TextTrackList textTracks;\u000a    [RaisesException] TextTrack addTextTrack(TextTrackKind kind, optional DOMString label = \"\", optional DOMString language = \"\");\u000a\u000a    // Non-standard APIs\u000a    // The number of bytes consumed by the media decoder.\u000a    [MeasureAs=PrefixedAudioDecodedByteCount] readonly attribute unsigned long webkitAudioDecodedByteCount;\u000a    [MeasureAs=PrefixedVideoDecodedByteCount] readonly attribute unsigned long webkitVideoDecodedByteCount;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/media/HTMLVideoElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/media/HTMLVideoElement.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2007, 2010 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-video-element\u000a\u000a[\u000a    ActiveScriptWrappable\u000a] interface HTMLVideoElement : HTMLMediaElement {\u000a    [CEReactions, Reflect] attribute unsigned long width;\u000a    [CEReactions, Reflect] attribute unsigned long height;\u000a    readonly attribute unsigned long videoWidth;\u000a    readonly attribute unsigned long videoHeight;\u000a    [CEReactions, Reflect, URL, Measure] attribute DOMString poster;\u000a\u000a    // Non-standard APIs\u000a    [RuntimeEnabled=PrefixedVideoFullscreen, DeprecateAs=PrefixedVideoSupportsFullscreen] readonly attribute boolean webkitSupportsFullscreen;\u000a    [RuntimeEnabled=PrefixedVideoFullscreen, DeprecateAs=PrefixedVideoDisplayingFullscreen] readonly attribute boolean webkitDisplayingFullscreen;\u000a\u000a    [RuntimeEnabled=PrefixedVideoFullscreen, DeprecateAs=PrefixedVideoEnterFullscreen, LogActivity, LogAllWorlds] void webkitEnterFullscreen();\u000a    [RuntimeEnabled=PrefixedVideoFullscreen, DeprecateAs=PrefixedVideoExitFullscreen] void webkitExitFullscreen();\u000a\u000a    // Note the different capitalization of the \"S\" in FullScreen.\u000a    [RuntimeEnabled=PrefixedVideoFullscreen, DeprecateAs=PrefixedVideoEnterFullScreen, ImplementedAs=webkitEnterFullscreen, LogActivity, LogAllWorlds] void webkitEnterFullScreen();\u000a    [RuntimeEnabled=PrefixedVideoFullscreen, DeprecateAs=PrefixedVideoExitFullScreen, ImplementedAs=webkitExitFullscreen] void webkitExitFullScreen();\u000a\u000a    // The number of frames that have been decoded and made available for\u000a    // playback.\u000a    [MeasureAs=PrefixedVideoDecodedFrameCount] readonly attribute unsigned long webkitDecodedFrameCount;\u000a\u000a    // The number of decoded frames that have been dropped by the player\u000a    // for performance reasons during playback.\u000a    [MeasureAs=PrefixedVideoDroppedFrameCount] readonly attribute unsigned long webkitDroppedFrameCount;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/media/MediaError.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/media/MediaError.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2007 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#error-codes\u000a\u000ainterface MediaError {\u000a    const unsigned short MEDIA_ERR_ABORTED = 1;\u000a    const unsigned short MEDIA_ERR_NETWORK = 2;\u000a    const unsigned short MEDIA_ERR_DECODE = 3;\u000a    const unsigned short MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\u000a    readonly attribute unsigned short code;\u000a    readonly attribute DOMString message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/ImageData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/ImageData.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008, 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#dom-imagedata\u000a// https://github.com/junov/CanvasColorSpace/blob/master/CanvasColorSpaceProposal.md#imagedata\u000a\u000atypedef (Uint8ClampedArray or Uint16Array or Float32Array) ImageDataArray;\u000a\u000a[\u000a    Constructor(unsigned long sw, unsigned long sh),\u000a    Constructor(Uint8ClampedArray data, unsigned long sw, optional unsigned long sh),\u000a    Exposed=(Window,Worker),\u000a    RaisesException=Constructor\u000a] interface ImageData {\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] ImageDataColorSettings getColorSettings();\u000a\u000a    readonly attribute unsigned long width;\u000a    readonly attribute unsigned long height;\u000a    readonly attribute Uint8ClampedArray data;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute ImageDataArray dataUnion;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/ImageDataColorSettings.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/ImageDataColorSettings.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/junov/CanvasColorSpace/blob/master/CanvasColorSpaceProposal.md#imageda\u000a\u000aenum ImageDataStorageFormat {\u000a  \"uint8\", // default\u000a  \"uint16\",\u000a  \"float32\",\u000a};\u000a\u000adictionary ImageDataColorSettings {\u000a  CanvasColorSpace colorSpace = \"legacy-srgb\";\u000a  ImageDataStorageFormat storageFormat = \"uint8\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/TextMetrics.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/TextMetrics.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#textmetrics\u000a\u000a// TODO(foolip): Exposed=(Window,Worker)\u000ainterface TextMetrics {\u000a    // x-direction\u000a    readonly attribute float width; // advance width\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double actualBoundingBoxLeft;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double actualBoundingBoxRight;\u000a\u000a    // y-direction\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double fontBoundingBoxAscent;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double fontBoundingBoxDescent;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double actualBoundingBoxAscent;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double actualBoundingBoxDescent;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double emHeightAscent;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double emHeightDescent;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double hangingBaseline;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double alphabeticBaseline;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double ideographicBaseline;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/TimeRanges.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/TimeRanges.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2007, 2010 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#time-ranges\u000a\u000ainterface TimeRanges {\u000a    readonly attribute unsigned long length;\u000a    [RaisesException] double start(unsigned long index);\u000a    [RaisesException] double end(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/VoidCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/VoidCallback.idl"},contents:"/*\u000a * Copyright (C) 2007 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// TODO(foolip): This callback interface was added for HTMLMediaElement's\u000a// addCuePoint() and removeCuePoint(), which briefly existed in 2007. It is no\u000a// longer used in HTML and should be moved to where it is used.\u000a\u000acallback interface VoidCallback {\u000a    void handleEvent();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/canvas/CanvasContextCreationAttributes.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/canvas/CanvasContextCreationAttributes.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// The spec for HTMLCanvasElement.getContext() defines the context\u000a// creation attributes as type \"any\". In order to eliminate custom\u000a// bindings for getContext(), we define a dictionary that contains the\u000a// union of all of the context types' attributes. Note that it is not\u000a// possible to use a union type for this purpose because two dictionary\u000a// types are not distinguishable.\u000a//\u000a// Fortunately, there aren't any context creation attributes which are\u000a// defined with different default values in different context\u000a// specifications. (The \"alpha\" value, in particular, has a default\u000a// value of true for both the Canvas2D and WebGL specifications.)\u000a//\u000a// The PermissiveDictionaryConversion extended attribute ignores\u000a// non-object types (like 'true' and 'false') passed to getContext() for\u000a// the attributes instead of raising TypeError, following the behavior\u000a// of the previous custom binding.\u000a//\u000a// N.B.: Web IDL doesn't support multiple inheritance of dictionaries.\u000a\u000aenum CanvasColorSpace {\u000a    \"srgb\", // default\u000a    \"rec2020\",\u000a    \"p3\",\u000a};\u000a\u000aenum CanvasPixelFormat {\u000a    \"8-8-8-8\", // default\u000a    \"10-10-10-2\",\u000a    \"12-12-12-12\",\u000a    \"float16\",\u000a};\u000a\u000a[PermissiveDictionaryConversion]\u000adictionary CanvasContextCreationAttributes {\u000a    // Canvas 2D attributes\u000a    boolean alpha = true;  // Also used for WebGL.\u000a    // TODO(crbug.com/637288): Do we keep \"legacy-srgb\" as the default?\u000a    // Must decide before shipping.\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] CanvasColorSpace colorSpace = \"legacy-srgb\";\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] CanvasPixelFormat pixelFormat = \"8-8-8-8\";\u000a\u000a    // WebGL attributes\u000a    boolean depth = true;\u000a    boolean stencil = false;\u000a    boolean antialias = true;\u000a    boolean premultipliedAlpha = true;\u000a    boolean preserveDrawingBuffer = false;\u000a    boolean failIfMajorPerformanceCaveat = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/custom/CustomElementRegistry.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/custom/CustomElementRegistry.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000ainterface CustomElementRegistry {\u000a    [CallWith=ScriptState, CEReactions, CustomElementCallbacks, RaisesException, MeasureAs=CustomElementRegistryDefine] void define(DOMString name, Function constructor, optional ElementDefinitionOptions options);\u000a    any get(DOMString name);\u000a    [CallWith=ScriptState,RaisesException] Promise<void> whenDefined(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/AudioTrack.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/AudioTrack.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/#audiotrack\u000a\u000a[\u000a    DependentLifetime,\u000a    RuntimeEnabled=AudioVideoTracks\u000a] interface AudioTrack {\u000a  readonly attribute DOMString id;\u000a  readonly attribute DOMString kind;\u000a  readonly attribute DOMString label;\u000a  readonly attribute DOMString language;\u000a  attribute boolean enabled;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/AudioTrackList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/AudioTrackList.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/#audiotracklist\u000a\u000a[\u000a    DependentLifetime,\u000a    RuntimeEnabled=AudioVideoTracks\u000a] interface AudioTrackList : EventTarget {\u000a  readonly attribute unsigned long length;\u000a  getter AudioTrack (unsigned long index);\u000a  AudioTrack? getTrackById(DOMString id);\u000a\u000a  attribute EventHandler onchange;\u000a  attribute EventHandler onaddtrack;\u000a  attribute EventHandler onremovetrack;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/TextTrack.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/TextTrack.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#texttrack\u000a\u000aenum TextTrackMode { \"disabled\",  \"hidden\",  \"showing\" };\u000aenum TextTrackKind { \"subtitles\",  \"captions\",  \"descriptions\",  \"chapters\",  \"metadata\" };\u000a\u000a[\u000a    DependentLifetime\u000a] interface TextTrack : EventTarget {\u000a    readonly attribute TextTrackKind kind;\u000a    readonly attribute DOMString label;\u000a    readonly attribute DOMString language;\u000a\u000a    readonly attribute DOMString id;\u000a    // readonly attribute DOMString inBandMetadataTrackDispatchType;\u000a\u000a    attribute TextTrackMode mode;\u000a\u000a    readonly attribute TextTrackCueList? cues;\u000a    readonly attribute TextTrackCueList? activeCues;\u000a\u000a    void addCue(TextTrackCue cue);\u000a    [RaisesException] void removeCue(TextTrackCue cue);\u000a\u000a    attribute EventHandler oncuechange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/TextTrackCue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/TextTrackCue.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#texttrackcue\u000a\u000a[\u000a    DependentLifetime\u000a] interface TextTrackCue : EventTarget {\u000a    readonly attribute TextTrack? track;\u000a\u000a    attribute DOMString id;\u000a    attribute double startTime;\u000a    attribute double endTime;\u000a    attribute boolean pauseOnExit;\u000a\u000a    attribute EventHandler onenter;\u000a    attribute EventHandler onexit;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/TextTrackCueList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/TextTrackCueList.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#texttrackcuelist\u000a\u000ainterface TextTrackCueList {\u000a    readonly attribute unsigned long length;\u000a    getter TextTrackCue (unsigned long index);\u000a    TextTrackCue? getCueById(DOMString id);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/TextTrackList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/TextTrackList.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#texttracklist\u000a\u000a[\u000a    DependentLifetime\u000a] interface TextTrackList : EventTarget {\u000a    readonly attribute unsigned long length;\u000a    getter TextTrack (unsigned long index);\u000a    TextTrack? getTrackById(DOMString id);\u000a\u000a    attribute EventHandler onchange;\u000a    attribute EventHandler onaddtrack;\u000a    attribute EventHandler onremovetrack;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/TrackEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/TrackEvent.idl"},contents:"/*\u000a * Copyright (C) 2011 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/embedded-content.html#the-trackevent-interface\u000a\u000a[\u000a    Constructor(DOMString type, optional TrackEventInit eventInitDict)\u000a] interface TrackEvent : Event {\u000a    readonly attribute (VideoTrack or AudioTrack or TextTrack)? track;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/TrackEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/TrackEventInit.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/embedded-content.html#the-trackevent-interface\u000a\u000adictionary TrackEventInit : EventInit {\u000a    (VideoTrack or AudioTrack or TextTrack)? track;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/VideoTrack.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/VideoTrack.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/#videotrack\u000a\u000a[\u000a    DependentLifetime,\u000a    RuntimeEnabled=AudioVideoTracks\u000a] interface VideoTrack {\u000a  readonly attribute DOMString id;\u000a  readonly attribute DOMString kind;\u000a  readonly attribute DOMString label;\u000a  readonly attribute DOMString language;\u000a  attribute boolean selected;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/VideoTrackList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/VideoTrackList.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/#videotracklist\u000a\u000a[\u000a    DependentLifetime,\u000a    RuntimeEnabled=AudioVideoTracks\u000a] interface VideoTrackList : EventTarget {\u000a  readonly attribute unsigned long length;\u000a  getter VideoTrack (unsigned long index);\u000a  VideoTrack? getTrackById(DOMString id);\u000a  readonly attribute long selectedIndex;\u000a\u000a  attribute EventHandler onchange;\u000a  attribute EventHandler onaddtrack;\u000a  attribute EventHandler onremovetrack;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/vtt/VTTCue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/vtt/VTTCue.idl"},specUrls:["https://w3c.github.io/webvtt/"],contents:"/*\u000a * Copyright (c) 2013, Opera Software ASA. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a * 3. Neither the name of Opera Software ASA nor the names of its\u000a *    contributors may be used to endorse or promote products derived\u000a *    from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\u000a * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\u000a * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\u000a * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\u000a * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\u000a * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\u000a * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\u000a * OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webvtt/#the-vttcue-interface\u000a\u000aenum AutoKeyword { \"auto\" };\u000aenum DirectionSetting { \"\" /* horizontal */, \"rl\", \"lr\" };\u000a// enum LineAlignSetting { \"start\", \"middle\", \"end\" };\u000a// enum PositionAlignSetting { \"start\", \"middle\", \"end\", \"auto\" };\u000aenum AlignSetting { \"start\", \"center\", \"end\", \"left\", \"right\" };\u000a\u000a[\u000a    Constructor(double startTime, double endTime, DOMString text),\u000a    ConstructorCallWith=Document,\u000a    DependentLifetime\u000a] interface VTTCue : TextTrackCue {\u000a    [RuntimeEnabled=WebVTTRegions] attribute VTTRegion? region;\u000a    attribute DirectionSetting vertical;\u000a    attribute boolean snapToLines;\u000a    attribute (double or AutoKeyword) line;\u000a    // attribute LineAlignSetting lineAlign;\u000a    [RaisesException=Setter] attribute (double or AutoKeyword) position;\u000a    // attribute PositionAlignSetting positionAlign;\u000a    [RaisesException=Setter] attribute double size;\u000a    attribute AlignSetting align;\u000a    attribute DOMString text;\u000a    DocumentFragment getCueAsHTML();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/html/track/vtt/VTTRegion.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/html/track/vtt/VTTRegion.idl"},specUrls:["https://w3c.github.io/webvtt/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webvtt/#the-vttregion-interface\u000a\u000aenum ScrollSetting { \"\" /* none */, \"up\" };\u000a\u000a[\u000a    Constructor,\u000a    RuntimeEnabled=WebVTTRegions\u000a] interface VTTRegion {\u000a    attribute DOMString id;\u000a    [RaisesException=Setter] attribute double width;\u000a    [RaisesException=Setter] attribute long lines;\u000a    [RaisesException=Setter] attribute double regionAnchorX;\u000a    [RaisesException=Setter] attribute double regionAnchorY;\u000a    [RaisesException=Setter] attribute double viewportAnchorX;\u000a    [RaisesException=Setter] attribute double viewportAnchorY;\u000a    attribute ScrollSetting scroll;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/imagebitmap/ImageBitmap.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/imagebitmap/ImageBitmap.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"// Copyright 2013 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/#images\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface ImageBitmap {\u000a    readonly attribute unsigned long width;\u000a    readonly attribute unsigned long height;\u000a    void close();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/imagebitmap/ImageBitmapFactories.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/imagebitmap/ImageBitmapFactories.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (c) 2013, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#imagebitmapfactories\u000a\u000atypedef (HTMLImageElement or\u000a         SVGImageElement or\u000a         HTMLVideoElement or\u000a         HTMLCanvasElement or\u000a         Blob or\u000a         ImageData or\u000a         ImageBitmap or\u000a         OffscreenCanvas) ImageBitmapSource;\u000a\u000a[\u000a    LegacyTreatAsPartialInterface,\u000a    NoInterfaceObject, // Always used on target of 'implements'\u000a    Exposed=(Window,Worker)\u000a] interface ImageBitmapFactories {\u000a    [CallWith=ScriptState] Promise createImageBitmap(\u000a        ImageBitmapSource imageBitmap, optional ImageBitmapOptions options);\u000a    [CallWith=ScriptState] Promise createImageBitmap(\u000a        ImageBitmapSource imageBitmap, long sx, long sy, long sw, long sh, optional ImageBitmapOptions options);\u000a};\u000a\u000aWindow implements ImageBitmapFactories;\u000aWorkerGlobalScope implements ImageBitmapFactories;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/imagebitmap/ImageBitmapOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/imagebitmap/ImageBitmapOptions.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/#imagebitmapoptions\u000a\u000aenum ImageOrientation { \"none\", \"flipY\" };\u000aenum PremultiplyAlpha { \"none\", \"premultiply\", \"default\" };\u000aenum ColorSpaceConversion { \"none\", \"default\", \"srgb\", \"linear-rgb\", \"rec2020\", \"p3\" };\u000a[RuntimeEnabled=ExperimentalCanvasFeatures] enum ResizeQuality { \"pixelated\", \"low\", \"medium\", \"high\" };\u000adictionary ImageBitmapOptions {\u000a    ImageOrientation imageOrientation = \"none\";\u000a    PremultiplyAlpha premultiplyAlpha = \"default\";\u000a    ColorSpaceConversion colorSpaceConversion = \"default\";\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures, EnforceRange] unsigned long resizeWidth;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures, EnforceRange] unsigned long resizeHeight;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] ResizeQuality resizeQuality = \"low\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/input/InputDeviceCapabilities.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/input/InputDeviceCapabilities.idl"},specUrls:["https://wicg.github.io/InputDeviceCapabilities/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Represents capabilities for a group of related input devices.\u000a// To ease implementation, developers cannot rely on comparing two\u000a// InputDeviceCapabilities instances for equality. Now we only have two\u000a// InputDeviceCapabilities instances: one for devices which send touch\u000a// events, and one for those that don't, because currently all we care\u000a// about is if the input device fires touch events or not.\u000a\u000a// https://wicg.github.io/InputDeviceCapabilities/#the-inputdevicecapabilities-interface\u000a\u000a[\u000a    Constructor(optional InputDeviceCapabilitiesInit deviceInitDict)\u000a] interface InputDeviceCapabilities {\u000a\u000a    // Whether this device dispatches touch events for movement.  This is used to detect\u000a    // mouse events which represent only an action that has already been handled  by\u000a    // touch event handlers.\u000a    [Measure] readonly attribute boolean firesTouchEvents;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/input/InputDeviceCapabilitiesInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/input/InputDeviceCapabilitiesInit.idl"},specUrls:["https://wicg.github.io/InputDeviceCapabilities/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/InputDeviceCapabilities/#the-inputdevicecapabilities-interface\u000a\u000adictionary InputDeviceCapabilitiesInit {\u000a    boolean firesTouchEvents = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/input/Touch.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/input/Touch.idl"},specUrls:["https://w3c.github.io/touch-events/"],contents:"/*\u000a * Copyright 2008, The Android Open Source Project\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/touch-events/#touch-interface\u000a\u000a[\u000a    Constructor(TouchInit initDict),\u000a    ConstructorCallWith=Document\u000a] interface Touch {\u000a    readonly attribute long identifier;\u000a    readonly attribute EventTarget target;\u000a    readonly attribute double screenX;\u000a    readonly attribute double screenY;\u000a    readonly attribute double clientX;\u000a    readonly attribute double clientY;\u000a    readonly attribute double pageX;\u000a    readonly attribute double pageY;\u000a    readonly attribute float radiusX;\u000a    readonly attribute float radiusY;\u000a    readonly attribute float rotationAngle;\u000a    readonly attribute float force;\u000a\u000a    // Canvas Hit Regions\u000a    // https://html.spec.whatwg.org/multipage/scripting.html#Touch-partial\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute DOMString? region;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/input/TouchInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/input/TouchInit.idl"},specUrls:["https://w3c.github.io/touch-events/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/touch-events/#touch-interface\u000a\u000adictionary TouchInit {\u000a    required long        identifier;\u000a    required EventTarget target;\u000a             double      clientX = 0;\u000a             double      clientY = 0;\u000a             double      screenX = 0;\u000a             double      screenY = 0;\u000a             double      pageX = 0;\u000a             double      pageY = 0;\u000a             float       radiusX = 0;\u000a             float       radiusY = 0;\u000a             float       rotationAngle = 0;\u000a             float       force = 0;\u000a\u000a             // Canvas Hit Regions\u000a             // https://github.com/whatwg/html/issues/547\u000a             DOMString? region = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/input/TouchList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/input/TouchList.idl"},specUrls:["https://w3c.github.io/touch-events/"],contents:"/*\u000a * Copyright 2008, The Android Open Source Project\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/touch-events/#touchlist-interface\u000a\u000ainterface TouchList {\u000a    readonly attribute unsigned long length;\u000a    getter Touch? item(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/inspector/DevToolsHost.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/inspector/DevToolsHost.idl"},contents:"/*\u000a * Copyright (C) 2007, 2008 Apple Inc. All rights reserved.\u000a * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\u000a * Copyright (C) 2009 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface DevToolsHost {\u000a    float zoomFactor();\u000a\u000a    void copyText(DOMString text);\u000a\u000a    [Custom] DOMString platform();\u000a    [Custom] void showContextMenuAtPoint(float x, float y, any items, optional Document document);\u000a    void sendMessageToEmbedder(DOMString message);\u000a\u000a    DOMString getSelectionBackgroundColor();\u000a    DOMString getSelectionForegroundColor();\u000a\u000a    boolean isUnderTest();\u000a    boolean isHostedMode();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/inspector/InspectorOverlayHost.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/inspector/InspectorOverlayHost.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface InspectorOverlayHost {\u000a    void resume();\u000a    void stepOver();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/intersection_observer/IntersectionObserver.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/intersection_observer/IntersectionObserver.idl"},specUrls:["https://wicg.github.io/IntersectionObserver/","https://wicg.github.io/IntersectionObserver/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/IntersectionObserver/#intersection-observer-callback\u000a\u000acallback IntersectionObserverCallback = void (sequence<IntersectionObserverEntry> entries, IntersectionObserver observer);\u000a\u000a// https://wicg.github.io/IntersectionObserver/#intersection-observer-interface\u000a\u000a[\u000a    Constructor(IntersectionObserverCallback callback, optional IntersectionObserverInit options),\u000a    ConstructorCallWith=ScriptState,\u000a    MeasureAs=IntersectionObserver_Constructor,\u000a    RaisesException=Constructor,\u000a    DependentLifetime\u000a] interface IntersectionObserver {\u000a    readonly attribute Element? root;\u000a    readonly attribute DOMString rootMargin;\u000a    // https://github.com/WICG/IntersectionObserver/issues/114\u000a    readonly attribute FrozenArray<double> thresholds;\u000a    [RaisesException] void observe(Element target);\u000a    [RaisesException] void unobserve(Element target);\u000a    [RaisesException] void disconnect();\u000a    [RaisesException] sequence<IntersectionObserverEntry> takeRecords();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/intersection_observer/IntersectionObserverEntry.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/intersection_observer/IntersectionObserverEntry.idl"},specUrls:["https://wicg.github.io/IntersectionObserver/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/IntersectionObserver/#intersection-observer-entry\u000a\u000ainterface IntersectionObserverEntry {\u000a    readonly attribute DOMHighResTimeStamp time;\u000a    // TODO(szager): |rootBounds| should not be nullable.\u000a    readonly attribute DOMRectReadOnly? rootBounds;\u000a    readonly attribute DOMRectReadOnly boundingClientRect;\u000a    readonly attribute DOMRectReadOnly intersectionRect;\u000a    readonly attribute boolean isIntersecting;\u000a    readonly attribute double intersectionRatio;\u000a    readonly attribute Element target;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/intersection_observer/IntersectionObserverInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/intersection_observer/IntersectionObserverInit.idl"},specUrls:["https://wicg.github.io/IntersectionObserver/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/IntersectionObserver/#intersection-observer-init\u000a\u000adictionary IntersectionObserverInit {\u000a    Element? root = null;\u000a    DOMString rootMargin = \"0px\";\u000a    (double or sequence<double>) threshold = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/loader/appcache/ApplicationCache.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/loader/appcache/ApplicationCache.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008, 2009 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#application-cache-api\u000a\u000a[\u000a    DoNotCheckConstants\u000a    // TODO(foolip): Exposed=(Window,SharedWorker)\u000a] interface ApplicationCache : EventTarget {\u000a    // update status\u000a    const unsigned short UNCACHED = 0;\u000a    const unsigned short IDLE = 1;\u000a    const unsigned short CHECKING = 2;\u000a    const unsigned short DOWNLOADING = 3;\u000a    const unsigned short UPDATEREADY = 4;\u000a    const unsigned short OBSOLETE = 5;\u000a    readonly attribute unsigned short status;\u000a\u000a    // updates\u000a    [RaisesException] void update();\u000a    void abort();\u000a    [RaisesException] void swapCache();\u000a\u000a    // events\u000a    attribute EventHandler onchecking;\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onnoupdate;\u000a    attribute EventHandler ondownloading;\u000a    attribute EventHandler onprogress;\u000a    attribute EventHandler onupdateready;\u000a    attribute EventHandler oncached;\u000a    attribute EventHandler onobsolete;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/offscreencanvas/ImageEncodeOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/offscreencanvas/ImageEncodeOptions.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/scripting.html#the-offscreencanvas-interface\u000a\u000adictionary ImageEncodeOptions {\u000a  DOMString type = \"image/png\";\u000a  unrestricted double quality = 1.0; // Defaults to 1.0 if value is outside 0:1 range\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/offscreencanvas/OffscreenCanvas.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/offscreencanvas/OffscreenCanvas.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/scripting.html#the-offscreencanvas-interface\u000a\u000a[\u000a    Constructor([EnforceRange] unsigned long width, [EnforceRange] unsigned long height),\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=ExperimentalCanvasFeatures,\u000a    MeasureAs=OffscreenCanvas\u000a] interface OffscreenCanvas : EventTarget {\u000a    [EnforceRange] attribute unsigned long width;\u000a    [EnforceRange] attribute unsigned long height;\u000a\u000a    [CallWith=ScriptState, RaisesException] ImageBitmap transferToImageBitmap();\u000a    [MeasureAs=OffscreenCanvasConvertToBlob, RaisesException, CallWith=ScriptState] Promise<Blob> convertToBlob(optional ImageEncodeOptions options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/page/PagePopupController.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/page/PagePopupController.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// PagePopupController provides functions used by form control popup\u000a// implementations, and it's not exposed to the Web. WebPagePopupImpl class\u000a// enables this interface by provideContextFeaturesTo().\u000a[\u000a    NoInterfaceObject,\u000a    RuntimeEnabled=PagePopup\u000a] interface PagePopupController {\u000a    void setValueAndClosePopup(long numberValue, DOMString stringValue);\u000a    void setValue(DOMString value);\u000a    void closePopup();\u000a    void selectFontsFromOwnerDocument(Document targetDocument);\u000a    DOMString localizeNumberString(DOMString numberString);\u000a    DOMString formatMonth(long year, long zeroBaseMonth);\u000a    DOMString formatShortMonth(long year, long zeroBaseMonth);\u000a    DOMString formatWeek(long year, long weekNumber, DOMString localizedStartDate);\u000a    // window.resizeTo/moveTo are not suitable because LocalDOMWindow adjusts\u000a    // rectangle to fit in the current screen. Popups sometimes need to be\u000a    // positioned on other screens.\u000a    void setWindowRect(long x, long y,long width, long height);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/page/scrolling/ScrollState.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/page/scrolling/ScrollState.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://docs.google.com/document/d/1VnvAqeWFG9JFZfgG5evBqrLGDZYRE5w6G5jEDORekPY\u000a\u000a[\u000a  Constructor(optional ScrollStateInit scrollStateInit),\u000a  RuntimeEnabled = ScrollCustomization\u000a] interface ScrollState\u000a{\u000a    readonly attribute double deltaX;\u000a    readonly attribute double deltaY;\u000a    readonly attribute long positionX;\u000a    readonly attribute long positionY;\u000a    readonly attribute double velocityX;\u000a    readonly attribute double velocityY;\u000a    readonly attribute boolean isBeginning;\u000a    readonly attribute boolean inInertialPhase;\u000a    readonly attribute boolean isEnding;\u000a    readonly attribute boolean fromUserInput;\u000a    readonly attribute boolean isDirectManipulation;\u000a    readonly attribute double deltaGranularity;\u000a\u000a    [RaisesException] void consumeDelta(double x, double y);\u000a    void distributeToScrollChainDescendant();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/page/scrolling/ScrollStateCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/page/scrolling/ScrollStateCallback.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://docs.google.com/document/d/1VnvAqeWFG9JFZfgG5evBqrLGDZYRE5w6G5jEDORekPY\u000a\u000a[\u000a    RuntimeEnabled=ScrollCustomization\u000a] callback interface ScrollStateCallback {\u000a    void handleEvent(ScrollState scrollState);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/page/scrolling/ScrollStateInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/page/scrolling/ScrollStateInit.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://docs.google.com/document/d/1VnvAqeWFG9JFZfgG5evBqrLGDZYRE5w6G5jEDORekPY\u000a\u000adictionary ScrollStateInit {\u000a    double deltaX = 0;\u000a    double deltaY = 0;\u000a    double deltaXHint = 0;\u000a    double deltaYHint = 0;\u000a    long positionX = 0;\u000a    long positionY = 0;\u000a    double velocityX = 0;\u000a    double velocityY = 0;\u000a    boolean isBeginning = false;\u000a    boolean isInInertialPhase = false;\u000a    boolean isEnding = false;\u000a    boolean shouldPropagate = true;\u000a    boolean fromUserInput = false;\u000a    boolean isDirectManipulation = false;\u000a    double deltaGranularity = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/resize_observer/ResizeObserverEntry.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/resize_observer/ResizeObserverEntry.idl"},specUrls:["https://wicg.github.io/ResizeObserver/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/ResizeObserver/#resize-observer-entry-interface\u000a\u000a[\u000a    RuntimeEnabled=ResizeObserver\u000a] interface ResizeObserverEntry {\u000a    readonly attribute Element target;\u000a    readonly attribute DOMRectReadOnly contentRect;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/resize_observer/ResizeObserver.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/resize_observer/ResizeObserver.idl"},specUrls:["https://wicg.github.io/ResizeObserver/","https://wicg.github.io/ResizeObserver/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/ResizeObserver/#resize-observer-callback\u000a\u000acallback ResizeObserverCallback = void (sequence<ResizeObserverEntry> entries, ResizeObserver observer);\u000a\u000a// https://wicg.github.io/ResizeObserver/#resize-observer-interface\u000a\u000a[\u000a    Constructor(ResizeObserverCallback callback),\u000a    ConstructorCallWith=Document,\u000a    RuntimeEnabled=ResizeObserver\u000a] interface ResizeObserver {\u000a    void observe(Element target);\u000a    void unobserve(Element target);\u000a    void disconnect();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/streams/UnderlyingSourceBase.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/streams/UnderlyingSourceBase.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// This is not a spec interface. Instead, it is used to generate bindings\u000a// so that Blink code which wishes to create a stream can derive from\u000a// UnderlyingSourceBase, and a JavaScript object can then be generated\u000a// automatically for use in initializing a ReadableStream.\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a]\u000ainterface UnderlyingSourceBase {\u000a    [CallWith=ScriptState, ImplementedAs=startWrapper] Promise<void> start(any stream);\u000a    [CallWith=ScriptState] Promise<void> pull();\u000a    [CallWith=ScriptState, ImplementedAs=cancelWrapper] Promise<void> cancel([Default=Undefined] optional any reason);\u000a\u000a    void notifyLockAcquired();\u000a    void notifyLockReleased();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAElement.idl"},specUrls:["https://svgwg.org/svg2-draft/linking.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/linking.html#InterfaceSVGAElement\u000a\u000ainterface SVGAElement : SVGGraphicsElement {\u000a    [ImplementedAs=svgTarget, Measure] readonly attribute SVGAnimatedString target;\u000a};\u000a\u000aSVGAElement implements SVGURIReference;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAngle.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAngle.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>\u000a * Copyright (C) 2004, 2005 Rob Buis <buis@kde.org>\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGAngle\u000a\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGAngleTearOff\u000a] interface SVGAngle {\u000a    // Angle Unit Types\u000a    const unsigned short SVG_ANGLETYPE_UNKNOWN = 0;\u000a    const unsigned short SVG_ANGLETYPE_UNSPECIFIED = 1;\u000a    const unsigned short SVG_ANGLETYPE_DEG = 2;\u000a    const unsigned short SVG_ANGLETYPE_RAD = 3;\u000a    const unsigned short SVG_ANGLETYPE_GRAD = 4;\u000a\u000a    readonly attribute unsigned short unitType;\u000a    [RaisesException=Setter] attribute float value;\u000a    [RaisesException=Setter] attribute float valueInSpecifiedUnits;\u000a    [RaisesException=Setter] attribute DOMString valueAsString;\u000a\u000a    [RaisesException] void newValueSpecifiedUnits(unsigned short unitType, float valueInSpecifiedUnits);\u000a    [RaisesException] void convertToSpecifiedUnits(unsigned short unitType);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimateMotionElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimateMotionElement.idl"},specUrls:["https://svgwg.org/specs/animations/"],contents:"/*\u000a * Copyright (C) Research In Motion Limited 2011. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/specs/animations/#InterfaceSVGAnimateMotionElement\u000a\u000ainterface SVGAnimateMotionElement : SVGAnimationElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimateElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimateElement.idl"},specUrls:["https://svgwg.org/specs/animations/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/specs/animations/#InterfaceSVGAnimateElement\u000a\u000ainterface SVGAnimateElement : SVGAnimationElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimateTransformElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimateTransformElement.idl"},specUrls:["https://svgwg.org/specs/animations/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/specs/animations/#InterfaceSVGAnimateTransformElement\u000a\u000ainterface SVGAnimateTransformElement : SVGAnimationElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedAngle.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedAngle.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedAngle\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGAnimatedAngle {\u000a    readonly attribute SVGAngle baseVal;\u000a    readonly attribute SVGAngle animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedBoolean.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedBoolean.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedBoolean\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGAnimatedBoolean {\u000a    [RaisesException=Setter] attribute boolean baseVal;\u000a    readonly attribute boolean animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedEnumeration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedEnumeration.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedEnumeration\u000a\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGAnimatedEnumerationBase\u000a] interface SVGAnimatedEnumeration {\u000a    [RaisesException=Setter] attribute unsigned short baseVal;\u000a    readonly attribute unsigned short animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedLength.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedLength.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedLength\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGAnimatedLength {\u000a    readonly attribute SVGLength baseVal;\u000a    readonly attribute SVGLength animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedLengthList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedLengthList.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedLengthList\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGAnimatedLengthList {\u000a    readonly attribute SVGLengthList baseVal;\u000a    readonly attribute SVGLengthList animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedNumber.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedNumber.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedNumber\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGAnimatedNumber {\u000a    [RaisesException=Setter] attribute float baseVal;\u000a    readonly attribute float animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedInteger.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedInteger.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedInteger\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGAnimatedInteger {\u000a    [RaisesException=Setter] attribute long baseVal;\u000a    readonly attribute long animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedNumberList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedNumberList.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedNumberList\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGAnimatedNumberList {\u000a    readonly attribute SVGNumberList baseVal;\u000a    readonly attribute SVGNumberList animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedPreserveAspectRatio.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedPreserveAspectRatio.idl"},specUrls:["https://svgwg.org/svg2-draft/coords.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/coords.html#InterfaceSVGAnimatedPreserveAspectRatio\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGAnimatedPreserveAspectRatio {\u000a    readonly attribute SVGPreserveAspectRatio baseVal;\u000a    readonly attribute SVGPreserveAspectRatio animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedRect.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedRect.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedRect\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGAnimatedRect {\u000a    // TODO(foolip): SVGRect should be DOMRectReadOnly.\u000a    readonly attribute SVGRect baseVal;\u000a    readonly attribute SVGRect animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedString.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedString.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGAnimatedString\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGAnimatedString {\u000a    [RaisesException=Setter] attribute DOMString baseVal;\u000a    readonly attribute DOMString animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimatedTransformList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimatedTransformList.idl"},specUrls:["https://svgwg.org/svg2-draft/coords.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/coords.html#InterfaceSVGAnimatedTransformList\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGAnimatedTransformList {\u000a    [MeasureAs=SVGAnimatedTransformListBaseVal] readonly attribute SVGTransformList baseVal;\u000a    readonly attribute SVGTransformList animVal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGAnimationElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGAnimationElement.idl"},specUrls:["https://svgwg.org/specs/animations/"],contents:"/*\u000a * Copyright (C) 2006, 2008 Apple Inc. All rights reserved.\u000a * Copyright (C) 2009 Cameron McCormack <cam@mcc.id.au>\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/specs/animations/#InterfaceSVGAnimationElement\u000a\u000a[RuntimeEnabled=SMIL]\u000ainterface SVGAnimationElement : SVGElement {\u000a    readonly attribute SVGElement targetElement;\u000a\u000a    attribute EventHandler onbegin;\u000a    attribute EventHandler onend;\u000a    attribute EventHandler onrepeat;\u000a\u000a    [MeasureAs=SVGSMILAnimationElementTiming, RaisesException] float getStartTime();\u000a    [MeasureAs=SVGSMILAnimationElementTiming] float getCurrentTime();\u000a    [MeasureAs=SVGSMILAnimationElementTiming, RaisesException] float getSimpleDuration();\u000a\u000a    [MeasureAs=SVGSMILBeginEndAnimationElement] void beginElement();\u000a    [MeasureAs=SVGSMILBeginEndAnimationElement] void beginElementAt(float offset);\u000a    [MeasureAs=SVGSMILBeginEndAnimationElement] void endElement();\u000a    [MeasureAs=SVGSMILBeginEndAnimationElement] void endElementAt(float offset);\u000a};\u000a\u000aSVGAnimationElement implements SVGTests;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGCircleElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGCircleElement.idl"},specUrls:["https://svgwg.org/svg2-draft/shapes.html"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/shapes.html#InterfaceSVGCircleElement\u000a\u000ainterface SVGCircleElement : SVGGeometryElement {\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength cx;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength cy;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength r;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGClipPathElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGClipPathElement.idl"},specUrls:["https://drafts.fxtf.org/css-masking-1/"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/css-masking-1/#InterfaceSVGClipPathElement\u000a\u000a// TODO(foolip): SVGClipPathElement should inherit from SVGElement and\u000a// implement SVGUnitTypes. The transform attribute (which is on\u000a// SVGGraphicsElement) should also be on SVGClipPathElement.\u000ainterface SVGClipPathElement : SVGGraphicsElement {\u000a    [Measure] readonly attribute SVGAnimatedEnumeration clipPathUnits;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGComponentTransferFunctionElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGComponentTransferFunctionElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGComponentTransferFunctionElement\u000a\u000a[\u000a    DoNotCheckConstants\u000a] interface SVGComponentTransferFunctionElement : SVGElement {\u000a    // Component Transfer Types\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN  = 0;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY = 1;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_TABLE    = 2;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE = 3;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_LINEAR   = 4;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_GAMMA    = 5;\u000a\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration type;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumberList  tableValues;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber      slope;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber      intercept;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber      amplitude;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber      exponent;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber      offset;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGDefsElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGDefsElement.idl"},specUrls:["https://svgwg.org/svg2-draft/struct.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/struct.html#InterfaceSVGDefsElement\u000a\u000ainterface SVGDefsElement : SVGGraphicsElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGDiscardElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGDiscardElement.idl"},specUrls:["https://svgwg.org/specs/animations/"],contents:"/*\u000a * Copyright (C) 2014 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/specs/animations/#InterfaceSVGDiscardElement\u000a\u000a[RuntimeEnabled=SMIL]\u000ainterface SVGDiscardElement : SVGElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGDocument.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGDocument.idl"},specUrls:["https://svgwg.org/svg2-draft/struct.html"],contents:"/*\u000a * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>\u000a * Copyright (C) 2004, 2005 Rob Buis <buis@kde.org>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/struct.html#InterfaceDocumentExtensions\u000a\u000a[\u000a    ImplementedAs=SVGDocumentExtensions\u000a] partial interface Document {\u000a    [MeasureAs=SVGDocumentRootElement] readonly attribute SVGSVGElement rootElement;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGElement.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html","https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>\u000a * Copyright (C) 2004, 2005 Rob Buis <buis@kde.org>\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGElement\u000a\u000ainterface SVGElement : Element {\u000a    [MeasureAs=SVGClassName] readonly attribute SVGAnimatedString className;\u000a    [SameObject, PerWorldBindings] readonly attribute DOMStringMap dataset;\u000a    // CSS Object Model (CSSOM)\u000a    // https://drafts.csswg.org/cssom/#the-elementcssinlinestyle-interface\u000a    [SameObject, PutForwards=cssText] readonly attribute CSSStyleDeclaration style;\u000a\u000a    readonly attribute SVGSVGElement? ownerSVGElement;\u000a    readonly attribute SVGElement? viewportElement;\u000a    [CustomElementCallbacks] attribute long tabIndex;\u000a    void focus();\u000a    void blur();\u000a};\u000a\u000aSVGElement implements GlobalEventHandlers;\u000aSVGElement implements NoncedElement;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGEllipseElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGEllipseElement.idl"},specUrls:["https://svgwg.org/svg2-draft/shapes.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/shapes.html#InterfaceSVGEllipseElement\u000a\u000ainterface SVGEllipseElement : SVGGeometryElement {\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength cx;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength cy;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength rx;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength ry;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEBlendElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEBlendElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEBlendElement\u000a\u000a[\u000a    DoNotCheckConstants\u000a] interface SVGFEBlendElement : SVGElement {\u000a\u000a    // Blend Mode Types\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FEBLEND_MODE_UNKNOWN = 0;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FEBLEND_MODE_NORMAL = 1;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FEBLEND_MODE_MULTIPLY = 2;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FEBLEND_MODE_SCREEN = 3;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FEBLEND_MODE_DARKEN = 4;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FEBLEND_MODE_LIGHTEN = 5;\u000a\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in2;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration mode;\u000a};\u000a\u000aSVGFEBlendElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGDescElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGDescElement.idl"},specUrls:["https://svgwg.org/svg2-draft/struct.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/struct.html#InterfaceSVGDescElement\u000a\u000ainterface SVGDescElement : SVGElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEColorMatrixElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEColorMatrixElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEColorMatrixElement\u000a\u000a[\u000a    DoNotCheckConstants\u000a] interface SVGFEColorMatrixElement : SVGElement {\u000a    // Color Matrix Types\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOLORMATRIX_TYPE_UNKNOWN = 0;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOLORMATRIX_TYPE_MATRIX = 1;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOLORMATRIX_TYPE_SATURATE = 2;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOLORMATRIX_TYPE_HUEROTATE = 3;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA = 4;\u000a\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration type;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumberList values;\u000a};\u000a\u000aSVGFEColorMatrixElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEComponentTransferElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEComponentTransferElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEComponentTransferElement\u000a\u000ainterface SVGFEComponentTransferElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a};\u000a\u000aSVGFEComponentTransferElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFECompositeElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFECompositeElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFECompositeElement\u000a\u000a[\u000a    DoNotCheckConstants\u000a] interface SVGFECompositeElement : SVGElement {\u000a    // Composite Operators\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPOSITE_OPERATOR_UNKNOWN = 0;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPOSITE_OPERATOR_OVER = 1;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPOSITE_OPERATOR_IN = 2;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPOSITE_OPERATOR_OUT = 3;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPOSITE_OPERATOR_ATOP = 4;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPOSITE_OPERATOR_XOR = 5;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_FECOMPOSITE_OPERATOR_ARITHMETIC = 6;\u000a\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in2;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a    [ImplementedAs=svgOperator, MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration operator;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber k1;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber k2;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber k3;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber k4;\u000a};\u000a\u000aSVGFECompositeElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEConvolveMatrixElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEConvolveMatrixElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2009 Dirk Schulze <krit@webkit.org>\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEConvolveMatrixElement\u000a\u000a[\u000a    DoNotCheckConstants\u000a] interface SVGFEConvolveMatrixElement : SVGElement {\u000a    // Edge Mode Values\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_EDGEMODE_UNKNOWN = 0;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_EDGEMODE_DUPLICATE = 1;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_EDGEMODE_WRAP = 2;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_EDGEMODE_NONE = 3;\u000a\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedInteger orderX;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedInteger orderY;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumberList kernelMatrix;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber divisor;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber bias;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedInteger targetX;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedInteger targetY;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration edgeMode;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber kernelUnitLengthX;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber kernelUnitLengthY;\u000a\u000a    // TODO(foolip): The following was part of SVG 1.1. https://crbug.com/695977\u000a    // http://www.w3.org/TR/SVG11/filters.html#InterfaceSVGFEConvolveMatrixElement\u000a    // https://github.com/w3c/fxtf-drafts/issues/114\u000a    [Measure] readonly attribute SVGAnimatedBoolean preserveAlpha;\u000a};\u000a\u000aSVGFEConvolveMatrixElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEDiffuseLightingElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEDiffuseLightingElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEDiffuseLightingElement\u000a\u000ainterface SVGFEDiffuseLightingElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber surfaceScale;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber diffuseConstant;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber kernelUnitLengthX;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber kernelUnitLengthY;\u000a};\u000a\u000aSVGFEDiffuseLightingElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEDisplacementMapElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEDisplacementMapElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEDisplacementMapElement\u000a\u000a[\u000a    DoNotCheckConstants\u000a] interface SVGFEDisplacementMapElement : SVGElement {\u000a    // Channel Selectors\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_CHANNEL_UNKNOWN = 0;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_CHANNEL_R = 1;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_CHANNEL_G = 2;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_CHANNEL_B = 3;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_CHANNEL_A = 4;\u000a\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in2;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber scale;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration xChannelSelector;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration yChannelSelector;\u000a};\u000a\u000aSVGFEDisplacementMapElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEDistantLightElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEDistantLightElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEDistantLightElement\u000a\u000ainterface SVGFEDistantLightElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber azimuth;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber elevation;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEDropShadowElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEDropShadowElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) Research In Motion Limited 2011. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEDropShadowElement\u000a\u000ainterface SVGFEDropShadowElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber dx;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber dy;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber stdDeviationX;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber stdDeviationY;\u000a\u000a    [MeasureAs=SVG1DOMFilter] void setStdDeviation(float stdDeviationX, float stdDeviationY);\u000a};\u000a\u000aSVGFEDropShadowElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEFloodElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEFloodElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEFloodElement\u000a\u000ainterface SVGFEFloodElement : SVGElement {\u000a};\u000a\u000aSVGFEFloodElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEFuncAElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEFuncAElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEFuncAElement\u000a\u000ainterface SVGFEFuncAElement : SVGComponentTransferFunctionElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEFuncBElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEFuncBElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEFuncBElement\u000a\u000ainterface SVGFEFuncBElement : SVGComponentTransferFunctionElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEFuncGElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEFuncGElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEFuncGElement\u000a\u000ainterface SVGFEFuncGElement : SVGComponentTransferFunctionElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEFuncRElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEFuncRElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEFuncRElement\u000a\u000ainterface SVGFEFuncRElement : SVGComponentTransferFunctionElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEGaussianBlurElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEGaussianBlurElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEGaussianBlurElement\u000a\u000ainterface SVGFEGaussianBlurElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber stdDeviationX;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber stdDeviationY;\u000a\u000a    [MeasureAs=SVG1DOMFilter] void setStdDeviation(float stdDeviationX, float stdDeviationY);\u000a};\u000a\u000aSVGFEGaussianBlurElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEImageElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEImageElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEImageElement\u000a\u000ainterface SVGFEImageElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedPreserveAspectRatio preserveAspectRatio;\u000a};\u000a\u000aSVGFEImageElement implements SVGFilterPrimitiveStandardAttributes;\u000aSVGFEImageElement implements SVGURIReference;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEMergeElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEMergeElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEMergeElement\u000a\u000ainterface SVGFEMergeElement : SVGElement {\u000a};\u000a\u000aSVGFEMergeElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEMergeNodeElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEMergeNodeElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEMergeNodeElement\u000a\u000ainterface SVGFEMergeNodeElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEMorphologyElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEMorphologyElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2009 Dirk Schulze <krit@webkit.org>\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEMorphologyElement\u000a\u000a[\u000a    DoNotCheckConstants\u000a] interface SVGFEMorphologyElement : SVGElement {\u000a    // Morphology Operators\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_MORPHOLOGY_OPERATOR_UNKNOWN = 0;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_MORPHOLOGY_OPERATOR_ERODE = 1;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_MORPHOLOGY_OPERATOR_DILATE = 2;\u000a\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a    [ImplementedAs=svgOperator, MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration operator;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber radiusX;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber radiusY;\u000a};\u000a\u000aSVGFEMorphologyElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEOffsetElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEOffsetElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEOffsetElement\u000a\u000ainterface SVGFEOffsetElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber dx;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber dy;\u000a};\u000a\u000aSVGFEOffsetElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFEPointLightElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFEPointLightElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFEPointLightElement\u000a\u000ainterface SVGFEPointLightElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber x;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber y;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber z;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFESpecularLightingElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFESpecularLightingElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFESpecularLightingElement\u000a\u000ainterface SVGFESpecularLightingElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber surfaceScale;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber specularConstant;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber specularExponent;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber kernelUnitLengthX;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber kernelUnitLengthY;\u000a};\u000a\u000aSVGFESpecularLightingElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFESpotLightElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFESpotLightElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFESpotLightElement\u000a\u000ainterface SVGFESpotLightElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber x;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber y;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber z;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber pointsAtX;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber pointsAtY;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber pointsAtZ;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber specularExponent;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber limitingConeAngle;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFETileElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFETileElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFETileElement\u000a\u000ainterface SVGFETileElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString in1;\u000a};\u000a\u000aSVGFETileElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFETurbulenceElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFETurbulenceElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFETurbulenceElement\u000a\u000a[\u000a    DoNotCheckConstants\u000a] interface SVGFETurbulenceElement : SVGElement {\u000a    // Turbulence Types\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_TURBULENCE_TYPE_UNKNOWN = 0;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_TURBULENCE_TYPE_FRACTALNOISE = 1;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_TURBULENCE_TYPE_TURBULENCE = 2;\u000a\u000a    // Stitch Options\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_STITCHTYPE_UNKNOWN = 0;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_STITCHTYPE_STITCH = 1;\u000a    [MeasureAs=SVG1DOMFilter] const unsigned short SVG_STITCHTYPE_NOSTITCH = 2;\u000a\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber baseFrequencyX;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber baseFrequencyY;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedInteger numOctaves;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedNumber seed;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration stitchTiles;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration type;\u000a};\u000a\u000aSVGFETurbulenceElement implements SVGFilterPrimitiveStandardAttributes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFilterElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFilterElement.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFilterElement\u000a\u000ainterface SVGFilterElement : SVGElement {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration filterUnits;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedEnumeration primitiveUnits;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedLength      x;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedLength      y;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedLength      width;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedLength      height;\u000a};\u000a\u000aSVGFilterElement implements SVGURIReference;\u000a// SVGFilterElement implements SVGUnitTypes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFilterPrimitiveStandardAttributes.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFilterPrimitiveStandardAttributes.idl"},specUrls:["https://drafts.fxtf.org/filters/"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/filters/#InterfaceSVGFilterPrimitiveStandardAttributes\u000a\u000a[\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface SVGFilterPrimitiveStandardAttributes {\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedLength x;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedLength y;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedLength width;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedLength height;\u000a    [MeasureAs=SVG1DOMFilter] readonly attribute SVGAnimatedString result;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGFitToViewBox.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGFitToViewBox.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGFitToViewBox\u000a\u000a[\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface SVGFitToViewBox {\u000a    [MeasureAs=SVG1DOMFitToViewBox] readonly attribute SVGAnimatedRect viewBox;\u000a    [MeasureAs=SVG1DOMFitToViewBox] readonly attribute SVGAnimatedPreserveAspectRatio preserveAspectRatio;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGForeignObjectElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGForeignObjectElement.idl"},specUrls:["https://svgwg.org/svg2-draft/embedded.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/embedded.html#InterfaceSVGForeignObjectElement\u000a\u000ainterface SVGForeignObjectElement : SVGGraphicsElement {\u000a    [MeasureAs=SVG1DOMForeignObjectElement] readonly attribute SVGAnimatedLength x;\u000a    [MeasureAs=SVG1DOMForeignObjectElement] readonly attribute SVGAnimatedLength y;\u000a    [MeasureAs=SVG1DOMForeignObjectElement] readonly attribute SVGAnimatedLength width;\u000a    [MeasureAs=SVG1DOMForeignObjectElement] readonly attribute SVGAnimatedLength height;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGGElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGGElement.idl"},specUrls:["https://svgwg.org/svg2-draft/struct.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/struct.html#InterfaceSVGGElement\u000a\u000ainterface SVGGElement : SVGGraphicsElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGGeometryElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGGeometryElement.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGGeometryElement\u000a\u000ainterface SVGGeometryElement : SVGGraphicsElement {\u000a    [SameObject] readonly attribute SVGAnimatedNumber pathLength;\u000a\u000a    // TODO(foolip): SVGPoint should be DOMPoint.\u000a    boolean isPointInFill(SVGPoint point);\u000a    boolean isPointInStroke(SVGPoint point);\u000a    float getTotalLength();\u000a    SVGPoint getPointAtLength(float distance);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGGradientElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGGradientElement.idl"},specUrls:["https://svgwg.org/svg2-draft/pservers.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/pservers.html#InterfaceSVGGradientElement\u000a\u000a[\u000a    DoNotCheckConstants\u000a] interface SVGGradientElement : SVGElement {\u000a    // Spread Method Types\u000a    [MeasureAs=SVG1DOMPaintServer] const unsigned short SVG_SPREADMETHOD_UNKNOWN = 0;\u000a    [MeasureAs=SVG1DOMPaintServer] const unsigned short SVG_SPREADMETHOD_PAD     = 1;\u000a    [MeasureAs=SVG1DOMPaintServer] const unsigned short SVG_SPREADMETHOD_REFLECT = 2;\u000a    [MeasureAs=SVG1DOMPaintServer] const unsigned short SVG_SPREADMETHOD_REPEAT  = 3;\u000a\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedEnumeration   gradientUnits;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedTransformList gradientTransform;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedEnumeration   spreadMethod;\u000a};\u000a\u000aSVGGradientElement implements SVGURIReference;\u000a// SVGGradientElement implements SVGUnitTypes;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGGraphicsElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGGraphicsElement.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGGraphicsElement\u000a\u000ainterface SVGGraphicsElement : SVGElement {\u000a    [Measure] readonly attribute SVGAnimatedTransformList transform;\u000a\u000a    [ImplementedAs=getBBoxFromJavascript] SVGRect getBBox();\u000a    SVGMatrix getCTM();\u000a    SVGMatrix getScreenCTM();\u000a\u000a    // TODO(foolip): The following two properties existed on SVGLocatable in SVG\u000a    // 1.1, but were removed in SVG2. https://crbug.com/695981\u000a    // https://www.w3.org/TR/SVG11/types.html#InterfaceSVGLocatable\u000a    [MeasureAs=SVGLocatableNearestViewportElement] readonly attribute SVGElement nearestViewportElement;\u000a    [MeasureAs=SVGLocatableFarthestViewportElement] readonly attribute SVGElement farthestViewportElement;\u000a};\u000a\u000aSVGGraphicsElement implements SVGTests;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGImageElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGImageElement.idl"},specUrls:["https://svgwg.org/svg2-draft/embedded.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/embedded.html#InterfaceSVGImageElement\u000a\u000a[\u000a    ActiveScriptWrappable\u000a] interface SVGImageElement : SVGGraphicsElement {\u000a    [MeasureAs=SVG1DOMImageElement] readonly attribute SVGAnimatedLength x;\u000a    [MeasureAs=SVG1DOMImageElement] readonly attribute SVGAnimatedLength y;\u000a    [MeasureAs=SVG1DOMImageElement] readonly attribute SVGAnimatedLength width;\u000a    [MeasureAs=SVG1DOMImageElement] readonly attribute SVGAnimatedLength height;\u000a    [MeasureAs=SVG1DOMImageElement] readonly attribute SVGAnimatedPreserveAspectRatio preserveAspectRatio;\u000a    [RuntimeEnabled=ImageAsyncAttribute, CEReactions, Reflect] attribute DOMString async;\u000a\u000a    [RuntimeEnabled=JSImageDecode, CallWith=ScriptState, RaisesException] Promise decode();\u000a};\u000a\u000aSVGImageElement implements SVGURIReference;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGLength.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGLength.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2004, 2005, 2008 Nikolas Zimmermann <zimmermann@kde.org>\u000a * Copyright (C) 2004, 2005 Rob Buis <buis@kde.org>\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGLength\u000a\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGLengthTearOff\u000a] interface SVGLength {\u000a    // Length Unit Types\u000a    const unsigned short SVG_LENGTHTYPE_UNKNOWN    = 0;\u000a    const unsigned short SVG_LENGTHTYPE_NUMBER     = 1;\u000a    const unsigned short SVG_LENGTHTYPE_PERCENTAGE = 2;\u000a    const unsigned short SVG_LENGTHTYPE_EMS        = 3;\u000a    const unsigned short SVG_LENGTHTYPE_EXS        = 4;\u000a    const unsigned short SVG_LENGTHTYPE_PX         = 5;\u000a    const unsigned short SVG_LENGTHTYPE_CM         = 6;\u000a    const unsigned short SVG_LENGTHTYPE_MM         = 7;\u000a    const unsigned short SVG_LENGTHTYPE_IN         = 8;\u000a    const unsigned short SVG_LENGTHTYPE_PT         = 9;\u000a    const unsigned short SVG_LENGTHTYPE_PC         = 10;\u000a\u000a    readonly attribute unsigned short unitType;\u000a    [RaisesException] attribute float value;\u000a    [RaisesException=Setter] attribute float valueInSpecifiedUnits;\u000a    [RaisesException=Setter] attribute DOMString valueAsString;\u000a\u000a    [RaisesException] void newValueSpecifiedUnits(unsigned short unitType, float valueInSpecifiedUnits);\u000a    [RaisesException] void convertToSpecifiedUnits(unsigned short unitType);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGLengthList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGLengthList.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGLengthList\u000a\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGLengthListTearOff\u000a] interface SVGLengthList {\u000a    readonly attribute unsigned long length;\u000a    [ImplementedAs=length] readonly attribute unsigned long numberOfItems;\u000a\u000a    [RaisesException] void clear();\u000a    [RaisesException] SVGLength initialize(SVGLength newItem);\u000a    [RaisesException] getter SVGLength getItem(unsigned long index);\u000a    [RaisesException] SVGLength insertItemBefore(SVGLength newItem, unsigned long index);\u000a    [RaisesException] SVGLength replaceItem(SVGLength newItem, unsigned long index);\u000a    [RaisesException] SVGLength removeItem(unsigned long index);\u000a    [RaisesException] SVGLength appendItem(SVGLength newItem);\u000a    [RaisesException] setter void (unsigned long index, SVGLength newItem);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGLineElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGLineElement.idl"},specUrls:["https://svgwg.org/svg2-draft/shapes.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/shapes.html#InterfaceSVGLineElement\u000a\u000ainterface SVGLineElement : SVGGeometryElement {\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength x1;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength y1;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength x2;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength y2;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGLinearGradientElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGLinearGradientElement.idl"},specUrls:["https://svgwg.org/svg2-draft/pservers.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/pservers.html#InterfaceSVGLinearGradientElement\u000a\u000ainterface SVGLinearGradientElement : SVGGradientElement {\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength x1;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength y1;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength x2;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength y2;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGMPathElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGMPathElement.idl"},specUrls:["https://svgwg.org/specs/animations/"],contents:"/*\u000a * Copyright (C) Research In Motion Limited 2011. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/specs/animations/#InterfaceSVGMPathElement\u000a\u000a[RuntimeEnabled=SMIL]\u000ainterface SVGMPathElement : SVGElement {\u000a};\u000a\u000aSVGMPathElement implements SVGURIReference;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGMarkerElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGMarkerElement.idl"},specUrls:["https://svgwg.org/svg2-draft/painting.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/painting.html#InterfaceSVGMarkerElement\u000a\u000ainterface SVGMarkerElement : SVGElement {\u000a\u000a    // Marker Unit Types\u000a    const unsigned short SVG_MARKERUNITS_UNKNOWN = 0;\u000a    const unsigned short SVG_MARKERUNITS_USERSPACEONUSE = 1;\u000a    const unsigned short SVG_MARKERUNITS_STROKEWIDTH = 2;\u000a\u000a    // Marker Orientation Types\u000a    const unsigned short SVG_MARKER_ORIENT_UNKNOWN = 0;\u000a    const unsigned short SVG_MARKER_ORIENT_AUTO = 1;\u000a    const unsigned short SVG_MARKER_ORIENT_ANGLE = 2;\u000a\u000a    [MeasureAs=SVG1DOMMarkerElement] readonly attribute SVGAnimatedLength refX;\u000a    [MeasureAs=SVG1DOMMarkerElement] readonly attribute SVGAnimatedLength refY;\u000a    [MeasureAs=SVG1DOMMarkerElement] readonly attribute SVGAnimatedEnumeration markerUnits;\u000a    [MeasureAs=SVG1DOMMarkerElement] readonly attribute SVGAnimatedLength markerWidth;\u000a    [MeasureAs=SVG1DOMMarkerElement] readonly attribute SVGAnimatedLength markerHeight;\u000a    [MeasureAs=SVG1DOMMarkerElement] readonly attribute SVGAnimatedEnumeration orientType;\u000a    [MeasureAs=SVG1DOMMarkerElement] readonly attribute SVGAnimatedAngle orientAngle;\u000a    // attribute DOMString orient;\u000a\u000a    [MeasureAs=SVG1DOMMarkerElement] void setOrientToAuto();\u000a    [MeasureAs=SVG1DOMMarkerElement] void setOrientToAngle(SVGAngle angle);\u000a};\u000a\u000aSVGMarkerElement implements SVGFitToViewBox;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGMaskElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGMaskElement.idl"},specUrls:["https://drafts.fxtf.org/css-masking-1/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://drafts.fxtf.org/css-masking-1/#InterfaceSVGMaskElement\u000a\u000ainterface SVGMaskElement : SVGElement {\u000a    [MeasureAs=SVG1DOMMaskElement] readonly attribute SVGAnimatedEnumeration maskUnits;\u000a    [MeasureAs=SVG1DOMMaskElement] readonly attribute SVGAnimatedEnumeration maskContentUnits;\u000a    [MeasureAs=SVG1DOMMaskElement] readonly attribute SVGAnimatedLength x;\u000a    [MeasureAs=SVG1DOMMaskElement] readonly attribute SVGAnimatedLength y;\u000a    [MeasureAs=SVG1DOMMaskElement] readonly attribute SVGAnimatedLength width;\u000a    [MeasureAs=SVG1DOMMaskElement] readonly attribute SVGAnimatedLength height;\u000a};\u000a\u000a// SVGMaskElement implements SVGUnitTypes;\u000a\u000a// TODO(foolip): The following is not part of any spec. https://crbug.com/701893\u000aSVGMaskElement implements SVGTests;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGMatrix.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGMatrix.idl"},contents:"/*\u000a * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>\u000a * Copyright (C) 2004, 2005 Rob Buis <buis@kde.org>\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// http://www.w3.org/TR/SVG11/coords.html#InterfaceSVGMatrix\u000a\u000a// TODO(foolip): SVGMatrix is gone from SVG 2, replaced by DOMMatrix.\u000a// https://crbug.com/709001\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGMatrixTearOff\u000a] interface SVGMatrix {\u000a    // FIXME: these attributes should all be floats but since we implement\u000a    // AffineTransform with doubles setting these as doubles makes more sense.\u000a    [RaisesException=Setter] attribute unrestricted double a;\u000a    [RaisesException=Setter] attribute unrestricted double b;\u000a    [RaisesException=Setter] attribute unrestricted double c;\u000a    [RaisesException=Setter] attribute unrestricted double d;\u000a    [RaisesException=Setter] attribute unrestricted double e;\u000a    [RaisesException=Setter] attribute unrestricted double f;\u000a\u000a    SVGMatrix multiply(SVGMatrix secondMatrix);\u000a    [RaisesException] SVGMatrix inverse();\u000a    SVGMatrix translate(unrestricted float x, unrestricted float y);\u000a    SVGMatrix scale(unrestricted float scaleFactor);\u000a    SVGMatrix scaleNonUniform(unrestricted float scaleFactorX, unrestricted float scaleFactorY);\u000a    SVGMatrix rotate(unrestricted float angle);\u000a    [RaisesException] SVGMatrix rotateFromVector(unrestricted float x, unrestricted float y);\u000a    SVGMatrix flipX();\u000a    SVGMatrix flipY();\u000a    SVGMatrix skewX(unrestricted float angle);\u000a    SVGMatrix skewY(unrestricted float angle);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGMetadataElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGMetadataElement.idl"},specUrls:["https://svgwg.org/svg2-draft/struct.html"],contents:"/*\u000a * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>\u000a * Copyright (C) 2004, 2005 Rob Buis <buis@kde.org>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/struct.html#InterfaceSVGMetadataElement\u000a\u000ainterface SVGMetadataElement : SVGElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGNumber.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGNumber.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>\u000a * Copyright (C) 2004, 2005 Rob Buis <buis@kde.org>\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGNumber\u000a\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGNumberTearOff\u000a] interface SVGNumber {\u000a    [RaisesException=Setter] attribute float value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGNumberList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGNumberList.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGNumberList\u000a\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGNumberListTearOff\u000a] interface SVGNumberList {\u000a    readonly attribute unsigned long length;\u000a    [ImplementedAs=length] readonly attribute unsigned long numberOfItems;\u000a\u000a    [RaisesException] void clear();\u000a    [RaisesException] SVGNumber initialize(SVGNumber newItem);\u000a    [RaisesException] getter SVGNumber getItem(unsigned long index);\u000a    [RaisesException] SVGNumber insertItemBefore(SVGNumber newItem, unsigned long index);\u000a    [RaisesException] SVGNumber replaceItem(SVGNumber newItem, unsigned long index);\u000a    [RaisesException] SVGNumber removeItem(unsigned long index);\u000a    [RaisesException] SVGNumber appendItem(SVGNumber newItem);\u000a    [RaisesException] setter void (unsigned long index, SVGNumber newItem);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGPathElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGPathElement.idl"},specUrls:["https://svgwg.org/svg2-draft/paths.html"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/paths.html#InterfaceSVGPathElement\u000a\u000ainterface SVGPathElement : SVGGeometryElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGPatternElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGPatternElement.idl"},specUrls:["https://svgwg.org/svg2-draft/pservers.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/pservers.html#InterfaceSVGPatternElement\u000a\u000ainterface SVGPatternElement : SVGElement {\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedEnumeration patternUnits;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedEnumeration patternContentUnits;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedTransformList patternTransform;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength x;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength y;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength width;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength height;\u000a};\u000a\u000aSVGPatternElement implements SVGFitToViewBox;\u000aSVGPatternElement implements SVGURIReference;\u000a// SVGPatternElement implements SVGUnitTypes;\u000a\u000a// TODO(foolip): The following was part of SVG 1.1. https://crbug.com/701893\u000a// http://www.w3.org/TR/SVG11/pservers.html#InterfaceSVGPatternElement\u000aSVGPatternElement implements SVGTests;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGPoint.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGPoint.idl"},contents:"/*\u000a * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>\u000a * Copyright (C) 2004, 2005 Rob Buis <buis@kde.org>\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// http://www.w3.org/TR/SVG11/coords.html#InterfaceSVGPoint\u000a\u000a// TODO(foolip): SVGPoint is gone from SVG 2, replaced by DOMPoint.\u000a// https://crbug.com/709001\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGPointTearOff\u000a] interface SVGPoint {\u000a    [RaisesException=Setter] attribute unrestricted float x;\u000a    [RaisesException=Setter] attribute unrestricted float y;\u000a\u000a    [MeasureAs=SVGPointMatrixTransform] SVGPoint matrixTransform(SVGMatrix matrix);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGPointList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGPointList.idl"},specUrls:["https://svgwg.org/svg2-draft/shapes.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/shapes.html#InterfaceSVGPointList\u000a\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGPointListTearOff\u000a] interface SVGPointList {\u000a    readonly attribute unsigned long length;\u000a    [ImplementedAs=length] readonly attribute unsigned long numberOfItems;\u000a\u000a    [RaisesException] void clear();\u000a    // TODO(foolip): SVGPoint should be DOMPoint.\u000a    [RaisesException] SVGPoint initialize(SVGPoint newItem);\u000a    [RaisesException] getter SVGPoint getItem(unsigned long index);\u000a    [RaisesException] SVGPoint insertItemBefore(SVGPoint newItem, unsigned long index);\u000a    [RaisesException] SVGPoint replaceItem(SVGPoint newItem, unsigned long index);\u000a    [RaisesException] SVGPoint removeItem(unsigned long index);\u000a    [RaisesException] SVGPoint appendItem(SVGPoint newItem);\u000a    [RaisesException] setter void (unsigned long index, SVGPoint newItem);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGPolygonElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGPolygonElement.idl"},specUrls:["https://svgwg.org/svg2-draft/shapes.html","https://svgwg.org/svg2-draft/shapes.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/shapes.html#InterfaceSVGPolygonElement\u000a\u000ainterface SVGPolygonElement : SVGGeometryElement {\u000a    // TODO(foolip): points and animatedPoints be on the SVGAnimatedPoints\u000a    // interface which SVGPolygonElement should implement:\u000a    // https://svgwg.org/svg2-draft/shapes.html#InterfaceSVGAnimatedPoints\u000a    [MeasureAs=SVG1DOMShape, ImplementedAs=pointsFromJavascript] readonly attribute SVGPointList points;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGPointList animatedPoints;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGPolylineElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGPolylineElement.idl"},specUrls:["https://svgwg.org/svg2-draft/shapes.html","https://svgwg.org/svg2-draft/shapes.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/shapes.html#InterfaceSVGPolylineElement\u000a\u000ainterface SVGPolylineElement : SVGGeometryElement {\u000a    // TODO(foolip): points and animatedPoints should be on the\u000a    // SVGAnimatedPoints interface which SVGPolylineElement should implement:\u000a    // https://svgwg.org/svg2-draft/shapes.html#InterfaceSVGAnimatedPoints\u000a    [MeasureAs=SVG1DOMShape, ImplementedAs=pointsFromJavascript] readonly attribute SVGPointList points;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGPointList animatedPoints;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGPreserveAspectRatio.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGPreserveAspectRatio.idl"},specUrls:["https://svgwg.org/svg2-draft/coords.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/coords.html#InterfaceSVGPreserveAspectRatio\u000a\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGPreserveAspectRatioTearOff\u000a] interface SVGPreserveAspectRatio {\u000a    // Alignment types\u000a    const unsigned short SVG_PRESERVEASPECTRATIO_UNKNOWN = 0;\u000a    const unsigned short SVG_PRESERVEASPECTRATIO_NONE = 1;\u000a    const unsigned short SVG_PRESERVEASPECTRATIO_XMINYMIN = 2;\u000a    const unsigned short SVG_PRESERVEASPECTRATIO_XMIDYMIN = 3;\u000a    const unsigned short SVG_PRESERVEASPECTRATIO_XMAXYMIN = 4;\u000a    const unsigned short SVG_PRESERVEASPECTRATIO_XMINYMID = 5;\u000a    const unsigned short SVG_PRESERVEASPECTRATIO_XMIDYMID = 6;\u000a    const unsigned short SVG_PRESERVEASPECTRATIO_XMAXYMID = 7;\u000a    const unsigned short SVG_PRESERVEASPECTRATIO_XMINYMAX = 8;\u000a    const unsigned short SVG_PRESERVEASPECTRATIO_XMIDYMAX = 9;\u000a    const unsigned short SVG_PRESERVEASPECTRATIO_XMAXYMAX = 10;\u000a\u000a    // Meet-or-slice types\u000a    const unsigned short SVG_MEETORSLICE_UNKNOWN = 0;\u000a    const unsigned short SVG_MEETORSLICE_MEET = 1;\u000a    const unsigned short SVG_MEETORSLICE_SLICE = 2;\u000a\u000a    [RaisesException=Setter] attribute unsigned short align;\u000a    [RaisesException=Setter] attribute unsigned short meetOrSlice;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGRadialGradientElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGRadialGradientElement.idl"},specUrls:["https://svgwg.org/svg2-draft/pservers.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/pservers.html#InterfaceSVGRadialGradientElement\u000a\u000ainterface SVGRadialGradientElement : SVGGradientElement {\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength cx;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength cy;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength r;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength fx;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength fy;\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedLength fr;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGRect.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGRect.idl"},contents:"/*\u000a * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>\u000a * Copyright (C) 2004, 2005 Rob Buis <buis@kde.org>\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// http://www.w3.org/TR/SVG11/types.html#InterfaceSVGRect\u000a\u000a// TODO(foolip): SVGRect is gone from SVG 2, replaced by DOMRect.\u000a// https://crbug.com/709001\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGRectTearOff\u000a] interface SVGRect {\u000a    [RaisesException=Setter] attribute unrestricted float x;\u000a    [RaisesException=Setter] attribute unrestricted float y;\u000a    [RaisesException=Setter] attribute unrestricted float width;\u000a    [RaisesException=Setter] attribute unrestricted float height;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGRectElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGRectElement.idl"},specUrls:["https://svgwg.org/svg2-draft/shapes.html"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/shapes.html#InterfaceSVGRectElement\u000a\u000ainterface SVGRectElement : SVGGeometryElement {\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength x;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength y;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength width;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength height;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength rx;\u000a    [MeasureAs=SVG1DOMShape] readonly attribute SVGAnimatedLength ry;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGSVGElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGSVGElement.idl"},specUrls:["https://svgwg.org/svg2-draft/struct.html","https://svgwg.org/specs/animations/"],contents:"/*\u000a * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>\u000a * Copyright (C) 2004, 2005, 2010 Rob Buis <buis@kde.org>\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/struct.html#InterfaceSVGSVGElement\u000a\u000ainterface SVGSVGElement : SVGGraphicsElement {\u000a    [MeasureAs=SVG1DOMSVGElement] readonly attribute SVGAnimatedLength x;\u000a    [MeasureAs=SVG1DOMSVGElement] readonly attribute SVGAnimatedLength y;\u000a    [MeasureAs=SVG1DOMSVGElement] readonly attribute SVGAnimatedLength width;\u000a    [MeasureAs=SVG1DOMSVGElement] readonly attribute SVGAnimatedLength height;\u000a\u000a    attribute float currentScale;\u000a    // TODO(foolip): currentTranslate should be a DOMPointReadOnly.\u000a    [ImplementedAs=currentTranslateFromJavascript] readonly attribute SVGPoint currentTranslate;\u000a\u000a    // TODO(foolip): The rect arguments should be DOMRectReadOnly.\u000a    NodeList getIntersectionList(SVGRect rect, SVGElement? referenceElement);\u000a    NodeList getEnclosureList(SVGRect rect, SVGElement? referenceElement);\u000a    boolean checkIntersection(SVGElement element, SVGRect rect);\u000a    boolean checkEnclosure(SVGElement element, SVGRect rect);\u000a\u000a    void deselectAll();\u000a\u000a    [Measure] SVGNumber createSVGNumber();\u000a    [Measure] SVGLength createSVGLength();\u000a    [Measure] SVGAngle createSVGAngle();\u000a    // TODO(foolip): SVGPoint/Matrix/Rect should be DOMPoint/Matrix/Rect.\u000a    [Measure] SVGPoint createSVGPoint();\u000a    [Measure] SVGMatrix createSVGMatrix();\u000a    [Measure] SVGRect createSVGRect();\u000a    [Measure] SVGTransform createSVGTransform();\u000a    [Measure] SVGTransform createSVGTransformFromMatrix(SVGMatrix matrix);\u000a\u000a    [Measure] Element getElementById(DOMString elementId);\u000a\u000a    [MeasureAs=SVGSVGElementSuspendRedraw] unsigned long suspendRedraw(unsigned long maxWaitMilliseconds);\u000a    [MeasureAs=SVGSVGElementUnsuspendRedraw] void unsuspendRedraw(unsigned long suspendHandleId);\u000a    [MeasureAs=SVGSVGElementUnsuspendRedrawAll] void unsuspendRedrawAll();\u000a    [MeasureAs=SVGSVGElementForceRedraw] void forceRedraw();\u000a\u000a    // SVG Animations\u000a    // https://svgwg.org/specs/animations/#InterfaceSVGSVGElement\u000a    [MeasureAs=SVGSMILPausing, RuntimeEnabled=SMIL] void pauseAnimations();\u000a    [MeasureAs=SVGSMILPausing, RuntimeEnabled=SMIL] void unpauseAnimations();\u000a    [MeasureAs=SVGSMILPausing, RuntimeEnabled=SMIL] boolean animationsPaused();\u000a    [MeasureAs=SVGSMILCurrentTime, RuntimeEnabled=SMIL] float getCurrentTime();\u000a    [MeasureAs=SVGSMILCurrentTime, RuntimeEnabled=SMIL] void setCurrentTime(float seconds);\u000a};\u000a\u000aSVGSVGElement implements SVGFitToViewBox;\u000aSVGSVGElement implements SVGZoomAndPan;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGScriptElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGScriptElement.idl"},specUrls:["https://svgwg.org/svg2-draft/interact.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/interact.html#InterfaceSVGScriptElement\u000a\u000ainterface SVGScriptElement : SVGElement {\u000a    [Reflect] attribute DOMString type;\u000a};\u000a\u000aSVGScriptElement implements SVGURIReference;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGSetElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGSetElement.idl"},specUrls:["https://svgwg.org/specs/animations/"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/specs/animations/#InterfaceSVGSetElement\u000a\u000ainterface SVGSetElement : SVGAnimationElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGStopElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGStopElement.idl"},specUrls:["https://svgwg.org/svg2-draft/pservers.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/pservers.html#InterfaceSVGStopElement\u000a\u000ainterface SVGStopElement : SVGElement {\u000a    [MeasureAs=SVG1DOMPaintServer] readonly attribute SVGAnimatedNumber offset;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGStringList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGStringList.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGStringList\u000a\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGStringListTearOff\u000a] interface SVGStringList {\u000a    readonly attribute unsigned long length;\u000a    [ImplementedAs=length] readonly attribute unsigned long numberOfItems;\u000a\u000a    [RaisesException] void clear();\u000a    [RaisesException] DOMString initialize(DOMString newItem);\u000a    [RaisesException] getter DOMString getItem(unsigned long index);\u000a    [RaisesException] DOMString insertItemBefore(DOMString item, unsigned long index);\u000a    [RaisesException] DOMString replaceItem(DOMString newItem, unsigned long index);\u000a    [RaisesException] DOMString removeItem(unsigned long index);\u000a    [RaisesException] DOMString appendItem(DOMString newItem);\u000a    [RaisesException] setter void (unsigned long index, DOMString newItem);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGStyleElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGStyleElement.idl"},specUrls:["https://svgwg.org/svg2-draft/styling.html","https://drafts.csswg.org/cssom/"],contents:"/*\u000a * Copyright (C) Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/styling.html#InterfaceSVGStyleElement\u000a\u000ainterface SVGStyleElement : SVGElement {\u000a    attribute DOMString type;\u000a    attribute DOMString media;\u000a    [MeasureAs=SVGStyleElementTitle] attribute DOMString title;\u000a\u000a    // SVGStyleElement implements LinkStyle\u000a    // https://drafts.csswg.org/cssom/#the-linkstyle-interface\u000a    readonly attribute StyleSheet? sheet;\u000a\u000a    // TODO(foolip): The disabled attribute was not in SVG 1.1 and has been\u000a    // removed from HTMLLinkElement and HTMLStyleElement in the HTML spec:\u000a    // https://www.w3.org/Bugs/Public/show_bug.cgi?id=14703\u000a    [Measure] attribute boolean disabled;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGSwitchElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGSwitchElement.idl"},specUrls:["https://svgwg.org/svg2-draft/struct.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/struct.html#InterfaceSVGSwitchElement\u000a\u000ainterface SVGSwitchElement : SVGGraphicsElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGSymbolElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGSymbolElement.idl"},specUrls:["https://svgwg.org/svg2-draft/struct.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/struct.html#InterfaceSVGSymbolElement\u000a\u000ainterface SVGSymbolElement : SVGElement {\u000a};\u000a\u000aSVGSymbolElement implements SVGFitToViewBox;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGTSpanElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGTSpanElement.idl"},specUrls:["https://svgwg.org/svg2-draft/text.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/text.html#InterfaceSVGTSpanElement\u000a\u000ainterface SVGTSpanElement : SVGTextPositioningElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGTests.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGTests.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGTests\u000a\u000a[\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface SVGTests {\u000a    [MeasureAs=SVG1DOMSVGTests] readonly attribute SVGStringList requiredExtensions;\u000a    [MeasureAs=SVG1DOMSVGTests] readonly attribute SVGStringList systemLanguage;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGTextContentElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGTextContentElement.idl"},specUrls:["https://svgwg.org/svg2-draft/text.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/text.html#InterfaceSVGTextContentElement\u000a\u000ainterface SVGTextContentElement : SVGGraphicsElement {\u000a    // lengthAdjust Types\u000a    [MeasureAs=SVG1DOMText] const unsigned short LENGTHADJUST_UNKNOWN          = 0;\u000a    [MeasureAs=SVG1DOMText] const unsigned short LENGTHADJUST_SPACING          = 1;\u000a    [MeasureAs=SVG1DOMText] const unsigned short LENGTHADJUST_SPACINGANDGLYPHS = 2;\u000a\u000a    [MeasureAs=SVG1DOMText] readonly attribute SVGAnimatedLength      textLength;\u000a    [MeasureAs=SVG1DOMText] readonly attribute SVGAnimatedEnumeration lengthAdjust;\u000a\u000a    long getNumberOfChars();\u000a    float getComputedTextLength();\u000a    [RaisesException] float getSubStringLength(unsigned long charnum, unsigned long nchars);\u000a    // TODO(foolip): SVGPoint/SVGRect should be DOMPoint/DOMRect.\u000a    [RaisesException] SVGPoint getStartPositionOfChar(unsigned long charnum);\u000a    [RaisesException] SVGPoint getEndPositionOfChar(unsigned long charnum);\u000a    [RaisesException] SVGRect getExtentOfChar(unsigned long charnum);\u000a    [RaisesException] float getRotationOfChar(unsigned long charnum);\u000a    [RaisesException] long getCharNumAtPosition(SVGPoint point);\u000a    [RaisesException] void selectSubString(unsigned long charnum, unsigned long nchars);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGTextElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGTextElement.idl"},specUrls:["https://svgwg.org/svg2-draft/text.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/text.html#InterfaceSVGTextElement\u000a\u000ainterface SVGTextElement : SVGTextPositioningElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGTextPathElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGTextPathElement.idl"},specUrls:["https://svgwg.org/svg2-draft/text.html"],contents:"/*\u000a * Copyright (C) 2007 Nikolas Zimmermann <zimmermann@kde.org>\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/text.html#InterfaceSVGTextPathElement\u000a\u000ainterface SVGTextPathElement : SVGTextContentElement {\u000a    // textPath Method Types\u000a    [MeasureAs=SVG1DOMText] const unsigned short TEXTPATH_METHODTYPE_UNKNOWN   = 0;\u000a    [MeasureAs=SVG1DOMText] const unsigned short TEXTPATH_METHODTYPE_ALIGN     = 1;\u000a    [MeasureAs=SVG1DOMText] const unsigned short TEXTPATH_METHODTYPE_STRETCH   = 2;\u000a\u000a    // textPath Spacing Types\u000a    [MeasureAs=SVG1DOMText] const unsigned short TEXTPATH_SPACINGTYPE_UNKNOWN  = 0;\u000a    [MeasureAs=SVG1DOMText] const unsigned short TEXTPATH_SPACINGTYPE_AUTO     = 1;\u000a    [MeasureAs=SVG1DOMText] const unsigned short TEXTPATH_SPACINGTYPE_EXACT    = 2;\u000a\u000a    [MeasureAs=SVG1DOMText] readonly attribute SVGAnimatedLength startOffset;\u000a    [MeasureAs=SVG1DOMText] readonly attribute SVGAnimatedEnumeration method;\u000a    [MeasureAs=SVG1DOMText] readonly attribute SVGAnimatedEnumeration spacing;\u000a};\u000a\u000aSVGTextPathElement implements SVGURIReference;\u000a//SVGTextPathElement implements SVGAnimatedPathData;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGTextPositioningElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGTextPositioningElement.idl"},specUrls:["https://svgwg.org/svg2-draft/text.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/text.html#InterfaceSVGTextPositioningElement\u000a\u000ainterface SVGTextPositioningElement : SVGTextContentElement {\u000a    [MeasureAs=SVG1DOMText] readonly attribute SVGAnimatedLengthList x;\u000a    [MeasureAs=SVG1DOMText] readonly attribute SVGAnimatedLengthList y;\u000a    [MeasureAs=SVG1DOMText] readonly attribute SVGAnimatedLengthList dx;\u000a    [MeasureAs=SVG1DOMText] readonly attribute SVGAnimatedLengthList dy;\u000a    [MeasureAs=SVG1DOMText] readonly attribute SVGAnimatedNumberList rotate;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGTitleElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGTitleElement.idl"},specUrls:["https://svgwg.org/svg2-draft/struct.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/struct.html#InterfaceSVGTitleElement\u000a\u000ainterface SVGTitleElement : SVGElement {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGTransform.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGTransform.idl"},specUrls:["https://svgwg.org/svg2-draft/coords.html"],contents:"/*\u000a * Copyright (C) 2004, 2005 Nikolas Zimmermann <zimmermann@kde.org>\u000a * Copyright (C) 2004, 2005 Rob Buis <buis@kde.org>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/coords.html#InterfaceSVGTransform\u000a\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGTransformTearOff\u000a] interface SVGTransform {\u000a    // Transform Types\u000a    const unsigned short SVG_TRANSFORM_UNKNOWN = 0;\u000a    const unsigned short SVG_TRANSFORM_MATRIX = 1;\u000a    const unsigned short SVG_TRANSFORM_TRANSLATE = 2;\u000a    const unsigned short SVG_TRANSFORM_SCALE = 3;\u000a    const unsigned short SVG_TRANSFORM_ROTATE = 4;\u000a    const unsigned short SVG_TRANSFORM_SKEWX = 5;\u000a    const unsigned short SVG_TRANSFORM_SKEWY = 6;\u000a\u000a    [ImplementedAs=transformType] readonly attribute unsigned short type;\u000a    // TODO(foolip): SVGMatrix should be DOMMatrix.\u000a    readonly attribute SVGMatrix matrix;\u000a    readonly attribute float angle;\u000a\u000a    // TODO(foolip): SVGMatrix should be DOMMatrixReadOnly.\u000a    [RaisesException] void setMatrix(SVGMatrix matrix);\u000a    [RaisesException] void setTranslate(float tx, float ty);\u000a    [RaisesException] void setScale(float sx, float sy);\u000a    [RaisesException] void setRotate(float angle, float cx, float cy);\u000a    [RaisesException] void setSkewX(float angle);\u000a    [RaisesException] void setSkewY(float angle);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGTransformList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGTransformList.idl"},specUrls:["https://svgwg.org/svg2-draft/coords.html"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/coords.html#InterfaceSVGTransformList\u000a\u000a[\u000a    DependentLifetime,\u000a    ImplementedAs=SVGTransformListTearOff\u000a] interface SVGTransformList {\u000a    readonly attribute unsigned long length;\u000a    [ImplementedAs=length] readonly attribute unsigned long numberOfItems;\u000a\u000a    [RaisesException] void clear();\u000a    [RaisesException] SVGTransform initialize(SVGTransform newItem);\u000a    [RaisesException] getter SVGTransform getItem(unsigned long index);\u000a    [RaisesException] SVGTransform insertItemBefore(SVGTransform newItem, unsigned long index);\u000a    [RaisesException] SVGTransform replaceItem(SVGTransform newItem, unsigned long index);\u000a    [RaisesException] SVGTransform removeItem(unsigned long index);\u000a    [RaisesException] SVGTransform appendItem(SVGTransform newItem);\u000a    // TODO(foolip): SVGMatrix should be DOMMatrix.\u000a    SVGTransform createSVGTransformFromMatrix(SVGMatrix matrix);\u000a    [RaisesException, MeasureAs=SVGTransformListConsolidate] SVGTransform? consolidate();\u000a    [RaisesException] setter void (unsigned long index, SVGTransform newItem);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGURIReference.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGURIReference.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGURIReference\u000a\u000a[\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface SVGURIReference {\u000a    [MeasureAs=SVG1DOMUriReference] readonly attribute SVGAnimatedString href;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGUnitTypes.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGUnitTypes.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGUnitTypes\u000a\u000a[\u000a    DependentLifetime\u000a] interface SVGUnitTypes {\u000a    // Unit Types\u000a    const unsigned short SVG_UNIT_TYPE_UNKNOWN           = 0;\u000a    const unsigned short SVG_UNIT_TYPE_USERSPACEONUSE    = 1;\u000a    const unsigned short SVG_UNIT_TYPE_OBJECTBOUNDINGBOX = 2;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGUseElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGUseElement.idl"},specUrls:["https://svgwg.org/svg2-draft/struct.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/struct.html#InterfaceSVGUseElement\u000a\u000ainterface SVGUseElement : SVGGraphicsElement {\u000a    [MeasureAs=SVG1DOMUseElement] readonly attribute SVGAnimatedLength   x;\u000a    [MeasureAs=SVG1DOMUseElement] readonly attribute SVGAnimatedLength   y;\u000a    [MeasureAs=SVG1DOMUseElement] readonly attribute SVGAnimatedLength   width;\u000a    [MeasureAs=SVG1DOMUseElement] readonly attribute SVGAnimatedLength   height;\u000a};\u000a\u000aSVGUseElement implements SVGURIReference;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGViewElement.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGViewElement.idl"},specUrls:["https://svgwg.org/svg2-draft/linking.html"],contents:"/*\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/linking.html#InterfaceSVGViewElement\u000a\u000ainterface SVGViewElement : SVGElement {\u000a};\u000a\u000aSVGViewElement implements SVGFitToViewBox;\u000aSVGViewElement implements SVGZoomAndPan;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/svg/SVGZoomAndPan.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/svg/SVGZoomAndPan.idl"},specUrls:["https://svgwg.org/svg2-draft/types.html"],contents:"/*\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a * Copyright (C) 2006 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://svgwg.org/svg2-draft/types.html#InterfaceSVGZoomAndPan\u000a\u000a[\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface SVGZoomAndPan {\u000a\u000a    // Zoom and Pan Types\u000a    const unsigned short SVG_ZOOMANDPAN_UNKNOWN = 0;\u000a    const unsigned short SVG_ZOOMANDPAN_DISABLE = 1;\u000a    const unsigned short SVG_ZOOMANDPAN_MAGNIFY = 2;\u000a\u000a    [MeasureAs=SVG1DOMZoomAndPan, RaisesException=Setter] attribute unsigned short zoomAndPan;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/DOMHighResTimeStamp.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/DOMHighResTimeStamp.idl"},specUrls:["https://w3c.github.io/hr-time/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/hr-time/#sec-DOMHighResTimeStamp\u000a\u000atypedef double DOMHighResTimeStamp;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/MemoryInfo.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/MemoryInfo.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// TODO(foolip): There is no spec for the Memory Info API, see blink-dev:\u000a// https://groups.google.com/a/chromium.org/d/msg/blink-dev/g5YRCGpC9vs/b4OJz71NmPwJ\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface MemoryInfo {\u000a    [Measure] readonly attribute unsigned long totalJSHeapSize;\u000a    [Measure] readonly attribute unsigned long usedJSHeapSize;\u000a    [Measure] readonly attribute unsigned long jsHeapSizeLimit;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/Performance.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/Performance.idl"},specUrls:["https://w3c.github.io/hr-time/","https://w3c.github.io/performance-timeline/","https://w3c.github.io/resource-timing/","https://w3c.github.io/navigation-timing/","https://w3c.github.io/user-timing/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a * Copyright (C) 2012 Intel Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/hr-time/#the-performance-interface\u000a\u000a// TODO(foolip): This interface should be [Exposed=(Window,Worker)]. Doing that\u000a// would allow the WorkerPerformance interface to be merged into this.\u000a// TODO(foolip): None of the optional DOMString arguments in this interface\u000a// should have a default value.\u000ainterface Performance : EventTarget {\u000a    DOMHighResTimeStamp now();\u000a    readonly attribute DOMHighResTimeStamp timeOrigin;\u000a\u000a    // Performance Timeline\u000a    // https://w3c.github.io/performance-timeline/#the-performance-interface\u000a    // TODO(foolip): getEntries() should take an optional FilterOptions argument.\u000a    [MeasureAs=UnprefixedPerformanceTimeline] PerformanceEntryList getEntries();\u000a    [MeasureAs=UnprefixedPerformanceTimeline] PerformanceEntryList getEntriesByType(DOMString entryType);\u000a    [MeasureAs=UnprefixedPerformanceTimeline] PerformanceEntryList getEntriesByName(DOMString name, optional DOMString entryType = null);\u000a\u000a    // Resource Timing\u000a    // https://w3c.github.io/resource-timing/#extensions-performance-interface\u000a    void clearResourceTimings();\u000a    void setResourceTimingBufferSize(unsigned long maxSize);\u000a    attribute EventHandler onresourcetimingbufferfull;\u000a\u000a    // Navigation Timing\u000a    // https://w3c.github.io/navigation-timing/#extensions-to-the-performance-interface\u000a    [SameObject, Measure] readonly attribute PerformanceTiming timing;\u000a    [SameObject, Measure] readonly attribute PerformanceNavigation navigation;\u000a\u000a    // User Timing\u000a    // https://w3c.github.io/user-timing/#extensions-performance-interface\u000a    [MeasureAs=UnprefixedUserTiming, RaisesException] void mark(DOMString markName);\u000a    [MeasureAs=UnprefixedUserTiming] void clearMarks(optional DOMString markName = null);\u000a\u000a    [MeasureAs=UnprefixedUserTiming, RaisesException] void measure(DOMString measureName, optional DOMString startMark = null, optional DOMString endMark = null);\u000a    [MeasureAs=UnprefixedUserTiming] void clearMeasures(optional DOMString measureName = null);\u000a\u000a    // TODO(foolip): There is no spec for the Memory Info API, see blink-dev:\u000a    // https://groups.google.com/a/chromium.org/d/msg/blink-dev/g5YRCGpC9vs/b4OJz71NmPwJ\u000a    [Measure] readonly attribute MemoryInfo memory;\u000a\u000a    serializer = {attribute};\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceEntry.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceEntry.idl"},specUrls:["https://w3c.github.io/performance-timeline/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/performance-timeline/#the-performanceentry-interface\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface PerformanceEntry {\u000a    readonly attribute DOMString name;\u000a    readonly attribute DOMString entryType;\u000a    readonly attribute DOMHighResTimeStamp startTime;\u000a    readonly attribute DOMHighResTimeStamp duration;\u000a    serializer = {attribute};\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceEntryList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceEntryList.idl"},specUrls:["https://w3c.github.io/performance-timeline/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/performance-timeline/#idl-def-PerformanceEntryList\u000a\u000atypedef sequence<PerformanceEntry> PerformanceEntryList;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceLongTaskTiming.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceLongTaskTiming.idl"},specUrls:["https://wicg.github.io/longtasks/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/longtasks/#sec-PerformanceLongTaskTiming\u000ainterface PerformanceLongTaskTiming : PerformanceEntry {\u000a    [SameObject, SaveSameObject] readonly attribute FrozenArray<TaskAttributionTiming> attribution;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceMark.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceMark.idl"},specUrls:["https://w3c.github.io/user-timing/"],contents:"/*\u000a * Copyright (C) 2012 Intel Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/user-timing/#performancemark\u000a\u000ainterface PerformanceMark : PerformanceEntry {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceMeasure.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceMeasure.idl"},specUrls:["https://w3c.github.io/user-timing/"],contents:"/*\u000a * Copyright (C) 2012 Intel Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/user-timing/#performancemeasure\u000a\u000ainterface PerformanceMeasure : PerformanceEntry {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceNavigation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceNavigation.idl"},specUrls:["https://w3c.github.io/navigation-timing/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/navigation-timing/#the-performancenavigation-interface\u000a\u000a// Legacy support for NT1(https://www.w3.org/TR/navigation-timing/).\u000a\u000a[\u000a    Exposed=Window\u000a] interface PerformanceNavigation {\u000a    const unsigned short TYPE_NAVIGATE = 0;\u000a    const unsigned short TYPE_RELOAD = 1;\u000a    const unsigned short TYPE_BACK_FORWARD = 2;\u000a    const unsigned short TYPE_RESERVED = 255;\u000a    readonly attribute unsigned short type;\u000a    readonly attribute unsigned short redirectCount;\u000a    serializer = {attribute};\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceNavigationTiming.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceNavigationTiming.idl"},specUrls:["https://w3c.github.io/navigation-timing/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/navigation-timing/#sec-PerformanceNavigationTiming\u000a\u000aenum NavigationType {\u000a    \"navigate\",\u000a    \"reload\",\u000a    \"back_forward\",\u000a    \"prerender\"\u000a};\u000a[\u000a    RuntimeEnabled=PerformanceNavigationTiming2\u000a]  interface PerformanceNavigationTiming : PerformanceResourceTiming {\u000a    readonly attribute DOMHighResTimeStamp unloadEventStart;\u000a    readonly attribute DOMHighResTimeStamp unloadEventEnd;\u000a    readonly attribute DOMHighResTimeStamp domInteractive;\u000a    readonly attribute DOMHighResTimeStamp domContentLoadedEventStart;\u000a    readonly attribute DOMHighResTimeStamp domContentLoadedEventEnd;\u000a    readonly attribute DOMHighResTimeStamp domComplete;\u000a    readonly attribute DOMHighResTimeStamp loadEventStart;\u000a    readonly attribute DOMHighResTimeStamp loadEventEnd;\u000a    readonly attribute NavigationType      type;\u000a    readonly attribute unsigned short      redirectCount;\u000a    serializer = {inherit, attribute};\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceObserver.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceObserver.idl"},specUrls:["https://w3c.github.io/performance-timeline/","https://w3c.github.io/performance-timeline/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/performance-timeline/#idl-def-PerformanceObserverCallback\u000acallback PerformanceObserverCallback = void (PerformanceObserverEntryList entries, PerformanceObserver observer);\u000a\u000a// https://w3c.github.io/performance-timeline/#the-performance-observer-interface\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Constructor(PerformanceObserverCallback callback),\u000a    ConstructorCallWith=ScriptState,\u000a    Exposed=(Window,Worker)\u000a] interface PerformanceObserver {\u000a    [RaisesException] void observe(PerformanceObserverInit options);\u000a    void disconnect();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceObserverEntryList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceObserverEntryList.idl"},specUrls:["https://w3c.github.io/performance-timeline/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/performance-timeline/#the-performance-observer-interface\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface PerformanceObserverEntryList {\u000a    // TODO(foolip): getEntries() should take an optional FilterOptions argument.\u000a    sequence<PerformanceEntry> getEntries();\u000a    sequence<PerformanceEntry> getEntriesByType(DOMString entryType);\u000a    sequence<PerformanceEntry> getEntriesByName(DOMString name, optional DOMString entryType = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceObserverInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceObserverInit.idl"},specUrls:["https://w3c.github.io/performance-timeline/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/performance-timeline/#the-performance-observer-interface\u000a\u000adictionary PerformanceObserverInit {\u000a    required sequence<DOMString> entryTypes;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformancePaintTiming.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformancePaintTiming.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/paint-timing\u000a\u000a[\u000a    RuntimeEnabled=PerformancePaintTiming\u000a] interface PerformancePaintTiming : PerformanceEntry {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceResourceTiming.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceResourceTiming.idl"},specUrls:["https://w3c.github.io/resource-timing/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/resource-timing/#performanceresourcetiming\u000a\u000a[Exposed=(Window,Worker)]\u000ainterface PerformanceResourceTiming : PerformanceEntry {\u000a    readonly attribute DOMString initiatorType;\u000a    readonly attribute DOMString nextHopProtocol;\u000a    readonly attribute DOMHighResTimeStamp workerStart;\u000a    readonly attribute DOMHighResTimeStamp redirectStart;\u000a    readonly attribute DOMHighResTimeStamp redirectEnd;\u000a    readonly attribute DOMHighResTimeStamp fetchStart;\u000a    readonly attribute DOMHighResTimeStamp domainLookupStart;\u000a    readonly attribute DOMHighResTimeStamp domainLookupEnd;\u000a    readonly attribute DOMHighResTimeStamp connectStart;\u000a    readonly attribute DOMHighResTimeStamp connectEnd;\u000a    readonly attribute DOMHighResTimeStamp secureConnectionStart;\u000a    readonly attribute DOMHighResTimeStamp requestStart;\u000a    readonly attribute DOMHighResTimeStamp responseStart;\u000a    readonly attribute DOMHighResTimeStamp responseEnd;\u000a    [MeasureAs=PerformanceResourceTimingSizes] readonly attribute unsigned long long transferSize;\u000a    [MeasureAs=PerformanceResourceTimingSizes] readonly attribute unsigned long long encodedBodySize;\u000a    [MeasureAs=PerformanceResourceTimingSizes] readonly attribute unsigned long long decodedBodySize;\u000a    [RuntimeEnabled=ServerTiming] readonly attribute FrozenArray<PerformanceServerTiming> serverTiming;\u000a    // TODO(foolip): The spec has a serializer:\u000a    // serializer = {inherit, attribute};\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceServerTiming.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceServerTiming.idl"},specUrls:["https://w3c.github.io/server-timing/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/server-timing/\u000a\u000a[\u000a    RuntimeEnabled=ServerTiming,\u000a    Exposed=(Window,Worker)\u000a] interface PerformanceServerTiming {\u000a    readonly attribute DOMString name;\u000a    readonly attribute DOMHighResTimeStamp duration;\u000a    readonly attribute DOMString description;\u000a    serializer = {attribute};\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/PerformanceTiming.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/PerformanceTiming.idl"},specUrls:["https://w3c.github.io/navigation-timing/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/navigation-timing/#the-performancetiming-interface\u000a\u000a// Legacy support for NT1(https://www.w3.org/TR/navigation-timing/).\u000a\u000a[\u000a    Exposed=Window\u000a] interface PerformanceTiming {\u000a    readonly attribute unsigned long long navigationStart;\u000a    readonly attribute unsigned long long unloadEventStart;\u000a    readonly attribute unsigned long long unloadEventEnd;\u000a    readonly attribute unsigned long long redirectStart;\u000a    readonly attribute unsigned long long redirectEnd;\u000a    readonly attribute unsigned long long fetchStart;\u000a    readonly attribute unsigned long long domainLookupStart;\u000a    readonly attribute unsigned long long domainLookupEnd;\u000a    readonly attribute unsigned long long connectStart;\u000a    readonly attribute unsigned long long connectEnd;\u000a    readonly attribute unsigned long long secureConnectionStart;\u000a    readonly attribute unsigned long long requestStart;\u000a    readonly attribute unsigned long long responseStart;\u000a    readonly attribute unsigned long long responseEnd;\u000a    readonly attribute unsigned long long domLoading;\u000a    readonly attribute unsigned long long domInteractive;\u000a    readonly attribute unsigned long long domContentLoadedEventStart;\u000a    readonly attribute unsigned long long domContentLoadedEventEnd;\u000a    readonly attribute unsigned long long domComplete;\u000a    readonly attribute unsigned long long loadEventStart;\u000a    readonly attribute unsigned long long loadEventEnd;\u000a    serializer = {attribute};\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/TaskAttributionTiming.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/TaskAttributionTiming.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/wicg/longtasks\u000ainterface TaskAttributionTiming : PerformanceEntry {\u000a    [RuntimeEnabled=LongTaskV2] readonly attribute DOMString scriptURL;\u000a    readonly attribute DOMString containerType;\u000a    readonly attribute DOMString containerSrc;\u000a    readonly attribute DOMString containerId;\u000a    readonly attribute DOMString containerName;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/WindowPerformance.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/WindowPerformance.idl"},specUrls:["https://w3c.github.io/hr-time/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/hr-time/#the-performance-interface\u000a\u000a// TODO(foolip): This should be a GlobalPerformance interface implemented by\u000a// Window and WorkerGlobalScope.\u000a[\u000a    ImplementedAs=DOMWindowPerformance\u000a] partial interface Window {\u000a    [Replaceable] readonly attribute Performance performance;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/WorkerGlobalScopePerformance.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/WorkerGlobalScopePerformance.idl"},specUrls:["https://w3c.github.io/hr-time/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/hr-time/#the-performance-interface\u000a\u000a// TODO(foolip): This should be a GlobalPerformance interface implemented by\u000a// Window and WorkerGlobalScope.\u000a[\u000a    ImplementedAs=WorkerGlobalScopePerformance\u000a] partial interface WorkerGlobalScope {\u000a    readonly attribute WorkerPerformance performance;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/timing/WorkerPerformance.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/timing/WorkerPerformance.idl"},specUrls:["https://w3c.github.io/hr-time/","https://w3c.github.io/performance-timeline/","https://w3c.github.io/resource-timing/","https://w3c.github.io/user-timing/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/hr-time/#the-performance-interface\u000a\u000a// TODO(foolip): This interface should be merged into Performance.\u000a// TODO(foolip): None of the optional DOMString arguments in this interface\u000a// should have a default value.\u000a[\u000a    NoInterfaceObject\u000a] interface WorkerPerformance : EventTarget {\u000a    DOMHighResTimeStamp now();\u000a    readonly attribute DOMHighResTimeStamp timeOrigin;\u000a\u000a    // Performance Timeline\u000a    // https://w3c.github.io/performance-timeline/#the-performance-interface\u000a    // TODO(foolip): getEntries() should take an optional FilterOptions argument.\u000a    PerformanceEntryList getEntries();\u000a    PerformanceEntryList getEntriesByType(DOMString entryType);\u000a    PerformanceEntryList getEntriesByName(DOMString name, optional DOMString entryType = null);\u000a\u000a    // Resource Timing\u000a    // https://w3c.github.io/resource-timing/#extensions-performance-interface\u000a    void clearResourceTimings();\u000a    void setResourceTimingBufferSize(unsigned long maxSize);\u000a    attribute EventHandler onresourcetimingbufferfull;\u000a\u000a    // User Timing\u000a    // https://w3c.github.io/user-timing/#extensions-performance-interface\u000a    [RaisesException] void mark(DOMString markName);\u000a    void clearMarks(optional DOMString markName = null);\u000a\u000a    [RaisesException] void measure(DOMString measureName, optional DOMString startMark = null, optional DOMString endMark = null);\u000a    void clearMeasures(optional DOMString measureName = null);\u000a\u000a    // TODO(foolip): There is no spec for the Memory Info API, see blink-dev:\u000a    // https://groups.google.com/a/chromium.org/d/msg/blink-dev/g5YRCGpC9vs/b4OJz71NmPwJ\u000a    [RuntimeEnabled=MemoryInfoInWorkers] readonly attribute MemoryInfo memory;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/ArrayBufferView.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/ArrayBufferView.idl"},specUrls:["https://www.khronos.org/registry/typedarray/specs/latest/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/typedarray/specs/latest/#ARRAYBUFFERVIEW\u000a\u000a[\u000a    ImplementedAs=DOMArrayBufferView,\u000a    NoInterfaceObject\u000a] interface ArrayBufferView {\u000a    readonly attribute ArrayBuffer buffer;\u000a    readonly attribute unsigned long byteOffset;\u000a    readonly attribute unsigned long byteLength;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/DataView.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/DataView.idl"},specUrls:["https://www.khronos.org/registry/typedarray/specs/latest/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/typedarray/specs/latest/#DATAVIEW\u000a\u000a[\u000a    ImplementedAs=DOMDataView\u000a] interface DataView : ArrayBufferView {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/Float32Array.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/Float32Array.idl"},specUrls:["https://www.khronos.org/registry/typedarray/specs/latest/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/typedarray/specs/latest/#TYPEDARRAYS\u000a\u000a[\u000a    ImplementedAs=DOMFloat32Array,\u000a    NoInterfaceObject\u000a] interface Float32Array : ArrayBufferView {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/Float64Array.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/Float64Array.idl"},specUrls:["https://www.khronos.org/registry/typedarray/specs/latest/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/typedarray/specs/latest/#TYPEDARRAYS\u000a\u000a[\u000a    ImplementedAs=DOMFloat64Array,\u000a    NoInterfaceObject\u000a] interface Float64Array : ArrayBufferView {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/Int16Array.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/Int16Array.idl"},specUrls:["https://www.khronos.org/registry/typedarray/specs/latest/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/typedarray/specs/latest/#TYPEDARRAYS\u000a\u000a[\u000a    ImplementedAs=DOMInt16Array,\u000a    NoInterfaceObject\u000a] interface Int16Array : ArrayBufferView {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/Int32Array.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/Int32Array.idl"},specUrls:["https://www.khronos.org/registry/typedarray/specs/latest/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/typedarray/specs/latest/#TYPEDARRAYS\u000a\u000a[\u000a    ImplementedAs=DOMInt32Array,\u000a    NoInterfaceObject\u000a] interface Int32Array : ArrayBufferView {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/Int8Array.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/Int8Array.idl"},specUrls:["https://www.khronos.org/registry/typedarray/specs/latest/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/typedarray/specs/latest/#TYPEDARRAYS\u000a\u000a[\u000a    ImplementedAs=DOMInt8Array,\u000a    NoInterfaceObject\u000a] interface Int8Array : ArrayBufferView {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/SharedArrayBuffer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/SharedArrayBuffer.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Draft spec: https://github.com/lars-t-hansen/ecmascript_sharedmem\u000a[\u000a    ImplementedAs=DOMSharedArrayBuffer,\u000a    NoInterfaceObject,\u000a    RuntimeEnabled=SharedArrayBuffer\u000a] interface SharedArrayBuffer {\u000a    readonly attribute unsigned long byteLength;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/Uint16Array.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/Uint16Array.idl"},specUrls:["https://www.khronos.org/registry/typedarray/specs/latest/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/typedarray/specs/latest/#TYPEDARRAYS\u000a\u000a[\u000a    ImplementedAs=DOMUint16Array,\u000a    NoInterfaceObject\u000a] interface Uint16Array : ArrayBufferView {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/Uint32Array.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/Uint32Array.idl"},specUrls:["https://www.khronos.org/registry/typedarray/specs/latest/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/typedarray/specs/latest/#TYPEDARRAYS\u000a\u000a[\u000a    ImplementedAs=DOMUint32Array,\u000a    NoInterfaceObject\u000a] interface Uint32Array : ArrayBufferView {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/Uint8Array.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/Uint8Array.idl"},specUrls:["https://www.khronos.org/registry/typedarray/specs/latest/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/typedarray/specs/latest/#TYPEDARRAYS\u000a\u000a[\u000a    ImplementedAs=DOMUint8Array,\u000a    NoInterfaceObject\u000a] interface Uint8Array : ArrayBufferView {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/Uint8ClampedArray.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/Uint8ClampedArray.idl"},specUrls:["https://www.khronos.org/registry/typedarray/specs/latest/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/typedarray/specs/latest/#TYPEDARRAYS\u000a\u000a[\u000a    ImplementedAs=DOMUint8ClampedArray,\u000a    NoInterfaceObject\u000a] interface Uint8ClampedArray : ArrayBufferView {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/url/URL.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/url/URL.idl"},specUrls:["https://url.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a * Copyright (C) 2012 Motorola Mobility Inc.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://url.spec.whatwg.org/#url\u000a\u000a[\u000a    Constructor(USVString url, optional USVString base),\u000a    Exposed=(Window,Worker),\u000a    ImplementedAs=DOMURL,\u000a    RaisesException=Constructor\u000a] interface URL {\u000a    // TODO(foolip): Implement domainToASCII() and domainToUnicode().\u000a    // crbug.com/493908\u000a    // static USVString domainToASCII(USVString domain);\u000a    // static USVString domainToUnicode(USVString domain);\u000a\u000a    stringifier attribute USVString href;\u000a    readonly attribute USVString origin;\u000a\u000a    attribute USVString protocol;\u000a    attribute USVString username;\u000a    attribute USVString password;\u000a    attribute USVString host;\u000a    attribute USVString hostname;\u000a    attribute USVString port;\u000a    attribute USVString pathname;\u000a    attribute USVString search;\u000a    readonly attribute URLSearchParams searchParams;\u000a    attribute USVString hash;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/url/URLSearchParams.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/url/URLSearchParams.idl"},specUrls:["https://url.spec.whatwg.org/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://url.spec.whatwg.org/#interface-urlsearchparams\u000a\u000a[\u000a    Constructor(optional (sequence<sequence<USVString>> or record<USVString, USVString> or USVString) init = \"\"),\u000a    Exposed=(Window,Worker),\u000a    RaisesException=Constructor\u000a] interface URLSearchParams {\u000a    void append(USVString name, USVString value);\u000a    [ImplementedAs=deleteAllWithName] void delete(USVString name);\u000a    USVString? get(USVString name);\u000a    sequence<USVString> getAll(USVString name);\u000a    boolean has(USVString name);\u000a    void set(USVString name, USVString value);\u000a\u000a    void sort();\u000a\u000a    iterable<USVString, USVString>;\u000a    stringifier;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/url/URLUtilsReadOnly.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/url/URLUtilsReadOnly.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// This interface was defined independently in the WHATWG URL spec, but has\u000a// been removed from it in\u000a// https://github.com/whatwg/url/commit/c2877946857bc904ecb8a5805abc423c82d9da98.\u000a// It's now inlined in the users. See crbug.com/699873.\u000a\u000a[\u000a    NoInterfaceObject, // Always used on target of 'implements'\u000a    Exposed=(Window,Worker)\u000a] interface URLUtilsReadOnly {\u000a    stringifier readonly attribute USVString href;\u000a    readonly attribute USVString origin;\u000a\u000a    readonly attribute USVString protocol;\u000a    readonly attribute USVString host;\u000a    readonly attribute USVString hostname;\u000a    readonly attribute USVString port;\u000a    readonly attribute USVString pathname;\u000a    readonly attribute USVString search;\u000a    readonly attribute USVString hash;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/workers/AbstractWorker.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/workers/AbstractWorker.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2009 Google Inc. All rights reserved.\u000a * Copyright (C) 2011 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-abstractworker-abstract-interface\u000a\u000a[\u000a    LegacyTreatAsPartialInterface,\u000a    NoInterfaceObject, // Always used on target of 'implements'\u000a    Exposed=(Window,Worker)\u000a] interface AbstractWorker {\u000a    attribute EventHandler onerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/workers/DedicatedWorkerGlobalScope.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/workers/DedicatedWorkerGlobalScope.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2009, 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#dedicated-workers-and-the-dedicatedworkerglobalscope-interface\u000a\u000a[\u000a    Global=(Worker,DedicatedWorker),\u000a    Exposed=DedicatedWorker\u000a] interface DedicatedWorkerGlobalScope : WorkerGlobalScope {\u000a    [PostMessage, RaisesException] void postMessage(any message, optional sequence<object> transfer = []);\u000a\u000a    void close();\u000a\u000a    attribute EventHandler onmessage;\u000a    attribute EventHandler onmessageerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/workers/SharedWorker.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/workers/SharedWorker.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2009 Google Inc. All rights reserved.\u000a * Copyright (C) 2010 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#shared-workers-and-the-sharedworker-interface\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    // TODO(foolip): The name argument should not have a default null value.\u000a    Constructor(DOMString scriptURL, optional DOMString name = null),\u000a    ConstructorCallWith=ExecutionContext,\u000a    DependentLifetime,\u000a    // TODO(foolip): Exposed=(Window,Worker),\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=SharedWorker\u000a] interface SharedWorker : EventTarget {\u000a    readonly attribute MessagePort port;\u000a};\u000a\u000aSharedWorker implements AbstractWorker;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/workers/SharedWorkerGlobalScope.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/workers/SharedWorkerGlobalScope.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2009 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#shared-workers-and-the-sharedworkerglobalscope-interface\u000a\u000a[\u000a    Global=(Worker,SharedWorker),\u000a    Exposed=SharedWorker\u000a] interface SharedWorkerGlobalScope : WorkerGlobalScope {\u000a    readonly attribute DOMString name;\u000a    // TODO(foolip): readonly attribute ApplicationCache applicationCache;\u000a\u000a    void close();\u000a\u000a    attribute EventHandler onconnect;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/workers/Worker.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/workers/Worker.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008, 2010 Apple Inc. All Rights Reserved.\u000a * Copyright (C) 2011 Google Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a *\u000a */\u000a\u000a// https://html.spec.whatwg.org/#dedicated-workers-and-the-worker-interface\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Constructor(DOMString scriptUrl),\u000a    ConstructorCallWith=ExecutionContext,\u000a    // TODO(foolip): Exposed=(Window,Worker),\u000a    RaisesException=Constructor,\u000a    ImplementedAs=DedicatedWorker\u000a] interface Worker : EventTarget {\u000a    void terminate();\u000a\u000a    [PostMessage, RaisesException] void postMessage(any message, optional sequence<object> transfer);\u000a    attribute EventHandler onmessage;\u000a};\u000a\u000aWorker implements AbstractWorker;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/workers/WorkerGlobalScope.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/workers/WorkerGlobalScope.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/","https://console.spec.whatwg.org/","https://wicg.github.io/cors-rfc1918/","https://w3c.github.io/webappsec-secure-contexts/","https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a *\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-workerglobalscope-common-interface\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Exposed=Worker,\u000a    ImmutablePrototype\u000a] interface WorkerGlobalScope : EventTarget {\u000a    readonly attribute WorkerGlobalScope self;\u000a    readonly attribute WorkerLocation location;\u000a\u000a    // TODO(foolip): onerror should be an OnErrorEventHandler.\u000a    attribute EventHandler onerror;\u000a    // attribute EventHandler onlanguagechange;\u000a    // attribute EventHandler onoffline;\u000a    // attribute EventHandler ononline;\u000a\u000a    // https://html.spec.whatwg.org/#apis-available-to-workers\u000a    [RaisesException] void importScripts(DOMString... urls);\u000a    readonly attribute WorkerNavigator navigator;\u000a\u000a\u000a    // Console API\u000a    // https://console.spec.whatwg.org/#console-interface\u000a    // [Replaceable] readonly attribute Console console;\u000a    // Console is installed by v8 inspector when context is created\u000a    // and is left commented here just for documentation.\u000a\u000a    // CORS and RFC1918\u000a    // https://wicg.github.io/cors-rfc1918/#feature-detect\u000a    [RuntimeEnabled=CorsRFC1918, ImplementedAs=addressSpaceForBindings] readonly attribute AddressSpace addressSpace;\u000a\u000a    // Unhandled Promise Rejection Events\u000a    attribute EventHandler onrejectionhandled;\u000a    attribute EventHandler onunhandledrejection;\u000a\u000a    // Secure Contexts\u000a    // https://w3c.github.io/webappsec-secure-contexts/#dom-windoworworkerglobalscope-issecurecontext\u000a    [ImplementedAs=isSecureContextForBindings] readonly attribute boolean isSecureContext;\u000a\u000a    // https://html.spec.whatwg.org/#windoworworkerglobalscope-mixin\u000a    [Replaceable] readonly attribute DOMString origin;\u000a};\u000a\u000aWorkerGlobalScope implements WindowBase64;\u000aWorkerGlobalScope implements WindowTimers;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/workers/WorkerLocation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/workers/WorkerLocation.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#worker-locations\u000a\u000a[\u000a    Exposed=Worker\u000a] interface WorkerLocation {\u000a};\u000a\u000aWorkerLocation implements URLUtilsReadOnly;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/workers/WorkerNavigator.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/workers/WorkerNavigator.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/#the-workernavigator-object\u000a\u000a[\u000a    Exposed=Worker\u000a] interface WorkerNavigator {\u000a};\u000a\u000aWorkerNavigator implements NavigatorConcurrentHardware;\u000aWorkerNavigator implements NavigatorID;\u000a// TODO(foolip): WorkerNavigator implements NavigatorLanguage;\u000aWorkerNavigator implements NavigatorOnLine;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/workers/Worklet.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/workers/Worklet.idl"},specUrls:["https://drafts.css-houdini.org/worklets/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.css-houdini.org/worklets/#worklet\u000a\u000a[\u000a    DependentLifetime,\u000a    RuntimeEnabled=Worklet\u000a] interface Worklet {\u000a    [CallWith=ScriptState] Promise<void> addModule(USVString moduleURL, optional WorkletOptions options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/workers/WorkletGlobalScope.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/workers/WorkletGlobalScope.idl"},specUrls:["https://drafts.css-houdini.org/worklets/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.css-houdini.org/worklets/#workletglobalscope\u000a\u000a[\u000a    DependentLifetime,\u000a    ActiveScriptWrappable,\u000a    Exposed=Worklet,\u000a    RuntimeEnabled=Worklet,\u000a    ImmutablePrototype\u000a] interface WorkletGlobalScope {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/workers/WorkletOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/workers/WorkletOptions.idl"},specUrls:["https://fetch.spec.whatwg.org/","https://drafts.css-houdini.org/worklets/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://fetch.spec.whatwg.org/#requestcredentials\u000a// Copied from modules/fetch/Request.idl because it's not accessible from core/\u000a// directory.\u000a// TODO(nhiroki): Consider how to reuse the existing enum.\u000aenum RequestCredentials { \"omit\", \"same-origin\", \"include\" };\u000a\u000a// https://drafts.css-houdini.org/worklets/#dictdef-workletoptions\u000adictionary WorkletOptions {\u000a    RequestCredentials credentials = \"omit\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/xml/DOMParser.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/xml/DOMParser.idl"},specUrls:["https://w3c.github.io/DOM-Parsing/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://w3c.github.io/DOM-Parsing/#the-domparser-interface\u000a\u000aenum SupportedType {\u000a    \"text/html\",\u000a    \"text/xml\",\u000a    \"application/xml\",\u000a    \"application/xhtml+xml\",\u000a    \"image/svg+xml\"\u000a};\u000a\u000a[\u000a    Constructor,\u000a    ConstructorCallWith=Document\u000a] interface DOMParser {\u000a    [NewObject] Document parseFromString(DOMString str, SupportedType type);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/xml/DocumentXPathEvaluator.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/xml/DocumentXPathEvaluator.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator\u000a\u000a[\u000a    ImplementedAs=DocumentXPathEvaluator\u000a] partial interface Document {\u000a    [MeasureAs=DocumentXPathCreateExpression, RaisesException] XPathExpression createExpression(DOMString expression, optional XPathNSResolver? resolver = null);\u000a\u000a    [MeasureAs=DocumentXPathCreateNSResolver] XPathNSResolver createNSResolver(Node nodeResolver);\u000a\u000a    [MeasureAs=DocumentXPathEvaluate, RaisesException] XPathResult evaluate(DOMString expression, Node contextNode, optional XPathNSResolver? resolver = null, optional unsigned short type = 0, optional object? inResult = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/xml/XMLSerializer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/xml/XMLSerializer.idl"},specUrls:["https://w3c.github.io/DOM-Parsing/"],contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a * Copyright (C) 2006 Samuel Weinig (sam@webkit.org)\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://w3c.github.io/DOM-Parsing/#the-xmlserializer-interface\u000a\u000a[\u000a    Constructor\u000a] interface XMLSerializer {\u000a    DOMString serializeToString(Node root);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/xml/XPathEvaluator.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/xml/XPathEvaluator.idl"},contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator\u000a\u000a// Note: The spec says \"the XPathEvaluator interface will be implemented on the\u000a// same object which implements the Document interface\" and does not define a\u000a// constructor or other means to create an XPathEvaluator object. Nonetheless,\u000a// Blink, Gecko, Presto, WebKit and all have these APIs on both Document and the\u000a// constructable XPathEvaluator interface.\u000a\u000a[\u000a    Constructor,\u000a    Measure\u000a] interface XPathEvaluator {\u000a    [Measure, RaisesException] XPathExpression createExpression(DOMString expression, optional XPathNSResolver? resolver = null);\u000a\u000a    [Measure] XPathNSResolver createNSResolver(Node nodeResolver);\u000a\u000a    [Measure, RaisesException] XPathResult evaluate(DOMString expression, Node contextNode, optional XPathNSResolver? resolver = null, optional unsigned short type = 0, optional object? inResult = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/xml/XPathExpression.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/xml/XPathExpression.idl"},contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathExpression\u000a\u000ainterface XPathExpression {\u000a     [RaisesException] XPathResult evaluate(Node contextNode, optional unsigned short type = 0, optional object? inResult = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/xml/XPathNSResolver.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/xml/XPathNSResolver.idl"},contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNSResolver\u000a\u000a// TODO(foolip): XPathNSResolver should be a callback interface. The spec\u000a// doesn't say so, but doing so would allow the custom bindings to be removed.\u000a// createNSResolver(Node nodeResolver) could simply return its argument, which\u000a// is what Gecko does. crbug.com/345529\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface XPathNSResolver {\u000a    DOMString? lookupNamespaceURI([Default=Undefined] optional DOMString prefix);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/xml/XPathResult.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/xml/XPathResult.idl"},contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult\u000a\u000ainterface XPathResult {\u000a    // XPathResultType\u000a    const unsigned short ANY_TYPE                       = 0;\u000a    const unsigned short NUMBER_TYPE                    = 1;\u000a    const unsigned short STRING_TYPE                    = 2;\u000a    const unsigned short BOOLEAN_TYPE                   = 3;\u000a    const unsigned short UNORDERED_NODE_ITERATOR_TYPE   = 4;\u000a    const unsigned short ORDERED_NODE_ITERATOR_TYPE     = 5;\u000a    const unsigned short UNORDERED_NODE_SNAPSHOT_TYPE   = 6;\u000a    const unsigned short ORDERED_NODE_SNAPSHOT_TYPE     = 7;\u000a    const unsigned short ANY_UNORDERED_NODE_TYPE        = 8;\u000a    const unsigned short FIRST_ORDERED_NODE_TYPE        = 9;\u000a\u000a    readonly attribute unsigned short  resultType;\u000a    [RaisesException=Getter] readonly attribute double          numberValue;\u000a\u000a    [RaisesException=Getter] readonly attribute DOMString       stringValue;\u000a\u000a    [RaisesException=Getter] readonly attribute boolean         booleanValue;\u000a\u000a    [RaisesException=Getter] readonly attribute Node            singleNodeValue;\u000a\u000a    readonly attribute boolean         invalidIteratorState;\u000a    [RaisesException=Getter] readonly attribute unsigned long   snapshotLength;\u000a\u000a    [RaisesException] Node? iterateNext();\u000a    [RaisesException] Node? snapshotItem(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/xml/XSLTProcessor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/xml/XSLTProcessor.idl"},contents:"/*\u000a * Copyright (C) 2008, 2010 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// There is no spec for XSLTProcessor. It was first implemented in Gecko and\u000a// their interface definition remains the closest thing to a spec:\u000a// https://hg.mozilla.org/mozilla-central/file/012853bd80b7/dom/webidl/XSLTProcessor.webidl\u000a\u000a[\u000a    Constructor,\u000a    ConstructorCallWith=Document,\u000a    RuntimeEnabled=XSLT,\u000a    MeasureAs=XSLTProcessor\u000a] interface XSLTProcessor {\u000a\u000a    void importStylesheet(Node style);\u000a    // TODO(foolip): In Gecko, the transformTo*() methods throw an exception in\u000a    // case of error instead of returning null.\u000a    [CustomElementCallbacks] DocumentFragment? transformToFragment(Node source, Document output);\u000a    [CustomElementCallbacks] Document? transformToDocument(Node source);\u000a\u000a    // TODO(foolip): In Gecko, it's possible to set and get back any parameter\u000a    // value, not just DOMString.\u000a    void setParameter(DOMString? namespaceURI, DOMString localName, DOMString value);\u000a    DOMString? getParameter(DOMString? namespaceURI, DOMString localName);\u000a    void removeParameter(DOMString? namespaceURI, DOMString localName);\u000a    void clearParameters();\u000a\u000a    void reset();\u000a\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/xmlhttprequest/XMLHttpRequest.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/xmlhttprequest/XMLHttpRequest.idl"},specUrls:["https://xhr.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008, 2011 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://xhr.spec.whatwg.org/#interface-xmlhttprequest\u000a\u000aenum XMLHttpRequestResponseType {\u000a    \"\",\u000a    \"arraybuffer\",\u000a    \"blob\",\u000a    \"document\",\u000a    \"json\",\u000a    \"text\",\u000a};\u000a\u000a// TODO(foolip): Most DOMString types in the XMLHttpRequest interface should be\u000a// either ByteString or USVString.\u000a[\u000a    ActiveScriptWrappable,\u000a    Constructor,\u000a    ConstructorCallWith=ScriptState,\u000a    DependentLifetime,\u000a    Exposed=(Window,DedicatedWorker,SharedWorker)\u000a] interface XMLHttpRequest : XMLHttpRequestEventTarget {\u000a    // event handler\u000a    attribute EventHandler onreadystatechange;\u000a\u000a    // states\u000a    const unsigned short UNSENT = 0;\u000a    const unsigned short OPENED = 1;\u000a    const unsigned short HEADERS_RECEIVED = 2;\u000a    const unsigned short LOADING = 3;\u000a    const unsigned short DONE = 4;\u000a    readonly attribute unsigned short readyState;\u000a\u000a    // request\u000a    [RaisesException] void open(DOMString method, DOMString url);\u000a    [RaisesException] void open(DOMString method, DOMString url, boolean async, optional DOMString? username = null, optional DOMString? password = null);\u000a    [RaisesException] void setRequestHeader(DOMString name, DOMString value);\u000a    [RaisesException=Setter] attribute unsigned long timeout;\u000a    [RaisesException=Setter] attribute boolean withCredentials;\u000a    readonly attribute XMLHttpRequestUpload upload;\u000a    // TODO(foolip): The data argument should be of type\u000a    // (Document or BodyInit)?\u000a    [RaisesException] void send(optional (ArrayBuffer or ArrayBufferView or Blob or Document or DOMString or FormData or URLSearchParams)? body = null);\u000a    void abort();\u000a\u000a    // response\u000a    readonly attribute DOMString responseURL;\u000a    readonly attribute unsigned short status;\u000a    readonly attribute DOMString statusText;\u000a    DOMString? getResponseHeader(DOMString name);\u000a    DOMString getAllResponseHeaders();\u000a    [RaisesException] void overrideMimeType(DOMString mime);\u000a    [RaisesException=Setter] attribute XMLHttpRequestResponseType responseType;\u000a    [Custom=Getter, RaisesException=Getter] readonly attribute any response;\u000a    [Custom=Getter, RaisesException=Getter] readonly attribute DOMString responseText;\u000a    // TODO(foolip): responseXML should be [Exposed=Window].\u000a    [RaisesException=Getter] readonly attribute Document? responseXML;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/xmlhttprequest/XMLHttpRequestEventTarget.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/xmlhttprequest/XMLHttpRequestEventTarget.idl"},specUrls:["https://xhr.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008, 2010 Apple Inc. All rights reserved.\u000a * Copyright (C) 2013 Samsung Electronics. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://xhr.spec.whatwg.org/#xmlhttprequesteventtarget\u000a\u000a[\u000a    Exposed=(Window,DedicatedWorker,SharedWorker)\u000a] interface XMLHttpRequestEventTarget : EventTarget {\u000a    // event handlers\u000a    attribute EventHandler onloadstart;\u000a    attribute EventHandler onprogress;\u000a    attribute EventHandler onabort;\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onload;\u000a    attribute EventHandler ontimeout;\u000a    attribute EventHandler onloadend;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/xmlhttprequest/XMLHttpRequestUpload.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/xmlhttprequest/XMLHttpRequestUpload.idl"},specUrls:["https://xhr.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://xhr.spec.whatwg.org/#xmlhttprequestupload\u000a\u000a[\u000a    Exposed=(Window,DedicatedWorker,SharedWorker)\u000a] interface XMLHttpRequestUpload : XMLHttpRequestEventTarget {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/core/typed_arrays/ArrayBuffer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/core/typed_arrays/ArrayBuffer.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// http://www.ecma-international.org/ecma-262/6.0/#sec-arraybuffer-constructor\u000a\u000a[\u000a    ImplementedAs=DOMArrayBuffer,\u000a    NoInterfaceObject\u000a] interface ArrayBuffer {\u000a    readonly attribute unsigned long byteLength;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/animationworklet/AnimationWorkletGlobalScope.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/animationworklet/AnimationWorkletGlobalScope.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    Exposed=AnimationWorklet,\u000a    Global=(Worklet,AnimationWorklet),\u000a    RuntimeEnabled=AnimationWorklet\u000a] interface AnimationWorkletGlobalScope : WorkletGlobalScope {\u000a    [RaisesException] void registerAnimator(DOMString name, Function animatorConstructor);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/animationworklet/EffectProxy.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/animationworklet/EffectProxy.idl"},specUrls:["https://wicg.github.io/animation-worklet/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/animation-worklet/#worklet-group-effect\u000a// TODO(majidvp): Get rid of this in favor using KeyframeEffect interface directly.\u000a[\u000a    Exposed=AnimationWorklet,\u000a    Global=(AnimationWorklet),\u000a    RuntimeEnabled=AnimationWorklet\u000a] interface EffectProxy {\u000a  attribute unrestricted double localTime;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/animationworklet/WindowAnimationWorklet.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/animationworklet/WindowAnimationWorklet.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=WindowAnimationWorklet,\u000a    RuntimeEnabled=AnimationWorklet\u000a] partial interface Window {\u000a    readonly attribute Worklet animationWorklet;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/animationworklet/WorkletAnimation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/animationworklet/WorkletAnimation.idl"},specUrls:["https://wicg.github.io/animation-worklet/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/animation-worklet/#worklet-animation-desc\u000a\u000a// TODO(smcgruer): Update constructor to match latest spec.\u000a[\u000a    Constructor(DOMString animatorName,\u000a                sequence<KeyframeEffectReadOnly> effects,\u000a                (DocumentTimeline or ScrollTimeline) timeline,\u000a                SerializedScriptValue options),\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=AnimationWorklet\u000a] interface WorkletAnimation {\u000a  readonly attribute AnimationPlayState playState;\u000a  void play();\u000a  void cancel();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/app_banner/AppBannerPromptResult.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/app_banner/AppBannerPromptResult.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000aenum AppBannerPromptOutcome { \"accepted\", \"dismissed\" };\u000a\u000adictionary AppBannerPromptResult {\u000a    required DOMString platform;\u000a    required AppBannerPromptOutcome outcome;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/app_banner/BeforeInstallPromptEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/app_banner/BeforeInstallPromptEvent.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Constructor(DOMString type, optional BeforeInstallPromptEventInit eventInitDict),\u000a    ConstructorCallWith=ExecutionContext\u000a] interface BeforeInstallPromptEvent : Event {\u000a    readonly attribute FrozenArray<DOMString> platforms;\u000a    [CallWith=ScriptState] readonly attribute Promise<AppBannerPromptResult> userChoice;\u000a    [CallWith=ScriptState] Promise<void> prompt();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/app_banner/BeforeInstallPromptEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/app_banner/BeforeInstallPromptEventInit.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000adictionary BeforeInstallPromptEventInit : EventInit {\u000a    sequence<DOMString> platforms;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/app_banner/WindowInstallation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/app_banner/WindowInstallation.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/appmanifest/#extensions-to-the-window-object\u000a\u000a[\u000a    ImplementedAs=DOMWindowInstallation\u000a] partial interface Window {\u000a    attribute EventHandler onappinstalled;\u000a    attribute EventHandler onbeforeinstallprompt;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchClickEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchClickEvent.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-click-event\u000a\u000aenum BackgroundFetchState { \"pending\", \"succeeded\", \"failed\" };\u000a\u000a[\u000a    Constructor(DOMString type, BackgroundFetchClickEventInit init),\u000a    Exposed=ServiceWorker,\u000a    RuntimeEnabled=BackgroundFetch\u000a] interface BackgroundFetchClickEvent : BackgroundFetchEvent {\u000a    readonly attribute BackgroundFetchState state;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/audio_output_devices/HTMLMediaElementAudioOutputDevice.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/audio_output_devices/HTMLMediaElementAudioOutputDevice.idl"},specUrls:["https://w3c.github.io/mediacapture-output/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-output/#htmlmediaelement-extensions\u000a\u000a[\u000a    ImplementedAs=HTMLMediaElementAudioOutputDevice\u000a] partial interface HTMLMediaElement {\u000a    [RuntimeEnabled=AudioOutputDevices] readonly attribute DOMString sinkId;\u000a    [RuntimeEnabled=AudioOutputDevices, CallWith=ScriptState] Promise<void> setSinkId(DOMString sinkId);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchClickEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchClickEventInit.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-click-event\u000a\u000adictionary BackgroundFetchClickEventInit : BackgroundFetchEventInit {\u000a    required BackgroundFetchState state;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchEvent.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-event\u000a\u000a[\u000a    Constructor(DOMString type, BackgroundFetchEventInit init),\u000a    Exposed=ServiceWorker,\u000a    RuntimeEnabled=BackgroundFetch\u000a] interface BackgroundFetchEvent : ExtendableEvent {\u000a    readonly attribute DOMString id;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchEventInit.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-event\u000a\u000adictionary BackgroundFetchEventInit : ExtendableEventInit {\u000a    required DOMString id;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchFailEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchFailEvent.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-fail-event\u000a\u000a[\u000a    Constructor(DOMString type, BackgroundFetchFailEventInit init),\u000a    Exposed=ServiceWorker,\u000a    RuntimeEnabled=BackgroundFetch\u000a] interface BackgroundFetchFailEvent : BackgroundFetchEvent {\u000a    readonly attribute FrozenArray<BackgroundFetchSettledFetch> fetches;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchFailEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchFailEventInit.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-fail-event\u000a\u000adictionary BackgroundFetchFailEventInit : BackgroundFetchEventInit {\u000a    required sequence<BackgroundFetchSettledFetch> fetches;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchFetch.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchFetch.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#backgroundfetchfetch\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=BackgroundFetch\u000a] interface BackgroundFetchFetch {\u000a    readonly attribute Request request;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchManager.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchManager.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-manager\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=BackgroundFetch\u000a] interface BackgroundFetchManager {\u000a    [CallWith=ScriptState, RaisesException] Promise<BackgroundFetchRegistration> fetch(DOMString id, (RequestInfo or sequence<RequestInfo>) requests, optional BackgroundFetchOptions options);\u000a    [CallWith=ScriptState] Promise<BackgroundFetchRegistration?> get(DOMString id);\u000a    [CallWith=ScriptState] Promise<FrozenArray<DOMString>> getIds();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchOptions.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-manager\u000a\u000adictionary BackgroundFetchOptions {\u000a    sequence<IconDefinition> icons = [];\u000a    DOMString title = \"\";\u000a    [ImplementedAs=downloadTotal] unsigned long long totalDownloadSize = 0;\u000a    unsigned long long downloadTotal = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchRegistration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchRegistration.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-registration\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=BackgroundFetch\u000a] interface BackgroundFetchRegistration : EventTarget {\u000a    readonly attribute DOMString id;\u000a    readonly attribute unsigned long long uploadTotal;\u000a    readonly attribute unsigned long long uploaded;\u000a    readonly attribute unsigned long long downloadTotal;\u000a    readonly attribute unsigned long long downloaded;\u000a    // TODO(crbug.com/699957): Implement the `activeFetches` attribute.\u000a\u000a    attribute EventHandler onprogress;\u000a\u000a    [CallWith=ScriptState] Promise<bool> abort();\u000a\u000a    // TODO(crbug.com/769770): Remove the following deprecated attributes.\u000a    readonly attribute FrozenArray<IconDefinition> icons;\u000a    [ImplementedAs=downloadTotal] readonly attribute long totalDownloadSize;\u000a    readonly attribute DOMString title;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchSettledFetch.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchSettledFetch.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#backgroundfetchsettledfetch\u000a\u000a[\u000a    Constructor(Request request, Response response),\u000a    Exposed=ServiceWorker,\u000a    RuntimeEnabled=BackgroundFetch\u000a] interface BackgroundFetchSettledFetch : BackgroundFetchFetch {\u000a    readonly attribute Response? response;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchedEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchedEvent.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-end-event\u000a\u000a[\u000a    Constructor(DOMString type, BackgroundFetchedEventInit init),\u000a    Exposed=ServiceWorker,\u000a    RuntimeEnabled=BackgroundFetch\u000a] interface BackgroundFetchedEvent : BackgroundFetchEvent {\u000a    readonly attribute FrozenArray<BackgroundFetchSettledFetch> fetches;\u000a\u000a    [CallWith=ScriptState] Promise<void> updateUI(DOMString title);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/BackgroundFetchedEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/BackgroundFetchedEventInit.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-end-event\u000a\u000adictionary BackgroundFetchedEventInit : BackgroundFetchEventInit {\u000a    required sequence<BackgroundFetchSettledFetch> fetches;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/IconDefinition.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/IconDefinition.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#background-fetch-manager\u000a\u000adictionary IconDefinition {\u000a  DOMString src;\u000a  DOMString sizes;\u000a  DOMString type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/ServiceWorkerGlobalScopeBackgroundFetch.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/ServiceWorkerGlobalScopeBackgroundFetch.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#events\u000a\u000a[\u000a    ImplementedAs=ServiceWorkerGlobalScopeBackgroundFetch,\u000a    RuntimeEnabled=BackgroundFetch\u000a] partial interface ServiceWorkerGlobalScope {\u000a    attribute EventHandler onbackgroundfetched;\u000a    attribute EventHandler onbackgroundfetchfail;\u000a    attribute EventHandler onbackgroundfetchabort;\u000a    attribute EventHandler onbackgroundfetchclick;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_fetch/ServiceWorkerRegistrationBackgroundFetch.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_fetch/ServiceWorkerRegistrationBackgroundFetch.idl"},specUrls:["https://wicg.github.io/background-fetch/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/background-fetch/#extensions-to-service-worker-registration\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    ImplementedAs=ServiceWorkerRegistrationBackgroundFetch,\u000a    RuntimeEnabled=BackgroundFetch\u000a] partial interface ServiceWorkerRegistration {\u000a    readonly attribute BackgroundFetchManager backgroundFetch;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_sync/ServiceWorkerGlobalScopeSync.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_sync/ServiceWorkerGlobalScopeSync.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=ServiceWorkerGlobalScopeSync\u000a] partial interface ServiceWorkerGlobalScope {\u000a    attribute EventHandler onsync;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_sync/ServiceWorkerRegistrationSync.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_sync/ServiceWorkerRegistrationSync.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    ImplementedAs=ServiceWorkerRegistrationSync\u000a] partial interface ServiceWorkerRegistration {\u000a    [MeasureAs=BackgroundSync] readonly attribute SyncManager sync;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_sync/SyncEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_sync/SyncEvent.idl"},specUrls:["https://wicg.github.io/BackgroundSync/spec/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/BackgroundSync/spec/#sync-event\u000a\u000a[\u000a    Constructor(DOMString type, SyncEventInit init),\u000a    Exposed=ServiceWorker\u000a] interface SyncEvent : ExtendableEvent {\u000a    readonly attribute DOMString tag;\u000a    readonly attribute boolean lastChance;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_sync/SyncEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_sync/SyncEventInit.idl"},specUrls:["https://wicg.github.io/BackgroundSync/spec/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/BackgroundSync/spec/#sync-event\u000a\u000adictionary SyncEventInit : ExtendableEventInit {\u000a    required DOMString tag;\u000a    boolean lastChance = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/background_sync/SyncManager.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/background_sync/SyncManager.idl"},specUrls:["https://wicg.github.io/BackgroundSync/spec/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/BackgroundSync/spec/#sync-manager-interface\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface SyncManager {\u000a    [MeasureAs=BackgroundSyncRegister,CallWith=ScriptState,ImplementedAs=registerFunction] Promise<void> register(DOMString tag);\u000a    [CallWith=ScriptState] Promise<sequence<DOMString>> getTags();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/battery/BatteryManager.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/battery/BatteryManager.idl"},specUrls:["https://w3c.github.io/battery/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/battery/#the-batterymanager-interface\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface BatteryManager : EventTarget {\u000a    readonly attribute boolean charging;\u000a    readonly attribute unrestricted double chargingTime;\u000a    readonly attribute unrestricted double dischargingTime;\u000a    readonly attribute double level;\u000a\u000a    attribute EventHandler onchargingchange;\u000a    attribute EventHandler onchargingtimechange;\u000a    attribute EventHandler ondischargingtimechange;\u000a    attribute EventHandler onlevelchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/battery/NavigatorBattery.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/battery/NavigatorBattery.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=NavigatorBattery\u000a] partial interface Navigator {\u000a    [CallWith=ScriptState, MeasureAs=BatteryStatusGetBattery] Promise getBattery();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/beacon/NavigatorBeacon.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/beacon/NavigatorBeacon.idl"},specUrls:["https://w3c.github.io/beacon/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/beacon/#sec-sendBeacon-method\u000a\u000a[\u000a    ImplementedAs=NavigatorBeacon\u000a] partial interface Navigator {\u000a    [CallWith=ScriptState, MeasureAs=SendBeacon, RaisesException] boolean sendBeacon(DOMString url, optional (ArrayBufferView or Blob or DOMString or FormData)? data = null);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/bluetooth/Bluetooth.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/bluetooth/Bluetooth.idl"},specUrls:["https://webbluetoothcg.github.io/web-bluetooth/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webbluetoothcg.github.io/web-bluetooth/#bluetooth\u000a\u000a[\u000a    RuntimeEnabled=WebBluetooth\u000a] interface Bluetooth {\u000a    [CallWith=ScriptState, RaisesException, MeasureAs=WebBluetoothRequestDevice] Promise<BluetoothDevice> requestDevice (optional RequestDeviceOptions options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/bluetooth/BluetoothCharacteristicProperties.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/bluetooth/BluetoothCharacteristicProperties.idl"},specUrls:["https://webbluetoothcg.github.io/web-bluetooth/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webbluetoothcg.github.io/web-bluetooth/#bluetoothcharacteristicproperties\u000a\u000a// Implement BluetoothCharacteristicProperties interface: http://crbug.com/483345\u000a\u000a[\u000a    RuntimeEnabled=WebBluetooth\u000a] interface BluetoothCharacteristicProperties {\u000a    readonly attribute boolean broadcast;\u000a    readonly attribute boolean read;\u000a    readonly attribute boolean writeWithoutResponse;\u000a    readonly attribute boolean write;\u000a    readonly attribute boolean notify;\u000a    readonly attribute boolean indicate;\u000a    readonly attribute boolean authenticatedSignedWrites;\u000a    readonly attribute boolean reliableWrite;\u000a    readonly attribute boolean writableAuxiliaries;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/bluetooth/BluetoothDevice.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/bluetooth/BluetoothDevice.idl"},specUrls:["https://webbluetoothcg.github.io/web-bluetooth/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webbluetoothcg.github.io/web-bluetooth/#bluetoothdevice\u000a\u000a// Implement BluetoothDevice interface: http://crbug.com/421668\u000a\u000a[\u000a    DependentLifetime,\u000a    RuntimeEnabled=WebBluetooth\u000a] interface BluetoothDevice : EventTarget\u000a// Implement ServiceEventHandlers interface: http://crbug.com/421670\u000a// : ServiceEventHandlers\u000a{\u000a// Implement BluetoothDevice interface: http://crbug.com/421668\u000a    readonly    attribute DOMString id;\u000a    readonly    attribute DOMString?                 name;\u000a    readonly    attribute BluetoothRemoteGATTServer  gatt;\u000a\u000a    attribute EventHandler ongattserverdisconnected;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/bluetooth/BluetoothLEScanFilterInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/bluetooth/BluetoothLEScanFilterInit.idl"},specUrls:["https://webbluetoothcg.github.io/web-bluetooth/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webbluetoothcg.github.io/web-bluetooth/#dictdef-bluetoothlescanfilterinit\u000a\u000adictionary BluetoothLEScanFilterInit {\u000a    sequence<BluetoothServiceUUID> services;\u000a    DOMString name;\u000a    DOMString namePrefix;\u000a    // TODO(crbug.com/707635): Support manufacturerData and serviceData filters.\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/bluetooth/BluetoothRemoteGATTCharacteristic.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/bluetooth/BluetoothRemoteGATTCharacteristic.idl"},specUrls:["https://webbluetoothcg.github.io/web-bluetooth/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webbluetoothcg.github.io/web-bluetooth/#bluetoothremotegattcharacteristic\u000a\u000a// Implement BluetoothRemoteGATTCharacteristic interface: https://crbug.com/483344\u000a\u000a[\u000a    DependentLifetime,\u000a    RuntimeEnabled=WebBluetooth\u000a] interface BluetoothRemoteGATTCharacteristic : EventTarget {//: CharacteristicEventHandlers {\u000a    [SameObject] readonly attribute BluetoothRemoteGATTService service;\u000a    readonly attribute UUID uuid;\u000a    readonly attribute BluetoothCharacteristicProperties properties;\u000a    readonly attribute DataView? value;\u000a    [RaisesException, CallWith=ScriptState, MeasureAs=WebBluetoothRemoteCharacteristicGetDescriptor] Promise<BluetoothRemoteGATTDescriptor> getDescriptor(BluetoothDescriptorUUID descriptor);\u000a    [RaisesException, CallWith=ScriptState, MeasureAs=WebBluetoothRemoteCharacteristicGetDescriptors] Promise<sequence<BluetoothRemoteGATTDescriptor>> getDescriptors(optional BluetoothDescriptorUUID descriptor);\u000a    [CallWith=ScriptState, MeasureAs=WebBluetoothRemoteCharacteristicReadValue] Promise<DataView> readValue();\u000a    [CallWith=ScriptState, MeasureAs=WebBluetoothRemoteCharacteristicWriteValue] Promise<void> writeValue(BufferSource value);\u000a    [CallWith=ScriptState, MeasureAs=WebBluetoothRemoteCharacteristicStartNotifications] Promise<BluetoothRemoteGATTCharacteristic> startNotifications();\u000a    [CallWith=ScriptState, MeasureAs=WebBluetoothRemoteCharacteristicStopNotifications] Promise<BluetoothRemoteGATTCharacteristic> stopNotifications();\u000a\u000a    // TODO(ortuno): Move this to CharacteristicEventHandlers.\u000a    // http://crbug.com/537459\u000a    attribute EventHandler oncharacteristicvaluechanged;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/bluetooth/BluetoothRemoteGATTDescriptor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/bluetooth/BluetoothRemoteGATTDescriptor.idl"},specUrls:["https://webbluetoothcg.github.io/web-bluetooth/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webbluetoothcg.github.io/web-bluetooth/#bluetoothremotegattdescriptor\u000a\u000a// Implement BluetoothRemoteGATTDescriptor interface: https://crbug.com/660699\u000a\u000a[\u000a    RuntimeEnabled=WebBluetooth\u000a] interface BluetoothRemoteGATTDescriptor  {\u000a    [SameObject] readonly attribute BluetoothRemoteGATTCharacteristic characteristic;\u000a    readonly attribute UUID uuid;\u000a    readonly attribute DataView? value;\u000a    [CallWith=ScriptState, MeasureAs=WebBluetoothRemoteDescriptorReadValue] Promise<DataView> readValue();\u000a    [CallWith=ScriptState, MeasureAs=WebBluetoothRemoteDescriptorWriteValue] Promise<void> writeValue(BufferSource value);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/bluetooth/BluetoothRemoteGATTServer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/bluetooth/BluetoothRemoteGATTServer.idl"},specUrls:["https://webbluetoothcg.github.io/web-bluetooth/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webbluetoothcg.github.io/web-bluetooth/#bluetoothremotegattserver\u000a\u000a// Implement BluetoothGATTRemoteServer interface: https://crbug.com/476735\u000a\u000a[\u000a    RuntimeEnabled=WebBluetooth\u000a] interface BluetoothRemoteGATTServer\u000a{\u000a    [SameObject] readonly attribute BluetoothDevice device;\u000a    readonly attribute boolean connected;\u000a    [CallWith=ScriptState, MeasureAs=WebBluetoothRemoteServerConnect] Promise<BluetoothRemoteGATTServer> connect();\u000a    [CallWith=ScriptState, MeasureAs=WebBluetoothRemoteServerDisconnect] void disconnect();\u000a    [CallWith=ScriptState, RaisesException, MeasureAs=WebBluetoothRemoteServerGetPrimaryService] Promise<BluetoothRemoteGATTService> getPrimaryService (BluetoothServiceUUID service);\u000a    [CallWith=ScriptState, RaisesException, MeasureAs=WebBluetoothRemoteServerGetPrimaryServices] Promise<sequence<BluetoothRemoteGATTService>> getPrimaryServices (optional BluetoothServiceUUID service);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/bluetooth/BluetoothRemoteGATTService.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/bluetooth/BluetoothRemoteGATTService.idl"},specUrls:["https://webbluetoothcg.github.io/web-bluetooth/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webbluetoothcg.github.io/web-bluetooth/#bluetoothremotegattservice\u000a\u000a// Implement BluetoothRemoteGATTService interface: https://crbug.com/483342\u000a\u000a[\u000a    RuntimeEnabled=WebBluetooth\u000a] interface BluetoothRemoteGATTService { // : ServiceEventHandlers {\u000a    [SameObject] readonly attribute BluetoothDevice device;\u000a    readonly attribute UUID uuid;\u000a    readonly attribute boolean isPrimary;\u000a    [RaisesException, CallWith=ScriptState, MeasureAs=WebBluetoothRemoteServiceGetCharacteristic] Promise<BluetoothRemoteGATTCharacteristic> getCharacteristic(BluetoothCharacteristicUUID characteristic);\u000a    [RaisesException, CallWith=ScriptState, MeasureAs=WebBluetoothRemoteServiceGetCharacteristics] Promise<sequence<BluetoothRemoteGATTCharacteristic>> getCharacteristics(optional BluetoothCharacteristicUUID characteristic);\u000a    // Promise<BluetoothRemoteGATTService> getIncludedService(BluetoothServiceUUID service);\u000a    // Promise<sequence<BluetoothRemoteGATTService>> getIncludedServices(optional BluetoothServiceUUID service);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/bluetooth/BluetoothUUID.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/bluetooth/BluetoothUUID.idl"},specUrls:["https://webbluetoothcg.github.io/web-bluetooth/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webbluetoothcg.github.io/web-bluetooth/#bluetoothuuid\u000a\u000a[\u000a    RuntimeEnabled=WebBluetooth\u000a] interface BluetoothUUID {\u000a    [RaisesException] static UUID getService((DOMString or unsigned long) name);\u000a    [RaisesException] static UUID getCharacteristic((DOMString or unsigned long) name);\u000a    [RaisesException] static UUID getDescriptor((DOMString or unsigned long) name);\u000a\u000a    static UUID canonicalUUID([EnforceRange] unsigned long alias);\u000a};\u000a\u000atypedef DOMString UUID;\u000a\u000atypedef (DOMString or unsigned long) BluetoothServiceUUID;\u000a\u000atypedef (DOMString or unsigned long) BluetoothCharacteristicUUID;\u000a\u000atypedef (DOMString or unsigned long) BluetoothDescriptorUUID;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/bluetooth/NavigatorBluetooth.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/bluetooth/NavigatorBluetooth.idl"},specUrls:["https://webbluetoothcg.github.io/web-bluetooth/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webbluetoothcg.github.io/web-bluetooth/#navigator-extensions\u000a\u000a[\u000a    ImplementedAs=NavigatorBluetooth,\u000a    RuntimeEnabled=WebBluetooth\u000a] partial interface Navigator {\u000a    [SameObject] readonly attribute Bluetooth bluetooth;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/bluetooth/RequestDeviceOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/bluetooth/RequestDeviceOptions.idl"},specUrls:["https://webbluetoothcg.github.io/web-bluetooth/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webbluetoothcg.github.io/web-bluetooth/#dictdef-requestdeviceoptions\u000a\u000adictionary RequestDeviceOptions {\u000a    sequence<BluetoothLEScanFilterInit>  filters;\u000a    sequence<BluetoothServiceUUID> optionalServices = [];\u000a    boolean acceptAllDevices = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/broadcastchannel/BroadcastChannel.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/broadcastchannel/BroadcastChannel.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/comms.html#broadcastchannel\u000a\u000a[\u000a    Constructor(DOMString name),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor,\u000a    Exposed=(Window,Worker),\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Measure\u000a] interface BroadcastChannel : EventTarget {\u000a    readonly attribute DOMString name;\u000a\u000a    [RaisesException, Measure] void postMessage(any message);\u000a    [Measure] void close();\u000a\u000a    // event handlers\u000a    attribute EventHandler onmessage;\u000a    attribute EventHandler onmessageerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/budget/BudgetService.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/budget/BudgetService.idl"},specUrls:["https://wicg.github.io/budget-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/budget-api/#budget-service-interface\u000a\u000aenum OperationType {\u000a    \"silent-push\"\u000a};\u000a\u000a[\u000a    RuntimeEnabled=Budget,\u000a    Exposed=(Window,Worker)\u000a] interface BudgetService {\u000a    [OriginTrialEnabled=BudgetQuery, CallWith=ScriptState, MeasureAs=BudgetAPIGetCost] Promise<double> getCost(OperationType operation);\u000a    [OriginTrialEnabled=BudgetQuery, CallWith=ScriptState, MeasureAs=BudgetAPIGetBudget] Promise<sequence<BudgetState>> getBudget();\u000a    [CallWith=ScriptState] Promise<boolean> reserve(OperationType operation);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/budget/BudgetState.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/budget/BudgetState.idl"},specUrls:["https://wicg.github.io/budget-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/budget-api/#budget-state-interface\u000a\u000a[\u000a    OriginTrialEnabled=BudgetQuery,\u000a    Exposed=(Window,Worker)\u000a] interface BudgetState {\u000a    readonly attribute double budgetAt;\u000a    readonly attribute DOMTimeStamp time;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/budget/NavigatorBudget.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/budget/NavigatorBudget.idl"},specUrls:["https://wicg.github.io/budget-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/budget-api/#navigator-workernavigator-extensions\u000a\u000a[\u000a    ImplementedAs=NavigatorBudget,\u000a    RuntimeEnabled=Budget\u000a] partial interface Navigator {\u000a    [SameObject, CallWith=ExecutionContext] readonly attribute BudgetService budget;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/budget/WorkerNavigatorBudget.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/budget/WorkerNavigatorBudget.idl"},specUrls:["https://wicg.github.io/budget-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/budget-api/#navigator-workernavigator-extensions\u000a\u000a[\u000a    ImplementedAs=WorkerNavigatorBudget,\u000a    RuntimeEnabled=Budget\u000a] partial interface WorkerNavigator {\u000a    [SameObject, CallWith=ExecutionContext] readonly attribute BudgetService budget;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/cachestorage/Cache.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/cachestorage/Cache.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#cache-interface\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface Cache {\u000a    [CallWith=ScriptState, RaisesException] Promise<any> match(RequestInfo request, optional CacheQueryOptions options);\u000a    [CallWith=ScriptState, RaisesException] Promise<sequence<Response>> matchAll(optional RequestInfo request, optional CacheQueryOptions options);\u000a    [CallWith=ScriptState, RaisesException] Promise<void> add(RequestInfo request);\u000a    [CallWith=ScriptState, RaisesException] Promise<void> addAll(sequence<RequestInfo> requests);\u000a    [CallWith=ScriptState, RaisesException] Promise<void> put(RequestInfo request, Response response);\u000a    [CallWith=ScriptState, ImplementedAs=Delete, RaisesException] Promise<boolean> delete(RequestInfo request, optional CacheQueryOptions options);\u000a    [CallWith=ScriptState, RaisesException] Promise<sequence<Request>> keys(optional RequestInfo request, optional CacheQueryOptions options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/cachestorage/CacheQueryOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/cachestorage/CacheQueryOptions.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#cache-interface\u000adictionary CacheQueryOptions {\u000a    boolean ignoreSearch = false;\u000a    boolean ignoreMethod = false;\u000a    boolean ignoreVary = false;\u000a    DOMString cacheName;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/cachestorage/CacheStorage.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/cachestorage/CacheStorage.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://w3c.github.io/ServiceWorker/#cachestorage-interface\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface CacheStorage {\u000a  [CallWith=ScriptState, RaisesException] Promise<any> match(RequestInfo request, optional CacheQueryOptions options);\u000a  [CallWith=ScriptState, RaisesException] Promise<boolean> has(DOMString cacheName);\u000a  [CallWith=ScriptState, RaisesException] Promise<Cache> open(DOMString cacheName);\u000a  [CallWith=ScriptState, RaisesException, ImplementedAs=Delete] Promise<boolean> delete(DOMString cacheName);\u000a  [CallWith=ScriptState, RaisesException] Promise<sequence<DOMString>> keys();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/cachestorage/WindowCacheStorage.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/cachestorage/WindowCacheStorage.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#self-caches\u000a[\u000a    ImplementedAs=GlobalCacheStorage\u000a] partial interface Window {\u000a    [MeasureAs=GlobalCacheStorage, RaisesException] readonly attribute CacheStorage caches;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/cachestorage/WorkerCacheStorage.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/cachestorage/WorkerCacheStorage.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#self-caches\u000a[\u000a    ImplementedAs=GlobalCacheStorage\u000a] partial interface WorkerGlobalScope {\u000a    [MeasureAs=GlobalCacheStorage, RaisesException] readonly attribute CacheStorage caches;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/canvas/canvas2d/CanvasGradient.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/canvas/canvas2d/CanvasGradient.idl"},contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.  All rights reserved.\u000a * Copyright (C) 2013 Intel Corporation. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a[\u000a    Exposed(Worker ExperimentalCanvasFeatures, Window StableBlinkFeatures)\u000a] interface CanvasGradient {\u000a\u000a    [RaisesException] void addColorStop(float offset, DOMString color);\u000a\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/canvas/canvas2d/CanvasPath.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/canvas/canvas2d/CanvasPath.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/scripting.html#canvaspath\u000a\u000a[\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface CanvasPath {\u000a    // shared path API methods\u000a    void closePath();\u000a    void moveTo(unrestricted float x, unrestricted float y);\u000a    void lineTo(unrestricted float x, unrestricted float y);\u000a    void quadraticCurveTo(unrestricted float cpx, unrestricted float cpy, unrestricted float x, unrestricted float y);\u000a    void bezierCurveTo(unrestricted float cp1x, unrestricted float cp1y, unrestricted float cp2x, unrestricted float cp2y, unrestricted float x, unrestricted float y);\u000a    [RaisesException] void arcTo(unrestricted float x1, unrestricted float y1, unrestricted float x2, unrestricted float y2, unrestricted float radius);\u000a    void rect(unrestricted float x, unrestricted float y, unrestricted float width, unrestricted float height);\u000a    [RaisesException] void arc(unrestricted float x, unrestricted float y, unrestricted float radius, unrestricted float startAngle, unrestricted float endAngle, [Default=Undefined] optional boolean anticlockwise);\u000a    [RaisesException] void ellipse(unrestricted float x, unrestricted float y, unrestricted float radiusX, unrestricted float radiusY, unrestricted float rotation, unrestricted float startAngle, unrestricted float endAngle, [Default=Undefined] optional boolean anticlockwise);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/canvas/canvas2d/CanvasPattern.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/canvas/canvas2d/CanvasPattern.idl"},contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a[\u000a    Exposed(Worker ExperimentalCanvasFeatures, Window StableBlinkFeatures)\u000a] interface CanvasPattern {\u000a\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures,Exposed=Window] void setTransform(SVGMatrix transform);\u000a\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/canvas/canvas2d/CanvasRenderingContext2D.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/canvas/canvas2d/CanvasRenderingContext2D.idl"},contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvasrenderingcontext2d\u000a\u000a// The spec specifies:\u000a//    typedef (HTMLImageElement or\u000a//             SVGImageElement) HTMLOrSVGImageElement;\u000a// but there's a problem with our IDL code generator for typedef-in-typedef,\u000a// so we split this into two for simplicity. There's no difference from a user\u000a// perspective.\u000a// TODO(fserb): revisit this once union typedefs are finalized.\u000a\u000atypedef (CSSImageValue or\u000a         HTMLImageElement or\u000a         SVGImageElement or\u000a         HTMLVideoElement or\u000a         HTMLCanvasElement or\u000a         ImageBitmap or\u000a         OffscreenCanvas) CanvasImageSource;\u000a\u000aenum CanvasFillRule { \"nonzero\", \"evenodd\" };\u000aenum ImageSmoothingQuality {\"low\", \"medium\", \"high\"};\u000a\u000a[\u000a    DependentLifetime\u000a] interface CanvasRenderingContext2D {\u000a    // back-reference to the canvas\u000a    readonly attribute HTMLCanvasElement canvas;\u000a\u000a    // state\u000a    void save(); // push state on state stack\u000a    void restore(); // pop state stack and restore state\u000a\u000a    // transformations (default transform is the identity matrix)\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] attribute SVGMatrix currentTransform;\u000a    void scale(unrestricted double x, unrestricted double y);\u000a    void rotate(unrestricted double angle);\u000a    void translate(unrestricted double x, unrestricted double y);\u000a    void transform(unrestricted double a, unrestricted double b, unrestricted double c, unrestricted double d, unrestricted double e, unrestricted double f);\u000a    void setTransform(unrestricted double a, unrestricted double b, unrestricted double c, unrestricted double d, unrestricted double e, unrestricted double f);\u000a    void resetTransform();\u000a\u000a    // compositing\u000a    attribute unrestricted double globalAlpha; // (default 1.0)\u000a    attribute DOMString globalCompositeOperation; // (default source-over)\u000a    [MeasureAs=Canvas2DFilter] attribute DOMString filter; // (default 'none')\u000a\u000a    // image smoothing\u000a    attribute boolean imageSmoothingEnabled; // (default True)\u000a    [MeasureAs=Canvas2DImageSmoothingQuality]attribute ImageSmoothingQuality imageSmoothingQuality; // (default \"low\")\u000a\u000a    // colors and styles (see also the CanvasDrawingStyles interface)\u000a    attribute (DOMString or CanvasGradient or CanvasPattern) strokeStyle; // (default black)\u000a    attribute (DOMString or CanvasGradient or CanvasPattern) fillStyle; // (default black)\u000a    CanvasGradient createLinearGradient(double x0, double y0, double x1, double y1);\u000a    [RaisesException] CanvasGradient createRadialGradient(double x0, double y0, double r0, double x1, double y1, double r1);\u000a    [CallWith=ScriptState, RaisesException] CanvasPattern? createPattern(CanvasImageSource image, [TreatNullAs=NullString] DOMString repetitionType);\u000a\u000a    // shadows\u000a    attribute unrestricted double shadowOffsetX;\u000a    attribute unrestricted double shadowOffsetY;\u000a    attribute unrestricted double shadowBlur;\u000a    attribute DOMString shadowColor;\u000a\u000a    // rects\u000a    void clearRect(unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a    void fillRect(unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a    void strokeRect(unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a\u000a    // path API (see also CanvasPath)\u000a    void beginPath();\u000a    void fill(optional CanvasFillRule winding);\u000a    void fill(Path2D path, optional CanvasFillRule winding);\u000a    void stroke();\u000a    void stroke(Path2D path);\u000a    // Focus rings\u000a    void drawFocusIfNeeded(Element element);\u000a    void drawFocusIfNeeded(Path2D path, Element element);\u000a\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] void scrollPathIntoView(optional Path2D path);\u000a    void clip(optional CanvasFillRule winding);\u000a    void clip(Path2D path, optional CanvasFillRule winding);\u000a    boolean isPointInPath(unrestricted double x, unrestricted double y, optional CanvasFillRule winding);\u000a    boolean isPointInPath(Path2D path, unrestricted double x, unrestricted double y, optional CanvasFillRule winding);\u000a    boolean isPointInStroke(unrestricted double x, unrestricted double y);\u000a    boolean isPointInStroke(Path2D path, unrestricted double x, unrestricted double y);\u000a\u000a    // text (see also the CanvasDrawingStyles interface)\u000a    void fillText(DOMString text, unrestricted double x, unrestricted double y, optional unrestricted double maxWidth);\u000a    void strokeText(DOMString text, unrestricted double x, unrestricted double y, optional unrestricted double maxWidth);\u000a    TextMetrics measureText(DOMString text);\u000a\u000a    // drawing images\u000a    [CallWith=ScriptState, RaisesException] void drawImage(CanvasImageSource image, unrestricted double x, unrestricted double y);\u000a    [CallWith=ScriptState, RaisesException] void drawImage(CanvasImageSource image, unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a    [CallWith=ScriptState, RaisesException] void drawImage(CanvasImageSource image, unrestricted double sx, unrestricted double sy, unrestricted double sw, unrestricted double sh, unrestricted double dx, unrestricted double dy, unrestricted double dw, unrestricted double dh);\u000a\u000a    // hit regions\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures, RaisesException] void addHitRegion(optional HitRegionOptions options);\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] void removeHitRegion(DOMString id);\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] void clearHitRegions();\u000a\u000a    // pixel manipulation\u000a    [RaisesException] ImageData createImageData(ImageData imagedata);\u000a    [RaisesException] ImageData createImageData(long sw, long sh);\u000a    [RaisesException] ImageData getImageData(long sx, long sy, long sw, long sh);\u000a    [RaisesException] void putImageData(ImageData imagedata, long dx, long dy);\u000a    [RaisesException] void putImageData(ImageData imagedata, long dx, long dy, long dirtyX, long dirtyY, long dirtyWidth, long dirtyHeight);\u000a    \u000a    // https://github.com/WICG/canvas-color-space/blob/master/CanvasColorSpaceProposal.md\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures, RaisesException] ImageData createImageData(unsigned long sw, unsigned long sh, ImageDataColorSettings imageDataColorSettings);\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures, RaisesException] ImageData createImageData(ImageDataArray data, unsigned long sw, unsigned long sh, optional ImageDataColorSettings imageDataColorSettings);\u000a\u000a    // Context state\u000a    // Should be merged with WebGL counterpart in CanvasRenderingContext, once no-longer experimental\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] boolean isContextLost();\u000a\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures, MeasureAs=GetCanvas2DContextAttributes] CanvasRenderingContext2DSettings getContextAttributes();\u000a\u000a    // FIXME: factor out to CanvasDrawingStyles\u000a    // line caps/joins\u000a    attribute unrestricted double lineWidth; // (default 1)\u000a    attribute DOMString lineCap; // \"butt\", \"round\", \"square\" (default \"butt\")\u000a    attribute DOMString lineJoin; // \"round\", \"bevel\", \"miter\" (default \"miter\")\u000a    attribute unrestricted double miterLimit; // (default 10)\u000a\u000a    // dashed lines\u000a    void setLineDash(sequence<unrestricted double> dash);\u000a    sequence<unrestricted double> getLineDash();\u000a    attribute unrestricted double lineDashOffset;\u000a\u000a    // text\u000a    attribute DOMString font; // (default 10px sans-serif)\u000a    attribute DOMString textAlign; // \"start\", \"end\", \"left\", \"right\", \"center\" (default: \"start\")\u000a    attribute DOMString textBaseline; // \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", \"bottom\" (default: \"alphabetic\")\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] attribute DOMString direction; // \"inherit\", \"rtl\", \"ltr\" (default: \"inherit\")\u000a\u000a};\u000a\u000aCanvasRenderingContext2D implements CanvasPath;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/canvas/canvas2d/CanvasRenderingContext2DSettings.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/canvas/canvas2d/CanvasRenderingContext2DSettings.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/canvas-color-space/blob/master/CanvasColorSpaceProposal.md\u000a\u000a[PermissiveDictionaryConversion]\u000adictionary CanvasRenderingContext2DSettings {\u000a    boolean alpha = true;\u000a\u000a    // TODO(crbug.com/637288): Do we keep \"legacy-srgb\" as the default?\u000a    // Must decide before shipping.\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] CanvasColorSpace colorSpace = \"legacy-srgb\";\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] CanvasPixelFormat pixelFormat = \"8-8-8-8\";\u000a};\u000a\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/canvas/canvas2d/HitRegionOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/canvas/canvas2d/HitRegionOptions.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Spec: https://html.spec.whatwg.org/multipage/scripting.html#hitregionoptions\u000a\u000adictionary HitRegionOptions {\u000a    Path2D? path = null;\u000a    CanvasFillRule fillRule = \"nonzero\";\u000a    DOMString id = \"\";\u000a    Element? control = null;\u000a    // We don't use parentID, label and role yet.\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/canvas/canvas2d/Path2D.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/canvas/canvas2d/Path2D.idl"},contents:"/*\u000a * Copyright (C) 2006 Apple Computer, Inc.  All rights reserved.\u000a * Copyright (C) 2012, 2013 Adobe Systems Incorporated. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\u000a * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\u000a * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\u000a * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\u000a * THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\u000a * SUCH DAMAGE.\u000a */\u000a\u000a// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#path2d\u000a\u000a[\u000a    Constructor,\u000a    Constructor(Path2D path),\u000a    Constructor(DOMString text),\u000a    Exposed(Worker ExperimentalCanvasFeatures, Window StableBlinkFeatures, PaintWorklet CSSPaintAPI)\u000a] interface Path2D {\u000a\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] void addPath(Path2D path, optional SVGMatrix? transform);\u000a};\u000a\u000aPath2D implements CanvasPath;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/canvas/htmlcanvas/HTMLCanvasElementModule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/canvas/htmlcanvas/HTMLCanvasElementModule.idl"},specUrls:["https://html.spec.whatwg.org/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/#the-canvas-element\u000a\u000atypedef (CanvasRenderingContext2D or\u000a         WebGLRenderingContext or\u000a         WebGL2RenderingContext or\u000a         ImageBitmapRenderingContext) RenderingContext;\u000a\u000a[\u000a    ImplementedAs=HTMLCanvasElementModule\u000a] partial interface HTMLCanvasElement\u000a{\u000a    // The PermissiveDictionaryConversion extended attribute is needed to allow the\u000a    // autogenerated code to match the behavior of the custom binding. Web IDL\u000a    // requires throwing TypeError if the incoming argument is not an object type\u000a    // (and is not undefined or null). The binding must ignore this.\u000a    // Related spec issue: https://github.com/whatwg/html/issues/595\u000a    [RaisesException] RenderingContext? getContext(DOMString contextId, [PermissiveDictionaryConversion] optional CanvasContextCreationAttributes attributes);\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures, RaisesException, MeasureAs=OffscreenCanvas] OffscreenCanvas transferControlToOffscreen();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/canvas/imagebitmap/ImageBitmapRenderingContext.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/canvas/imagebitmap/ImageBitmapRenderingContext.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/scripting.html#the-imagebitmap-rendering-context\u000a\u000a[\u000a    DependentLifetime\u000a] interface ImageBitmapRenderingContext {\u000a    // back-reference to the canvas\u000a    readonly attribute HTMLCanvasElement canvas;\u000a\u000a    [RaisesException] void transferFromImageBitmap(ImageBitmap? bitmap);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/canvas/offscreencanvas/OffscreenCanvasModule.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/canvas/offscreencanvas/OffscreenCanvasModule.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/scripting.html#the-offscreencanvas-interface\u000a\u000atypedef (OffscreenCanvasRenderingContext2D or\u000a         WebGLRenderingContext or\u000a         WebGL2RenderingContext) OffscreenRenderingContext;\u000aenum OffscreenRenderingContextType { \"2d\", \"webgl\", \"webgl2\" };\u000a\u000a[\u000a    ImplementedAs=OffscreenCanvasModule\u000a] partial interface OffscreenCanvas {\u000a    [CallWith=ExecutionContext, RaisesException, RuntimeEnabled=ExperimentalCanvasFeatures] OffscreenRenderingContext? getContext(OffscreenRenderingContextType contextType, optional CanvasContextCreationAttributes attributes);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/canvas/offscreencanvas2d/OffscreenCanvasRenderingContext2D.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/canvas/offscreencanvas2d/OffscreenCanvasRenderingContext2D.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/scripting.html#the-offscreen-2d-rendering-context\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=ExperimentalCanvasFeatures\u000a] interface OffscreenCanvasRenderingContext2D {\u000a    // back-reference to the canvas\u000a    [ImplementedAs=offscreenCanvasForBinding] readonly attribute OffscreenCanvas canvas;\u000a\u000a    [CallWith=ScriptState, RaisesException] Promise commit();\u000a\u000a    // state\u000a    void save(); // push state on state stack\u000a    void restore(); // pop state stack and restore state\u000a\u000a    // transformations (default transform is the identity matrix)\u000a    void scale(unrestricted double x, unrestricted double y);\u000a    void rotate(unrestricted double angle);\u000a    void translate(unrestricted double x, unrestricted double y);\u000a    void transform(unrestricted double a, unrestricted double b, unrestricted double c, unrestricted double d, unrestricted double e, unrestricted double f);\u000a    void setTransform(unrestricted double a, unrestricted double b, unrestricted double c, unrestricted double d, unrestricted double e, unrestricted double f);\u000a    void resetTransform();\u000a\u000a    // compositing\u000a    attribute unrestricted double globalAlpha; // (default 1.0)\u000a    attribute DOMString globalCompositeOperation; // (default source-over)\u000a    [MeasureAs=Canvas2DFilter]attribute DOMString filter;\u000a\u000a    // image smoothing\u000a    attribute boolean imageSmoothingEnabled; // (default True)\u000a    [MeasureAs=Canvas2DImageSmoothingQuality] attribute ImageSmoothingQuality imageSmoothingQuality; // (default \"low\")\u000a\u000a    // colors and styles\u000a    attribute (DOMString or CanvasGradient or CanvasPattern) strokeStyle; // (default black)\u000a    attribute (DOMString or CanvasGradient or CanvasPattern) fillStyle; // (default black)\u000a    CanvasGradient createLinearGradient(double x0, double y0, double x1, double y1);\u000a    [RaisesException] CanvasGradient createRadialGradient(double x0, double y0, double r0, double x1, double y1, double r1);\u000a    [CallWith=ScriptState, RaisesException] CanvasPattern? createPattern(CanvasImageSource image, [TreatNullAs=NullString] DOMString repetitionType);\u000a\u000a    // shadows\u000a    attribute unrestricted double shadowOffsetX;\u000a    attribute unrestricted double shadowOffsetY;\u000a    attribute unrestricted double shadowBlur;\u000a    attribute DOMString shadowColor;\u000a\u000a    // CanvasRect interface\u000a    void clearRect(unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a    void fillRect(unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a    void strokeRect(unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a\u000a    // Path API (See BaseRenderingContext2D)\u000a    void beginPath();\u000a    void fill(optional CanvasFillRule winding);\u000a    void fill(Path2D path, optional CanvasFillRule winding);\u000a    void stroke();\u000a    void stroke(Path2D path);\u000a    void clip();\u000a    void clip(Path2D path);\u000a    boolean isPointInPath(unrestricted double x, unrestricted double y, optional CanvasFillRule winding);\u000a    boolean isPointInPath(Path2D path, unrestricted double x, unrestricted double y, optional CanvasFillRule winding);\u000a    boolean isPointInStroke(unrestricted double x, unrestricted double y);\u000a    boolean isPointInStroke(Path2D path, unrestricted double x, unrestricted double y);\u000a\u000a    // text (see also the CanvasDrawingStyles interface)\u000a    void fillText(DOMString text, unrestricted double x, unrestricted double y, optional unrestricted double maxWidth);\u000a    void strokeText(DOMString text, unrestricted double x, unrestricted double y, optional unrestricted double maxWidth);\u000a    TextMetrics measureText(DOMString text);\u000a\u000a    // drawing images\u000a    [CallWith=ScriptState, RaisesException] void drawImage(CanvasImageSource image, unrestricted double x, unrestricted double y);\u000a    [CallWith=ScriptState, RaisesException] void drawImage(CanvasImageSource image, unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a    [CallWith=ScriptState, RaisesException] void drawImage(CanvasImageSource image, unrestricted double sx, unrestricted double sy, unrestricted double sw, unrestricted double sh, unrestricted double dx, unrestricted double dy, unrestricted double dw, unrestricted double dh);\u000a\u000a    // pixel manipulation\u000a    [RaisesException] ImageData createImageData(ImageData imagedata);\u000a    [RaisesException] ImageData createImageData(long sw, long sh);\u000a    [RaisesException] ImageData getImageData(long sx, long sy, long sw, long sh);\u000a    [RaisesException] void putImageData(ImageData imagedata, long dx, long dy);\u000a    [RaisesException] void putImageData(ImageData imagedata, long dx, long dy, long dirtyX, long dirtyY, long dirtyWidth, long dirtyHeight);\u000a\u000a    // If OffscreenCanva ships before color managed canvas, this method must remain behind flag.\u000a    // https://github.com/WICG/canvas-color-space/blob/master/CanvasColorSpaceProposal.md\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures, RaisesException] ImageData createImageData(unsigned long sw, unsigned long sh, ImageDataColorSettings imageDataColorSettings);\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures, RaisesException] ImageData createImageData(ImageDataArray data, unsigned long sw, unsigned long sh, ImageDataColorSettings imageDataColorSettings);\u000a\u000a\u000a    // Line caps/joins\u000a    attribute unrestricted double lineWidth; // (default 1)\u000a    attribute DOMString lineCap; // \"butt\", \"round\", \"square\" (default \"butt\")\u000a    attribute DOMString lineJoin; // \"round\", \"bevel\", \"miter\" (default \"miter\")\u000a    attribute unrestricted double miterLimit; // (default 10)\u000a\u000a    // dashed lines\u000a    void setLineDash(sequence<unrestricted double> dash);\u000a    sequence<unrestricted double> getLineDash();\u000a    attribute unrestricted double lineDashOffset;\u000a\u000a    // text\u000a    attribute DOMString font; // (default 10px sans-serif)\u000a    attribute DOMString textAlign; // \"start\", \"end\", \"left\", \"right\", \"center\" (default: \"start\")\u000a    attribute DOMString textBaseline; // \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", \"bottom\" (default: \"alphabetic\")\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] attribute DOMString direction; // \"inherit\", \"rtl\", \"ltr\" (default: \"inherit\")\u000a};\u000a\u000aOffscreenCanvasRenderingContext2D implements CanvasPath;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/cookie_store/CookieListItem.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/cookie_store/CookieListItem.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/async-cookies-api/blob/gh-pages/explainer.md\u000a\u000adictionary CookieListItem {\u000a  DOMString name;\u000a  DOMString value;\u000a};\u000a\u000atypedef sequence<CookieListItem> CookieList;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/cookie_store/CookieStore.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/cookie_store/CookieStore.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/async-cookies-api/blob/gh-pages/explainer.md\u000a\u000a[\u000a  Exposed=Window,\u000a  RuntimeEnabled=AsyncCookies\u000a] interface CookieStore {\u000a  // https://github.com/WICG/async-cookies-api/blob/gh-pages/explainer.md#reading\u000a  [CallWith=ScriptState, RaisesException] Promise<CookieList?> getAll(\u000a      optional CookieStoreGetOptions options);\u000a\u000a  // https://github.com/WICG/async-cookies-api/blob/gh-pages/explainer.md#writing\u000a  [CallWith=ScriptState, RaisesException] Promise<void> set(\u000a      DOMString name, DOMString value, optional CookieStoreSetOptions options);\u000a\u000a  // TODO(crbug.com/729800): Implement the other operations in the spec.\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/cookie_store/CookieStoreGetOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/cookie_store/CookieStoreGetOptions.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/async-cookies-api/blob/gh-pages/explainer.md\u000a\u000adictionary CookieStoreGetOptions {\u000a  // TODO(crbug.com/729800): Implement the members in the specification.\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/cookie_store/CookieStoreSetOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/cookie_store/CookieStoreSetOptions.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/async-cookies-api/blob/gh-pages/explainer.md\u000a\u000adictionary CookieStoreSetOptions {\u000a  // TODO(crbug.com/729800): Implement the other members in the specification.\u000a\u000a  DOMTimeStamp? expires = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/cookie_store/WindowCookieStore.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/cookie_store/WindowCookieStore.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/async-cookies-api/blob/gh-pages/explainer.md\u000a\u000a[\u000a    RuntimeEnabled=AsyncCookies,\u000a    ImplementedAs=GlobalCookieStore\u000a] partial interface Window {\u000a    [Replaceable, SameObject] readonly attribute CookieStore cookieStore;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/AuthenticatorAssertionResponse.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/AuthenticatorAssertionResponse.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#authenticatorassertionresponse\u000a\u000a[\u000a    RuntimeEnabled=WebAuth,\u000a    SecureContext\u000a] interface AuthenticatorAssertionResponse : AuthenticatorResponse {\u000a    readonly attribute ArrayBuffer authenticatorData;\u000a    readonly attribute ArrayBuffer signature;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/AuthenticatorAttestationResponse.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/AuthenticatorAttestationResponse.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#authenticatorattestationresponse\u000a\u000a[\u000a    RuntimeEnabled=WebAuth,\u000a    SecureContext\u000a] interface AuthenticatorAttestationResponse : AuthenticatorResponse {\u000a    readonly attribute ArrayBuffer attestationObject;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/AuthenticatorResponse.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/AuthenticatorResponse.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#authenticatorresponse\u000a\u000a[\u000a    RuntimeEnabled=WebAuth,\u000a    SecureContext\u000a] interface AuthenticatorResponse {\u000a    readonly attribute ArrayBuffer clientDataJSON;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/AuthenticatorSelectionCriteria.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/AuthenticatorSelectionCriteria.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#enumdef-authenticatorattachment\u000a\u000aenum Attachment {\u000a  \"platform\",\u000a  \"cross-platform\"\u000a};\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#dictdef-authenticatorselectioncriteria\u000a\u000adictionary AuthenticatorSelectionCriteria {\u000a  Attachment attachment;\u000a  boolean requireResidentKey = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/CollectedClientData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/CollectedClientData.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#dictdef-collectedclientdata\u000a\u000adictionary CollectedClientData {\u000a    required DOMString challenge;\u000a    required DOMString origin;\u000a    required DOMString hashAlg;\u000a    DOMString tokenBindingId;\u000a    // TODO(crbug.com/733033): Add extension support\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/Credential.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/Credential.idl"},specUrls:["https://w3c.github.io/webappsec-credential-management/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#credential\u000a\u000a[Exposed=Window, SecureContext]\u000ainterface Credential {\u000a    readonly attribute USVString id;\u000a    readonly attribute DOMString type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/CredentialCreationOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/CredentialCreationOptions.idl"},specUrls:["https://w3c.github.io/webappsec-credential-management/","https://w3c.github.io/webappsec-credential-management/","https://w3c.github.io/webappsec-credential-management/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#dictdef-credentialcreationoptions\u000a// https://w3c.github.io/webappsec-credential-management/#dictdef-credentialcreationoptions0\u000a// https://w3c.github.io/webappsec-credential-management/#dictdef-credentialcreationoptions1\u000a\u000atypedef (PasswordCredentialData or HTMLFormElement) PasswordCredentialInit;\u000a\u000adictionary CredentialCreationOptions {\u000a    PasswordCredentialInit? password;\u000a    FederatedCredentialInit? federated;\u000a    MakeCredentialOptions? publicKey;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/CredentialData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/CredentialData.idl"},specUrls:["https://w3c.github.io/webappsec-credential-management/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#dictdef-credentialdata\u000a\u000adictionary CredentialData {\u000a    DOMString id;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/CredentialRequestOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/CredentialRequestOptions.idl"},specUrls:["https://w3c.github.io/webappsec-credential-management/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#dictdef-credentialrequestoptions\u000a\u000aenum CredentialMediationRequirement {\u000a  \"silent\",\u000a  \"optional\",\u000a  \"required\"\u000a};\u000a\u000adictionary CredentialRequestOptions {\u000a    FederatedCredentialRequestOptions? federated;\u000a\u000a    boolean password = false;\u000a    // Defaults to false. This is not set here to detect when both 'unmediated'\u000a    // and 'mediation' are user provided, which results in a warning if they\u000a    // contradict each other.\u000a    [DeprecateAs=CredentialManagerCredentialRequestOptionsUnmediated] boolean\u000a    unmediated;\u000a    // Defaults to \"optional\". This is not set here to detect when both\u000a    // 'unmediated' and 'mediation' are user provided, which results in a\u000a    // warning if they contradict each other.\u000a    // TODO(http://crbug.com/715077): Set the default here when 'unmediated' is\u000a    // removed.\u000a    CredentialMediationRequirement mediation;\u000a\u000a    PublicKeyCredentialRequestOptions? publicKey;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/CredentialUserData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/CredentialUserData.idl"},specUrls:["https://w3c.github.io/webappsec-credential-management/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#credentialuserdata\u000a\u000a[NoInterfaceObject]\u000ainterface CredentialUserData {\u000a    readonly attribute USVString name;\u000a    readonly attribute USVString iconURL;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/CredentialsContainer.idl"},specUrls:["https://w3c.github.io/webappsec-credential-management/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#credentialscontainer\u000a\u000a[Exposed=Window, SecureContext]\u000ainterface CredentialsContainer {\u000a    [CallWith=ScriptState, MeasureAs=CredentialManagerGet] Promise get(optional CredentialRequestOptions options);\u000a    [CallWith=ScriptState, MeasureAs=CredentialManagerStore] Promise store(Credential credential);\u000a    [CallWith=ScriptState, RaisesException, MeasureAs=CredentialManagerCreate] Promise create(optional CredentialCreationOptions options);\u000a    [CallWith=ScriptState, MeasureAs=CredentialManagerPreventSilentAccess] Promise preventSilentAccess();\u000a    [CallWith=ScriptState, DeprecateAs=CredentialManagerRequireUserMediation] Promise requireUserMediation();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/FederatedCredential.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/FederatedCredential.idl"},specUrls:["https://w3c.github.io/webappsec-credential-management/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#federatedcredential\u000a\u000a[\u000a    RaisesException=Constructor,\u000a    Constructor(FederatedCredentialInit data),\u000a    Exposed=Window,\u000a    SecureContext\u000a] interface FederatedCredential : Credential {\u000a    readonly attribute USVString provider;\u000a\u000a    // TODO(mkwst): We don't really support this yet; it always returns ''.\u000a    readonly attribute DOMString? protocol;\u000a};\u000aFederatedCredential implements CredentialUserData;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/FederatedCredentialInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/FederatedCredentialInit.idl"},specUrls:["https://w3c.github.io/webappsec-credential-management/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#dictdef-federatedcredentialinit\u000a\u000adictionary FederatedCredentialInit : CredentialData {\u000a  USVString name;\u000a  USVString iconURL;\u000a  required USVString provider;\u000a  DOMString protocol;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/FederatedCredentialRequestOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/FederatedCredentialRequestOptions.idl"},specUrls:["https://w3c.github.io/webappsec-credential-management/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#dictdef-federatedcredentialrequestoptions\u000a\u000adictionary FederatedCredentialRequestOptions {\u000a    sequence<DOMString> providers;\u000a    sequence<DOMString> protocols;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/FormDataOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/FormDataOptions.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// TODO: Add specification URL.\u000a\u000adictionary FormDataOptions {\u000a    DOMString idName = \"username\";\u000a    DOMString passwordName = \"password\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/MakeCredentialOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/MakeCredentialOptions.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#dictdef-makecredentialoptions\u000a\u000adictionary MakeCredentialOptions {\u000a    required PublicKeyCredentialEntity rp;\u000a    required PublicKeyCredentialUserEntity user;\u000a    required BufferSource challenge;\u000a    required sequence<PublicKeyCredentialParameters> parameters;\u000a    unsigned long timeout;\u000a    sequence<PublicKeyCredentialDescriptor> excludeList = [];\u000a    AuthenticatorSelectionCriteria authenticatorSelection;\u000a    // TODO(crbug.com/733033): Add extension support\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/NavigatorCredentials.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/NavigatorCredentials.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=NavigatorCredentials\u000a] partial interface Navigator {\u000a    [SecureContext, SameObject] readonly attribute CredentialsContainer credentials;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/PasswordCredential.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/PasswordCredential.idl"},specUrls:["https://w3c.github.io/webappsec-credential-management/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#passwordcredential\u000a\u000atypedef (FormData or URLSearchParams) CredentialBodyType;\u000a\u000a[\u000a    RaisesException=Constructor,\u000a    Constructor(PasswordCredentialData data),\u000a    Constructor(HTMLFormElement form),\u000a    Exposed=Window,\u000a    SecureContext\u000a] interface PasswordCredential : Credential {\u000a    [DeprecateAs=CredentialManagerIdName] attribute USVString idName;\u000a    [DeprecateAs=CredentialManagerPasswordName] attribute USVString passwordName;\u000a    [DeprecateAs=CredentialManagerAdditionalData] attribute CredentialBodyType? additionalData;\u000a    readonly attribute DOMString password;\u000a};\u000aPasswordCredential implements CredentialUserData;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/PasswordCredentialData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/PasswordCredentialData.idl"},specUrls:["https://w3c.github.io/webappsec-credential-management/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webappsec-credential-management/#dictdef-passwordcredentialdata\u000a\u000adictionary PasswordCredentialData : CredentialData {\u000a    USVString name;\u000a    USVString iconURL;\u000a    required USVString password;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredential.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredential.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#publickeycredential\u000a\u000a[\u000a    RuntimeEnabled=WebAuth,\u000a    SecureContext,\u000a    Exposed=Window\u000a] interface PublicKeyCredential : Credential {\u000a    [SameObject] readonly attribute ArrayBuffer           rawId;\u000a    [SameObject] readonly attribute AuthenticatorResponse response;\u000a    // TODO(crbug.com/733033): Add extension support\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredentialDescriptor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredentialDescriptor.idl"},specUrls:["https://w3c.github.io/webauthn/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#enumdef-authenticatortransport\u000a\u000aenum Transport {\u000a    \"usb\",\u000a    \"nfc\",\u000a    \"ble\"\u000a};\u000a\u000a// https://w3c.github.io/webauthn/#dictdef-publickeycredentialdescriptor\u000a\u000adictionary PublicKeyCredentialDescriptor {\u000a    required PublicKeyCredentialType type;\u000a    required BufferSource id;\u000a    sequence<Transport> transports;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredentialEntity.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredentialEntity.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#dictdef-publickeycredentialentity\u000a\u000adictionary PublicKeyCredentialEntity {\u000a    DOMString id;\u000a    DOMString name;\u000a    USVString icon;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredentialParameters.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredentialParameters.idl"},specUrls:["https://w3c.github.io/webauthn/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#enumdef-publickeycredentialtype\u000a\u000aenum PublicKeyCredentialType {\u000a    \"public-key\"\u000a};\u000a\u000a// https://w3c.github.io/webauthn/#alg-identifier\u000a\u000atypedef long COSEAlgorithmIdentifier;\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#dictdef-publickeycredentialparameters\u000a\u000adictionary PublicKeyCredentialParameters {\u000a    required PublicKeyCredentialType type;\u000a    required COSEAlgorithmIdentifier algorithm;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredentialRequestOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredentialRequestOptions.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#dictdef-publickeycredentialrequestoptions\u000a\u000adictionary PublicKeyCredentialRequestOptions {\u000a    required BufferSource challenge;\u000a    unsigned long timeout;\u000a    USVString rpId;\u000a    sequence <PublicKeyCredentialDescriptor> allowList = [];\u000a    // TODO(crbug.com/733033): Add extension support\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredentialUserEntity.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/credentialmanager/PublicKeyCredentialUserEntity.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2017/WD-webauthn-20170505/#dictdef-publickeycredentialuserentity\u000a\u000adictionary PublicKeyCredentialUserEntity : PublicKeyCredentialEntity {\u000a    DOMString displayName;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/crypto/Crypto.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/crypto/Crypto.idl"},specUrls:["https://w3c.github.io/webcrypto/Overview.html"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Google, Inc. (\"Google\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY GOOGLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webcrypto/Overview.html#crypto-interface\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface Crypto {\u000a    [RaisesException, MeasureAs=CryptoGetRandomValues] ArrayBufferView getRandomValues(ArrayBufferView array);\u000a\u000a    [SecureContext] readonly attribute SubtleCrypto subtle;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/crypto/CryptoKey.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/crypto/CryptoKey.idl"},specUrls:["https://w3c.github.io/webcrypto/Overview.html"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webcrypto/Overview.html#cryptokey-interface\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface CryptoKey {\u000a    readonly attribute DOMString type;\u000a    readonly attribute boolean extractable;\u000a    [CallWith=ScriptState] readonly attribute object algorithm;\u000a    [CallWith=ScriptState] readonly attribute object usages;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/crypto/SubtleCrypto.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/crypto/SubtleCrypto.idl"},specUrls:["https://w3c.github.io/webcrypto/Overview.html"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webcrypto/Overview.html#subtlecrypto-interface\u000a\u000atypedef DOMString KeyFormat;\u000atypedef DOMString KeyUsage;\u000atypedef (Dictionary or DOMString) AlgorithmIdentifier;\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface SubtleCrypto {\u000a    [CallWith=ScriptState, MeasureAs=SubtleCryptoEncrypt] Promise encrypt(AlgorithmIdentifier algorithm, CryptoKey key, BufferSource data);\u000a    [CallWith=ScriptState, MeasureAs=SubtleCryptoDecrypt] Promise decrypt(AlgorithmIdentifier algorithm, CryptoKey key, BufferSource data);\u000a    [CallWith=ScriptState, MeasureAs=SubtleCryptoSign] Promise sign(AlgorithmIdentifier algorithm, CryptoKey key, BufferSource data);\u000a    [CallWith=ScriptState, ImplementedAs=verifySignature, MeasureAs=SubtleCryptoVerify] Promise verify(AlgorithmIdentifier algorithm, CryptoKey key, BufferSource signature, BufferSource data);\u000a    [CallWith=ScriptState, MeasureAs=SubtleCryptoDigest] Promise digest(AlgorithmIdentifier algorithm, BufferSource data);\u000a    [CallWith=ScriptState, MeasureAs=SubtleCryptoGenerateKey] Promise generateKey(AlgorithmIdentifier algorithm, boolean extractable, sequence<KeyUsage> keyUsages);\u000a    [CallWith=ScriptState, MeasureAs=SubtleCryptoImportKey] Promise importKey(KeyFormat format, (ArrayBuffer or ArrayBufferView or Dictionary) keyData, AlgorithmIdentifier algorithm, boolean extractable, sequence<KeyUsage> keyUsages);\u000a    [CallWith=ScriptState, MeasureAs=SubtleCryptoExportKey] Promise exportKey(KeyFormat format, CryptoKey key);\u000a    [CallWith=ScriptState, MeasureAs=SubtleCryptoDeriveBits] Promise deriveBits(AlgorithmIdentifier algorithm, CryptoKey baseKey, unsigned long length);\u000a    [CallWith=ScriptState, MeasureAs=SubtleCryptoDeriveKey] Promise deriveKey(AlgorithmIdentifier algorithm, CryptoKey baseKey, AlgorithmIdentifier derivedKeyType, boolean extractable, sequence<KeyUsage> keyUsages);\u000a    [CallWith=ScriptState, MeasureAs=SubtleCryptoWrapKey] Promise wrapKey(KeyFormat format, CryptoKey key, CryptoKey wrappingKey, AlgorithmIdentifier wrapAlgorithm);\u000a    [CallWith=ScriptState, MeasureAs=SubtleCryptoUnwrapKey] Promise unwrapKey(KeyFormat format, BufferSource wrappedKey, CryptoKey unwrappingKey, AlgorithmIdentifier unwrapAlgorithm, AlgorithmIdentifier unwrappedKeyAlgorithm, boolean extractable, sequence<KeyUsage> keyUsages);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/crypto/WindowCrypto.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/crypto/WindowCrypto.idl"},specUrls:["https://w3c.github.io/webcrypto/Overview.html"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webcrypto/Overview.html#crypto-interface\u000a\u000a[\u000a    ImplementedAs=DOMWindowCrypto\u000a] partial interface Window {\u000a    readonly attribute Crypto crypto;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/crypto/WorkerGlobalScopeCrypto.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/crypto/WorkerGlobalScopeCrypto.idl"},specUrls:["https://w3c.github.io/webcrypto/Overview.html"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webcrypto/Overview.html#crypto-interface\u000a\u000a[\u000a    ImplementedAs=WorkerGlobalScopeCrypto\u000a] partial interface WorkerGlobalScope {\u000a    readonly attribute Crypto crypto;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/csspaint/CSSPaintWorklet.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/csspaint/CSSPaintWorklet.idl"},specUrls:["https://drafts.css-houdini.org/css-paint-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.css-houdini.org/css-paint-api/#dom-css-paintworklet\u000a\u000a[\u000a    ImplementedAs=CSSPaintWorklet,\u000a    RuntimeEnabled=CSSPaintAPI\u000a] partial interface CSS {\u000a    [CallWith=ScriptState] static readonly attribute Worklet paintWorklet;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/csspaint/PaintRenderingContext2D.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/csspaint/PaintRenderingContext2D.idl"},specUrls:["https://drafts.css-houdini.org/css-paint-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.css-houdini.org/css-paint-api/#paintrenderingcontext2d\u000a\u000a[\u000a    Exposed=PaintWorklet,\u000a    RuntimeEnabled=CSSPaintAPI\u000a] interface PaintRenderingContext2D {\u000a    // state\u000a    void save(); // push state on state stack\u000a    void restore(); // pop state stack and restore state\u000a\u000a    // transformations (default transform is the identity matrix)\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] attribute SVGMatrix currentTransform;\u000a    void scale(unrestricted double x, unrestricted double y);\u000a    void rotate(unrestricted double angle);\u000a    void translate(unrestricted double x, unrestricted double y);\u000a    void transform(unrestricted double a, unrestricted double b, unrestricted double c, unrestricted double d, unrestricted double e, unrestricted double f);\u000a    void setTransform(unrestricted double a, unrestricted double b, unrestricted double c, unrestricted double d, unrestricted double e, unrestricted double f);\u000a    void resetTransform();\u000a\u000a    // compositing\u000a    attribute unrestricted double globalAlpha; // (default 1.0)\u000a    attribute DOMString globalCompositeOperation; // (default source-over)\u000a    attribute DOMString filter;\u000a\u000a    // image smoothing\u000a    attribute boolean imageSmoothingEnabled; // (default True)\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] attribute ImageSmoothingQuality imageSmoothingQuality; // (default \"low\")\u000a\u000a    // colors and styles (see also the CanvasDrawingStyles interface)\u000a    attribute (DOMString or CanvasGradient or CanvasPattern) strokeStyle; // (default black)\u000a    attribute (DOMString or CanvasGradient or CanvasPattern) fillStyle; // (default black)\u000a    CanvasGradient createLinearGradient(double x0, double y0, double x1, double y1);\u000a    [RaisesException] CanvasGradient createRadialGradient(double x0, double y0, double r0, double x1, double y1, double r1);\u000a    [CallWith=ScriptState, RaisesException] CanvasPattern? createPattern(CanvasImageSource image, [TreatNullAs=NullString] DOMString repetitionType);\u000a\u000a    // shadows\u000a    attribute unrestricted double shadowOffsetX;\u000a    attribute unrestricted double shadowOffsetY;\u000a    attribute unrestricted double shadowBlur;\u000a    attribute DOMString shadowColor;\u000a\u000a    // rects\u000a    void clearRect(unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a    void fillRect(unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a    void strokeRect(unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a\u000a    // path API (see also CanvasPath)\u000a    void beginPath();\u000a    void fill(optional CanvasFillRule winding);\u000a    void fill(Path2D path, optional CanvasFillRule winding);\u000a    void stroke();\u000a    void stroke(Path2D path);\u000a\u000a    void clip(optional CanvasFillRule winding);\u000a    void clip(Path2D path, optional CanvasFillRule winding);\u000a    boolean isPointInPath(unrestricted double x, unrestricted double y, optional CanvasFillRule winding);\u000a    boolean isPointInPath(Path2D path, unrestricted double x, unrestricted double y, optional CanvasFillRule winding);\u000a    boolean isPointInStroke(unrestricted double x, unrestricted double y);\u000a    boolean isPointInStroke(Path2D path, unrestricted double x, unrestricted double y);\u000a\u000a    // drawing images\u000a    [CallWith=ScriptState, RaisesException] void drawImage(CanvasImageSource image, unrestricted double x, unrestricted double y);\u000a    [CallWith=ScriptState, RaisesException] void drawImage(CanvasImageSource image, unrestricted double x, unrestricted double y, unrestricted double width, unrestricted double height);\u000a    [CallWith=ScriptState, RaisesException] void drawImage(CanvasImageSource image, unrestricted double sx, unrestricted double sy, unrestricted double sw, unrestricted double sh, unrestricted double dx, unrestricted double dy, unrestricted double dw, unrestricted double dh);\u000a\u000a    // FIXME: factor out to CanvasDrawingStyles\u000a    // line caps/joins\u000a    attribute unrestricted double lineWidth; // (default 1)\u000a    attribute DOMString lineCap; // \"butt\", \"round\", \"square\" (default \"butt\")\u000a    attribute DOMString lineJoin; // \"round\", \"bevel\", \"miter\" (default \"miter\")\u000a    attribute unrestricted double miterLimit; // (default 10)\u000a\u000a    // dashed lines\u000a    void setLineDash(sequence<unrestricted double> dash);\u000a    sequence<unrestricted double> getLineDash();\u000a    attribute unrestricted double lineDashOffset;\u000a};\u000aPaintRenderingContext2D implements CanvasPath;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/csspaint/PaintRenderingContext2DSettings.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/csspaint/PaintRenderingContext2DSettings.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000adictionary PaintRenderingContext2DSettings {\u000a    boolean alpha = true;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/csspaint/PaintSize.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/csspaint/PaintSize.idl"},specUrls:["https://drafts.css-houdini.org/css-paint-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.css-houdini.org/css-paint-api/#paintworkletglobalscope\u000a\u000a[\u000a    Exposed=PaintWorklet,\u000a    RuntimeEnabled=CSSPaintAPI\u000a] interface PaintSize {\u000a    readonly attribute double width;\u000a    readonly attribute double height;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/csspaint/PaintWorkletGlobalScope.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/csspaint/PaintWorkletGlobalScope.idl"},specUrls:["https://drafts.css-houdini.org/css-paint-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://drafts.css-houdini.org/css-paint-api/#paintworkletglobalscope\u000a\u000a[\u000a    Exposed=PaintWorklet,\u000a    Global=(Worklet,PaintWorklet),\u000a    RuntimeEnabled=CSSPaintAPI\u000a] interface PaintWorkletGlobalScope : WorkletGlobalScope {\u000a    readonly attribute unrestricted double devicePixelRatio;\u000a    [RaisesException] void registerPaint(DOMString name, Function paintCtor);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/device_orientation/DeviceAcceleration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/device_orientation/DeviceAcceleration.idl"},specUrls:["https://w3c.github.io/deviceorientation/spec-source-orientation.html"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/deviceorientation/spec-source-orientation.html#devicemotion\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface DeviceAcceleration {\u000a    readonly attribute double? x;\u000a    readonly attribute double? y;\u000a    readonly attribute double? z;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/device_orientation/DeviceAccelerationInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/device_orientation/DeviceAccelerationInit.idl"},specUrls:["https://w3c.github.io/deviceorientation/spec-source-orientation.html"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/deviceorientation/spec-source-orientation.html#devicemotion\u000a\u000adictionary DeviceAccelerationInit {\u000a  double? x = null;\u000a  double? y = null;\u000a  double? z = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/device_orientation/DeviceMotionEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/device_orientation/DeviceMotionEvent.idl"},specUrls:["https://w3c.github.io/deviceorientation/spec-source-orientation.html"],contents:"/*\u000a * Copyright (C) 2010 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/deviceorientation/spec-source-orientation.html#devicemotion\u000a\u000a[Constructor(DOMString type, optional DeviceMotionEventInit eventInitDict)]\u000ainterface DeviceMotionEvent : Event {\u000a    readonly attribute DeviceAcceleration? acceleration;\u000a    readonly attribute DeviceAcceleration? accelerationIncludingGravity;\u000a    readonly attribute DeviceRotationRate? rotationRate;\u000a    readonly attribute double interval;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/device_orientation/DeviceMotionEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/device_orientation/DeviceMotionEventInit.idl"},specUrls:["https://w3c.github.io/deviceorientation/spec-source-orientation.html"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/deviceorientation/spec-source-orientation.html#devicemotion\u000a\u000adictionary DeviceMotionEventInit : EventInit {\u000a  DeviceAccelerationInit? acceleration;\u000a  DeviceAccelerationInit? accelerationIncludingGravity;\u000a  DeviceRotationRateInit? rotationRate;\u000a  double interval = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/device_orientation/DeviceOrientationEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/device_orientation/DeviceOrientationEvent.idl"},specUrls:["https://w3c.github.io/deviceorientation/spec-source-orientation.html"],contents:"/*\u000a * Copyright 2010, The Android Open Source Project\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/deviceorientation/spec-source-orientation.html#deviceorientation\u000a\u000a[Constructor(DOMString type, optional DeviceOrientationEventInit eventInitDict)]\u000ainterface DeviceOrientationEvent : Event {\u000a    readonly attribute double? alpha;\u000a    readonly attribute double? beta;\u000a    readonly attribute double? gamma;\u000a    readonly attribute boolean absolute;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/device_orientation/DeviceOrientationEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/device_orientation/DeviceOrientationEventInit.idl"},specUrls:["https://w3c.github.io/deviceorientation/spec-source-orientation.html"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/deviceorientation/spec-source-orientation.html#deviceorientation\u000a\u000adictionary DeviceOrientationEventInit : EventInit {\u000a  double? alpha = null;\u000a  double? beta = null;\u000a  double? gamma = null;\u000a  boolean absolute = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/device_orientation/DeviceRotationRate.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/device_orientation/DeviceRotationRate.idl"},specUrls:["https://w3c.github.io/deviceorientation/spec-source-orientation.html"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/deviceorientation/spec-source-orientation.html#devicemotion\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface DeviceRotationRate {\u000a    readonly attribute double? alpha;\u000a    readonly attribute double? beta;\u000a    readonly attribute double? gamma;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/device_orientation/DeviceRotationRateInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/device_orientation/DeviceRotationRateInit.idl"},specUrls:["https://w3c.github.io/deviceorientation/spec-source-orientation.html"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/deviceorientation/spec-source-orientation.html#deviceorientation\u000a\u000adictionary DeviceRotationRateInit {\u000a  double? alpha = null;\u000a  double? beta = null;\u000a  double? gamma = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/device_orientation/WindowDeviceMotion.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/device_orientation/WindowDeviceMotion.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=DOMWindowDeviceMotion\u000a] partial interface Window {\u000a    attribute EventHandler ondevicemotion;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/device_orientation/WindowDeviceOrientation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/device_orientation/WindowDeviceOrientation.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=DOMWindowDeviceOrientation\u000a] partial interface Window {\u000a    attribute EventHandler ondeviceorientation;\u000a    attribute EventHandler ondeviceorientationabsolute;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/donottrack/NavigatorDoNotTrack.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/donottrack/NavigatorDoNotTrack.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    ImplementedAs=NavigatorDoNotTrack\u000a] partial interface Navigator {\u000a    readonly attribute DOMString? doNotTrack;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encoding/TextDecodeOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encoding/TextDecodeOptions.idl"},specUrls:["https://encoding.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://encoding.spec.whatwg.org/#textdecoder\u000a\u000adictionary TextDecodeOptions {\u000a    boolean stream = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encoding/TextDecoder.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encoding/TextDecoder.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    Constructor(optional DOMString label = \"utf-8\", optional TextDecoderOptions options),\u000a    RaisesException=Constructor,\u000a    MeasureAs=TextDecoderConstructor\u000a] interface TextDecoder {\u000a    readonly attribute DOMString encoding;\u000a    readonly attribute boolean fatal;\u000a    readonly attribute boolean ignoreBOM;\u000a    [RaisesException, MeasureAs=TextDecoderDecode] DOMString decode(optional BufferSource input, optional TextDecodeOptions options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encoding/TextDecoderOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encoding/TextDecoderOptions.idl"},specUrls:["https://encoding.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://encoding.spec.whatwg.org/#textdecoder\u000a\u000adictionary TextDecoderOptions {\u000a    boolean fatal = false;\u000a    boolean ignoreBOM = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encoding/TextEncoder.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encoding/TextEncoder.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    Constructor(),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor,\u000a    MeasureAs=TextEncoderConstructor\u000a] interface TextEncoder {\u000a    readonly attribute DOMString encoding;\u000a    [MeasureAs=TextEncoderEncode] Uint8Array encode(optional USVString input = \"\");\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/HTMLMediaElementEncryptedMedia.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/HTMLMediaElementEncryptedMedia.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a[\u000a    ImplementedAs=HTMLMediaElementEncryptedMedia\u000a] partial interface HTMLMediaElement {\u000a    readonly attribute MediaKeys mediaKeys;\u000a    [SecureContext, CallWith=ScriptState] Promise setMediaKeys(MediaKeys? mediaKeys);\u000a    attribute EventHandler onencrypted;\u000a    attribute EventHandler onwaitingforkey;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaEncryptedEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaEncryptedEvent.idl"},specUrls:["https://w3c.github.io/encrypted-media/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/encrypted-media/#mediaencryptedevent\u000a\u000a[\u000a    Constructor(DOMString type, optional MediaEncryptedEventInit eventInitDict)\u000a] interface MediaEncryptedEvent : Event {\u000a    readonly attribute DOMString initDataType;\u000a    readonly attribute ArrayBuffer? initData;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaEncryptedEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaEncryptedEventInit.idl"},specUrls:["https://w3c.github.io/encrypted-media/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/encrypted-media/#mediaencryptedevent\u000a\u000adictionary MediaEncryptedEventInit : EventInit {\u000a    DOMString initDataType = \"\";\u000a    ArrayBuffer? initData = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaKeyMessageEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaKeyMessageEvent.idl"},specUrls:["https://w3c.github.io/encrypted-media/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/encrypted-media/#mediakeymessageevent\u000a\u000aenum MediaKeyMessageType {\u000a    \"license-request\",\u000a    \"license-renewal\",\u000a    \"license-release\"\u000a};\u000a\u000a[\u000a    Constructor(DOMString type, MediaKeyMessageEventInit eventInitDict)\u000a] interface MediaKeyMessageEvent : Event {\u000a    readonly attribute MediaKeyMessageType messageType;\u000a    readonly attribute ArrayBuffer message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaKeyMessageEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaKeyMessageEventInit.idl"},specUrls:["https://w3c.github.io/encrypted-media/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/encrypted-media/#mediakeymessageevent\u000a\u000adictionary MediaKeyMessageEventInit : EventInit {\u000a    required MediaKeyMessageType messageType;\u000a    required ArrayBuffer message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaKeySession.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaKeySession.idl"},contents:"/*\u000a * Copyright (C) 2013 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface MediaKeySession : EventTarget {\u000a    // session properties\u000a    readonly attribute DOMString sessionId;\u000a    readonly attribute unrestricted double expiration;\u000a    [CallWith=ScriptState] readonly attribute Promise<void> closed;\u000a    readonly attribute MediaKeyStatusMap keyStatuses;\u000a    attribute EventHandler onkeystatuseschange;\u000a    attribute EventHandler onmessage;\u000a\u000a    // session initialization\u000a    [CallWith=ScriptState] Promise<void> generateRequest(DOMString initDataType, BufferSource initData);\u000a    [CallWith=ScriptState] Promise<boolean> load(DOMString sessionId);\u000a\u000a    // session operations\u000a    [CallWith=ScriptState] Promise<void> update(BufferSource response);\u000a    [CallWith=ScriptState] Promise<void> close();\u000a    [CallWith=ScriptState] Promise<void> remove();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaKeyStatusMap.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaKeyStatusMap.idl"},specUrls:["https://w3c.github.io/encrypted-media/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/encrypted-media/#idl-def-MediaKeyStatusMap\u000a\u000aenum MediaKeyStatus {\u000a    \"usable\",\u000a    \"expired\",\u000a    \"released\",\u000a    \"output-restricted\",\u000a    \"output-downscaled\",\u000a    \"status-pending\",\u000a    \"internal-error\"\u000a};\u000a\u000ainterface MediaKeyStatusMap {\u000a    iterable <BufferSource, MediaKeyStatus>;\u000a    readonly attribute unsigned long size;\u000a    boolean has(BufferSource keyId);\u000a    [CallWith=ScriptState] any get(BufferSource keyId);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaKeySystemAccess.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaKeySystemAccess.idl"},specUrls:["https://w3c.github.io/encrypted-media/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/encrypted-media/#mediakeysystemaccess-interface\u000a\u000ainterface MediaKeySystemAccess {\u000a    readonly attribute DOMString keySystem;\u000a    MediaKeySystemConfiguration getConfiguration();\u000a    [CallWith=ScriptState] Promise<MediaKeys> createMediaKeys();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaKeySystemConfiguration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaKeySystemConfiguration.idl"},specUrls:["https://w3c.github.io/encrypted-media/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/encrypted-media/#mediakeysystemconfiguration-dictionary\u000a\u000aenum MediaKeysRequirement {\u000a    \"required\",\u000a    \"optional\",\u000a    \"not-allowed\"\u000a};\u000a\u000adictionary MediaKeySystemConfiguration {\u000a    DOMString label = \"\";\u000a    sequence<DOMString> initDataTypes = [];\u000a    sequence<MediaKeySystemMediaCapability> audioCapabilities = [];\u000a    sequence<MediaKeySystemMediaCapability> videoCapabilities = [];\u000a    MediaKeysRequirement distinctiveIdentifier = \"optional\";\u000a    MediaKeysRequirement persistentState = \"optional\";\u000a    sequence<DOMString> sessionTypes;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaKeySystemMediaCapability.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaKeySystemMediaCapability.idl"},specUrls:["https://w3c.github.io/encrypted-media/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/encrypted-media/#idl-def-MediaKeySystemMediaCapability\u000a\u000adictionary MediaKeySystemMediaCapability {\u000a    DOMString contentType = \"\";\u000a    DOMString robustness = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaKeys.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaKeys.idl"},contents:"/*\u000a * Copyright (C) 2013 Apple Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000aenum MediaKeySessionType {\u000a    \"temporary\",\u000a    \"persistent-license\",\u000a};\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    SecureContext\u000a] interface MediaKeys {\u000a    [CallWith=ScriptState, RaisesException] MediaKeySession createSession(optional MediaKeySessionType sessionType = \"temporary\");\u000a\u000a    [CallWith=ScriptState] Promise<boolean> setServerCertificate(BufferSource serverCertificate);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaKeysGetStatusForPolicy.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaKeysGetStatusForPolicy.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/media-capabilities/blob/master/eme-extension-policy-check.md\u000a\u000a[\u000a    ImplementedAs=MediaKeysGetStatusForPolicy,\u000a    RuntimeEnabled=EncryptedMediaHdcpPolicyCheck\u000a] partial interface MediaKeys {\u000a    [CallWith=ScriptState] Promise<MediaKeyStatus> getStatusForPolicy(MediaKeysPolicy policy);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaKeysPolicy.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaKeysPolicy.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/media-capabilities/blob/master/eme-extension-policy-check.md\u000a\u000a[\u000a    Exposed=Window,\u000a    RuntimeEnabled=EncryptedMediaHdcpPolicyCheck,\u000a    Constructor(MediaKeysPolicyInit init)\u000a] interface MediaKeysPolicy {\u000a    readonly attribute DOMString minHdcpVersion;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/MediaKeysPolicyInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/MediaKeysPolicyInit.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/media-capabilities/blob/master/eme-extension-policy-check.md\u000a\u000adictionary MediaKeysPolicyInit {\u000a    DOMString minHdcpVersion = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/encryptedmedia/NavigatorRequestMediaKeySystemAccess.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/encryptedmedia/NavigatorRequestMediaKeySystemAccess.idl"},specUrls:["https://w3c.github.io/encrypted-media/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/encrypted-media/#navigator-extension-requestmediakeysystemaccess\u000a\u000a[\u000a    ImplementedAs=NavigatorRequestMediaKeySystemAccess\u000a] partial interface Navigator {\u000a    [SecureContext, CallWith=ScriptState] Promise<MediaKeySystemAccess> requestMediaKeySystemAccess(DOMString keySystem, sequence<MediaKeySystemConfiguration> supportedConfigurations);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/eventsource/EventSource.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/eventsource/EventSource.idl"},contents:"/*\u000a * Copyright (C) 2009 Ericsson AB. All rights reserved.\u000a * Copyright (C) 2010, 2011 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer\u000a *    in the documentation and/or other materials provided with the\u000a *    distribution.\u000a * 3. Neither the name of Ericsson nor the names of its contributors\u000a *    may be used to endorse or promote products derived from this\u000a *    software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/comms.html#the-eventsource-interface\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Constructor(DOMString url, optional EventSourceInit eventSourceInitDict),\u000a    ConstructorCallWith=ExecutionContext,\u000a    Exposed=(Window,Worker),\u000a    RaisesException=Constructor\u000a] interface EventSource : EventTarget {\u000a    readonly attribute DOMString url;\u000a    readonly attribute boolean withCredentials;\u000a\u000a    // ready state\u000a    const unsigned short CONNECTING = 0;\u000a    const unsigned short OPEN = 1;\u000a    const unsigned short CLOSED = 2;\u000a    readonly attribute unsigned short readyState;\u000a\u000a    // networking\u000a    attribute EventHandler onopen;\u000a    attribute EventHandler onmessage;\u000a    attribute EventHandler onerror;\u000a    void close();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/eventsource/EventSourceInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/eventsource/EventSourceInit.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/comms.html#the-eventsource-interface\u000a\u000adictionary EventSourceInit {\u000a    boolean withCredentials = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/fetch/Body.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/fetch/Body.idl"},specUrls:["https://fetch.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://fetch.spec.whatwg.org/#body\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Exposed=ServiceWorker,\u000a    NoInterfaceObject\u000a] interface Body {\u000a    readonly attribute boolean bodyUsed;\u000a    [CallWith=ScriptState, NewObject] Promise<ArrayBuffer> arrayBuffer();\u000a    [CallWith=ScriptState, NewObject] Promise<Blob> blob();\u000a    [CallWith=ScriptState, NewObject] Promise<FormData> formData();\u000a    [CallWith=ScriptState, NewObject] Promise<JSON> json();\u000a    [CallWith=ScriptState, NewObject] Promise<USVString> text();\u000a\u000a    // body attribute is defined in sub-interfaces, because the IDL processor\u000a    // cannot deal with attribute inheritance with runtime enabled flag.\u000a    // [RuntimeEnabled=ExperimentalStream] readonly attribute ReadableByteStream body;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/fetch/Headers.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/fetch/Headers.idl"},specUrls:["https://fetch.spec.whatwg.org/","https://fetch.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://fetch.spec.whatwg.org/#typedefdef-headersinit\u000a\u000atypedef (sequence<sequence<ByteString>> or record<ByteString, ByteString>) HeadersInit;\u000a\u000a// https://fetch.spec.whatwg.org/#headers-class\u000a\u000a[\u000a    Constructor(optional HeadersInit init),\u000a    Exposed=(Window,Worker),\u000a    RaisesException=Constructor\u000a] interface Headers {\u000a    [RaisesException] void append(ByteString name, ByteString value);\u000a    [ImplementedAs=remove, RaisesException] void delete(ByteString key);\u000a    [RaisesException] ByteString? get(ByteString key);\u000a    [RaisesException] boolean has(ByteString key);\u000a    [RaisesException] void set(ByteString key, ByteString value);\u000a    iterable<ByteString, ByteString>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/fetch/Request.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/fetch/Request.idl"},specUrls:["https://fetch.spec.whatwg.org/","https://w3c.github.io/webappsec-referrer-policy/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://fetch.spec.whatwg.org/#request-class\u000a\u000atypedef (Request or USVString) RequestInfo;\u000a\u000aenum RequestMode { \"navigate\", \"same-origin\", \"no-cors\", \"cors\" };\u000aenum RequestCredentials { \"omit\", \"same-origin\", \"include\" };\u000aenum RequestRedirect { \"follow\", \"error\", \"manual\" };\u000aenum RequestCache { \"default\", \"no-store\", \"reload\", \"no-cache\", \"force-cache\", \u000a    \"only-if-cached\" };\u000a\u000a// https://w3c.github.io/webappsec-referrer-policy/#referrer-policies\u000a\u000aenum ReferrerPolicy {\u000a    \"\",\u000a    \"no-referrer\",\u000a    \"no-referrer-when-downgrade\",\u000a    \"origin\",\u000a    \"origin-when-cross-origin\",\u000a    \"unsafe-url\"\u000a};\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    Constructor(RequestInfo input, optional Dictionary requestInitDict),\u000a    ConstructorCallWith=ScriptState,\u000a    Exposed=(Window,Worker),\u000a    RaisesException=Constructor,\u000a    DependentLifetime\u000a] interface Request {\u000a    readonly attribute ByteString method;\u000a    readonly attribute USVString url;\u000a    [ImplementedAs=getHeaders, SameObject] readonly attribute Headers headers;\u000a    readonly attribute DOMString referrer;\u000a    [ImplementedAs=getReferrerPolicy] readonly attribute ReferrerPolicy referrerPolicy;\u000a    readonly attribute RequestMode mode;\u000a    readonly attribute RequestCredentials credentials;\u000a    [RuntimeEnabled=FetchRequestCache] readonly attribute RequestCache cache;\u000a    readonly attribute RequestRedirect redirect;\u000a    readonly attribute DOMString integrity;\u000a    [RuntimeEnabled=FetchRequestKeepalive] readonly attribute boolean keepalive;\u000a\u000a    [RaisesException, CallWith=ScriptState, DoNotTestNewObject, NewObject] Request clone();\u000a};\u000a\u000aRequest implements Body;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/fetch/Response.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/fetch/Response.idl"},specUrls:["https://fetch.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://fetch.spec.whatwg.org/#response-class\u000a\u000aenum ResponseType { \"basic\", \"cors\", \"default\", \"error\", \"opaque\", \"opaqueredirect\" };\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    // TODO(yhirano): We use \"any\" for body because the IDL processor doesn't\u000a    // recognize ReadableStream implemented with V8 extras. Fix it.\u000a    Constructor(optional any body, optional ResponseInit init),\u000a    ConstructorCallWith=ScriptState,\u000a    DependentLifetime,\u000a    Exposed=(Window,Worker),\u000a    RaisesException=Constructor\u000a] interface Response {\u000a    [CallWith=ScriptState, NewObject] static Response error();\u000a    [CallWith=ScriptState, NewObject, RaisesException] static Response redirect(USVString url, optional unsigned short status = 302);\u000a    readonly attribute ResponseType type;\u000a    readonly attribute USVString url;\u000a    readonly attribute boolean redirected;\u000a    readonly attribute unsigned short status;\u000a    readonly attribute boolean ok;\u000a    readonly attribute ByteString statusText;\u000a    [SameObject] readonly attribute Headers headers;\u000a\u000a    [RaisesException, CallWith=ScriptState, DoNotTestNewObject, NewObject] Response clone();\u000a\u000a    [CallWith=ScriptState, MeasureAs=FetchBodyStream] readonly attribute any body;\u000a};\u000a\u000aResponse implements Body;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/fetch/ResponseInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/fetch/ResponseInit.idl"},specUrls:["https://fetch.spec.whatwg.org/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://fetch.spec.whatwg.org/#responseinit\u000a\u000adictionary ResponseInit {\u000a    unsigned short status = 200;\u000a    ByteString statusText = \"OK\";\u000a    HeadersInit headers;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/fetch/WindowFetch.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/fetch/WindowFetch.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=GlobalFetch\u000a] partial interface Window {\u000a    [CallWith=ScriptState, NewObject, RaisesException] Promise<Response> fetch(RequestInfo input, optional Dictionary init);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/fetch/WorkerFetch.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/fetch/WorkerFetch.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=GlobalFetch\u000a] partial interface WorkerGlobalScope {\u000a    [CallWith=ScriptState, NewObject, RaisesException] Promise<Response> fetch(RequestInfo input, optional Dictionary init);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/DOMFileSystem.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/DOMFileSystem.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a * Copyright (C) 2011 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-FileSystem\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface DOMFileSystem {\u000a    readonly attribute DOMString name;\u000a    readonly attribute DirectoryEntry root;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/DOMFileSystemSync.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/DOMFileSystemSync.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-FileSystemSync\u000a[\u000a    NoInterfaceObject\u000a] interface DOMFileSystemSync {\u000a    readonly attribute DOMString name;\u000a    readonly attribute DirectoryEntrySync root;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/DataTransferItemFileSystem.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/DataTransferItemFileSystem.idl"},specUrls:["https://wicg.github.io/entries-api/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://wicg.github.io/entries-api/#html-data\u000a\u000a[\u000a    ImplementedAs=DataTransferItemFileSystem\u000a] partial interface DataTransferItem {\u000a    [CallWith=ScriptState, Measure] Entry? webkitGetAsEntry();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/DedicatedWorkerGlobalScopeFileSystem.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/DedicatedWorkerGlobalScopeFileSystem.idl"},contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a *\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-LocalFileSystem\u000a[ImplementedAs=WorkerGlobalScopeFileSystem]\u000apartial interface DedicatedWorkerGlobalScope {\u000a    const unsigned short TEMPORARY = 0;\u000a    const unsigned short PERSISTENT = 1;\u000a\u000a    [RuntimeEnabled=FileSystem, MeasureAs=RequestFileSystemWorker] void webkitRequestFileSystem(unsigned short type, long long size, optional FileSystemCallback successCallback, optional ErrorCallback errorCallback);\u000a    [RuntimeEnabled=FileSystem, RaisesException, MeasureAs=RequestFileSystemSyncWorker] DOMFileSystemSync webkitRequestFileSystemSync(unsigned short type, long long size);\u000a    [RuntimeEnabled=FileSystem] void webkitResolveLocalFileSystemURL(DOMString url, EntryCallback successCallback, optional ErrorCallback errorCallback);\u000a    [RuntimeEnabled=FileSystem, RaisesException] EntrySync webkitResolveLocalFileSystemSyncURL(DOMString url);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/DevToolsHostFileSystem.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/DevToolsHostFileSystem.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=DevToolsHostFileSystem,\u000a    RuntimeEnabled=FileSystem\u000a] partial interface DevToolsHost {\u000a    DOMFileSystem isolatedFileSystem(DOMString fileSystemId, DOMString registeredName);\u000a    void upgradeDraggedFileSystemPermissions(DOMFileSystem domFileSystem);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/DirectoryEntry.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/DirectoryEntry.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-DirectoryEntry\u000a[\u000a    NoInterfaceObject\u000a] interface DirectoryEntry : Entry {\u000a    DirectoryReader createReader();\u000a    void getFile(DOMString? path, optional FileSystemFlags options, optional EntryCallback successCallback, optional ErrorCallback errorCallback);\u000a    void getDirectory(DOMString? path, optional FileSystemFlags options, optional EntryCallback successCallback, optional ErrorCallback errorCallback);\u000a    void removeRecursively(VoidCallback successCallback, optional ErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/DirectoryEntrySync.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/DirectoryEntrySync.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-DirectoryEntrySync\u000a[\u000a    NoInterfaceObject\u000a] interface DirectoryEntrySync : EntrySync {\u000a    DirectoryReaderSync createReader();\u000a    [RaisesException] FileEntrySync getFile(DOMString? path, FileSystemFlags flags);\u000a    [RaisesException] DirectoryEntrySync getDirectory(DOMString? path, FileSystemFlags flags);\u000a    [RaisesException] void removeRecursively();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/DirectoryReader.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/DirectoryReader.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-DirectoryReader\u000a[\u000a    NoInterfaceObject\u000a] interface DirectoryReader {\u000a    void readEntries(EntriesCallback successCallback, optional ErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/DirectoryReaderSync.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/DirectoryReaderSync.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-DirectoryReaderSync\u000a[\u000a    NoInterfaceObject\u000a] interface DirectoryReaderSync {\u000a    [RaisesException] sequence<EntrySync> readEntries();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/EntriesCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/EntriesCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-EntriesCallback\u000acallback interface EntriesCallback {\u000a    void handleEvent(sequence<Entry> entries);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/Entry.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/Entry.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-Entry\u000a[\u000a    NoInterfaceObject\u000a] interface Entry {\u000a    readonly attribute boolean isFile;\u000a    readonly attribute boolean isDirectory;\u000a    readonly attribute DOMString name;\u000a    readonly attribute DOMString fullPath;\u000a    [CallWith=ScriptState] readonly attribute DOMFileSystem filesystem;\u000a\u000a    [CallWith=ScriptState] void getMetadata(MetadataCallback successCallback, optional ErrorCallback errorCallback);\u000a    [CallWith=ScriptState] void moveTo(DirectoryEntry parent, optional DOMString? name, optional EntryCallback successCallback, optional ErrorCallback errorCallback);\u000a    [CallWith=ScriptState] void copyTo(DirectoryEntry parent, optional DOMString? name, optional EntryCallback successCallback, optional ErrorCallback errorCallback);\u000a    [CallWith=ScriptState] DOMString toURL();\u000a    [CallWith=ScriptState] void remove(VoidCallback successCallback, optional ErrorCallback errorCallback);\u000a    [CallWith=ScriptState] void getParent(optional EntryCallback successCallback, optional ErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/EntryCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/EntryCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-EntryCallback\u000acallback interface EntryCallback {\u000a    void handleEvent(Entry entry);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/EntrySync.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/EntrySync.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-EntrySync\u000a[\u000a    NoInterfaceObject\u000a] interface EntrySync {\u000a    readonly attribute boolean isFile;\u000a    readonly attribute boolean isDirectory;\u000a    readonly attribute DOMString name;\u000a    readonly attribute DOMString fullPath;\u000a    readonly attribute DOMFileSystemSync filesystem;\u000a\u000a    [RaisesException] Metadata getMetadata();\u000a    [RaisesException] EntrySync moveTo(DirectoryEntrySync parent, DOMString? name);\u000a    [RaisesException] EntrySync copyTo(DirectoryEntrySync parent, DOMString? name);\u000a    DOMString toURL();\u000a    [RaisesException] void remove();\u000a    DirectoryEntrySync getParent();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/ErrorCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/ErrorCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-ErrorCallback\u000acallback interface ErrorCallback {\u000a    void handleEvent(DOMException error);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/FileEntry.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/FileEntry.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-FileEntry\u000a[\u000a    NoInterfaceObject\u000a] interface FileEntry : Entry {\u000a    void createWriter(FileWriterCallback successCallback, optional ErrorCallback errorCallback);\u000a    void file(BlobCallback successCallback, optional ErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/FileEntrySync.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/FileEntrySync.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-FileEntrySync\u000a[\u000a    NoInterfaceObject\u000a] interface FileEntrySync : EntrySync {\u000a    [RaisesException] File file();\u000a    [RaisesException] FileWriterSync createWriter();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/FileSystemCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/FileSystemCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-FileSystemCallback\u000acallback interface FileSystemCallback {\u000a    void handleEvent(DOMFileSystem fileSystem);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/FileSystemFlags.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/FileSystemFlags.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-Flags\u000a// In the spec, the flags don't have default values, but Blink assumes\u000a// that they are false when not specified.\u000a\u000adictionary FileSystemFlags {\u000a    // [ImplementedAs] is used to workaround a name conflict; our IDL\u000a    // compiler generates create() static method which creates an impl instance.\u000a    [ImplementedAs=createFlag] boolean create = false;\u000a    boolean exclusive = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/FileWriter.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/FileWriter.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc.  All rights reserved.\u000a * Copyright (C) 2011 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-writer-api-20120417/#idl-def-FileWriter\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface FileWriter : EventTarget {\u000a    // ready states\u000a    const unsigned short INIT = 0;\u000a    const unsigned short WRITING = 1;\u000a    const unsigned short DONE = 2;\u000a    [ImplementedAs=getReadyState] readonly attribute unsigned short readyState;\u000a\u000a    // async write/modify methods\u000a    [RaisesException] void write(Blob data);\u000a    [RaisesException] void seek(long long position);\u000a    [RaisesException] void truncate(long long size);\u000a\u000a    [RaisesException] void abort();\u000a\u000a    readonly attribute DOMException? error;\u000a    readonly attribute long long position;\u000a    readonly attribute long long length;\u000a\u000a             attribute EventHandler onwritestart;\u000a             attribute EventHandler onprogress;\u000a             attribute EventHandler onwrite;\u000a             attribute EventHandler onabort;\u000a             attribute EventHandler onerror;\u000a             attribute EventHandler onwriteend;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/FileWriterCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/FileWriterCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-FileWriterCallback\u000acallback interface FileWriterCallback {\u000a    void handleEvent(FileWriter fileWriter);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/FileWriterSync.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/FileWriterSync.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-writer-api-20120417/#idl-def-FileWriterSync\u000a[\u000a    NoInterfaceObject\u000a] interface FileWriterSync {\u000a    // synchronous write/modify methods\u000a    [RaisesException] void write(Blob data);\u000a    [RaisesException] void seek(long long position);\u000a    [RaisesException] void truncate(long long size);\u000a\u000a    readonly attribute long long position;\u000a    readonly attribute long long length;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/HTMLInputElementFileSystem.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/HTMLInputElementFileSystem.idl"},specUrls:["https://wicg.github.io/entries-api/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://wicg.github.io/entries-api/#html-forms\u000a\u000a[\u000a    ImplementedAs=HTMLInputElementFileSystem,\u000a    RuntimeEnabled=FileSystem\u000a] partial interface HTMLInputElement {\u000a    [CallWith=ScriptState, Measure] readonly attribute FrozenArray<Entry> webkitEntries;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/Metadata.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/Metadata.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-Metadata\u000a[\u000a    NoInterfaceObject\u000a] interface Metadata {\u000a    readonly attribute Date modificationTime;\u000a    readonly attribute unsigned long long size;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/MetadataCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/MetadataCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-MetadataCallback\u000acallback interface MetadataCallback {\u000a    void handleEvent(Metadata metadata);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/SharedWorkerGlobalScopeFileSystem.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/SharedWorkerGlobalScopeFileSystem.idl"},contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a *\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-LocalFileSystem\u000a[ImplementedAs=WorkerGlobalScopeFileSystem]\u000apartial interface SharedWorkerGlobalScope {\u000a    const unsigned short TEMPORARY = 0;\u000a    const unsigned short PERSISTENT = 1;\u000a\u000a    [RuntimeEnabled=FileSystem, MeasureAs=RequestFileSystemWorker] void webkitRequestFileSystem(unsigned short type, long long size, optional FileSystemCallback successCallback, optional ErrorCallback errorCallback);\u000a    [RuntimeEnabled=FileSystem, RaisesException, MeasureAs=RequestFileSystemSyncWorker] DOMFileSystemSync webkitRequestFileSystemSync(unsigned short type, long long size);\u000a    [RuntimeEnabled=FileSystem] void webkitResolveLocalFileSystemURL(DOMString url, EntryCallback successCallback, optional ErrorCallback errorCallback);\u000a    [RuntimeEnabled=FileSystem, RaisesException] EntrySync webkitResolveLocalFileSystemSyncURL(DOMString url);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/filesystem/WindowFileSystem.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/filesystem/WindowFileSystem.idl"},contents:"/*\u000a * Copyright (C) 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-LocalFileSystem\u000a[\u000a    ImplementedAs=DOMWindowFileSystem\u000a] partial interface Window {\u000a    const unsigned short TEMPORARY = 0;\u000a    const unsigned short PERSISTENT = 1;\u000a\u000a    [RuntimeEnabled=FileSystem, MeasureAs=RequestFileSystem] void webkitRequestFileSystem(unsigned short type, long long size,\u000a            FileSystemCallback successCallback, optional ErrorCallback errorCallback);\u000a    [RuntimeEnabled=FileSystem] void webkitResolveLocalFileSystemURL(DOMString url,\u000a            EntryCallback successCallback, optional ErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/gamepad/Gamepad.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/gamepad/Gamepad.idl"},specUrls:["https://w3c.github.io/gamepad/extensions.html","https://w3c.github.io/gamepad/","https://w3c.github.io/webvr/"],contents:"/*\u000a * Copyright (C) 2011, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are met:\u000a *\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/gamepad/extensions.html#gamepadhand-enum\u000aenum GamepadHand {\u000a  \"left\",\u000a  \"right\"\u000a};\u000a\u000a// https://w3c.github.io/gamepad/#gamepad-interface\u000ainterface Gamepad {\u000a    readonly attribute DOMString id;\u000a    readonly attribute unsigned long index;\u000a    readonly attribute boolean connected;\u000a    readonly attribute unsigned long long timestamp;\u000a    readonly attribute DOMString mapping;\u000a    [CachedAttribute=isAxisDataDirty, MeasureAs=GamepadAxes] readonly attribute FrozenArray<double> axes;\u000a    [CachedAttribute=isButtonDataDirty, MeasureAs=GamepadButtons] readonly attribute FrozenArray<GamepadButton> buttons;\u000a\u000a    // Gamepad vibration is proposed as an extension to the Gamepad API.\u000a    // https://docs.google.com/document/d/1jPKzVRNzzU4dUsvLpSXm1VXPQZ8FP-0lKMT-R_p-s6g\u000a    // TODO(mattreynolds): Replace this with a link to w3c.github.io/gamepad\u000a    [OriginTrialEnabled=GamepadExtensions, MeasureAs=GamepadVibrationActuator] readonly attribute GamepadHapticActuator? vibrationActuator;\u000a\u000a    [OriginTrialEnabled=GamepadExtensions, MeasureAs=GamepadPose] readonly attribute GamepadPose? pose;\u000a    [OriginTrialEnabled=GamepadExtensions, MeasureAs=GamepadHand] readonly attribute GamepadHand hand;\u000a\u000a    // https://w3c.github.io/webvr/#interface-gamepad\u000a    [OriginTrialEnabled=GamepadExtensions, MeasureAs=GamepadDisplayId] readonly attribute unsigned long displayId;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/gamepad/GamepadButton.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/gamepad/GamepadButton.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000ainterface GamepadButton {\u000a    readonly attribute boolean pressed;\u000a    [OriginTrialEnabled=GamepadExtensions, MeasureAs=GamepadButtonTouched] readonly attribute boolean touched;\u000a    readonly attribute double value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/gamepad/GamepadEffectParameters.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/gamepad/GamepadEffectParameters.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Gamepad vibration is proposed as an extension to the Gamepad API.\u000a// https://docs.google.com/document/d/1jPKzVRNzzU4dUsvLpSXm1VXPQZ8FP-0lKMT-R_p-s6g\u000a// TODO(mattreynolds): Replace this with a link to w3c.github.io/gamepad\u000adictionary GamepadEffectParameters {\u000a    double duration = 0.0;\u000a    double startDelay = 0.0;\u000a    double strongMagnitude = 0.0;\u000a    double weakMagnitude = 0.0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/gamepad/GamepadEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/gamepad/GamepadEvent.idl"},specUrls:["https://w3c.github.io/gamepad/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/gamepad/#gamepadevent-interface\u000a\u000a[\u000a    Constructor(DOMString type, optional GamepadEventInit eventInitDict)\u000a] interface GamepadEvent : Event {\u000a    [ImplementedAs=getGamepad] readonly attribute Gamepad gamepad;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/gamepad/GamepadEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/gamepad/GamepadEventInit.idl"},specUrls:["https://w3c.github.io/gamepad/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/gamepad/#gamepadevent-interface\u000a\u000adictionary GamepadEventInit : EventInit {\u000a    // TODO(foolip): |gamepad| should be required and not nullable.\u000a    // https://crbug.com/647693\u000a    // https://github.com/w3c/gamepad/issues/35\u000a    Gamepad? gamepad;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/gamepad/GamepadHapticActuator.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/gamepad/GamepadHapticActuator.idl"},specUrls:["https://w3c.github.io/gamepad/extensions.html"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/gamepad/extensions.html#gamepadhapticactuatortype-enum\u000aenum GamepadHapticActuatorType {\u000a    \"vibration\",\u000a    \"dual-rumble\"\u000a};\u000a\u000aenum GamepadHapticEffectType {\u000a    \"dual-rumble\"\u000a};\u000a\u000aenum GamepadHapticsResult {\u000a    \"complete\",\u000a    \"preempted\",\u000a    \"invalid-parameter\",\u000a    \"not-supported\"\u000a};\u000a\u000a// Gamepad vibration is proposed as an extension to the Gamepad API.\u000a// https://docs.google.com/document/d/1jPKzVRNzzU4dUsvLpSXm1VXPQZ8FP-0lKMT-R_p-s6g\u000a// TODO(mattreynolds): Replace this with a link to w3c.github.io/gamepad\u000a[\u000a    OriginTrialEnabled=GamepadExtensions\u000a] interface GamepadHapticActuator {\u000a    readonly attribute GamepadHapticActuatorType type;\u000a    [CallWith=ScriptState] Promise<GamepadHapticsResult> playEffect(\u000a        GamepadHapticEffectType type,\u000a        GamepadEffectParameters params);\u000a    [CallWith=ScriptState] Promise<GamepadHapticsResult> reset();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/gamepad/GamepadList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/gamepad/GamepadList.idl"},contents:"/*\u000a * Copyright (C) 2011, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are met:\u000a *\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface GamepadList {\u000a    readonly attribute unsigned long length;\u000a    getter Gamepad item([Default=Undefined] optional unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/gamepad/GamepadPose.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/gamepad/GamepadPose.idl"},specUrls:["https://w3c.github.io/gamepad/extensions.html"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/gamepad/extensions.html#gamepadpose-interface\u000a[\u000a    OriginTrialEnabled=GamepadExtensions\u000a] interface GamepadPose {\u000a    [MeasureAs=GamepadPoseHasOrientation] readonly attribute boolean hasOrientation;\u000a    [MeasureAs=GamepadPoseHasPosition] readonly attribute boolean hasPosition;\u000a    [MeasureAs=GamepadPosePosition] readonly attribute Float32Array? position;\u000a    [MeasureAs=GamepadPoseLinearVelocity] readonly attribute Float32Array? linearVelocity;\u000a    [MeasureAs=GamepadPoseLinearAcceleration] readonly attribute Float32Array? linearAcceleration;\u000a    [MeasureAs=GamepadPoseOrientation] readonly attribute Float32Array? orientation;\u000a    [MeasureAs=GamepadPoseAngularVelocity] readonly attribute Float32Array? angularVelocity;\u000a    [MeasureAs=GamepadPoseAngularAcceleration] readonly attribute Float32Array? angularAcceleration;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/gamepad/NavigatorGamepad.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/gamepad/NavigatorGamepad.idl"},contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a[\u000a    ImplementedAs=NavigatorGamepad\u000a] partial interface Navigator {\u000a    [MeasureAs=GetGamepads] GamepadList getGamepads();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/geolocation/Coordinates.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/geolocation/Coordinates.idl"},contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface Coordinates {\u000a    readonly attribute double latitude;\u000a    readonly attribute double longitude;\u000a    readonly attribute double? altitude;\u000a    readonly attribute double accuracy;\u000a    readonly attribute double? altitudeAccuracy;\u000a    readonly attribute double? heading;\u000a    readonly attribute double? speed;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/geolocation/Geolocation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/geolocation/Geolocation.idl"},specUrls:["https://www.w3.org/TR/geolocation-API/","https://www.w3.org/TR/geolocation-API/","https://www.w3.org/TR/geolocation-API/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/geolocation-API/#geolocation_interface\u000a[\u000a    NoInterfaceObject\u000a] interface Geolocation {\u000a    [LogActivity] void getCurrentPosition(\u000a        PositionCallback successCallback,\u000a        optional PositionErrorCallback errorCallback,\u000a        optional PositionOptions options);\u000a\u000a    [LogActivity] long watchPosition(\u000a        PositionCallback successCallback,\u000a        optional PositionErrorCallback errorCallback,\u000a        optional PositionOptions options);\u000a\u000a    void clearWatch(long watchID);\u000a};\u000a\u000a// https://www.w3.org/TR/geolocation-API/#position-callback\u000acallback PositionCallback = void(Position position);\u000a\u000a// https://www.w3.org/TR/geolocation-API/#error-callback\u000acallback PositionErrorCallback = void (PositionError positionError);\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/geolocation/NavigatorGeolocation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/geolocation/NavigatorGeolocation.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a[\u000a    ImplementedAs=NavigatorGeolocation\u000a] partial interface Navigator {\u000a    readonly attribute Geolocation geolocation;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/geolocation/Position.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/geolocation/Position.idl"},specUrls:["https://www.w3.org/TR/geolocation-API/"],contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/geolocation-API/#position_interface\u000a\u000a[\u000a    NoInterfaceObject,\u000a    ImplementedAs=Geoposition\u000a] interface Position {\u000a    readonly attribute Coordinates coords;\u000a    readonly attribute DOMTimeStamp timestamp;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/geolocation/PositionError.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/geolocation/PositionError.idl"},contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface PositionError {\u000a    readonly attribute unsigned short code;\u000a    readonly attribute DOMString message;\u000a\u000a    const unsigned short PERMISSION_DENIED = 1;\u000a    const unsigned short POSITION_UNAVAILABLE = 2;\u000a    const unsigned short TIMEOUT = 3;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/geolocation/PositionOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/geolocation/PositionOptions.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000adictionary PositionOptions {\u000a    boolean enableHighAccuracy = false;\u000a    [Clamp] unsigned long timeout = 0xFFFFFFFF;\u000a    [Clamp] unsigned long maximumAge = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/imagecapture/ConstrainPoint2DParameters.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/imagecapture/ConstrainPoint2DParameters.idl"},specUrls:["https://w3c.github.io/mediacapture-image/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-image/#additional-constrainable-props\u000a\u000adictionary ConstrainPoint2DParameters {\u000a    sequence<Point2D> exact;\u000a    sequence<Point2D> ideal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/imagecapture/ImageCapture.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/imagecapture/ImageCapture.idl"},specUrls:["https://w3c.github.io/mediacapture-image/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-image/#ImageCaptureAPI\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    ConstructorCallWith=ExecutionContext,\u000a    Constructor(MediaStreamTrack track),\u000a    DependentLifetime,\u000a    MeasureAs=ImageCaptureConstructor,\u000a    RaisesException=Constructor\u000a] interface ImageCapture {\u000a    [ImplementedAs=videoStreamTrack] readonly attribute MediaStreamTrack track;\u000a\u000a    [CallWith=ScriptState] Promise<PhotoCapabilities> getPhotoCapabilities();\u000a    [CallWith=ScriptState] Promise<PhotoSettings> getPhotoSettings();\u000a    [CallWith=ScriptState, MeasureAs=ImageCaptureSetOptions] Promise<void> setOptions(PhotoSettings photoSettings);\u000a    [CallWith=ScriptState] Promise<Blob> takePhoto(optional PhotoSettings photoSettings);\u000a    [CallWith=ScriptState] Promise<ImageBitmap> grabFrame();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/imagecapture/MediaSettingsRange.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/imagecapture/MediaSettingsRange.idl"},specUrls:["https://w3c.github.io/mediacapture-image/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-image/#mediasettingsrange\u000a\u000ainterface MediaSettingsRange {\u000a    readonly attribute double max;\u000a    readonly attribute double min;\u000a    readonly attribute double step;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/imagecapture/PhotoCapabilities.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/imagecapture/PhotoCapabilities.idl"},specUrls:["https://w3c.github.io/mediacapture-image/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-image/##photocapabilities-section\u000a\u000aenum MeteringMode {\u000a    \"none\",\u000a    \"manual\",\u000a    \"single-shot\",\u000a    \"continuous\",\u000a};\u000a\u000aenum RedEyeReduction {\u000a    \"never\",\u000a    \"always\",\u000a    \"controllable\",\u000a};\u000a\u000aenum FillLightMode {\u000a    \"off\",\u000a    \"auto\",\u000a    \"flash\",\u000a};\u000a\u000ainterface PhotoCapabilities {\u000a  readonly attribute RedEyeReduction            redEyeReduction;\u000a  readonly attribute MediaSettingsRange         imageHeight;\u000a  readonly attribute MediaSettingsRange         imageWidth;\u000a  readonly attribute FrozenArray<FillLightMode> fillLightMode;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/imagecapture/PhotoSettings.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/imagecapture/PhotoSettings.idl"},specUrls:["https://w3c.github.io/mediacapture-image/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-image/##photosettings-section\u000a\u000adictionary PhotoSettings {\u000a    boolean redEyeReduction;\u000a    double imageHeight;\u000a    double imageWidth;\u000a    FillLightMode fillLightMode;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/imagecapture/Point2D.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/imagecapture/Point2D.idl"},specUrls:["https://w3c.github.io/mediacapture-image/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-image/#point2d-section\u000a\u000adictionary Point2D {\u000a  float x = 0.0;\u000a  float y = 0.0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBCursor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBCursor.idl"},specUrls:["https://w3c.github.io/IndexedDB/","https://w3c.github.io/IndexedDB/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/IndexedDB/#idl-def-IDBCursorDirection\u000a\u000aenum IDBCursorDirection {\u000a    \"next\",\u000a    \"nextunique\",\u000a    \"prev\",\u000a    \"prevunique\"\u000a};\u000a\u000a// https://w3c.github.io/IndexedDB/#idl-def-IDBCursor\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface IDBCursor {\u000a    [CallWith=ScriptState] readonly attribute any source;\u000a    readonly attribute IDBCursorDirection direction;\u000a    [CallWith=ScriptState, CachedAttribute=isKeyDirty] readonly attribute any key;\u000a    [CallWith=ScriptState, CachedAttribute=isPrimaryKeyDirty] readonly attribute any primaryKey;\u000a\u000a    [RaisesException] void advance([EnforceRange] unsigned long count);\u000a    [CallWith=ScriptState, ImplementedAs=Continue, RaisesException] void continue([Default=Undefined] optional any key);\u000a    [CallWith=ScriptState, RaisesException] void continuePrimaryKey(any key, any primaryKey);\u000a\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest update(any value);\u000a    [NewObject, CallWith=ScriptState, ImplementedAs=Delete, RaisesException] IDBRequest delete();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBCursorWithValue.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBCursorWithValue.idl"},specUrls:["https://w3c.github.io/IndexedDB/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/IndexedDB/#idbcursorwithvalue\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface IDBCursorWithValue : IDBCursor {\u000a    [CallWith=ScriptState, CachedAttribute=isValueDirty] readonly attribute any value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBDatabase.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBDatabase.idl"},specUrls:["https://w3c.github.io/IndexedDB/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a * Copyright (C) 2011 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/IndexedDB/#idl-def-IDBDatabase\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Exposed=(Window,Worker)\u000a] interface IDBDatabase : EventTarget {\u000a    readonly attribute DOMString name;\u000a    readonly attribute unsigned long long version;\u000a    readonly attribute DOMStringList objectStoreNames;\u000a\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBTransaction transaction((DOMString or sequence<DOMString>) storeNames,\u000a                                                                                  optional IDBTransactionMode mode = \"readonly\");\u000a    void close();\u000a\u000a    [NewObject, RaisesException] IDBObjectStore createObjectStore(DOMString name,\u000a                                                                  optional IDBObjectStoreParameters options);\u000a    [RaisesException] void deleteObjectStore(DOMString name);\u000a\u000a    attribute EventHandler onabort;\u000a    attribute EventHandler onclose;\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onversionchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBFactory.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBFactory.idl"},specUrls:["https://w3c.github.io/IndexedDB/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/IndexedDB/#idbfactory\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface IDBFactory {\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBOpenDBRequest open(DOMString name,\u000a                                                                             [EnforceRange] optional unsigned long long version);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBOpenDBRequest deleteDatabase(DOMString name);\u000a\u000a    [CallWith=ScriptState, RaisesException] short cmp(any first, any second);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBIndex.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBIndex.idl"},specUrls:["https://w3c.github.io/IndexedDB/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/IndexedDB/#idl-def-IDBIndex\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface IDBIndex {\u000a    [RaisesException=Setter] attribute DOMString name;\u000a    [SameObject] readonly attribute IDBObjectStore objectStore;\u000a    [CallWith=ScriptState] readonly attribute any keyPath;\u000a    readonly attribute boolean multiEntry;\u000a    readonly attribute boolean unique;\u000a\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest get(any key);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest getKey(any key);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest getAll([Default=Undefined] optional any query,\u000a                                                                         [EnforceRange] optional unsigned long count);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest getAllKeys([Default=Undefined] optional any query,\u000a                                                                             [EnforceRange] optional unsigned long count);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest count([Default=Undefined] optional any key);\u000a\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest openCursor([Default=Undefined] optional any range,\u000a                                                                             optional IDBCursorDirection direction = \"next\");\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest openKeyCursor([Default=Undefined] optional any range,\u000a                                                                                optional IDBCursorDirection direction = \"next\");\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBIndexParameters.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBIndexParameters.idl"},specUrls:["https://w3c.github.io/IndexedDB/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/IndexedDB/#dictdef-idbindexparameters\u000a\u000adictionary IDBIndexParameters {\u000a    boolean unique = false;\u000a    boolean multiEntry = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBKeyRange.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBKeyRange.idl"},specUrls:["https://w3c.github.io/IndexedDB/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/IndexedDB/#idbkeyrange\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface IDBKeyRange {\u000a    [ImplementedAs=LowerValue, CallWith=ScriptState] readonly attribute any lower;\u000a    [ImplementedAs=UpperValue, CallWith=ScriptState] readonly attribute any upper;\u000a    readonly attribute boolean lowerOpen;\u000a    readonly attribute boolean upperOpen;\u000a\u000a    [NewObject, CallWith=ScriptState, RaisesException] static IDBKeyRange only(any value);\u000a    [NewObject, CallWith=ScriptState, RaisesException] static IDBKeyRange lowerBound(any bound, optional boolean open = false);\u000a    [NewObject, CallWith=ScriptState, RaisesException] static IDBKeyRange upperBound(any bound, optional boolean open = false);\u000a    [NewObject, CallWith=ScriptState, RaisesException] static IDBKeyRange bound(any lower,\u000a                                                                                any upper,\u000a                                                                                optional boolean lowerOpen = false,\u000a                                                                                optional boolean upperOpen = false);\u000a\u000a    [CallWith=ScriptState, RaisesException] boolean includes(any key);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBObjectStore.idl"},specUrls:["https://w3c.github.io/IndexedDB/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/IndexedDB/#idl-def-IDBObjectStore\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface IDBObjectStore {\u000a    [RaisesException=Setter] attribute DOMString name;\u000a    [CallWith=ScriptState] readonly attribute any keyPath;\u000a    readonly attribute DOMStringList indexNames;\u000a    [SameObject] readonly attribute IDBTransaction transaction;\u000a    readonly attribute boolean autoIncrement;\u000a\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest put(any value, [Default=Undefined] optional any key);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest add(any value, [Default=Undefined] optional any key);\u000a    [NewObject, CallWith=ScriptState, ImplementedAs=Delete, RaisesException] IDBRequest delete(any key);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest clear();\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest get(any key);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest getKey(any key);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest getAll([Default=Undefined] optional any query,\u000a                                                                                    [EnforceRange] optional unsigned long count);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest getAllKeys([Default=Undefined] optional any query,\u000a                                                                             [EnforceRange] optional unsigned long count);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest count([Default=Undefined] optional any key);\u000a\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest openCursor([Default=Undefined] optional any range,\u000a                                                                             optional IDBCursorDirection direction = \"next\");\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBRequest openKeyCursor([Default=Undefined] optional any range,\u000a                                                                                optional IDBCursorDirection direction = \"next\");\u000a\u000a    [RaisesException] IDBIndex index(DOMString name);\u000a    [NewObject, CallWith=ScriptState, RaisesException] IDBIndex createIndex(DOMString name,\u000a                                                                            (DOMString or sequence<DOMString>) keyPath,\u000a                                                                            optional IDBIndexParameters options);\u000a    [RaisesException] void deleteIndex(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBObjectStoreParameters.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBObjectStoreParameters.idl"},specUrls:["https://w3c.github.io/IndexedDB/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/IndexedDB/#dictdef-idbobjectstoreparameters\u000a\u000adictionary IDBObjectStoreParameters {\u000a    (DOMString or sequence<DOMString>)? keyPath = null;\u000a    boolean                             autoIncrement = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBObservation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBObservation.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/indexed-db-observers/blob/gh-pages/EXPLAINER.md#records\u000a\u000aenum IDBObservationType {\u000a    \"add\",\u000a    \"put\",\u000a    \"delete\",\u000a    \"clear\"\u000a};\u000a[\u000a   Exposed=(Window,Worker),\u000a   RuntimeEnabled=IDBObserver\u000a]\u000a interface IDBObservation {\u000a   readonly attribute  IDBObservationType type;\u000a   // When the record is a \"delete\" type, this is an IDBKeyRange.\u000a   [CallWith=ScriptState] readonly attribute any key;\u000a   [CallWith=ScriptState] readonly attribute any value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBObserver.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBObserver.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/indexed-db-observers/issues/24\u000a\u000acallback IDBObserverCallback = void (IDBObserverChanges changes);\u000a\u000a[\u000a   Exposed=(Window,Worker),\u000a   Constructor(IDBObserverCallback callback),\u000a   RuntimeEnabled=IDBObserver\u000a] interface IDBObserver {\u000a    [RaisesException, Measure] void observe(IDBDatabase db, IDBTransaction tx, IDBObserverInit options);\u000a    [RaisesException, Measure] void unobserve(IDBDatabase db);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBObserverChanges.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBObserverChanges.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/indexed-db-observers/blob/gh-pages/EXPLAINER.md#changes-argument\u000a\u000a[\u000a   Exposed=(Window, Worker),\u000a   RuntimeEnabled=IDBObserver\u000a] interface IDBObserverChanges {\u000a    readonly attribute IDBDatabase database;\u000a    // Transaction contains the same object stores as the transaction on which IDBTransaction.observe was called.\u000a    readonly attribute IDBTransaction transaction;\u000a    // Map object from String (object store name) to Array of IDBObservation.\u000a    [CallWith=ScriptState] readonly attribute any records;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBObserverInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBObserverInit.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/WICG/indexed-db-observers/blob/gh-pages/EXPLAINER.md#options-argument\u000a\u000adictionary IDBObserverInit {\u000a    boolean transaction = false;\u000a    boolean values = false;\u000a    boolean noRecords = false;\u000a    sequence<IDBObservationType> operationTypes = [];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBOpenDBRequest.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBOpenDBRequest.idl"},specUrls:["https://w3c.github.io/IndexedDB/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/IndexedDB/#idbopendbrequest\u000a\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface IDBOpenDBRequest : IDBRequest {\u000a    attribute EventHandler onblocked;\u000a    attribute EventHandler onupgradeneeded;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBRequest.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBRequest.idl"},specUrls:["https://w3c.github.io/IndexedDB/","https://w3c.github.io/IndexedDB/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a * Copyright (C) 2011 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/IndexedDB/#enumdef-idbrequestreadystate\u000a\u000aenum IDBRequestReadyState {\u000a    \"pending\",\u000a    \"done\"\u000a};\u000a\u000a// https://w3c.github.io/IndexedDB/#idbrequest\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Exposed=(Window,Worker)\u000a] interface IDBRequest : EventTarget {\u000a    [CallWith=ScriptState, RaisesException=Getter, CachedAttribute=isResultDirty] readonly attribute any result;\u000a    [RaisesException=Getter] readonly attribute DOMException error;\u000a    [CallWith=ScriptState] readonly attribute any source;\u000a    readonly attribute IDBTransaction transaction;\u000a    readonly attribute IDBRequestReadyState readyState;\u000a\u000a    // Events\u000a    attribute EventHandler onsuccess;\u000a    attribute EventHandler onerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBTransaction.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBTransaction.idl"},specUrls:["https://w3c.github.io/IndexedDB/","https://w3c.github.io/IndexedDB/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a * Copyright (C) 2011 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/IndexedDB/#idl-def-IDBTransactionMode\u000a\u000aenum IDBTransactionMode {\u000a    \"readonly\",\u000a    \"readwrite\",\u000a    \"versionchange\"\u000a};\u000a\u000a// https://w3c.github.io/IndexedDB/#idl-def-IDBTransaction\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Exposed=(Window,Worker)\u000a] interface IDBTransaction : EventTarget {\u000a\u000a    // Properties\u000a    readonly attribute DOMStringList objectStoreNames;\u000a    readonly attribute IDBTransactionMode mode;\u000a    [SameObject] readonly attribute IDBDatabase db;\u000a    readonly attribute DOMException error;\u000a\u000a    // Methods\u000a    [RaisesException] IDBObjectStore objectStore (DOMString name);\u000a    [RaisesException] void abort ();\u000a\u000a    // Events\u000a    attribute EventHandler onabort;\u000a    attribute EventHandler oncomplete;\u000a    attribute EventHandler onerror;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBVersionChangeEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBVersionChangeEventInit.idl"},specUrls:["https://w3c.github.io/IndexedDB/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/IndexedDB/#events\u000a\u000adictionary IDBVersionChangeEventInit : EventInit {\u000a    unsigned long long  oldVersion = 0;\u000a    unsigned long long? newVersion = null;\u000a    IDBDataLossAmount dataLoss = \"none\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/IDBVersionChangeEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/IDBVersionChangeEvent.idl"},specUrls:["https://w3c.github.io/IndexedDB/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/IndexedDB/#events\u000a\u000a// FIXME: This enum is non-standard, see https://crbug.com/711586\u000aenum IDBDataLossAmount { \"none\", \"total\" };\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    Constructor(DOMString type, optional IDBVersionChangeEventInit eventInitDict)\u000a] interface IDBVersionChangeEvent : Event {\u000a    readonly attribute unsigned long long oldVersion;\u000a    readonly attribute unsigned long long? newVersion;\u000a\u000a    // FIXME: These are non-standard, see https://crbug.com/711586\u000a    readonly attribute IDBDataLossAmount dataLoss;\u000a    readonly attribute DOMString dataLossMessage;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/WindowIndexedDatabase.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/WindowIndexedDatabase.idl"},contents:"/*\u000a * Copyright (C) 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    ImplementedAs=GlobalIndexedDB\u000a] partial interface Window {\u000a    [MeasureAs=UnprefixedIndexedDB] readonly attribute IDBFactory indexedDB;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/indexeddb/WorkerGlobalScopeIndexedDatabase.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/indexeddb/WorkerGlobalScopeIndexedDatabase.idl"},contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a *\u000a */\u000a\u000a[\u000a    ImplementedAs=GlobalIndexedDB\u000a] partial interface WorkerGlobalScope {\u000a    readonly attribute IDBFactory indexedDB;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/installedapp/NavigatorInstalledApp.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/installedapp/NavigatorInstalledApp.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// TODO(mgiuca): Link to full spec, rather than explainer, upon completion.\u000a// https://github.com/WICG/get-installed-related-apps/blob/master/EXPLAINER.md\u000a\u000a[\u000a    ImplementedAs=NavigatorInstalledApp,\u000a    OriginTrialEnabled=InstalledApp\u000a] partial interface Navigator {\u000a    [CallWith=ScriptState, Measure, SecureContext] Promise<RelatedApplication> getInstalledRelatedApps();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/installedapp/RelatedApplication.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/installedapp/RelatedApplication.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// TODO(mgiuca): Link to full spec, rather than explainer, upon completion.\u000a// https://github.com/WICG/get-installed-related-apps/blob/master/EXPLAINER.md\u000a\u000a// TODO(mgiuca): This should be a dictionary, not an interface.\u000a// (NoInterfaceObject is basically a makeshift dictionary.)\u000a// https://crbug.com/687444.\u000a[\u000a    NoInterfaceObject,\u000a    OriginTrialEnabled=InstalledApp\u000a] interface RelatedApplication {\u000a    readonly attribute DOMString platform;\u000a    readonly attribute DOMString url;\u000a    readonly attribute DOMString id;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/keyboard_lock/NavigatorKeyboardLock.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/keyboard_lock/NavigatorKeyboardLock.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://rawgit.com/w3c/keyboard-lock/gh-pages/index.html.\u000a// TODO(zijiehe, garykac): Update the spec to match the implementation.\u000a// 1. \"System\" should be removed from both the function names: these functions\u000a//    are not for system keys or key combinations only.\u000a//    See https://github.com/w3c/keyboard-lock/issues/6\u000a// 2. Returns Promise<void> from requestKeyboardLock() function: user agents can\u000a//    decline the request, and web page can get a notification once the\u000a//    requested keys should be received.\u000a//    See https://github.com/w3c/keyboard-lock/issues/7\u000a// 3. The parameter of requestKeyboardLock() should be\u000a//        optional sequence<DOMString> keyCodes = []\u000a//    See https://github.com/w3c/keyboard-lock/issues/21\u000a// 4. cancelKeyboardLock() function is implicitly called whenever the unloading\u000a//    document cleanup steps run with a document.\u000a//    See https://github.com/w3c/keyboard-lock/issues/22\u000a[\u000a    ImplementedAs=NavigatorKeyboardLock\u000a] partial interface Navigator {\u000a    [SecureContext, RuntimeEnabled=KeyboardLock, CallWith=ScriptState] Promise<void> requestKeyboardLock(optional sequence<DOMString> keyCodes = []);\u000a    [SecureContext, RuntimeEnabled=KeyboardLock] void cancelKeyboardLock();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/media_capabilities/AudioConfiguration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/media_capabilities/AudioConfiguration.idl"},specUrls:["https://wicg.github.io/media-capabilities/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/media-capabilities/#dictdef-audioconfiguration\u000a\u000adictionary AudioConfiguration {\u000a    required DOMString contentType;\u000a\u000a    DOMString channels;\u000a    unsigned long bitrate;\u000a    unsigned long samplerate;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/media_capabilities/MediaCapabilities.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/media_capabilities/MediaCapabilities.idl"},specUrls:["https://wicg.github.io/media-capabilities/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/media-capabilities/#mediacapabilities\u000a\u000a[\u000a    Exposed=Window,\u000a    RuntimeEnabled=MediaCapabilities\u000a] interface MediaCapabilities {\u000a    [CallWith=ScriptState] Promise<MediaCapabilitiesInfo> decodingInfo(MediaDecodingConfiguration configuration);\u000a    [CallWith=ScriptState] Promise<MediaCapabilitiesInfo> encodingInfo(\u000a        MediaEncodingConfiguration configuration);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/media_capabilities/MediaCapabilitiesInfo.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/media_capabilities/MediaCapabilitiesInfo.idl"},specUrls:["https://wicg.github.io/media-capabilities/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/media-capabilities/#mediacapabilitiesinfo\u000a\u000a[\u000a    Exposed=Window,\u000a    RuntimeEnabled=MediaCapabilities\u000a] interface MediaCapabilitiesInfo {\u000a    readonly attribute boolean supported;\u000a    readonly attribute boolean smooth;\u000a    readonly attribute boolean powerEfficient;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/media_capabilities/MediaConfiguration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/media_capabilities/MediaConfiguration.idl"},specUrls:["https://wicg.github.io/media-capabilities/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/media-capabilities/#dictdef-mediaconfiguration\u000a\u000adictionary MediaConfiguration {\u000a    VideoConfiguration video;\u000a    AudioConfiguration audio;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/media_capabilities/MediaDecodingConfiguration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/media_capabilities/MediaDecodingConfiguration.idl"},specUrls:["https://wicg.github.io/media-capabilities/","https://wicg.github.io/media-capabilities/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/media-capabilities/#enumdef-mediadecodingtype\u000a\u000aenum MediaDecodingType {\u000a    \"file\",\u000a    \"media-source\",\u000a};\u000a\u000a// https://wicg.github.io/media-capabilities/#dictdef-mediadecodingconfiguration\u000a\u000adictionary MediaDecodingConfiguration : MediaConfiguration {\u000a    required MediaDecodingType type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/media_capabilities/MediaEncodingConfiguration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/media_capabilities/MediaEncodingConfiguration.idl"},specUrls:["https://wicg.github.io/media-capabilities/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/media-capabilities/#dictdef-mediaencodingconfiguration\u000a\u000aenum MediaEncodingType {\u000a    \"record\",\u000a    // TODO(mcasas): Implement other types https://crbug.com/709181\u000a};\u000a\u000adictionary MediaEncodingConfiguration : MediaConfiguration{\u000a  required MediaEncodingType type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/media_capabilities/NavigatorMediaCapabilities.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/media_capabilities/NavigatorMediaCapabilities.idl"},specUrls:["https://wicg.github.io/media-capabilities/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/media-capabilities/#navigators-extensions\u000a\u000a[\u000a    Exposed=Window,\u000a    ImplementedAs=NavigatorMediaCapabilities,\u000a    RuntimeEnabled=MediaCapabilities\u000a] partial interface Navigator {\u000a    [SameObject] readonly attribute MediaCapabilities mediaCapabilities;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/media_capabilities/VideoConfiguration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/media_capabilities/VideoConfiguration.idl"},specUrls:["https://wicg.github.io/media-capabilities/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/media-capabilities/#dictdef-videoconfiguration\u000a\u000adictionary VideoConfiguration {\u000a    required DOMString contentType;\u000a    required unsigned long width;\u000a    required unsigned long height;\u000a    required unsigned long bitrate;\u000a    required double framerate;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediacapturefromelement/CanvasCaptureMediaStreamTrack.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediacapturefromelement/CanvasCaptureMediaStreamTrack.idl"},specUrls:["https://w3c.github.io/mediacapture-fromelement/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-fromelement/#the-canvascapturemediastreamtrack\u000ainterface CanvasCaptureMediaStreamTrack : MediaStreamTrack {\u000a    readonly attribute HTMLCanvasElement canvas;\u000a    void requestFrame ();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediacapturefromelement/HTMLCanvasElementCapture.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediacapturefromelement/HTMLCanvasElementCapture.idl"},specUrls:["https://w3c.github.io/mediacapture-fromelement/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-fromelement/#html-canvas-element-media-capture-extensions\u000a[\u000a    ImplementedAs=HTMLCanvasElementCapture\u000a] partial interface HTMLCanvasElement {\u000a    [RaisesException, CallWith=ScriptState] MediaStream captureStream (optional double frameRate);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediacapturefromelement/HTMLMediaElementCapture.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediacapturefromelement/HTMLMediaElementCapture.idl"},specUrls:["https://w3c.github.io/mediacapture-fromelement/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-fromelement/#html-media-element-media-capture-extensions\u000a\u000a[\u000a    ImplementedAs=HTMLMediaElementCapture,\u000a    RuntimeEnabled=MediaCaptureFromVideo\u000a] partial interface HTMLMediaElement {\u000a    [RaisesException, CallWith=ScriptState] MediaStream captureStream();\u000a    // TODO(mcasas): Implement captureStreamUntilEnded() http://crbug.com/575495.\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediarecorder/BlobEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediarecorder/BlobEvent.idl"},specUrls:["https://w3c.github.io/mediacapture-record/MediaRecorder.html"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-record/MediaRecorder.html#blob-event\u000a\u000a[\u000a    Constructor(DOMString type, BlobEventInit eventInitDict)\u000a]\u000ainterface BlobEvent : Event {\u000a    [SameObject] readonly attribute Blob data;\u000a    readonly attribute DOMHighResTimeStamp timecode;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediarecorder/MediaRecorder.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediarecorder/MediaRecorder.idl"},specUrls:["https://w3c.github.io/mediacapture-record/MediaRecorder.html"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-record/MediaRecorder.html#MediaRecorderAPI\u000a\u000aenum RecordingState { \"inactive\", \"recording\", \"paused\" };\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    ConstructorCallWith=ExecutionContext,\u000a    Constructor(MediaStream stream, optional MediaRecorderOptions options),\u000a    DependentLifetime,\u000a    RaisesException=Constructor\u000a] interface MediaRecorder : EventTarget {\u000a    readonly attribute MediaStream stream;\u000a    readonly attribute DOMString mimeType;\u000a    readonly attribute RecordingState state;\u000a\u000a    attribute EventHandler onstart;\u000a    attribute EventHandler onstop;\u000a    attribute EventHandler ondataavailable;\u000a    attribute EventHandler onpause;\u000a    attribute EventHandler onresume;\u000a    attribute EventHandler onerror;\u000a    readonly attribute unsigned long videoBitsPerSecond;\u000a    readonly attribute unsigned long audioBitsPerSecond;\u000a\u000a    [RaisesException, Measure] void start(optional long timeslice);\u000a    [RaisesException] void stop();\u000a    [RaisesException] void pause();\u000a    [RaisesException] void resume();\u000a    [RaisesException] void requestData();\u000a\u000a    static boolean isTypeSupported(DOMString type);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediarecorder/MediaRecorderOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediarecorder/MediaRecorderOptions.idl"},specUrls:["https://w3c.github.io/mediacapture-record/MediaRecorder.html"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-record/MediaRecorder.html#MediaRecorderOptions\u000a\u000adictionary MediaRecorderOptions {\u000a    DOMString mimeType;  // Encoding mimeType.\u000a\u000a    // TODO(mcasas): Consider changing the following options to signed: https://github.com/w3c/mediacapture-record/issues/48, and/or using [EnforceRange]/[Clamp].\u000a    unsigned long audioBitsPerSecond;\u000a    unsigned long videoBitsPerSecond;\u000a    unsigned long bitsPerSecond;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasession/MediaImage.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasession/MediaImage.idl"},specUrls:["https://wicg.github.io/mediasession/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/mediasession/#dictdef-mediaimage\u000a\u000adictionary MediaImage {\u000a  required USVString src;\u000a  DOMString sizes = \"\";\u000a  DOMString type = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasession/MediaMetadata.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasession/MediaMetadata.idl"},specUrls:["https://wicg.github.io/mediasession/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/mediasession/#the-mediametadata-interface\u000a\u000a[\u000a    ConstructorCallWith=ScriptState,\u000a    Constructor(optional MediaMetadataInit metadata),\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=MediaSession\u000a] interface MediaMetadata {\u000a    attribute DOMString title;\u000a    attribute DOMString artist;\u000a    attribute DOMString album;\u000a    [CallWith=ScriptState, RaisesException=Setter] attribute FrozenArray<MediaImage> artwork;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasession/MediaMetadataInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasession/MediaMetadataInit.idl"},specUrls:["https://wicg.github.io/mediasession/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/mediasession/#the-mediametadata-interface\u000a\u000adictionary MediaMetadataInit {\u000a    DOMString title = \"\";\u000a    DOMString artist = \"\";\u000a    DOMString album = \"\";\u000a    sequence<MediaImage> artwork = [];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasession/MediaSession.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasession/MediaSession.idl"},specUrls:["https://wicg.github.io/mediasession/","https://wicg.github.io/mediasession/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/mediasession/#enumdef-mediasessionplaybackstate\u000a\u000aenum MediaSessionPlaybackState {\u000a    \"none\",\u000a    \"paused\",\u000a    \"playing\"\u000a};\u000a\u000a// https://wicg.github.io/mediasession/#the-mediasession-interface\u000a\u000aenum MediaSessionAction {\u000a  \"play\",\u000a  \"pause\",\u000a  \"previoustrack\",\u000a  \"nexttrack\",\u000a  \"seekbackward\",\u000a  \"seekforward\"\u000a};\u000a\u000acallback MediaSessionActionHandler = void ();\u000a\u000a[\u000a    RuntimeEnabled=MediaSession,\u000a    DependentLifetime\u000a] interface MediaSession {\u000a    [Measure] attribute MediaMetadata? metadata;\u000a    [Measure] attribute MediaSessionPlaybackState playbackState;\u000a\u000a    [Measure] void setActionHandler(MediaSessionAction action,\u000a                                    MediaSessionActionHandler? handler);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasession/NavigatorMediaSession.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasession/NavigatorMediaSession.idl"},specUrls:["https://wicg.github.io/mediasession/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/mediasession/#the-mediasession-interface\u000a\u000a[\u000a    Exposed=(Window),\u000a    ImplementedAs=NavigatorMediaSession,\u000a    RuntimeEnabled=MediaSession\u000a] partial interface Navigator {\u000a    [CallWith=ScriptState, SameObject] readonly attribute MediaSession mediaSession;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasource/AudioTrackSourceBuffer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasource/AudioTrackSourceBuffer.idl"},specUrls:["https://w3c.github.io/media-source/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/media-source/#audio-track-extensions\u000a[\u000a    ImplementedAs=SourceBufferTrackBaseSupplement,\u000a    RuntimeEnabled=AudioVideoTracks\u000a] partial interface AudioTrack {\u000a    readonly attribute SourceBuffer? sourceBuffer;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasource/HTMLVideoElementMediaSource.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasource/HTMLVideoElementMediaSource.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    ImplementedAs=HTMLVideoElementMediaSource,\u000a    RuntimeEnabled=MediaSourceExperimental\u000a] partial interface HTMLVideoElement {\u000a    VideoPlaybackQuality getVideoPlaybackQuality();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasource/MediaSource.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasource/MediaSource.idl"},specUrls:["https://w3c.github.io/media-source/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/media-source/#idl-def-mediasource\u000a\u000aenum EndOfStreamError {\u000a    \"network\",\u000a    \"decode\"\u000a};\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    Constructor,\u000a    ConstructorCallWith=ExecutionContext,\u000a    DependentLifetime\u000a] interface MediaSource : EventTarget {\u000a    // All the source buffers created by this object.\u000a    readonly attribute SourceBufferList sourceBuffers;\u000a\u000a    // Subset of sourceBuffers that provide data for the selected/enabled tracks.\u000a    readonly attribute SourceBufferList activeSourceBuffers;\u000a\u000a    [RaisesException=Setter] attribute unrestricted double duration;\u000a    attribute EventHandler onsourceopen;\u000a    attribute EventHandler onsourceended;\u000a    attribute EventHandler onsourceclose;\u000a    [RaisesException] SourceBuffer addSourceBuffer(DOMString type);\u000a    [RaisesException] void removeSourceBuffer(SourceBuffer buffer);\u000a    readonly attribute DOMString readyState;\u000a    [RaisesException] void endOfStream(optional EndOfStreamError error);\u000a\u000a    [RaisesException] void setLiveSeekableRange(double start, double end);\u000a    [RaisesException] void clearLiveSeekableRange();\u000a\u000a    static boolean isTypeSupported (DOMString type);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasource/SourceBuffer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasource/SourceBuffer.idl"},specUrls:["https://w3c.github.io/media-source/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/media-source/#idl-def-sourcebuffer\u000a\u000aenum AppendMode {\u000a    \"segments\",\u000a    \"sequence\"\u000a};\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface SourceBuffer : EventTarget {\u000a\u000a    // Gets or sets the AppendMode.\u000a    [RaisesException=Setter] attribute AppendMode mode;\u000a\u000a    readonly attribute boolean updating;\u000a\u000a    // Returns the time ranges buffered.\u000a    [RaisesException=Getter] readonly attribute TimeRanges buffered;\u000a\u000a    // Applies an offset to media segment timestamps.\u000a    [RaisesException=Setter] attribute double timestampOffset;\u000a\u000a    [RuntimeEnabled=AudioVideoTracks] readonly attribute AudioTrackList audioTracks;\u000a    [RuntimeEnabled=AudioVideoTracks] readonly attribute VideoTrackList videoTracks;\u000a\u000a    // Presentation timestamp for the start of append window.\u000a    [RaisesException=Setter] attribute double appendWindowStart;\u000a\u000a    // Presentation timestamp for the end of append window.\u000a    [RaisesException=Setter] attribute unrestricted double appendWindowEnd;\u000a\u000a    attribute EventHandler onupdatestart;\u000a    attribute EventHandler onupdate;\u000a    attribute EventHandler onupdateend;\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onabort;\u000a\u000a    // Append segment data.\u000a    [RaisesException] void appendBuffer(ArrayBuffer data);\u000a    [RaisesException] void appendBuffer(ArrayBufferView data);\u000a\u000a    // Abort the current segment append sequence.\u000a    [RaisesException] void abort();\u000a    [RaisesException] void remove(double start, unrestricted double end);\u000a\u000a    // Gets or sets the TrackDefaultList this SourceBuffer may consult during\u000a    // the initialization segment algorithm.\u000a    [RaisesException=Setter, RuntimeEnabled=MediaSourceExperimental] attribute TrackDefaultList trackDefaults;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasource/SourceBufferList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasource/SourceBufferList.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000ainterface SourceBufferList : EventTarget {\u000a    readonly attribute unsigned long length;\u000a    attribute EventHandler onaddsourcebuffer;\u000a    attribute EventHandler onremovesourcebuffer;\u000a    [ImplementedAs=item] getter SourceBuffer (unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasource/TrackDefault.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasource/TrackDefault.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Per 11 Nov 2014 Editor's Draft\u000a// https://dvcs.w3.org/hg/html-media/raw-file/tip/media-source/media-source.html#idl-def-TrackDefault\u000a\u000aenum TrackDefaultType { \"audio\", \"video\", \"text\" };\u000a\u000a[\u000a    Constructor(TrackDefaultType type, DOMString language, DOMString label, sequence<DOMString> kinds, optional DOMString byteStreamTrackID = \"\"),\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=MediaSourceExperimental\u000a] interface TrackDefault {\u000a    readonly attribute TrackDefaultType type;\u000a    readonly attribute DOMString byteStreamTrackID;\u000a    readonly attribute DOMString language;\u000a    readonly attribute DOMString label;\u000a    // TrackDefault was removed from the spec in\u000a    // https://github.com/w3c/media-source/pull/138, and the last version to\u000a    // have it had getKinds() instead of |kinds|. Use an object here to avoid\u000a    // WebIDL arrays (which no longer exist) while not breaking compatibility\u000a    // See also: https://crbug.com/619665.\u000a    [CallWith=ScriptState] readonly attribute object kinds;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasource/TrackDefaultList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasource/TrackDefaultList.idl"},specUrls:["https://w3c.github.io/media-source/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Per 09 Jan 2015 Editor's Draft\u000a// https://w3c.github.io/media-source/#trackdefaultlist\u000a\u000a[\u000a    Constructor(optional sequence<TrackDefault> trackDefaults = []),\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=MediaSourceExperimental\u000a] interface TrackDefaultList {\u000a    readonly attribute unsigned long length;\u000a    [ImplementedAs=item] getter TrackDefault (unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasource/URLMediaSource.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasource/URLMediaSource.idl"},specUrls:["https://w3c.github.io/media-source/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/media-source/#url\u000a\u000a[\u000a    ImplementedAs=URLMediaSource\u000a] partial interface URL {\u000a    [Exposed=(Window,DedicatedWorker,SharedWorker), CallWith=ScriptState] static DOMString createObjectURL(MediaSource source);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasource/VideoPlaybackQuality.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasource/VideoPlaybackQuality.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a[\u000a    RuntimeEnabled=MediaSourceExperimental\u000a] interface VideoPlaybackQuality {\u000a    readonly attribute double creationTime;\u000a    readonly attribute unsigned long totalVideoFrames;\u000a    readonly attribute unsigned long droppedVideoFrames;\u000a    readonly attribute unsigned long corruptedVideoFrames;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediasource/VideoTrackSourceBuffer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediasource/VideoTrackSourceBuffer.idl"},specUrls:["https://w3c.github.io/media-source/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/media-source/#video-track-extensions\u000a[\u000a    ImplementedAs=SourceBufferTrackBaseSupplement,\u000a    RuntimeEnabled=AudioVideoTracks\u000a] partial interface VideoTrack {\u000a    readonly attribute SourceBuffer? sourceBuffer;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/ConstrainBooleanParameters.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/ConstrainBooleanParameters.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-constrainbooleanparameters\u000a\u000adictionary ConstrainBooleanParameters {\u000a    boolean exact;\u000a    boolean ideal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/ConstrainDOMStringParameters.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/ConstrainDOMStringParameters.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-constraindomstringparameters\u000a\u000adictionary ConstrainDOMStringParameters {\u000a    (DOMString or sequence<DOMString>) exact;\u000a    (DOMString or sequence<DOMString>) ideal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/ConstrainDoubleRange.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/ConstrainDoubleRange.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-constraindoublerange\u000a\u000adictionary ConstrainDoubleRange : DoubleRange {\u000a    double exact;\u000a    double ideal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/ConstrainLongRange.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/ConstrainLongRange.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-constrainlongrange\u000a\u000adictionary ConstrainLongRange : LongRange {\u000a    long exact;\u000a    long ideal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/DoubleRange.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/DoubleRange.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-doublerange\u000a\u000adictionary DoubleRange {\u000a    double max;\u000a    double min;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/LongRange.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/LongRange.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-longrange\u000a\u000adictionary LongRange {\u000a    long max;\u000a    long min;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaDeviceInfo.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaDeviceInfo.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"/*\u000a * Copyright (C) 2014 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY GOOGLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL GOOGLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/mediacapture-main/#device-info\u000a\u000aenum MediaDeviceKind {\u000a    \"audioinput\",\u000a    \"audiooutput\",\u000a    \"videoinput\"\u000a};\u000a\u000ainterface MediaDeviceInfo {\u000a    readonly attribute DOMString deviceId;\u000a    readonly attribute MediaDeviceKind kind;\u000a    readonly attribute DOMString label;\u000a    readonly attribute DOMString groupId;\u000a    serializer = {attribute};\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaDevices.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaDevices.idl"},specUrls:["https://w3c.github.io/mediacapture-main/","https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// The spec for MediaDevices is in two parts:\u000a// https://w3c.github.io/mediacapture-main/#mediadevices\u000a// https://w3c.github.io/mediacapture-main/#mediadevices-interface-extensions\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface MediaDevices : EventTarget {\u000a    [RuntimeEnabled=OnDeviceChange] attribute EventHandler ondevicechange;\u000a    [CallWith=ScriptState, MeasureAs=MediaDevicesEnumerateDevices] Promise<sequence<MediaDeviceInfo>> enumerateDevices();\u000a    MediaTrackSupportedConstraints getSupportedConstraints();\u000a    [CallWith=ScriptState,\u000a     RaisesException,\u000a     MeasureAs=GetUserMediaPromise\u000a    ] Promise<MediaStream> getUserMedia(optional MediaStreamConstraints constraints);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaStream.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaStream.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-mediastream\u000a\u000a[\u000a    Constructor,\u000a    Constructor(MediaStream stream),\u000a    Constructor(sequence<MediaStreamTrack> tracks),\u000a    ConstructorCallWith=ExecutionContext\u000a] interface MediaStream : EventTarget {\u000a    readonly attribute DOMString id;\u000a    sequence<MediaStreamTrack> getAudioTracks();\u000a    sequence<MediaStreamTrack> getVideoTracks();\u000a    sequence<MediaStreamTrack> getTracks();\u000a    MediaStreamTrack? getTrackById(DOMString trackId);\u000a    [RaisesException] void addTrack(MediaStreamTrack track);\u000a    [RaisesException] void removeTrack(MediaStreamTrack track);\u000a    [CallWith=ScriptState] MediaStream clone();\u000a    [Measure] readonly attribute boolean active;\u000a    attribute EventHandler onaddtrack;\u000a    attribute EventHandler onremovetrack;\u000a\u000a    // TODO(guidou): Remove the active and inactive events on MediaStream.\u000a    // https://crbug.com/649328\u000a    attribute EventHandler onactive;\u000a    attribute EventHandler oninactive;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaStreamConstraints.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaStreamConstraints.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-mediastreamconstraints\u000a\u000adictionary MediaStreamConstraints {\u000a    (boolean or MediaTrackConstraints) video = false;\u000a    (boolean or MediaTrackConstraints) audio = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaStreamEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaStreamEvent.idl"},contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// An old version of WebRTC defines the MediaStreamEvent interface:\u000a// https://www.w3.org/TR/2015/WD-webrtc-20150210/#mediastreamevent\u000a\u000a[\u000a    Constructor(DOMString type, optional MediaStreamEventInit eventInitDict)\u000a] interface MediaStreamEvent : Event {\u000a    readonly attribute MediaStream? stream;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaStreamEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaStreamEventInit.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// An old version of WebRTC defines the MediaStreamEvent interface:\u000a// https://www.w3.org/TR/2015/WD-webrtc-20150210/#mediastreamevent\u000a\u000adictionary MediaStreamEventInit : EventInit {\u000a    MediaStream? stream;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaStreamTrack.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaStreamTrack.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/mediacapture-main/#mediastreamtrack\u000a\u000a// TODO(foolip): Remove or standardize MediaStreamTrackState \"muted\".\u000a// https://crbug.com/651414\u000aenum MediaStreamTrackState {\u000a    \"live\",\u000a    \"muted\",\u000a    \"ended\"\u000a};\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface MediaStreamTrack : EventTarget {\u000a    readonly attribute DOMString kind;\u000a    readonly attribute DOMString id;\u000a    readonly attribute DOMString label;\u000a    attribute boolean enabled;\u000a    readonly attribute boolean muted;\u000a    attribute EventHandler onmute;\u000a    attribute EventHandler onunmute;\u000a    readonly attribute MediaStreamTrackState readyState;\u000a    attribute EventHandler onended;\u000a\u000a    [CallWith=ScriptState] MediaStreamTrack clone();\u000a    [ImplementedAs=stopTrack, RaisesException] void stop();\u000a\u000a    MediaTrackCapabilities getCapabilities();\u000a    MediaTrackConstraints getConstraints();\u000a    MediaTrackSettings getSettings();\u000a    [CallWith=ScriptState] Promise<void> applyConstraints(optional MediaTrackConstraints constraints);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaStreamTrackContentHint.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaStreamTrackContentHint.idl"},specUrls:["https://wicg.github.io/mst-content-hint/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/mst-content-hint/#extension-to-mediastreamtrack\u000a[\u000a    ImplementedAs=MediaStreamTrackContentHint,\u000a    RuntimeEnabled=MediaStreamTrackContentHint\u000a] partial interface MediaStreamTrack {\u000a    attribute DOMString contentHint;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaStreamTrackEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaStreamTrackEvent.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/mediacapture-main/#mediastreamtrackevent\u000a\u000a[\u000a    Exposed=Window,\u000a    Constructor(DOMString type, MediaStreamTrackEventInit eventInitDict)\u000a] interface MediaStreamTrackEvent : Event {\u000a   [SameObject] readonly attribute MediaStreamTrack track;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaStreamTrackEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaStreamTrackEventInit.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#mediastreamtrackevent\u000a\u000adictionary MediaStreamTrackEventInit : EventInit {\u000a    required MediaStreamTrack track;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaTrackCapabilities.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaTrackCapabilities.idl"},specUrls:["https://w3c.github.io/mediacapture-image/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000adictionary MediaTrackCapabilities {\u000a    // W3C Image Capture API\u000a    // https://w3c.github.io/mediacapture-image/#mediatrackcapabilities-section\u000a    // TODO(mcasas) move out when partial dictionaries are supported\u000a    // http://crbug.com/579896.\u000a    sequence<DOMString>  whiteBalanceMode;\u000a    sequence<DOMString>  exposureMode;\u000a    sequence<DOMString>  focusMode;\u000a    MediaSettingsRange   exposureCompensation;\u000a    MediaSettingsRange   colorTemperature;\u000a    MediaSettingsRange   iso;\u000a    MediaSettingsRange   brightness;\u000a    MediaSettingsRange   contrast;\u000a    MediaSettingsRange   saturation;\u000a    MediaSettingsRange   sharpness;\u000a    MediaSettingsRange   zoom;\u000a    boolean              torch;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaTrackConstraintSet.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaTrackConstraintSet.idl"},specUrls:["https://w3c.github.io/mediacapture-main/","https://w3c.github.io/mediacapture-depth/","https://w3c.github.io/mediacapture-image/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-mediatrackconstraintset\u000a\u000atypedef (long or ConstrainLongRange) ConstrainLong;\u000atypedef (double or ConstrainDoubleRange) ConstrainDouble;\u000atypedef (boolean or ConstrainBooleanParameters) ConstrainBoolean;\u000atypedef (DOMString or sequence<DOMString> or ConstrainDOMStringParameters) ConstrainDOMString;\u000atypedef (sequence<Point2D> or ConstrainPoint2DParameters) ConstrainPoint2D;\u000a\u000adictionary MediaTrackConstraintSet {\u000a    ConstrainLong width;\u000a    ConstrainLong height;\u000a    ConstrainDouble aspectRatio;\u000a    ConstrainDouble frameRate;\u000a    ConstrainDOMString facingMode;\u000a    ConstrainDouble volume;\u000a    ConstrainLong sampleRate;\u000a    ConstrainLong sampleSize;\u000a    ConstrainBoolean echoCancellation;\u000a    ConstrainDouble latency;\u000a    ConstrainLong channelCount;\u000a    ConstrainDOMString deviceId;\u000a    ConstrainDOMString groupId;\u000a    // Media Capture Depth Stream Extensions\u000a    // https://w3c.github.io/mediacapture-depth/#mediatrackconstraints\u000a    // TODO(aleksandar.stojiljkovic): videoKind, depthNear, depthFar,\u000a    // focalLengthX and focalLengthY attributes should be declared as partial\u000a    // dictionary but IDL parser can't support it yet. http://crbug.com/579896.\u000a    [RuntimeEnabled=MediaCaptureDepthVideoKind] ConstrainDOMString videoKind;\u000a    [RuntimeEnabled=MediaCaptureDepth] ConstrainDouble depthNear;\u000a    [RuntimeEnabled=MediaCaptureDepth] ConstrainDouble depthFar;\u000a    [RuntimeEnabled=MediaCaptureDepth] ConstrainDouble focalLengthX;\u000a    [RuntimeEnabled=MediaCaptureDepth] ConstrainDouble focalLengthY;\u000a    // W3C Image Capture API\u000a    // https://w3c.github.io/mediacapture-image/#mediatrackconstraintset-section\u000a    // TODO(mcasas) move out when partial dictionaries are supported\u000a    // http://crbug.com/579896.\u000a    ConstrainDOMString whiteBalanceMode;\u000a    ConstrainDOMString exposureMode;\u000a    ConstrainDOMString focusMode;\u000a    ConstrainPoint2D   pointsOfInterest;\u000a    ConstrainDouble    exposureCompensation;\u000a    ConstrainDouble    colorTemperature;\u000a    ConstrainDouble    iso;\u000a    ConstrainDouble    brightness;\u000a    ConstrainDouble    contrast;\u000a    ConstrainDouble    saturation;\u000a    ConstrainDouble    sharpness;\u000a    ConstrainDouble    zoom;\u000a    ConstrainBoolean   torch;\u000a    // The \"mandatory\" and \"_optional\" members are retained for conformance\u000a    // with https://www.w3.org/TR/2013/WD-mediacapture-streams-20130903/\u000a    Dictionary mandatory;\u000a    sequence<Dictionary> _optional;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaTrackConstraints.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaTrackConstraints.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-mediatrackconstraints\u000a\u000adictionary MediaTrackConstraints : MediaTrackConstraintSet {\u000a  sequence<MediaTrackConstraintSet> advanced;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaTrackSettings.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaTrackSettings.idl"},specUrls:["https://w3c.github.io/mediacapture-main/","https://w3c.github.io/mediacapture-depth/","https://w3c.github.io/mediacapture-image/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-mediatracksettings\u000a\u000adictionary MediaTrackSettings {\u000a    long width;\u000a    long height;\u000a    double aspectRatio;\u000a    double frameRate;\u000a    DOMString facingMode;\u000a    // volume, sampleRate and sampleSize are not implemented.\u000a    // double volume;\u000a    // long sampleRate;\u000a    // long sampleSize;\u000a    boolean echoCancellation;\u000a    // latency and channelCount are not implemented.\u000a    // double latency;\u000a    // long channelCount;\u000a    DOMString deviceId;\u000a    // groupId is not implemented.\u000a    // DOMString groupId;\u000a    // Media Capture Depth Stream Extensions\u000a    // https://w3c.github.io/mediacapture-depth/#mediatracksettings-dictionary\u000a    // TODO(aleksandar.stojiljkovic): videoKind, depthNear, depthFar,\u000a    // focalLengthX and focalLengthY attributes should be declared as partial\u000a    // dictionary but IDL parser can't support it yet. http://crbug.com/579896.\u000a    [RuntimeEnabled=MediaCaptureDepthVideoKind] DOMString videoKind;\u000a    [RuntimeEnabled=MediaCaptureDepth] double depthNear;\u000a    [RuntimeEnabled=MediaCaptureDepth] double depthFar;\u000a    [RuntimeEnabled=MediaCaptureDepth] double focalLengthX;\u000a    [RuntimeEnabled=MediaCaptureDepth] double focalLengthY;\u000a    // W3C Image Capture API\u000a    // https://w3c.github.io/mediacapture-image/#mediatracksettings-section\u000a    // TODO(mcasas) move out when partial dictionaries are supported\u000a    // http://crbug.com/579896.\u000a    DOMString         whiteBalanceMode;\u000a    DOMString         exposureMode;\u000a    DOMString         focusMode;\u000a    sequence<Point2D> pointsOfInterest;\u000a    double            exposureCompensation;\u000a    double            colorTemperature;\u000a    double            iso;\u000a    double            brightness;\u000a    double            contrast;\u000a    double            saturation;\u000a    double            sharpness;\u000a    double            zoom;\u000a    boolean           torch;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/MediaTrackSupportedConstraints.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/MediaTrackSupportedConstraints.idl"},specUrls:["https://w3c.github.io/mediacapture-main/","https://w3c.github.io/mediacapture-depth","https://w3c.github.io/mediacapture-image/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#idl-def-mediatracksupportedconstraints\u000a\u000a// NOTE: The names of this dictionary MUST be kept aligned with those in\u000a// MediaTrackConstraintSet.idl.\u000a\u000adictionary MediaTrackSupportedConstraints {\u000a    boolean width = true;\u000a    boolean height = true;\u000a    boolean aspectRatio = true;\u000a    boolean frameRate = true;\u000a    boolean facingMode = true;\u000a    boolean volume = true;\u000a    boolean sampleRate = true;\u000a    boolean sampleSize = true;\u000a    boolean echoCancellation = true;\u000a    boolean latency = true;\u000a    boolean channelCount = true;\u000a    boolean deviceId = true;\u000a    boolean groupId = true;\u000a\u000a    // Media Capture Depth Stream Extensions\u000a    // https://w3c.github.io/mediacapture-depth\u000a    // TODO(aleksandar.stojiljkovic): videoKind, depthNear, depthFar,\u000a    // focalLengthX and focalLengthY attributes should be declared as partial\u000a    // dictionary but IDL parser can't support it yet. http://crbug.com/579896.\u000a    [RuntimeEnabled=MediaCaptureDepthVideoKind] boolean videoKind = true;\u000a    [RuntimeEnabled=MediaCaptureDepth] boolean depthNear = true;\u000a    [RuntimeEnabled=MediaCaptureDepth] boolean depthFar = true;\u000a    [RuntimeEnabled=MediaCaptureDepth] boolean focalLengthX = true;\u000a    [RuntimeEnabled=MediaCaptureDepth] boolean focalLengthY = true;\u000a\u000a    // W3C Image Capture API\u000a    // https://w3c.github.io/mediacapture-image/#mediatracksupportedconstraints-section\u000a    // TODO(mcasas) move out when partial dictionaries are supported\u000a    // http://crbug.com/579896.\u000a    boolean whiteBalanceMode = true;\u000a    boolean exposureMode = true;\u000a    boolean focusMode = true;\u000a    boolean pointsOfInterest = true;\u000a    boolean exposureCompensation = true;\u000a    boolean colorTemperature = true;\u000a    boolean iso = true;\u000a    boolean brightness = true;\u000a    boolean contrast = true;\u000a    boolean saturation = true;\u000a    boolean sharpness = true;\u000a    boolean zoom = true;\u000a    boolean torch = true;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/NavigatorMediaStream.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/NavigatorMediaStream.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://w3c.github.io/mediacapture-main/#navigatorusermedia-interface-extensions\u000a\u000a[\u000a    ImplementedAs=NavigatorMediaStream\u000a] partial interface Navigator {\u000a    [RaisesException,\u000a     MeasureAs=GetUserMediaLegacy\u000a    ] void getUserMedia(MediaStreamConstraints constraints,\u000a                        NavigatorUserMediaSuccessCallback successCallback,\u000a                        NavigatorUserMediaErrorCallback errorCallback);\u000a\u000a    // Non-standard\u000a    [RaisesException,\u000a     ImplementedAs=getUserMedia,\u000a     MeasureAs=GetUserMediaPrefixed\u000a    ] void webkitGetUserMedia(MediaStreamConstraints constraints,\u000a                              NavigatorUserMediaSuccessCallback successCallback,\u000a                              NavigatorUserMediaErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/NavigatorUserMedia.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/NavigatorUserMedia.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#navigatorusermedia\u000a\u000a[\u000a    ImplementedAs=NavigatorUserMedia\u000a] partial interface Navigator {\u000a    [SameObject] readonly attribute MediaDevices mediaDevices;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/NavigatorUserMediaError.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/NavigatorUserMediaError.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/mediacapture-main/archives/20150629/getusermedia.html#mediastreamerror\u000a\u000a// TODO(foolip): This become OverconstrainedError in\u000a// https://github.com/w3c/mediacapture-main/pull/194 but but that does not have\u000a// a |constraintName| member:\u000a// https://w3c.github.io/mediacapture-main/#overconstrainederror-object\u000a// See also https://github.com/w3c/mediacapture-main/issues/405\u000a[\u000a    NoInterfaceObject\u000a] interface NavigatorUserMediaError {\u000a    readonly attribute DOMString name;\u000a    readonly attribute DOMString message;\u000a    [Measure] readonly attribute DOMString constraintName;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/NavigatorUserMediaErrorCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/NavigatorUserMediaErrorCallback.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/mediacapture-main/#navigatorusermediaerrorcallback\u000a\u000a// TODO(foolip): This should be a callback function, not a callback interface.\u000a// https://crbug.com/569301\u000acallback interface NavigatorUserMediaErrorCallback {\u000a    void handleEvent(NavigatorUserMediaError error);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/NavigatorUserMediaSuccessCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/NavigatorUserMediaSuccessCallback.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/mediacapture-main/#navigatorusermediasuccesscallback\u000a\u000a// TODO(foolip): This should be a callback function, not a callback interface.\u000a// https://crbug.com/569301\u000acallback interface NavigatorUserMediaSuccessCallback {\u000a    void handleEvent(MediaStream stream);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/OverconstrainedError.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/OverconstrainedError.idl"},specUrls:["https://w3c.github.io/mediacapture-main/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-main/#overconstrainederror-object\u000a\u000a// TODO(guidou): OverconstrainedError should be an Error subclass and not an\u000a// interface. http://crbug.com/769726\u000a[\u000a    Constructor(DOMString constraint, DOMString message)\u000a] interface OverconstrainedError {\u000a    readonly attribute DOMString name;\u000a    readonly attribute DOMString? message;\u000a    readonly attribute DOMString? constraint;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/URLMediaStream.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/URLMediaStream.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// An old version of Media Capture and Streams defines URL.createObjectURL:\u000a// https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html\u000a\u000a// TODO(foolip): Update link if it's revived in the spec:\u000a// https://github.com/w3c/mediacapture-main/issues/404\u000a\u000a[\u000a    ImplementedAs=URLMediaStream\u000a] partial interface URL {\u000a    [Exposed=(Window,DedicatedWorker,SharedWorker), CallWith=ScriptState] static DOMString createObjectURL(MediaStream stream);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediastream/WindowMediaStream.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediastream/WindowMediaStream.idl"},contents:"// Copyright (c) 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=DOMWindowMediaStream\u000a] partial interface Window {\u000a    attribute MediaStreamConstructor webkitMediaStream;\u000a\u000a    attribute RTCPeerConnectionConstructor webkitRTCPeerConnection;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/navigatorcontentutils/NavigatorContentUtils.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/navigatorcontentutils/NavigatorContentUtils.idl"},contents:"/*\u000a    Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies)\u000a    Copyright (C) 2012, Samsung Electronics. All rights reserved.\u000a\u000a    This library is free software; you can redistribute it and/or\u000a    modify it under the terms of the GNU Library General Public\u000a    License as published by the Free Software Foundation; either\u000a    version 2 of the License, or (at your option) any later version.\u000a\u000a    This library is distributed in the hope that it will be useful,\u000a    but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a    Library General Public License for more details.\u000a\u000a    You should have received a copy of the GNU Library General Public License\u000a    along with this library; see the file COPYING.LIB.  If not, write to\u000a    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a    Boston, MA 02110-1301, USA.\u000a*/\u000a\u000a// https://html.spec.whatwg.org/multipage/webappapis.html#custom-handlers\u000a\u000a[\u000a    ImplementedAs=NavigatorContentUtils\u000a] partial interface Navigator {\u000a    [RuntimeEnabled=NavigatorContentUtils, RaisesException] void registerProtocolHandler(DOMString scheme, DOMString url, DOMString title);\u000a    [RuntimeEnabled=CustomSchemeHandler, RaisesException] DOMString isProtocolHandlerRegistered(DOMString scheme, DOMString url);\u000a    [RuntimeEnabled=NavigatorContentUtils, RaisesException] void unregisterProtocolHandler(DOMString scheme, DOMString url);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/netinfo/NavigatorNetworkInformation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/netinfo/NavigatorNetworkInformation.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=NavigatorNetworkInformation\u000a] partial interface Navigator {\u000a    [MeasureAs=NetInfo] readonly attribute NetworkInformation connection;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/netinfo/NetworkInformation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/netinfo/NetworkInformation.idl"},specUrls:["https://wicg.github.io/netinfo/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/netinfo/#the-networkinformation-interface\u000a\u000aenum ConnectionType {\u000a    \"cellular\",\u000a    \"bluetooth\",\u000a    \"ethernet\",\u000a    \"wifi\",\u000a    \"wimax\",\u000a    \"other\",\u000a    \"none\",\u000a    \"unknown\"\u000a};\u000a\u000aenum EffectiveConnectionType {\u000a    \"slow-2g\",\u000a    \"2g\",\u000a    \"3g\",\u000a    \"4g\"\u000a};\u000a\u000atypedef unrestricted double Megabit;\u000atypedef unsigned long long Milliseconds;\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Exposed=(Window,Worker)\u000a] interface NetworkInformation : EventTarget {\u000a    [RuntimeEnabled=NetInfoDownlinkMax, MeasureAs=NetInfoType] readonly attribute ConnectionType type;\u000a    [RuntimeEnabled=NetInfoDownlinkMax, MeasureAs=NetInfoDownlinkMax] readonly attribute Megabit downlinkMax;\u000a    [RuntimeEnabled=NetInfoEffectiveType, MeasureAs=NetInfoOnChange] attribute EventHandler onchange;\u000a    [RuntimeEnabled=NetInfoDownlinkMax, MeasureAs=NetInfoOnTypeChange] attribute EventHandler ontypechange;\u000a    [RuntimeEnabled=NetInfoEffectiveType, MeasureAs=NetInfoEffectiveType] readonly attribute EffectiveConnectionType effectiveType;\u000a    [RuntimeEnabled=NetInfoRtt, MeasureAs=NetInfoRtt] readonly attribute Milliseconds rtt;\u000a    [RuntimeEnabled=NetInfoDownlink, MeasureAs=NetInfoDownlink] readonly attribute Megabit downlink;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/netinfo/WorkerNavigatorNetworkInformation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/netinfo/WorkerNavigatorNetworkInformation.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    Exposed=Worker,\u000a    ImplementedAs=WorkerNavigatorNetworkInformation\u000a] partial interface WorkerNavigator {\u000a    [CallWith=ScriptState, MeasureAs=NetInfo] readonly attribute NetworkInformation connection;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/nfc/MessageCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/nfc/MessageCallback.idl"},specUrls:["https://w3c.github.io/web-nfc/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-nfc/#idl-def-messagecallback\u000a\u000acallback interface MessageCallback {\u000a    void handleMessage(NFCMessage message);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/nfc/NFCMessage.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/nfc/NFCMessage.idl"},specUrls:["https://w3c.github.io/web-nfc/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-nfc/#the-nfcmessage-dictionary\u000a\u000adictionary NFCMessage {\u000a    sequence<NFCRecord> records;\u000a    USVString url;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/nfc/NFC.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/nfc/NFC.idl"},specUrls:["https://w3c.github.io/web-nfc/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-nfc/#the-nfc-interface\u000a\u000atypedef (DOMString or ArrayBuffer or NFCMessage) NFCPushMessage;\u000a\u000a[\u000a  RuntimeEnabled=WebNFC\u000a] interface NFC {\u000a    [CallWith=ScriptState, MeasureAs=WebNFCPush] Promise<void> push (NFCPushMessage message, optional NFCPushOptions options);\u000a    [CallWith=ScriptState, MeasureAs=WebNFCCancelPush] Promise<void> cancelPush (optional NFCPushTarget target = \"any\");\u000a    [CallWith=ScriptState, MeasureAs=WebNFCWatch] Promise<long> watch (MessageCallback callback, optional NFCWatchOptions options);\u000a    [CallWith=ScriptState, MeasureAs=WebNFCCancelWatch] Promise<void> cancelWatch (optional long id);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/nfc/NFCPushOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/nfc/NFCPushOptions.idl"},specUrls:["https://w3c.github.io/web-nfc/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-nfc/#the-nfcpushoptions-dictionary\u000a\u000aenum NFCPushTarget { \"tag\", \"peer\", \"any\" };\u000a\u000adictionary NFCPushOptions {\u000a    NFCPushTarget target = \"any\";\u000a    unrestricted double timeout; // in ms\u000a    boolean ignoreRead = true;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/nfc/NFCRecord.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/nfc/NFCRecord.idl"},specUrls:["https://w3c.github.io/web-nfc/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-nfc/#the-nfcrecord-dictionary\u000a\u000aenum NFCRecordType { \"empty\", \"text\", \"url\", \"json\", \"opaque\" };\u000a\u000a// TODO(shalamov): This is blocked by https://crbug.com/524424\u000a// typedef (DOMString or unrestricted double or ArrayBuffer or Dictionary) NFCRecordData;\u000atypedef any NFCRecordData;\u000a\u000adictionary NFCRecord {\u000a    NFCRecordType recordType;\u000a    USVString mediaType;\u000a    NFCRecordData data;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/nfc/NFCWatchOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/nfc/NFCWatchOptions.idl"},specUrls:["https://w3c.github.io/web-nfc/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-nfc/#the-nfcwatchoptions-dictionary\u000a\u000aenum NFCWatchMode { \"web-nfc-only\", \"any\" };\u000a\u000adictionary NFCWatchOptions {\u000a    USVString url = \"\";\u000a    NFCRecordType? recordType;\u000a    USVString mediaType = \"\";\u000a    NFCWatchMode mode = \"web-nfc-only\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/nfc/NavigatorNFC.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/nfc/NavigatorNFC.idl"},specUrls:["https://w3c.github.io/web-nfc/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/web-nfc/#extensions-to-the-navigator-interface\u000a\u000a[\u000a    ImplementedAs=NavigatorNFC,\u000a    RuntimeEnabled=WebNFC\u000a] partial interface Navigator {\u000a    readonly attribute NFC nfc;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/notifications/GetNotificationOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/notifications/GetNotificationOptions.idl"},specUrls:["https://notifications.spec.whatwg.org/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://notifications.spec.whatwg.org/#service-worker-api\u000a\u000adictionary GetNotificationOptions {\u000a    DOMString tag = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/notifications/Notification.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/notifications/Notification.idl"},specUrls:["https://notifications.spec.whatwg.org/","https://notifications.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2009 Google Inc. All rights reserved.\u000a * Copyright (C) 2011, 2012 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://notifications.spec.whatwg.org/#enumdef-notificationpermission\u000a\u000aenum NotificationPermission {\u000a    \"default\",\u000a    \"denied\",\u000a    \"granted\"\u000a};\u000a\u000a// https://notifications.spec.whatwg.org/#api\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    ConstructorCallWith=ExecutionContext,\u000a    Constructor(DOMString title, optional NotificationOptions options),\u000a    DependentLifetime,\u000a    Exposed=(Window,Worker),\u000a    MeasureAs=NotificationCreated,\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=Notifications\u000a] interface Notification : EventTarget {\u000a    [CallWith=ExecutionContext, MeasureAs=NotificationPermission] static readonly attribute NotificationPermission permission;\u000a\u000a    [CallWith=ScriptState, Exposed=Window, MeasureAs=NotificationPermissionRequested] static Promise<NotificationPermission> requestPermission(optional NotificationPermissionCallback deprecatedCallback);\u000a\u000a    static readonly attribute unsigned long maxActions;\u000a\u000a    attribute EventHandler onclick;\u000a    [MeasureAs=NotificationShowEvent] attribute EventHandler onshow;\u000a    attribute EventHandler onerror;\u000a    [MeasureAs=NotificationCloseEvent] attribute EventHandler onclose;\u000a\u000a    readonly attribute DOMString title;\u000a    readonly attribute DOMString dir;\u000a    readonly attribute DOMString lang;\u000a    readonly attribute DOMString body;\u000a    readonly attribute DOMString tag;\u000a    [RuntimeEnabled=NotificationContentImage] readonly attribute USVString image;\u000a    readonly attribute USVString icon;\u000a    readonly attribute USVString badge;\u000a\u000a    [SameObject, SaveSameObject] readonly attribute FrozenArray<unsigned long> vibrate;\u000a    readonly attribute DOMTimeStamp timestamp;\u000a    readonly attribute boolean renotify;\u000a    readonly attribute boolean silent;\u000a    readonly attribute boolean requireInteraction;\u000a    [CallWith=ScriptState, SameObject, SaveSameObject] readonly attribute any data;\u000a    [CallWith=ScriptState, SameObject, SaveSameObject] readonly attribute FrozenArray<NotificationAction> actions;\u000a\u000a    [MeasureAs=NotificationClosed] void close();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/notifications/NotificationAction.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/notifications/NotificationAction.idl"},specUrls:["https://notifications.spec.whatwg.org/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://notifications.spec.whatwg.org/#dictdef-notificationaction\u000a\u000a[RuntimeEnabled=NotificationInlineReplies] enum NotificationActionType {\u000a    \"button\",\u000a    \"text\"\u000a};\u000a\u000adictionary NotificationAction {\u000a    [RuntimeEnabled=NotificationInlineReplies] NotificationActionType type = \"button\";\u000a    required DOMString action;\u000a    required DOMString title;\u000a    USVString icon;\u000a    [RuntimeEnabled=NotificationInlineReplies] DOMString? placeholder = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/notifications/NotificationEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/notifications/NotificationEvent.idl"},specUrls:["https://notifications.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://notifications.spec.whatwg.org/#service-worker-api\u000a\u000a[\u000a    Constructor(DOMString type, NotificationEventInit eventInitDict),\u000a    Exposed=ServiceWorker,\u000a    RuntimeEnabled=Notifications\u000a] interface NotificationEvent : ExtendableEvent {\u000a    [ImplementedAs=getNotification] readonly attribute Notification notification;\u000a    readonly attribute DOMString action;\u000a    [RuntimeEnabled=NotificationInlineReplies] readonly attribute DOMString? reply;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/notifications/NotificationEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/notifications/NotificationEventInit.idl"},specUrls:["https://notifications.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://notifications.spec.whatwg.org/#notificationevent\u000a\u000adictionary NotificationEventInit : ExtendableEventInit {\u000a    required Notification notification;\u000a    DOMString action = \"\";\u000a    [RuntimeEnabled=NotificationInlineReplies] DOMString? reply = \"\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/notifications/NotificationOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/notifications/NotificationOptions.idl"},specUrls:["https://notifications.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://notifications.spec.whatwg.org/#api\u000a\u000aenum NotificationDirection {\u000a    \"auto\",\u000a    \"ltr\",\u000a    \"rtl\"\u000a};\u000a\u000adictionary NotificationOptions {\u000a    NotificationDirection dir = \"auto\";\u000a    DOMString lang = \"\";\u000a    DOMString body = \"\";\u000a    DOMString tag = \"\";\u000a    [RuntimeEnabled=NotificationContentImage] USVString image;\u000a    USVString icon;\u000a    USVString badge;\u000a    // TODO(sh919.park): vibrate should be ([Clamp] unsigned long or sequence<unsigned long>)\u000a    (unsigned long or sequence<unsigned long>) vibrate;\u000a    DOMTimeStamp timestamp;\u000a    boolean renotify = false;\u000a    boolean silent = false;\u000a    boolean requireInteraction = false;\u000a    any data = null;\u000a    sequence<NotificationAction> actions = [];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/notifications/NotificationPermissionCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/notifications/NotificationPermissionCallback.idl"},specUrls:["https://notifications.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2012 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://notifications.spec.whatwg.org/#api\u000a\u000acallback interface NotificationPermissionCallback {\u000a    void handleEvent(DOMString permission);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/notifications/ServiceWorkerGlobalScopeNotifications.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/notifications/ServiceWorkerGlobalScopeNotifications.idl"},specUrls:["https://notifications.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://notifications.spec.whatwg.org/#service-worker-api\u000a\u000a[\u000a    ImplementedAs=ServiceWorkerGlobalScopeNotifications,\u000a    RuntimeEnabled=Notifications\u000a] partial interface ServiceWorkerGlobalScope {\u000a    attribute EventHandler onnotificationclick;\u000a    attribute EventHandler onnotificationclose;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/notifications/ServiceWorkerRegistrationNotifications.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/notifications/ServiceWorkerRegistrationNotifications.idl"},specUrls:["https://notifications.spec.whatwg.org/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://notifications.spec.whatwg.org/#service-worker-api\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    ImplementedAs=ServiceWorkerRegistrationNotifications,\u000a    RuntimeEnabled=Notifications\u000a] partial interface ServiceWorkerRegistration {\u000a    [CallWith=ScriptState, RaisesException] Promise showNotification(DOMString title, optional NotificationOptions options);\u000a    [CallWith=ScriptState] Promise<sequence<Notification>> getNotifications(optional GetNotificationOptions filter);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/AbortPaymentEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/AbortPaymentEvent.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/w3c/payment-handler/pull/170\u000a\u000a[\u000a    RuntimeEnabled=PaymentApp,\u000a    Constructor(DOMString type, ExtendableEventInit eventInitDict),\u000a    Exposed=ServiceWorker\u000a] interface AbortPaymentEvent : ExtendableEvent {\u000a    [CallWith=ScriptState, RaisesException] void respondWith(Promise<boolean> paymentAbortedResponse);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/AndroidPayMethodData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/AndroidPayMethodData.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://developers.google.com/web/fundamentals/getting-started/primers/payment-request/android-pay\u000a// TODO(rouslan): Stop parsing Android Pay data. http://crbug.com/620173\u000a\u000adictionary AndroidPayMethodData {\u000a    DOMString environment;\u000a    DOMString merchantName;\u000a    DOMString merchantId;\u000a    sequence<DOMString> allowedCardNetworks;\u000a    AndroidPayTokenization paymentMethodTokenizationParameters;\u000a    DOMString minGooglePlayServicesVersion;\u000a    long apiVersion;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/AndroidPayTokenization.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/AndroidPayTokenization.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://developers.google.com/web/fundamentals/getting-started/primers/payment-request/android-pay\u000a// TODO(rouslan): Stop parsing Android Pay data. http://crbug.com/620173\u000a\u000adictionary AndroidPayTokenization {\u000a    DOMString tokenizationType;\u000a    Dictionary parameters;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/BasicCardRequest.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/BasicCardRequest.idl"},specUrls:["https://w3c.github.io/webpayments-methods-card/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webpayments-methods-card/#basiccardrequest\u000a\u000aenum BasicCardType {\u000a    \"credit\",\u000a    \"debit\",\u000a    \"prepaid\"\u000a};\u000a\u000adictionary BasicCardRequest {\u000a    sequence<DOMString> supportedNetworks;\u000a    sequence<BasicCardType> supportedTypes;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/CanMakePaymentEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/CanMakePaymentEvent.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/w3c/payment-handler/pull/170\u000a\u000a[\u000a    RuntimeEnabled=PaymentApp,\u000a    Constructor(DOMString type, CanMakePaymentEventInit eventInitDict),\u000a    Exposed=ServiceWorker\u000a] interface CanMakePaymentEvent : ExtendableEvent {\u000a    readonly attribute USVString topLevelOrigin;\u000a    readonly attribute USVString paymentRequestOrigin;\u000a    readonly attribute FrozenArray<PaymentMethodData> methodData;\u000a    readonly attribute FrozenArray<PaymentDetailsModifier> modifiers;\u000a\u000a    [CallWith=ScriptState, RaisesException] void respondWith(Promise<boolean> canMakePaymentResponse);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/CanMakePaymentEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/CanMakePaymentEventInit.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/w3c/payment-handler/pull/170\u000a\u000adictionary CanMakePaymentEventInit : ExtendableEventInit {\u000a    USVString topLevelOrigin;\u000a    USVString paymentRequestOrigin;\u000a    sequence<PaymentMethodData> methodData;\u000a    sequence<PaymentDetailsModifier> modifiers;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/HTMLIFrameElementPayments.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/HTMLIFrameElementPayments.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#paymentrequest-and-iframes\u000a\u000a[\u000a    ImplementedAs=HTMLIFrameElementPayments,\u000a    RuntimeEnabled=PaymentRequest\u000a] partial interface HTMLIFrameElement {\u000a    [CEReactions, Reflect] attribute boolean allowPaymentRequest;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/ImageObject.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/ImageObject.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://github.com/w3c/payment-handler/pull/174/files/6e6768c423e24719cb0e592cd98614f052e52a78\u000a\u000adictionary ImageObject {\u000a    // Note that the src could be relative path to the service worker\u000a    // scope.\u000a    required USVString src;\u000a    DOMString sizes;\u000a    DOMString type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentAddress.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentAddress.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#paymentaddress-interface\u000a\u000a[\u000a    RuntimeEnabled=PaymentRequest\u000a] interface PaymentAddress {\u000a    serializer = {attribute};\u000a    readonly attribute DOMString country;\u000a    readonly attribute FrozenArray<DOMString> addressLine;\u000a    readonly attribute DOMString region;\u000a    readonly attribute DOMString city;\u000a    readonly attribute DOMString dependentLocality;\u000a    readonly attribute DOMString postalCode;\u000a    readonly attribute DOMString sortingCode;\u000a    readonly attribute DOMString languageCode;\u000a    readonly attribute DOMString organization;\u000a    readonly attribute DOMString recipient;\u000a    readonly attribute DOMString phone;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentAppServiceWorkerGlobalScope.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentAppServiceWorkerGlobalScope.idl"},specUrls:["https://w3c.github.io/webpayments-payment-apps-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webpayments-payment-apps-api/#idl-def-serviceworkerglobalscope-partial-1\u000a\u000a[\u000a    ImplementedAs=PaymentAppServiceWorkerGlobalScope,\u000a    RuntimeEnabled=PaymentApp\u000a] partial interface ServiceWorkerGlobalScope {\u000a    attribute EventHandler onabortpayment;\u000a    attribute EventHandler oncanmakepayment;\u000a    attribute EventHandler onpaymentrequest;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentAppServiceWorkerRegistration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentAppServiceWorkerRegistration.idl"},specUrls:["https://w3c.github.io/webpayments-payment-apps-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webpayments-payment-apps-api/#idl-def-serviceworkerregistration-partial-1\u000a\u000a[\u000a    ImplementedAs=PaymentAppServiceWorkerRegistration,\u000a    RuntimeEnabled=PaymentApp\u000a] partial interface ServiceWorkerRegistration {\u000a    [CallWith=ScriptState] readonly attribute PaymentManager paymentManager;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentCurrencyAmount.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentCurrencyAmount.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#paymentcurrencyamount\u000a\u000adictionary PaymentCurrencyAmount {\u000a    required DOMString currency;\u000a    required DOMString value;\u000a    DOMString currencySystem = \"urn:iso:std:iso:4217\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentDetailsBase.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentDetailsBase.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#paymentdetailsbase-dictionary\u000a\u000adictionary PaymentDetailsBase {\u000a    sequence<PaymentItem> displayItems;\u000a    sequence<PaymentShippingOption> shippingOptions;\u000a    sequence<PaymentDetailsModifier> modifiers;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentDetailsInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentDetailsInit.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#paymentdetailsinit-dictionary\u000a\u000adictionary PaymentDetailsInit : PaymentDetailsBase {\u000a    DOMString id;\u000a    required PaymentItem total;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentDetailsModifier.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentDetailsModifier.idl"},specUrls:["https://w3c.github.io/browser-payment-api/","https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#idl-def-paymentdetailsmodifier\u000a\u000adictionary PaymentDetailsModifier {\u000a    // TODO(zino): The supportedMethods's type was changed from\u000a    // sequence<DOMString> to DOMString[1][2]. But we are not sure if we can\u000a    // remove them now. So, we will define it as union type of DOMString and\u000a    // sequence<DOMString> temporarily for now.\u000a    // Please see: https://crbug.com/754779\u000a    //\u000a    // [1] https://github.com/w3c/browser-payment-api/pull/551\u000a    // [2] https://w3c.github.io/browser-payment-api/#paymentdetailsmodifier-dictionary\u000a    required (DOMString or sequence<DOMString>) supportedMethods;\u000a    PaymentItem total;\u000a    sequence<PaymentItem> additionalDisplayItems;\u000a    [RuntimeEnabled=PaymentDetailsModifierData] object data;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentDetailsUpdate.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentDetailsUpdate.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#paymentdetailsupdate-dictionary\u000a\u000adictionary PaymentDetailsUpdate : PaymentDetailsBase {\u000a    DOMString error;\u000a    PaymentItem total;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentHandlerResponse.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentHandlerResponse.idl"},specUrls:["https://w3c.github.io/payment-handler/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/payment-handler/#paymenthandlerresponse-dictionary\u000a\u000adictionary PaymentHandlerResponse {\u000a    DOMString methodName;\u000a    object details;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentInstrument.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentInstrument.idl"},specUrls:["https://w3c.github.io/payment-handler/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/payment-handler/#paymentinstrument-dictionary\u000a\u000adictionary PaymentInstrument {\u000a    required DOMString name;\u000a    sequence<ImageObject> icons;\u000a    sequence<DOMString> enabledMethods;\u000a    object capabilities;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentInstruments.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentInstruments.idl"},specUrls:["https://w3c.github.io/webpayments-payment-apps-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webpayments-payment-apps-api/#payment-instruments\u000a\u000a[\u000a    RuntimeEnabled=PaymentApp,\u000a    Exposed=(Window,Worker)\u000a] interface PaymentInstruments {\u000a    [CallWith=ScriptState, ImplementedAs=deleteInstrument] Promise<boolean> delete(DOMString instrumentKey);\u000a    [CallWith=ScriptState] Promise<PaymentInstrument> get(DOMString instrumentKey);\u000a    [CallWith=ScriptState] Promise<sequence<DOMString>> keys();\u000a    [CallWith=ScriptState] Promise<boolean> has(DOMString instrumentKey);\u000a    [CallWith=ScriptState, RaisesException] Promise<void> set(DOMString instrumentKey, PaymentInstrument details);\u000a    [CallWith=ScriptState] Promise<void> clear();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentItem.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentItem.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#paymentitem-dictionary\u000a\u000adictionary PaymentItem {\u000a    required DOMString label;\u000a    required PaymentCurrencyAmount amount;\u000a    boolean pending = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentManager.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentManager.idl"},specUrls:["https://w3c.github.io/webpayments-payment-apps-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webpayments-payment-apps-api/#idl-def-paymentappmanager\u000a\u000a[\u000a    RuntimeEnabled=PaymentApp,\u000a    ConstructorCallWith=ExecutionContext,\u000a    DependentLifetime\u000a] interface PaymentManager {\u000a    readonly attribute PaymentInstruments instruments;\u000a    attribute DOMString userHint;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentMethodData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentMethodData.idl"},specUrls:["https://w3c.github.io/browser-payment-api/","https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#idl-def-paymentmethoddata\u000a\u000adictionary PaymentMethodData {\u000a    // TODO(zino): The supportedMethods's type was changed from\u000a    // sequence<DOMString> to DOMString[1][2]. But we are not sure if we can\u000a    // remove them now. So, we will define it as union type of DOMString and\u000a    // sequence<DOMString> temporarily for now.\u000a    // Please see: https://crbug.com/754779\u000a    //\u000a    // [1] https://github.com/w3c/browser-payment-api/pull/551\u000a    // [2] https://w3c.github.io/browser-payment-api/#paymentdetailsmodifier-dictionary\u000a    required (DOMString or sequence<DOMString>) supportedMethods;\u000a    object data;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentOptions.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#paymentoptions-dictionary\u000a\u000aenum PaymentShippingType {\u000a    \"shipping\",\u000a    \"delivery\",\u000a    \"pickup\"\u000a};\u000a\u000adictionary PaymentOptions {\u000a    boolean requestPayerName = false;\u000a    boolean requestPayerEmail = false;\u000a    boolean requestPayerPhone = false;\u000a    boolean requestShipping = false;\u000a    PaymentShippingType shippingType = \"shipping\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentRequest.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentRequest.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#paymentrequest-interface\u000a// http://crbug.com/587995\u000a\u000a[\u000a    RuntimeEnabled=PaymentRequest,\u000a    Constructor(sequence<PaymentMethodData> methodData, PaymentDetailsInit details, optional PaymentOptions options),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor,\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface PaymentRequest : EventTarget {\u000a    [CallWith=ScriptState] Promise<PaymentResponse> show();\u000a    [CallWith=ScriptState] Promise<void> abort();\u000a    [CallWith=ScriptState] Promise<boolean> canMakePayment();\u000a\u000a    readonly attribute DOMString id;\u000a    [ImplementedAs=getShippingAddress] readonly attribute PaymentAddress? shippingAddress;\u000a    readonly attribute DOMString? shippingOption;\u000a    readonly attribute PaymentShippingType? shippingType;\u000a\u000a    attribute EventHandler onshippingaddresschange;\u000a    attribute EventHandler onshippingoptionchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentRequestEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentRequestEvent.idl"},specUrls:["https://w3c.github.io/payment-handler/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/payment-handler/#the-paymentrequestevent\u000a\u000a[\u000a    RuntimeEnabled=PaymentApp,\u000a    Constructor(DOMString type, PaymentRequestEventInit eventInitDict),\u000a    Exposed=ServiceWorker\u000a] interface PaymentRequestEvent : ExtendableEvent {\u000a    readonly attribute USVString topLevelOrigin;\u000a    readonly attribute USVString paymentRequestOrigin;\u000a    readonly attribute DOMString paymentRequestId;\u000a    readonly attribute FrozenArray<PaymentMethodData> methodData;\u000a    [CallWith=ScriptState] readonly attribute object total;\u000a    readonly attribute FrozenArray<PaymentDetailsModifier> modifiers;\u000a    readonly attribute DOMString instrumentKey;\u000a\u000a    [CallWith=ScriptState] Promise<WindowClient?> openWindow(USVString url);\u000a    [CallWith=ScriptState, RaisesException] void respondWith(Promise<PaymentResponse> response);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentRequestEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentRequestEventInit.idl"},specUrls:["https://w3c.github.io/payment-handler/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/payment-handler/#paymentrequesteventinit-dictionary\u000a\u000adictionary PaymentRequestEventInit : ExtendableEventInit {\u000a    USVString topLevelOrigin;\u000a    USVString paymentRequestOrigin;\u000a    DOMString paymentRequestId;\u000a    sequence<PaymentMethodData> methodData;\u000a    PaymentCurrencyAmount total;\u000a    sequence<PaymentDetailsModifier> modifiers;\u000a    DOMString instrumentKey;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentRequestUpdateEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentRequestUpdateEvent.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#idl-def-paymentrequestupdateevent\u000a\u000a[\u000a    RuntimeEnabled=PaymentRequest,\u000a    Constructor(DOMString type, optional PaymentRequestUpdateEventInit eventInitDict),\u000a    ConstructorCallWith=ExecutionContext\u000a] interface PaymentRequestUpdateEvent : Event {\u000a    [CallWith=ScriptState,RaisesException] void updateWith(Promise<PaymentDetailsUpdate> detailsPromise);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentRequestUpdateEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentRequestUpdateEventInit.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#idl-def-paymentrequestupdateevent\u000a\u000adictionary PaymentRequestUpdateEventInit : EventInit {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentResponse.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentResponse.idl"},specUrls:["https://w3c.github.io/payment-request/","https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/payment-request/#dom-paymentcomplete\u000a\u000aenum PaymentComplete {\u000a    \"fail\",\u000a    \"success\",\u000a    \"unknown\"\u000a};\u000a\u000a// https://w3c.github.io/browser-payment-api/#paymentresponse-interface\u000a\u000a[\u000a    RuntimeEnabled=PaymentRequest\u000a] interface PaymentResponse {\u000a    serializer = {attribute};\u000a\u000a    readonly attribute DOMString requestId;\u000a    readonly attribute DOMString methodName;\u000a    readonly attribute DOMString? payerName;\u000a    readonly attribute DOMString? payerEmail;\u000a    readonly attribute DOMString? payerPhone;\u000a    [CallWith=ScriptState, RaisesException] readonly attribute object details;\u000a    readonly attribute PaymentAddress? shippingAddress;\u000a    readonly attribute DOMString? shippingOption;\u000a\u000a    [CallWith=ScriptState] Promise<void> complete(optional PaymentComplete paymentResult = \"unknown\");\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/payments/PaymentShippingOption.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/payments/PaymentShippingOption.idl"},specUrls:["https://w3c.github.io/browser-payment-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/browser-payment-api/#paymentshippingoption-dictionary\u000a\u000adictionary PaymentShippingOption {\u000a    required DOMString id;\u000a    required DOMString label;\u000a    required PaymentCurrencyAmount amount;\u000a    boolean selected = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCAnswerOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCAnswerOptions.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#offer-answer-options\u000a\u000adictionary RTCAnswerOptions : RTCOfferAnswerOptions {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCCertificate.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCCertificate.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"/*\u000a * Copyright (C) 2015 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer\u000a *    in the documentation and/or other materials provided with the\u000a *    distribution.\u000a * 3. Neither the name of Google Inc. nor the names of its contributors\u000a *    may be used to endorse or promote products derived from this\u000a *    software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtccertificate-interface\u000ainterface RTCCertificate {\u000a    // The expiration time in ms relative to epoch, 1970-01-01T00:00:00Z.\u000a    readonly attribute DOMTimeStamp expires;\u000a    sequence<RTCDtlsFingerprint> getFingerprints();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCConfiguration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCConfiguration.idl"},specUrls:["https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcicetransportpolicy-enum\u000a\u000aenum RTCIceTransportPolicy {\u000a    \"relay\",\u000a    \"all\"\u000a};\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcbundlepolicy-enum\u000a\u000aenum RTCBundlePolicy {\u000a    \"balanced\",\u000a    \"max-compat\",\u000a    \"max-bundle\"\u000a};\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcrtcpmuxpolicy-enum\u000a\u000aenum RTCRtcpMuxPolicy {\u000a    \"negotiate\",\u000a    \"require\"\u000a};\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcconfiguration-dictionary\u000a\u000adictionary RTCConfiguration {\u000a    sequence<RTCIceServer> iceServers;\u000a    // TODO(foolip): |iceTransportPolicy| default should be \"all\", but it is\u000a    // omitted to allow fallback to |iceTransports| if not specified.\u000a    RTCIceTransportPolicy iceTransportPolicy;\u000a    // TODO(foolip): |iceTransports| is not in the spec.\u000a    // https://crbug.com/659131\u000a    RTCIceTransportPolicy iceTransports;\u000a    RTCBundlePolicy bundlePolicy = \"balanced\";\u000a    RTCRtcpMuxPolicy rtcpMuxPolicy = \"require\";\u000a    // TODO(foolip): DOMString peerIdentity;\u000a    sequence<RTCCertificate> certificates;\u000a    [EnforceRange] octet iceCandidatePoolSize = 0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCDTMFSender.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCDTMFSender.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY GOOGLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL GOOGLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    NoInterfaceObject,\u000a    DependentLifetime\u000a] interface RTCDTMFSender : EventTarget {\u000a    readonly attribute boolean canInsertDTMF;\u000a    readonly attribute MediaStreamTrack track;\u000a    readonly attribute DOMString toneBuffer;\u000a    readonly attribute long duration;\u000a    readonly attribute long interToneGap;\u000a\u000a    [RaisesException] void insertDTMF(DOMString tones, optional long duration, optional long interToneGap);\u000a\u000a    attribute EventHandler ontonechange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCDTMFToneChangeEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCDTMFToneChangeEvent.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY GOOGLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL GOOGLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcdtmftonechangeevent\u000a\u000a[\u000a    NoInterfaceObject,\u000a    Constructor(DOMString type, RTCDTMFToneChangeEventInit eventInitDict)\u000a] interface RTCDTMFToneChangeEvent : Event {\u000a    readonly attribute DOMString tone;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCDTMFToneChangeEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCDTMFToneChangeEventInit.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcdtmftonechangeevent\u000a\u000adictionary RTCDTMFToneChangeEventInit : EventInit {\u000a    DOMString tone;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCDataChannel.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCDataChannel.idl"},specUrls:["https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webrtc-pc/#idl-def-rtcdatachannelstate\u000a\u000aenum RTCDataChannelState {\u000a    \"connecting\",\u000a    \"open\",\u000a    \"closing\",\u000a    \"closed\"\u000a};\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcdatachannel\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface RTCDataChannel : EventTarget {\u000a    readonly attribute USVString label;\u000a    readonly attribute boolean ordered;\u000a    // TODO(foolip): |maxRetransmitTime| is called |maxPacketLifeTime| in the\u000a    // spec and both it and |maxRetransmits| are nullable.\u000a    [Measure] readonly attribute unsigned short maxRetransmitTime;\u000a    [Measure] readonly attribute unsigned short maxRetransmits;\u000a    readonly attribute USVString protocol;\u000a    readonly attribute boolean negotiated;\u000a    readonly attribute unsigned short id;\u000a    readonly attribute RTCDataChannelState readyState;\u000a    readonly attribute unsigned long bufferedAmount;\u000a             attribute unsigned long bufferedAmountLowThreshold;\u000a             attribute EventHandler onopen;\u000a             attribute EventHandler onbufferedamountlow;\u000a             attribute EventHandler onerror;\u000a             attribute EventHandler onclose;\u000a    void close();\u000a             attribute EventHandler onmessage;\u000a    [RaisesException=Setter] attribute DOMString binaryType;\u000a    // TODO(foolip): |data| should be USVString.\u000a    [RaisesException] void send(DOMString data);\u000a    [RaisesException] void send(Blob data);\u000a    [RaisesException] void send(ArrayBuffer data);\u000a    [RaisesException] void send(ArrayBufferView data);\u000a\u000a    // Non-standard APIs\u000a    [Measure] readonly attribute boolean reliable;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCDataChannelEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCDataChannelEvent.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcdatachannelevent\u000a\u000a[\u000a    Constructor(DOMString type, RTCDataChannelEventInit eventInitDict)\u000a] interface RTCDataChannelEvent : Event {\u000a    readonly attribute RTCDataChannel channel;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCDataChannelEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCDataChannelEventInit.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#idl-def-rtcdatachanneleventinit\u000a\u000adictionary RTCDataChannelEventInit : EventInit {\u000a    required RTCDataChannel channel;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCDataChannelInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCDataChannelInit.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#idl-def-rtcdatachannelinit\u000a\u000adictionary RTCDataChannelInit {\u000a    boolean ordered = true;\u000a    // TODO(guidou): Rename |maxRetransmitTime| to |maxPacketLifeTime|.\u000a    // https://crbug.com/696681\u000a    unsigned short maxRetransmitTime;\u000a    unsigned short maxRetransmits;\u000a    USVString protocol = \"\";\u000a    boolean negotiated = false;\u000a    [EnforceRange] unsigned short id;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCDtlsFingerprint.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCDtlsFingerprint.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcdtlsfingerprint*\u000adictionary RTCDtlsFingerprint {\u000a    DOMString algorithm;\u000a    DOMString value;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCIceCandidate.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCIceCandidate.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer\u000a *    in the documentation and/or other materials provided with the\u000a *    distribution.\u000a * 3. Neither the name of Google Inc. nor the names of its contributors\u000a *    may be used to endorse or promote products derived from this\u000a *    software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    Constructor(RTCIceCandidateInit candidateInitDict),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor\u000a] interface RTCIceCandidate {\u000a    attribute DOMString candidate;\u000a    attribute DOMString sdpMid;\u000a    attribute unsigned short sdpMLineIndex;\u000a    serializer = {attribute};\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCIceCandidateInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCIceCandidateInit.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#idl-def-rtcicecandidateinit\u000a\u000adictionary RTCIceCandidateInit {\u000a    DOMString candidate;\u000a    DOMString sdpMid;\u000a    unsigned short sdpMLineIndex;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCIceServer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCIceServer.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtciceserver-dictionary\u000a\u000adictionary RTCIceServer {\u000a    // TODO(foolip): |urls| should be required and |url| is not in the spec.\u000a    // https://crbug.com/659133\u000a    (DOMString or sequence<DOMString>) urls;\u000a    DOMString url;\u000a    DOMString username;\u000a    DOMString credential;\u000a    // TODO(foolip): RTCIceCredentialType credentialType = \"password\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCLegacyStatsReport.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCLegacyStatsReport.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface RTCLegacyStatsReport {\u000a    readonly attribute Date timestamp;\u000a    readonly attribute DOMString id;\u000a    readonly attribute DOMString type;\u000a    DOMString stat(DOMString name);\u000a    sequence<DOMString> names();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCOfferAnswerOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCOfferAnswerOptions.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#offer-answer-options\u000a\u000adictionary RTCOfferAnswerOptions {\u000a    boolean voiceActivityDetection = true;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCOfferOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCOfferOptions.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#offer-answer-options\u000a\u000adictionary RTCOfferOptions : RTCOfferAnswerOptions {\u000a    boolean iceRestart = false;\u000a\u000a    // TODO(guidou): Deprecate the offerToReceive fields depending on the\u000a    // outcome of https://github.com/w3c/webrtc-pc/issues/709\u000a    long offerToReceiveVideo;\u000a    long offerToReceiveAudio;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCPeerConnection.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCPeerConnection.idl"},specUrls:["https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/","https://w3c.github.io/webrtc-pc/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer\u000a *    in the documentation and/or other materials provided with the\u000a *    distribution.\u000a * 3. Neither the name of Google Inc. nor the names of its contributors\u000a *    may be used to endorse or promote products derived from this\u000a *    software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webrtc-pc/#state-definitions\u000a\u000aenum RTCSignalingState {\u000a    \"stable\",\u000a    \"have-local-offer\",\u000a    \"have-remote-offer\",\u000a    \"have-local-pranswer\",\u000a    \"have-remote-pranswer\",\u000a    \"closed\"\u000a};\u000a\u000aenum RTCIceGatheringState {\u000a    \"new\",\u000a    \"gathering\",\u000a    \"complete\"\u000a};\u000a\u000aenum RTCIceConnectionState {\u000a    \"new\",\u000a    \"checking\",\u000a    \"connected\",\u000a    \"completed\",\u000a    \"failed\",\u000a    \"disconnected\",\u000a    \"closed\"\u000a};\u000a\u000a// https://w3c.github.io/webrtc-pc/#interface-definition\u000a\u000a// TODO(guidou): Many types are of the wrong type in this interface:\u000a//  * Dictionary -> specific dictionary types like RTCConfiguration\u000a//  * VoidCallback -> VoidFunction\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    // TODO(guidou): There should only be one constructor argument.\u000a    Constructor(optional RTCConfiguration configuration, optional Dictionary mediaConstraints),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor\u000a] interface RTCPeerConnection : EventTarget {\u000a    [CallWith=ScriptState] Promise<RTCSessionDescription> createOffer(optional RTCOfferOptions options);\u000a    [CallWith=ScriptState] Promise<RTCSessionDescription> createAnswer(optional RTCAnswerOptions options);\u000a    [CallWith=ScriptState] Promise<void> setLocalDescription(RTCSessionDescriptionInit description);\u000a    readonly attribute RTCSessionDescription? localDescription;\u000a    // readonly attribute RTCSessionDescription? currentLocalDescription;\u000a    // readonly attribute RTCSessionDescription? pendingLocalDescription;\u000a    [CallWith=ScriptState] Promise<void> setRemoteDescription(RTCSessionDescriptionInit description);\u000a    readonly attribute RTCSessionDescription? remoteDescription;\u000a    // readonly attribute RTCSessionDescription? currentRemoteDescription;\u000a    // readonly attribute RTCSessionDescription? pendingRemoteDescription;\u000a    [CallWith=ScriptState, MeasureAs=RTCPeerConnectionAddIceCandidatePromise] Promise<void> addIceCandidate ((RTCIceCandidateInit or RTCIceCandidate) candidate);\u000a    readonly attribute RTCSignalingState signalingState;\u000a    readonly attribute RTCIceGatheringState iceGatheringState;\u000a    readonly attribute RTCIceConnectionState iceConnectionState;\u000a    // readonly attribute boolean? canTrickleIceCandidates;\u000a    // RTCConfiguration getConfiguration();\u000a    [CallWith=ScriptState, RaisesException] void setConfiguration(RTCConfiguration configuration);\u000a    void close();\u000a    attribute EventHandler onnegotiationneeded;\u000a    attribute EventHandler onicecandidate;\u000a    attribute EventHandler onsignalingstatechange;\u000a    attribute EventHandler oniceconnectionstatechange;\u000a    attribute EventHandler onicegatheringstatechange;\u000a\u000a    // https://w3c.github.io/webrtc-pc/#legacy-interface-extensions\u000a    // These methods return Promise<void> because having Promise-based versions requires that all overloads return Promises.\u000a    [CallWith=ScriptState, RaisesException] Promise<void> createOffer(RTCSessionDescriptionCallback successCallback, RTCPeerConnectionErrorCallback failureCallback, optional Dictionary rtcOfferOptions);\u000a    // TODO(guidou): There should be no mediaConstraints argument.\u000a    [CallWith=ScriptState] Promise<void> createAnswer(RTCSessionDescriptionCallback successCallback, RTCPeerConnectionErrorCallback failureCallback, optional Dictionary mediaConstraints);\u000a    [CallWith=ScriptState] Promise<void> setLocalDescription(RTCSessionDescriptionInit description, VoidCallback successCallback, [Default=Undefined] optional RTCPeerConnectionErrorCallback failureCallback);\u000a    // TODO(guidou): The failureCallback argument should be non-optional.\u000a    [CallWith=ScriptState] Promise<void> setRemoteDescription(RTCSessionDescriptionInit description, VoidCallback successCallback, [Default=Undefined] optional RTCPeerConnectionErrorCallback failureCallback);\u000a    [CallWith=ScriptState, MeasureAs=RTCPeerConnectionAddIceCandidateLegacy] Promise<void> addIceCandidate((RTCIceCandidateInit or RTCIceCandidate) candidate, VoidCallback successCallback, RTCPeerConnectionErrorCallback failureCallback);\u000a\u000a    // TODO(guidou): The selector argument should the first (nullable,\u000a    // non-optional) argument, and there should be a third failureCallback\u000a    // argument.\u000a    [CallWith=ScriptState, LegacyInterfaceTypeChecking] Promise<void> getStats(RTCStatsCallback successCallback, optional MediaStreamTrack? selector);\u000a    // TODO(hbos): The spec has an optional |selector| argument that is not\u000a    // supported yet. There is a discussion about what to do with it (clarify\u000a    // spec, remove it or change it?): https://github.com/w3c/webrtc-stats/issues/116\u000a    [CallWith=ScriptState] Promise<RTCStatsReport> getStats();\u000a\u000a    // RTP Media API\u000a    // https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-getsenders\u000a    [RuntimeEnabled=RTCRtpSender] sequence<RTCRtpSender> getSenders();\u000a    // https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-getreceivers\u000a    sequence<RTCRtpReceiver> getReceivers();\u000a    // https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-addtrack\u000a    [RuntimeEnabled=RTCRtpSender, RaisesException] RTCRtpSender addTrack(MediaStreamTrack track, MediaStream... streams);\u000a    // https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-removetrack\u000a    [RuntimeEnabled=RTCRtpSender, RaisesException] void removeTrack(RTCRtpSender sender);\u000a    // https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-ontrack\u000a    [RuntimeEnabled=RTCRtpSender] attribute EventHandler ontrack;\u000a\u000a    // https://w3c.github.io/webrtc-pc/#peer-to-peer-data-api\u000a    [CallWith=ScriptState, RaisesException] RTCDataChannel createDataChannel(USVString label, optional RTCDataChannelInit dataChannelDict);\u000a    attribute EventHandler ondatachannel;\u000a\u000a    // Certificate management\u000a    // https://w3c.github.io/webrtc-pc/#sec.cert-mgmt\u000a    [RaisesException, CallWith=ScriptState] static Promise<RTCCertificate> generateCertificate(AlgorithmIdentifier keygenAlgorithm);\u000a\u000a    // Non-standard or removed from the spec:\u000a    [Measure] sequence<MediaStream> getLocalStreams();\u000a    [Measure] sequence<MediaStream> getRemoteStreams();\u000a    [Measure, CallWith=ScriptState, RaisesException] void addStream(MediaStream? stream, optional Dictionary mediaConstraints);\u000a    [Measure, RaisesException] void removeStream(MediaStream? stream);\u000a    [Measure, RaisesException] RTCDTMFSender createDTMFSender(MediaStreamTrack track);\u000a    attribute EventHandler onaddstream;\u000a    attribute EventHandler onremovestream;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCPeerConnectionErrorCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCPeerConnectionErrorCallback.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcpeerconnectionerrorcallback\u000a\u000acallback interface RTCPeerConnectionErrorCallback {\u000a    void handleEvent(DOMException exception);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCPeerConnectionIceEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCPeerConnectionIceEvent.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a[\u000a    Constructor(DOMString type, optional RTCPeerConnectionIceEventInit eventInitDict)\u000a] interface RTCPeerConnectionIceEvent : Event {\u000a    readonly attribute RTCIceCandidate? candidate;\u000a    // TODO(loonybear): add nullable url attribute here:\u000a    // https://rawgit.com/w3c/webrtc-pc/master/webrtc.html#rtcpeerconnectioniceevent\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCPeerConnectionIceEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCPeerConnectionIceEventInit.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcpeerconnectioniceeventinit\u000a\u000adictionary RTCPeerConnectionIceEventInit : EventInit {\u000a    RTCIceCandidate? candidate;\u000a    // TODO(loonybear): add url attribute.\u000a    // DOMString? url;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCRtpContributingSource.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCRtpContributingSource.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#dom-rtcrtpcontributingsource\u000ainterface RTCRtpContributingSource {\u000a    readonly attribute DOMHighResTimeStamp timestamp;\u000a    readonly attribute unsigned long       source;\u000a\u000a    // TODO(hbos): Support every member of the spec. https://crbug.com/705993\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCRtpReceiver.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCRtpReceiver.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcrtpreceiver-interface\u000ainterface RTCRtpReceiver {\u000a    readonly attribute MediaStreamTrack track;\u000a    sequence<RTCRtpContributingSource> getContributingSources();\u000a\u000a    // TODO(hbos): Support every member of the spec. https://crbug.com/700916\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCRtpSender.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCRtpSender.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcrtpsender-interface\u000a[\u000a    RuntimeEnabled=RTCRtpSender\u000a] interface RTCRtpSender {\u000a    readonly attribute MediaStreamTrack? track;\u000a    // TODO(hbos): Implement the rest of RTCRtpSender, https://crbug.com/700916.\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCSessionDescription.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCSessionDescription.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer\u000a *    in the documentation and/or other materials provided with the\u000a *    distribution.\u000a * 3. Neither the name of Google Inc. nor the names of its contributors\u000a *    may be used to endorse or promote products derived from this\u000a *    software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcsessiondescription-class\u000a\u000aenum RTCSdpType {\u000a    \"offer\",\u000a    \"pranswer\",\u000a    \"answer\"\u000a    // TODO(foolip): \"rollback\" is in the spec and Gecko's IDL.\u000a};\u000a\u000a[\u000a    Constructor(optional RTCSessionDescriptionInit descriptionInitDict),\u000a    ConstructorCallWith=ExecutionContext\u000a] interface RTCSessionDescription {\u000a    // TODO(foolip): |type| and |sdp| should be readonly and not nullable.\u000a    // https://crbug.com/662898\u000a    [Measure] attribute RTCSdpType? type;\u000a    [Measure] attribute DOMString? sdp;\u000a    serializer = {attribute};\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCSessionDescriptionCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCSessionDescriptionCallback.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer\u000a *    in the documentation and/or other materials provided with the\u000a *    distribution.\u000a * 3. Neither the name of Google Inc. nor the names of its contributors\u000a *    may be used to endorse or promote products derived from this\u000a *    software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000acallback interface RTCSessionDescriptionCallback {\u000a    void handleEvent(RTCSessionDescription sdp);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCSessionDescriptionInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCSessionDescriptionInit.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcsessiondescription-class\u000a\u000adictionary RTCSessionDescriptionInit {\u000a    // TODO(foolip): |type| should be required. https://crbug.com/662898\u000a    RTCSdpType type;\u000a    DOMString sdp;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCStatsReport.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCStatsReport.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtcstatsreport-object\u000ainterface RTCStatsReport {\u000a    readonly maplike<DOMString, object>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCStatsCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCStatsCallback.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000acallback interface RTCStatsCallback {\u000a    void handleEvent(RTCStatsResponse response);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCStatsResponse.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCStatsResponse.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface RTCStatsResponse {\u000a    sequence<RTCLegacyStatsReport> result();\u000a    RTCLegacyStatsReport namedItem([Default=Undefined] optional DOMString name);\u000a    [NotEnumerable, ImplementedAs=namedItem] getter RTCLegacyStatsReport ([Default=Undefined] optional DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCTrackEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCTrackEvent.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtctrackevent\u000a[\u000a    RuntimeEnabled=RTCRtpSender,\u000a    Constructor(DOMString type, RTCTrackEventInit eventInitDict)\u000a] interface RTCTrackEvent : Event {\u000a    readonly attribute RTCRtpReceiver           receiver;\u000a    readonly attribute MediaStreamTrack         track;\u000a    [SameObject]\u000a    readonly attribute FrozenArray<MediaStream> streams;\u000a    // TODO(hbos): When RTCRtpTransceiver is supported, add:\u000a    // readonly attribute RTCRtpTransceiver        transceiver;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/peerconnection/RTCTrackEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/peerconnection/RTCTrackEventInit.idl"},specUrls:["https://w3c.github.io/webrtc-pc/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webrtc-pc/#rtctrackevent\u000adictionary RTCTrackEventInit : EventInit {\u000a    required RTCRtpReceiver        receiver;\u000a    required MediaStreamTrack      track;\u000a             sequence<MediaStream> streams = [];\u000a    // TODO(hbos): When RTCRtpTransceiver is supported, add:\u000a    // required RTCRtpTransceiver     transceiver;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/permissions/ClipboardPermissionDescriptor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/permissions/ClipboardPermissionDescriptor.idl"},contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000adictionary ClipboardPermissionDescriptor : PermissionDescriptor {\u000a    required boolean allowWithoutGesture;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/permissions/MidiPermissionDescriptor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/permissions/MidiPermissionDescriptor.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000adictionary MidiPermissionDescriptor : PermissionDescriptor {\u000a    boolean sysex = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/permissions/NavigatorPermissions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/permissions/NavigatorPermissions.idl"},specUrls:["https://w3c.github.io/permissions/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/permissions/\u000a\u000a[\u000a    Exposed=(Window),\u000a    ImplementedAs=NavigatorPermissions,\u000a    RuntimeEnabled=Permissions\u000a] partial interface Navigator {\u000a    readonly attribute Permissions permissions;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/permissions/PermissionDescriptor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/permissions/PermissionDescriptor.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000aenum PermissionName {\u000a    \"geolocation\",\u000a    \"midi\",\u000a    \"notifications\",\u000a    \"push\",\u000a    \"background-sync\",\u000a    \"ambient-light-sensor\",\u000a    \"accelerometer\",\u000a    \"gyroscope\",\u000a    \"magnetometer\",\u000a    \"accessibility-events\",\u000a    \"clipboard-read\",\u000a    \"clipboard-write\",\u000a};\u000a\u000a// The PermissionDescriptor dictionary is a base to describe permissions. Some\u000a// permissions will extend it. The methods reading it will re-parse it depending\u000a// on the name.\u000adictionary PermissionDescriptor {\u000a    required PermissionName name;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/permissions/PermissionStatus.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/permissions/PermissionStatus.idl"},specUrls:["https://w3c.github.io/permissions/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/permissions/\u000a\u000aenum PermissionState {\u000a    \"granted\",\u000a    \"denied\",\u000a    \"prompt\"\u000a};\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=Permissions\u000a] interface PermissionStatus : EventTarget {\u000a    readonly attribute PermissionState state;\u000a             attribute EventHandler onchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/permissions/Permissions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/permissions/Permissions.idl"},specUrls:["https://w3c.github.io/permissions/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/permissions/\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=Permissions\u000a] interface Permissions {\u000a    [CallWith=ScriptState, Measure] Promise<PermissionStatus> query(Dictionary permission);\u000a    [RuntimeEnabled=PermissionsRequestRevoke, CallWith=ScriptState, Measure] Promise<PermissionStatus> request(Dictionary permissions);\u000a    [RuntimeEnabled=PermissionsRequestRevoke, CallWith=ScriptState, Measure] Promise<PermissionStatus> revoke(Dictionary permission);\u000a    [RuntimeEnabled=PermissionsRequestRevoke, CallWith=ScriptState, Measure] Promise<sequence<PermissionStatus>> requestAll(sequence<Dictionary> permissions);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/permissions/PushPermissionDescriptor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/permissions/PushPermissionDescriptor.idl"},specUrls:["https://w3c.github.io/push-api/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000adictionary PushPermissionDescriptor : PermissionDescriptor {\u000a    // https://w3c.github.io/push-api/#pushsubscriptionoptions-interface-and-dictionary\u000a    boolean userVisibleOnly = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/permissions/WorkerNavigatorPermissions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/permissions/WorkerNavigatorPermissions.idl"},specUrls:["https://w3c.github.io/permissions/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/permissions/\u000a\u000a[\u000a    Exposed=(Worker),\u000a    ImplementedAs=WorkerNavigatorPermissions,\u000a    RuntimeEnabled=Permissions\u000a] partial interface WorkerNavigator {\u000a    readonly attribute Permissions permissions;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/plugins/MimeType.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/plugins/MimeType.idl"},contents:"/*\u000a    Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies)\u000a    Copyright (C) 2008 Apple Inc. All rights reserved.\u000a\u000a    This library is free software; you can redistribute it and/or\u000a    modify it under the terms of the GNU Library General Public\u000a    License as published by the Free Software Foundation; either\u000a    version 2 of the License, or (at your option) any later version.\u000a\u000a    This library is distributed in the hope that it will be useful,\u000a    but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a    Library General Public License for more details.\u000a\u000a    You should have received a copy of the GNU Library General Public License\u000a    along with this library; see the file COPYING.LIB.  If not, write to\u000a    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a    Boston, MA 02110-1301, USA.\u000a*/\u000a\u000a[\u000a    ImplementedAs=DOMMimeType\u000a] interface MimeType {\u000a    readonly attribute DOMString type;\u000a    readonly attribute DOMString suffixes;\u000a    readonly attribute DOMString description;\u000a    readonly attribute Plugin enabledPlugin;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/plugins/MimeTypeArray.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/plugins/MimeTypeArray.idl"},contents:"/*\u000a    Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies)\u000a    Copyright (C) 2008 Apple Inc. All rights reserved.\u000a\u000a    This library is free software; you can redistribute it and/or\u000a    modify it under the terms of the GNU Library General Public\u000a    License as published by the Free Software Foundation; either\u000a    version 2 of the License, or (at your option) any later version.\u000a\u000a    This library is distributed in the hope that it will be useful,\u000a    but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a    Library General Public License for more details.\u000a\u000a    You should have received a copy of the GNU Library General Public License\u000a    along with this library; see the file COPYING.LIB.  If not, write to\u000a    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a    Boston, MA 02110-1301, USA.\u000a*/\u000a\u000a[\u000a    ImplementedAs=DOMMimeTypeArray,\u000a    LegacyUnenumerableNamedProperties\u000a] interface MimeTypeArray {\u000a    readonly attribute unsigned long length;\u000a    getter MimeType? item(unsigned long index);\u000a    getter MimeType? namedItem(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/plugins/Plugin.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/plugins/Plugin.idl"},contents:"/*\u000a    Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies)\u000a    Copyright (C) 2008 Apple Inc. All rights reserved.\u000a\u000a    This library is free software; you can redistribute it and/or\u000a    modify it under the terms of the GNU Library General Public\u000a    License as published by the Free Software Foundation; either\u000a    version 2 of the License, or (at your option) any later version.\u000a\u000a    This library is distributed in the hope that it will be useful,\u000a    but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a    Library General Public License for more details.\u000a\u000a    You should have received a copy of the GNU Library General Public License\u000a    along with this library; see the file COPYING.LIB.  If not, write to\u000a    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a    Boston, MA 02110-1301, USA.\u000a*/\u000a\u000a// https://html.spec.whatwg.org/multipage/webappapis.html#plugins-2\u000a\u000a[\u000a    ImplementedAs=DOMPlugin,\u000a    LegacyUnenumerableNamedProperties\u000a] interface Plugin {\u000a    readonly attribute DOMString name;\u000a    readonly attribute DOMString filename;\u000a    readonly attribute DOMString description;\u000a    readonly attribute unsigned long length;\u000a    getter MimeType? item(unsigned long index);\u000a    getter MimeType? namedItem(DOMString name);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/plugins/NavigatorPlugins.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/plugins/NavigatorPlugins.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/webappapis.html#navigatorplugins\u000a[\u000a    ImplementedAs=NavigatorPlugins\u000a] partial interface Navigator {\u000a    readonly attribute PluginArray plugins;\u000a    readonly attribute MimeTypeArray mimeTypes;\u000a    boolean javaEnabled();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/plugins/PluginArray.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/plugins/PluginArray.idl"},contents:"/*\u000a    Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies)\u000a    Copyright (C) 2008 Apple Inc. All rights reserved.\u000a\u000a    This library is free software; you can redistribute it and/or\u000a    modify it under the terms of the GNU Library General Public\u000a    License as published by the Free Software Foundation; either\u000a    version 2 of the License, or (at your option) any later version.\u000a\u000a    This library is distributed in the hope that it will be useful,\u000a    but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a    Library General Public License for more details.\u000a\u000a    You should have received a copy of the GNU Library General Public License\u000a    along with this library; see the file COPYING.LIB.  If not, write to\u000a    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a    Boston, MA 02110-1301, USA.\u000a*/\u000a\u000a// https://html.spec.whatwg.org/multipage/webappapis.html#plugins-2\u000a\u000a[\u000a    ImplementedAs=DOMPluginArray,\u000a    LegacyUnenumerableNamedProperties\u000a] interface PluginArray {\u000a    readonly attribute unsigned long length;\u000a    getter Plugin? item(unsigned long index);\u000a    getter Plugin? namedItem(DOMString name);\u000a    void refresh([Default=Undefined] optional boolean reload);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/presentation/NavigatorPresentation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/presentation/NavigatorPresentation.idl"},specUrls:["https://w3c.github.io/presentation-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/presentation-api/#interface-navigatorpresentation\u000a\u000a[\u000a    ImplementedAs=NavigatorPresentation,\u000a    RuntimeEnabled=Presentation\u000a] partial interface Navigator {\u000a    [SameObject] readonly attribute Presentation presentation;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/presentation/Presentation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/presentation/Presentation.idl"},specUrls:["https://w3c.github.io/presentation-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/presentation-api/#interface-presentation\u000a\u000a[\u000a    RuntimeEnabled=Presentation\u000a] interface Presentation {\u000a    [MeasureAs=PresentationDefaultRequest] attribute PresentationRequest? defaultRequest;\u000a\u000a    // This API is available on the receiving browsing context.\u000a    [SameObject] readonly attribute PresentationReceiver? receiver;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/presentation/PresentationAvailability.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/presentation/PresentationAvailability.idl"},specUrls:["https://w3c.github.io/presentation-api/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/presentation-api/#interface-presentationavailability\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    RuntimeEnabled=Presentation\u000a] interface PresentationAvailability : EventTarget {\u000a    readonly attribute boolean value;\u000a    attribute EventHandler onchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/presentation/PresentationConnection.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/presentation/PresentationConnection.idl"},specUrls:["https://w3c.github.io/presentation-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/presentation-api/#interface-presentationconnection\u000a\u000aenum PresentationConnectionState {\u000a    \"connected\",\u000a    \"closed\",\u000a    \"terminated\"\u000a};\u000a\u000a[\u000a    RuntimeEnabled=Presentation\u000a] interface PresentationConnection : EventTarget {\u000a    readonly attribute USVString id;\u000a    readonly attribute USVString url;\u000a    readonly attribute PresentationConnectionState state;\u000a    [MeasureAs=PresentationConnectionClose] void close();\u000a    [MeasureAs=PresentationConnectionTerminate] void terminate();\u000a    attribute EventHandler onconnect;\u000a    attribute EventHandler onclose;\u000a    attribute EventHandler onterminate;\u000a\u000a    // Communication\u000a    attribute BinaryType binaryType;\u000a    attribute EventHandler onmessage;\u000a    [RaisesException, MeasureAs=PresentationConnectionSend] void send(DOMString message);\u000a    [RaisesException, MeasureAs=PresentationConnectionSend] void send(Blob data);\u000a    [RaisesException, MeasureAs=PresentationConnectionSend] void send(ArrayBuffer data);\u000a    [RaisesException, MeasureAs=PresentationConnectionSend] void send(ArrayBufferView data);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/presentation/PresentationConnectionAvailableEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/presentation/PresentationConnectionAvailableEvent.idl"},specUrls:["https://w3c.github.io/presentation-api/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/presentation-api/#interface-presentationconnectionavailableeevent\u000a\u000a[\u000a    Constructor(DOMString type, PresentationConnectionAvailableEventInit eventInitDict),\u000a    RuntimeEnabled=Presentation\u000a] interface PresentationConnectionAvailableEvent : Event {\u000a    [SameObject] readonly attribute PresentationConnection connection;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/presentation/PresentationConnectionAvailableEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/presentation/PresentationConnectionAvailableEventInit.idl"},specUrls:["https://w3c.github.io/presentation-api/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/presentation-api/#idl-def-presentationconnectionavailableeventinit\u000a\u000adictionary PresentationConnectionAvailableEventInit : EventInit {\u000a    required PresentationConnection connection;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/presentation/PresentationConnectionCloseEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/presentation/PresentationConnectionCloseEvent.idl"},specUrls:["https://w3c.github.io/presentation-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/presentation-api/#interface-presentationconnectioncloseevent\u000a\u000aenum PresentationConnectionCloseReason { \"error\", \"closed\", \"wentaway\" };\u000a\u000a[\u000a    Constructor(DOMString type, PresentationConnectionCloseEventInit eventInitDict),\u000a    RuntimeEnabled=Presentation\u000a] interface PresentationConnectionCloseEvent : Event {\u000a    readonly attribute PresentationConnectionCloseReason reason;\u000a    readonly attribute DOMString message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/presentation/PresentationConnectionCloseEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/presentation/PresentationConnectionCloseEventInit.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000adictionary PresentationConnectionCloseEventInit : EventInit {\u000a    required PresentationConnectionCloseReason reason;\u000a    DOMString message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/presentation/PresentationConnectionList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/presentation/PresentationConnectionList.idl"},specUrls:["https://w3c.github.io/presentation-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/presentation-api/#interface-presentationconnectionlist\u000a\u000ainterface PresentationConnectionList : EventTarget {\u000a    readonly attribute FrozenArray<PresentationConnection> connections;\u000a    attribute EventHandler onconnectionavailable;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/presentation/PresentationReceiver.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/presentation/PresentationReceiver.idl"},specUrls:["https://w3c.github.io/presentation-api/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/presentation-api/#idl-def-presentationreceiver\u000a\u000ainterface PresentationReceiver {\u000a    [SameObject, CallWith=ScriptState] readonly attribute Promise<PresentationConnectionList> connectionList;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/presentation/PresentationRequest.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/presentation/PresentationRequest.idl"},specUrls:["https://w3c.github.io/presentation-api/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/presentation-api/#interface-presentationrequest\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    ConstructorCallWith=ExecutionContext,\u000a    Constructor(USVString url),\u000a    Constructor(sequence<USVString> urls),\u000a    DependentLifetime,\u000a    MeasureAs=PresentationRequestConstructor,\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=Presentation\u000a] interface PresentationRequest : EventTarget {\u000a    [CallWith=ScriptState, MeasureAs=PresentationRequestStart] Promise<PresentationConnection> start();\u000a    [CallWith=ScriptState, MeasureAs=PresentationRequestReconnect] Promise<PresentationConnection> reconnect(DOMString id);\u000a    [CallWith=ScriptState, MeasureAs=PresentationRequestGetAvailability] Promise<PresentationAvailability> getAvailability();\u000a\u000a    attribute EventHandler onconnectionavailable;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/push_messaging/PushEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/push_messaging/PushEvent.idl"},specUrls:["https://w3c.github.io/push-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/push-api/#idl-def-PushEvent\u000a\u000a[\u000a    Constructor(DOMString type, optional PushEventInit eventInitDict),\u000a    Exposed=ServiceWorker,\u000a    RuntimeEnabled=PushMessaging\u000a] interface PushEvent : ExtendableEvent {\u000a    readonly attribute PushMessageData? data;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/push_messaging/PushEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/push_messaging/PushEventInit.idl"},specUrls:["https://w3c.github.io/push-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/push-api/#idl-def-PushEvent\u000a\u000a// TODO(peter): Use BufferSource when union types can refer to other union types.\u000atypedef (ArrayBuffer or ArrayBufferView or USVString) PushMessageDataInit;\u000a\u000adictionary PushEventInit : ExtendableEventInit {\u000a    PushMessageDataInit data;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/push_messaging/PushManager.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/push_messaging/PushManager.idl"},specUrls:["https://w3c.github.io/push-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/push-api/#pushmanager-interface\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=PushMessaging\u000a] interface PushManager {\u000a    [SameObject, SaveSameObject]\u000a    static readonly attribute FrozenArray<DOMString> supportedContentEncodings;\u000a\u000a    [CallWith=ScriptState, RaisesException] Promise<PushSubscription> subscribe(optional PushSubscriptionOptionsInit options);\u000a    [CallWith=ScriptState] Promise<PushSubscription?> getSubscription();\u000a    [CallWith=ScriptState, RaisesException] Promise permissionState(optional PushSubscriptionOptionsInit options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/push_messaging/PushMessageData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/push_messaging/PushMessageData.idl"},specUrls:["https://w3c.github.io/push-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/push-api/#pushmessagedata-interface\u000a\u000a[\u000a    Exposed=ServiceWorker\u000a] interface PushMessageData {\u000a    ArrayBuffer arrayBuffer();\u000a    Blob blob();\u000a    [CallWith=ScriptState, RaisesException] JSON json();\u000a    USVString text();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/push_messaging/PushSubscription.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/push_messaging/PushSubscription.idl"},specUrls:["https://w3c.github.io/push-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/push-api/#pushsubscription-interface\u000a\u000aenum PushEncryptionKeyName {\u000a    \"p256dh\",\u000a    \"auth\"\u000a};\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=PushMessaging\u000a] interface PushSubscription {\u000a    readonly attribute USVString endpoint;\u000a    readonly attribute DOMTimeStamp? expirationTime;\u000a    [SameObject] readonly attribute PushSubscriptionOptions options;\u000a\u000a    ArrayBuffer? getKey(PushEncryptionKeyName name);\u000a    [CallWith=ScriptState] Promise<boolean> unsubscribe();\u000a\u000a    serializer;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/push_messaging/PushSubscriptionOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/push_messaging/PushSubscriptionOptions.idl"},specUrls:["https://w3c.github.io/push-api/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/push-api/#idl-def-PushSubscriptionOptions\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    RuntimeEnabled=PushMessaging\u000a] interface PushSubscriptionOptions {\u000a    readonly attribute boolean userVisibleOnly;\u000a    [SameObject] readonly attribute ArrayBuffer? applicationServerKey;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/push_messaging/PushSubscriptionOptionsInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/push_messaging/PushSubscriptionOptionsInit.idl"},specUrls:["https://w3c.github.io/push-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/push-api/#idl-def-PushSubscriptionOptionsInit\u000a\u000adictionary PushSubscriptionOptionsInit {\u000a    boolean userVisibleOnly = false;\u000a    BufferSource? applicationServerKey = null;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/push_messaging/ServiceWorkerGlobalScopePush.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/push_messaging/ServiceWorkerGlobalScopePush.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=ServiceWorkerGlobalScopePush,\u000a    RuntimeEnabled=PushMessaging\u000a] partial interface ServiceWorkerGlobalScope {\u000a    attribute EventHandler onpush;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/push_messaging/ServiceWorkerRegistrationPush.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/push_messaging/ServiceWorkerRegistrationPush.idl"},specUrls:["https://w3c.github.io/push-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/push-api/#extensions-to-the-serviceworkerregistration-interface\u000a\u000a[\u000a    Exposed=(Window,Worker),\u000a    ImplementedAs=ServiceWorkerRegistrationPush,\u000a    RuntimeEnabled=PushMessaging\u000a] partial interface ServiceWorkerRegistration {\u000a    readonly attribute PushManager pushManager;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/quota/DOMError.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/quota/DOMError.idl"},specUrls:["https://dom.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2007 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dom.spec.whatwg.org/#domerror\u000a\u000a// FIXME: DOMError has been removed from the spec. crbug.com/460725\u000a[\u000a    Constructor(DOMString name, optional DOMString message = null),\u000a    Measure\u000a] interface DOMError {\u000a    [Measure] readonly attribute DOMString name;\u000a    [Measure] readonly attribute DOMString message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/quota/DeprecatedStorageInfo.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/quota/DeprecatedStorageInfo.idl"},contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface DeprecatedStorageInfo {\u000a    const unsigned short TEMPORARY = 0;\u000a    const unsigned short PERSISTENT = 1;\u000a\u000a    [Measure, CallWith=ScriptState] void queryUsageAndQuota(unsigned short storageType, optional StorageUsageCallback usageCallback, optional StorageErrorCallback errorCallback);\u000a    [Measure, CallWith=ScriptState] void requestQuota(unsigned short storageType, unsigned long long newQuotaInBytes, optional StorageQuotaCallback quotaCallback, optional StorageErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/quota/DeprecatedStorageQuota.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/quota/DeprecatedStorageQuota.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface DeprecatedStorageQuota {\u000a    [Measure, CallWith=ScriptState] void queryUsageAndQuota(StorageUsageCallback usageCallback, optional StorageErrorCallback errorCallback);\u000a    [Measure, CallWith=ScriptState] void requestQuota(unsigned long long newQuotaInBytes, optional StorageQuotaCallback quotaCallback, optional StorageErrorCallback errorCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/quota/NavigatorStorageQuota.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/quota/NavigatorStorageQuota.idl"},specUrls:["https://storage.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// This partial interface is a merge of two different partial interfaces\u000a// related to storage.\u000a[\u000a    ImplementedAs=NavigatorStorageQuota\u000a] partial interface Navigator {\u000a    // http://www.w3.org/TR/2012/WD-quota-api-20120703/#idl-def-StorageQuotaEnvironment\u000a    [MeasureAs=PrefixedStorageQuota] readonly attribute DeprecatedStorageQuota webkitTemporaryStorage;\u000a    [MeasureAs=PrefixedStorageQuota] readonly attribute DeprecatedStorageQuota webkitPersistentStorage;\u000a\u000a    // https://storage.spec.whatwg.org/#api\u000a    [SecureContext] readonly attribute StorageManager storage;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/quota/StorageErrorCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/quota/StorageErrorCallback.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000acallback interface StorageErrorCallback {\u000a    void handleEvent(DOMError error);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/quota/StorageEstimate.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/quota/StorageEstimate.idl"},specUrls:["https://storage.spec.whatwg.org/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://storage.spec.whatwg.org/#api\u000a\u000adictionary StorageEstimate {\u000a    unsigned long long usage;\u000a    unsigned long long quota;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/quota/StorageManager.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/quota/StorageManager.idl"},specUrls:["https://storage.spec.whatwg.org/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://storage.spec.whatwg.org/#storagemanager\u000a\u000a// TODO(jsbell): Should have [SecureContext] on interface\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface StorageManager {\u000a    [CallWith=ScriptState, MeasureAs=DurableStoragePersisted] Promise<boolean> persisted();\u000a    [Exposed=Window, CallWith=ScriptState, MeasureAs=DurableStoragePersist] Promise<boolean> persist();\u000a\u000a    [CallWith=ScriptState, MeasureAs=DurableStorageEstimate] Promise<StorageEstimate> estimate();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/quota/StorageQuotaCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/quota/StorageQuotaCallback.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000acallback interface StorageQuotaCallback {\u000a    void handleEvent(unsigned long long grantedQuotaInBytes);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/quota/StorageUsageCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/quota/StorageUsageCallback.idl"},contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000acallback interface StorageUsageCallback {\u000a    void handleEvent(unsigned long long currentUsageInBytes, unsigned long long currentQuotaInBytes);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/quota/WindowQuota.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/quota/WindowQuota.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    ImplementedAs=DOMWindowQuota\u000a] partial interface Window {\u000a    [DeprecateAs=PrefixedStorageInfo] readonly attribute DeprecatedStorageInfo webkitStorageInfo;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/quota/WorkerNavigatorStorageQuota.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/quota/WorkerNavigatorStorageQuota.idl"},specUrls:["https://storage.spec.whatwg.org/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * This library is free software; you can redistribute it and/or\u000a * modify it under the terms of the GNU Library General Public\u000a * License as published by the Free Software Foundation; either\u000a * version 2 of the License, or (at your option) any later version.\u000a *\u000a * This library is distributed in the hope that it will be useful,\u000a * but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a * Library General Public License for more details.\u000a *\u000a * You should have received a copy of the GNU Library General Public License\u000a * along with this library; see the file COPYING.LIB.  If not, write to\u000a * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a * Boston, MA 02110-1301, USA.\u000a */\u000a\u000a[\u000a    ImplementedAs=WorkerNavigatorStorageQuota\u000a] partial interface WorkerNavigator {\u000a    // https://storage.spec.whatwg.org/#api\u000a    [SecureContext] readonly attribute StorageManager storage;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/remoteplayback/HTMLMediaElementRemotePlayback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/remoteplayback/HTMLMediaElementRemotePlayback.idl"},specUrls:["https://w3c.github.io/remote-playback/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/remote-playback/#extension-to-the-htmlmediaelement\u000a\u000a[\u000a    ImplementedAs=HTMLMediaElementRemotePlayback\u000a] partial interface HTMLMediaElement {\u000a    [RuntimeEnabled=RemotePlayback] readonly attribute RemotePlayback remote;\u000a    [CEReactions, Reflect, RuntimeEnabled=RemotePlayback] attribute boolean disableRemotePlayback;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/remoteplayback/RemotePlayback.idl"},specUrls:["https://w3c.github.io/remote-playback/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/remote-playback/#idl-def-remoteplayback\u000a\u000aenum RemotePlaybackState {\u000a    \"connecting\",\u000a    \"connected\",\u000a    \"disconnected\"\u000a};\u000a\u000acallback RemotePlaybackAvailabilityCallback = void(boolean available);\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    RuntimeEnabled=RemotePlayback\u000a] interface RemotePlayback : EventTarget {\u000a    readonly attribute RemotePlaybackState state;\u000a    attribute EventHandler onconnecting;\u000a    attribute EventHandler onconnect;\u000a    attribute EventHandler ondisconnect;\u000a\u000a    [CallWith=ScriptState] Promise<long> watchAvailability(RemotePlaybackAvailabilityCallback callback);\u000a    [CallWith=ScriptState] Promise<void> cancelWatchAvailability(optional long id);\u000a    [CallWith=ScriptState] Promise<void> prompt();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/screen_orientation/ScreenOrientation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/screen_orientation/ScreenOrientation.idl"},specUrls:["https://w3c.github.io/screen-orientation/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/screen-orientation/#screenorientation-interface\u000a\u000aenum OrientationLockType {\u000a    \"any\",\u000a    \"natural\",\u000a    \"landscape\",\u000a    \"portrait\",\u000a    \"portrait-primary\",\u000a    \"portrait-secondary\",\u000a    \"landscape-primary\",\u000a    \"landscape-secondary\"\u000a};\u000a\u000aenum OrientationType {\u000a    \"portrait-primary\",\u000a    \"portrait-secondary\",\u000a    \"landscape-primary\",\u000a    \"landscape-secondary\"\u000a};\u000a\u000ainterface ScreenOrientation : EventTarget {\u000a    [MeasureAs=ScreenOrientationAngle] readonly attribute unsigned short angle;\u000a    [MeasureAs=ScreenOrientationType] readonly attribute DOMString type;\u000a\u000a    [CallWith=ScriptState, MeasureAs=ScreenOrientationLock] Promise lock(OrientationLockType orientation);\u000a    [MeasureAs=ScreenOrientationUnlock] void unlock();\u000a\u000a    attribute EventHandler onchange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/screen_orientation/ScreenScreenOrientation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/screen_orientation/ScreenScreenOrientation.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=ScreenScreenOrientation\u000a] partial interface Screen {\u000a    [CallWith=ScriptState] readonly attribute ScreenOrientation orientation;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/AbsoluteOrientationSensor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/AbsoluteOrientationSensor.idl"},specUrls:["https://w3c.github.io/orientation-sensor/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/orientation-sensor/#absoluteorientationsensor-interface\u000a\u000a[\u000a    OriginTrialEnabled=Sensor,\u000a    Constructor(optional SensorOptions sensorOptions),\u000a    ConstructorCallWith=ExecutionContext,\u000a    SecureContext,\u000a    RaisesException=Constructor,\u000a    MeasureAs=AbsoluteOrientationSensorConstructor\u000a] interface AbsoluteOrientationSensor : OrientationSensor {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/Accelerometer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/Accelerometer.idl"},specUrls:["https://w3c.github.io/accelerometer/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/accelerometer/#accelerometer-interface\u000a\u000a[\u000a    OriginTrialEnabled=Sensor,\u000a    Constructor(optional SensorOptions sensorOptions),\u000a    ConstructorCallWith=ExecutionContext,\u000a    SecureContext,\u000a    RaisesException=Constructor,\u000a    MeasureAs=AccelerometerConstructor\u000a] interface Accelerometer : Sensor {\u000a    readonly attribute unrestricted double? x;\u000a    readonly attribute unrestricted double? y;\u000a    readonly attribute unrestricted double? z;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/AmbientLightSensor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/AmbientLightSensor.idl"},specUrls:["https://w3c.github.io/ambient-light/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/ambient-light/#ambient-light-sensor-interface\u000a\u000a[\u000a    RuntimeEnabled=SensorExtraClasses,\u000a    Constructor(optional SensorOptions sensorOptions),\u000a    ConstructorCallWith=ExecutionContext,\u000a    SecureContext,\u000a    RaisesException=Constructor,\u000a    MeasureAs=AmbientLightSensorConstructor\u000a] interface AmbientLightSensor : Sensor {\u000a    readonly attribute unrestricted double? illuminance;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/Gyroscope.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/Gyroscope.idl"},specUrls:["https://w3c.github.io/gyroscope/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/gyroscope/#gyroscope-interface\u000a\u000a[\u000a    OriginTrialEnabled=Sensor,\u000a    Constructor(optional SensorOptions sensorOptions),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor,\u000a    SecureContext,\u000a    MeasureAs=GyroscopeConstructor\u000a] interface Gyroscope : Sensor {\u000a    readonly attribute unrestricted double? x;\u000a    readonly attribute unrestricted double? y;\u000a    readonly attribute unrestricted double? z;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/LinearAccelerationSensor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/LinearAccelerationSensor.idl"},specUrls:["https://w3c.github.io/accelerometer/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/accelerometer/#linearaccelerationsensor\u000a\u000a[\u000a    OriginTrialEnabled=Sensor,\u000a    Constructor(optional SensorOptions sensorOptions),\u000a    ConstructorCallWith=ExecutionContext,\u000a    SecureContext,\u000a    RaisesException=Constructor,\u000a    MeasureAs=LinearAccelerationSensorConstructor\u000a] interface LinearAccelerationSensor : Accelerometer {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/Magnetometer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/Magnetometer.idl"},specUrls:["https://w3c.github.io/magnetometer/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/magnetometer/#magnetometer-interface\u000a\u000a[\u000a    RuntimeEnabled=SensorExtraClasses,\u000a    Constructor(optional SensorOptions sensorOptions),\u000a    ConstructorCallWith=ExecutionContext,\u000a    SecureContext,\u000a    RaisesException=Constructor,\u000a    MeasureAs=MagnetometerConstructor\u000a] interface Magnetometer : Sensor {\u000a    readonly attribute unrestricted double? x;\u000a    readonly attribute unrestricted double? y;\u000a    readonly attribute unrestricted double? z;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/OrientationSensor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/OrientationSensor.idl"},specUrls:["https://w3c.github.io/orientation-sensor/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/orientation-sensor/\u000a\u000atypedef (Float32Array or Float64Array or DOMMatrix) RotationMatrixType;\u000a\u000a[\u000a    OriginTrialEnabled=Sensor,\u000a    SecureContext\u000a] interface OrientationSensor : Sensor {\u000a    [CachedAttribute=isReadingDirty] readonly attribute FrozenArray<double>? quaternion;\u000a    [RaisesException, MeasureAs=OrientationSensorPopulateMatrix] void populateMatrix(RotationMatrixType targetBuffer);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/RelativeOrientationSensor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/RelativeOrientationSensor.idl"},specUrls:["https://w3c.github.io/orientation-sensor/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/orientation-sensor/#relativeorientationsensor-interface\u000a\u000a[\u000a    OriginTrialEnabled=Sensor,\u000a    Constructor(optional SensorOptions sensorOptions),\u000a    ConstructorCallWith=ExecutionContext,\u000a    SecureContext,\u000a    RaisesException=Constructor,\u000a    MeasureAs=RelativeOrientationSensorConstructor\u000a] interface RelativeOrientationSensor : OrientationSensor {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/Sensor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/Sensor.idl"},specUrls:["https://w3c.github.io/sensors/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/sensors/#the-sensor-interface\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    SecureContext,\u000a    OriginTrialEnabled=Sensor\u000a] interface Sensor : EventTarget {\u000a    [MeasureAs=GenericSensorActivated] readonly attribute boolean activated;\u000a    readonly attribute boolean hasReading;\u000a    [CallWith=ScriptState] readonly attribute DOMHighResTimeStamp? timestamp;\u000a\u000a    [MeasureAs=GenericSensorStart] void start();\u000a    [MeasureAs=GenericSensorStop] void stop();\u000a\u000a    [MeasureAs=GenericSensorOnError] attribute EventHandler onerror;\u000a    [MeasureAs=GenericSensorOnChange] attribute EventHandler onreading;\u000a    [MeasureAs=GenericSensorOnActivate] attribute EventHandler onactivate;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/SensorErrorEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/SensorErrorEvent.idl"},specUrls:["https://w3c.github.io/sensors/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/sensors/#sensorerrorevent\u000a\u000a[\u000a    OriginTrialEnabled=Sensor,\u000a    SecureContext,\u000a    Constructor(DOMString type, SensorErrorEventInit eventInitDict)\u000a] interface SensorErrorEvent : Event {\u000a    readonly attribute DOMException error;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/SensorErrorEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/SensorErrorEventInit.idl"},specUrls:["https://w3c.github.io/sensors/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/sensors/#dictdef-sensorerroreventinit\u000a\u000adictionary SensorErrorEventInit : EventInit {\u000a    required DOMException error;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/sensor/SensorOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/sensor/SensorOptions.idl"},specUrls:["https://w3c.github.io/sensors/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// Specification at:\u000a// https://w3c.github.io/sensors/#dictdef-sensoroptions\u000a\u000adictionary SensorOptions {\u000a    double frequency;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/Client.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/Client.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#client-interface\u000a[\u000a    Exposed=ServiceWorker,\u000a    ImplementedAs=ServiceWorkerClient\u000a] interface Client {\u000a    readonly attribute USVString url;\u000a    readonly attribute DOMString id;\u000a    readonly attribute ClientType type;\u000a    [PostMessage, RaisesException, CallWith=ScriptState] void postMessage(any message, optional sequence<object> transfer);\u000a\u000a    // FIXME: frameType is non-standard, see https://crbug.com/697110\u000a    [CallWith=ScriptState] readonly attribute ContextFrameType frameType;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ClientQueryOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ClientQueryOptions.idl"},specUrls:["https://w3c.github.io/ServiceWorker/","https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#enumdef-clienttype\u000aenum ClientType {\u000a    \"window\",\u000a    \"worker\",\u000a    \"sharedworker\",\u000a    \"all\"\u000a};\u000a\u000a// https://w3c.github.io/ServiceWorker/#dictdef-clientqueryoptions\u000adictionary ClientQueryOptions {\u000a    boolean includeUncontrolled = false;\u000a    ClientType type = \"window\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/Clients.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/Clients.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#clients-interface\u000a[\u000a    Exposed=ServiceWorker,\u000a    ImplementedAs=ServiceWorkerClients\u000a] interface Clients {\u000a    [CallWith=ScriptState] Promise<any> get(DOMString id);\u000a    [CallWith=ScriptState] Promise<sequence<Client>> matchAll(optional ClientQueryOptions options);\u000a    [CallWith=ScriptState] Promise<WindowClient?> openWindow(USVString url);\u000a    [CallWith=ScriptState] Promise<void> claim();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ExtendableEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ExtendableEvent.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"/*\u000a * Copyright (C) 2014 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/ServiceWorker/#extendableevent-interface\u000a[\u000a    Constructor(DOMString type, optional ExtendableEventInit eventInitDict),\u000a    Exposed=ServiceWorker\u000a] interface ExtendableEvent : Event {\u000a    [CallWith=ScriptState, RaisesException] void waitUntil(Promise<any> f);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ExtendableEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ExtendableEventInit.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#dictdef-extendableeventinit\u000a\u000adictionary ExtendableEventInit : EventInit {\u000a    // Defined for the forward compatibility across the derived events\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ExtendableMessageEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ExtendableMessageEvent.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#extendablemessageevent-interface\u000a\u000a[\u000a    // TODO(bashi): Stop using CustomConstructor once we solve reference\u000a    // circulation between Blink and V8. http://crbug.com/501866\u000a    // Constructor should be:\u000a    // Constructor(DOMString type, optional ExtendableMessageEventInit eventInitDict),\u000a    CustomConstructor,\u000a    Exposed=ServiceWorker\u000a] interface ExtendableMessageEvent : ExtendableEvent {\u000a    [Custom=Getter] readonly attribute any data;\u000a    readonly attribute DOMString origin;\u000a    readonly attribute DOMString lastEventId;\u000a    [SameObject] readonly attribute (Client or ServiceWorker or MessagePort)? source;\u000a    readonly attribute FrozenArray<MessagePort> ports;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ExtendableMessageEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ExtendableMessageEventInit.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#dictdef-extendablemessageeventinit\u000a\u000adictionary ExtendableMessageEventInit : ExtendableEventInit {\u000a     any data;\u000a     DOMString origin;\u000a     DOMString lastEventId;\u000a     (Client or ServiceWorker or MessagePort)? source;\u000a     sequence<MessagePort> ports;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/FetchEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/FetchEvent.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#fetchevent-interface\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Constructor(DOMString type, FetchEventInit eventInitDict),\u000a    ConstructorCallWith=ScriptState,\u000a    Exposed=ServiceWorker\u000a] interface FetchEvent : ExtendableEvent {\u000a    [SameObject] readonly attribute Request request;\u000a    readonly attribute DOMString? clientId;\u000a    readonly attribute boolean isReload;\u000a\u000a    [CallWith=ScriptState, RaisesException] void respondWith(Promise<Response> r);\u000a    [CallWith=ScriptState] readonly attribute Promise<any> preloadResponse;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/FetchEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/FetchEventInit.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#dictdef-fetcheventinit\u000a\u000adictionary FetchEventInit : ExtendableEventInit {\u000a  required Request request;\u000a  DOMString? clientId = null;\u000a  boolean isReload = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ForeignFetchEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ForeignFetchEvent.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#foreignfetchevent-interface\u000a[\u000a    Constructor(DOMString type, ForeignFetchEventInit eventInitDict),\u000a    ConstructorCallWith=ScriptState,\u000a    Exposed=ServiceWorker,\u000a    OriginTrialEnabled=ForeignFetch\u000a] interface ForeignFetchEvent : ExtendableEvent {\u000a    [SameObject] readonly attribute Request request;\u000a    readonly attribute USVString origin;\u000a\u000a    [CallWith=ScriptState, RaisesException] void respondWith(Promise<ForeignFetchResponse> r);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ForeignFetchEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ForeignFetchEventInit.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#dictdef-foreignfetcheventinit\u000a\u000adictionary ForeignFetchEventInit : ExtendableEventInit {\u000a  required Request request;\u000a  USVString origin = \"null\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ForeignFetchOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ForeignFetchOptions.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#dictdef-foreignfetchoptions\u000a\u000adictionary ForeignFetchOptions {\u000a     required sequence<USVString> scopes;\u000a     required sequence<USVString> origins;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ForeignFetchResponse.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ForeignFetchResponse.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#dictdef-foreignfetchresponse\u000a\u000adictionary ForeignFetchResponse {\u000a  required Response response;\u000a  USVString origin;\u000a  sequence<ByteString> headers;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/InstallEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/InstallEvent.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#installevent\u000a\u000a[\u000a    Constructor(DOMString type, optional ExtendableEventInit eventInitDict),\u000a    Exposed=ServiceWorker\u000a] interface InstallEvent : ExtendableEvent {\u000a  [OriginTrialEnabled=ForeignFetch, CallWith=ScriptState, RaisesException] void registerForeignFetch(ForeignFetchOptions options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/NavigationPreloadManager.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/NavigationPreloadManager.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// TODO(falken): Revise link when this lands in the spec:\u000a// https://github.com/w3c/ServiceWorker/issues/920\u000a[\u000a    Exposed=(Window,Worker)\u000a] interface NavigationPreloadManager {\u000a    // TODO(mgiuca): Put SecureContext on the interface, not individual methods.\u000a    // Currently prevented due to clash with OriginTrialEnabled. This can be\u000a    // resolved either when OriginTrialEnabled is removed, or\u000a    // https://crbug.com/695123 is fixed.\u000a    [SecureContext, CallWith=ScriptState] Promise<void> enable();\u000a    [SecureContext, CallWith=ScriptState] Promise<void> disable();\u000a    [SecureContext, CallWith=ScriptState] Promise<void> setHeaderValue(ByteString value);\u000a    [SecureContext, CallWith=ScriptState] Promise<NavigationPreloadState> getState();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/NavigationPreloadState.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/NavigationPreloadState.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// TODO(falken): Revise link when this lands in the spec:\u000a// https://github.com/w3c/ServiceWorker/issues/920\u000adictionary NavigationPreloadState {\u000a    boolean enabled = false;\u000a    ByteString headerValue;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/NavigatorServiceWorker.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/NavigatorServiceWorker.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#navigator-serviceworker\u000a[\u000a    ImplementedAs=NavigatorServiceWorker\u000a] partial interface Navigator {\u000a    [RaisesException, CallWith=ScriptState] readonly attribute ServiceWorkerContainer serviceWorker;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/RegistrationOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/RegistrationOptions.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#dictdef-registrationoptions\u000adictionary RegistrationOptions {\u000a    USVString scope;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ServiceWorker.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ServiceWorker.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/ServiceWorker/#serviceworker-interface\u000a\u000aenum ServiceWorkerState {\u000a    \"installing\",\u000a    \"installed\",\u000a    \"activating\",\u000a    \"activated\",\u000a    \"redundant\"\u000a};\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface ServiceWorker : EventTarget {\u000a\u000a    [PostMessage, RaisesException] void postMessage(any message, optional sequence<object> transfer);\u000a\u000a    readonly attribute USVString scriptURL;\u000a    readonly attribute ServiceWorkerState  state;\u000a\u000a    attribute EventHandler onstatechange;\u000a};\u000a\u000aServiceWorker implements AbstractWorker;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ServiceWorkerContainer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ServiceWorkerContainer.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/ServiceWorker/#serviceworkercontainer-interface\u000ainterface ServiceWorkerContainer : EventTarget {\u000a    readonly attribute ServiceWorker? controller;\u000a    [CallWith=ScriptState] readonly attribute Promise<ServiceWorkerRegistration> ready;\u000a\u000a    [CallWith=ScriptState, ImplementedAs=registerServiceWorker] Promise<ServiceWorkerRegistration> register(USVString url, optional RegistrationOptions options);\u000a    [CallWith=ScriptState] Promise<ServiceWorkerRegistration> getRegistration(optional USVString documentURL = \"\");\u000a    [CallWith=ScriptState] Promise<sequence<ServiceWorkerRegistration>> getRegistrations();\u000a\u000a    attribute EventHandler oncontrollerchange;\u000a    attribute EventHandler onmessage;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ServiceWorkerGlobalScope.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ServiceWorkerGlobalScope.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://w3c.github.io/ServiceWorker/#serviceworkerglobalscope-interface\u000a\u000a[\u000a    Exposed=ServiceWorker,\u000a    Global=(Worker,ServiceWorker)\u000a] interface ServiceWorkerGlobalScope : WorkerGlobalScope {\u000a\u000a  readonly attribute Clients clients;\u000a  readonly attribute ServiceWorkerRegistration registration;\u000a\u000a  [CallWith=ScriptState, RaisesException] Promise<Response> fetch(RequestInfo input, optional Dictionary init);\u000a\u000a  [CallWith=ScriptState] Promise<void> skipWaiting();\u000a\u000a  attribute EventHandler onactivate;\u000a  attribute EventHandler onfetch;\u000a  attribute EventHandler oninstall;\u000a  attribute EventHandler onmessage;\u000a  [OriginTrialEnabled=ForeignFetch] attribute EventHandler onforeignfetch;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/ServiceWorkerRegistration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/ServiceWorkerRegistration.idl"},specUrls:["https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#serviceworkerregistration-interface\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Exposed=(Window,Worker)\u000a] interface ServiceWorkerRegistration : EventTarget {\u000a    readonly attribute ServiceWorker? installing;\u000a    readonly attribute ServiceWorker? waiting;\u000a    readonly attribute ServiceWorker? active;\u000a    readonly attribute NavigationPreloadManager navigationPreload;\u000a\u000a    readonly attribute USVString scope;\u000a\u000a    [CallWith=ScriptState] Promise<void> update();\u000a    [CallWith=ScriptState] Promise<boolean> unregister();\u000a\u000a    attribute EventHandler onupdatefound;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/serviceworkers/WindowClient.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/serviceworkers/WindowClient.idl"},specUrls:["https://w3c.github.io/ServiceWorker/","https://w3c.github.io/ServiceWorker/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/ServiceWorker/#context-frame-type-enum\u000aenum ContextFrameType {\u000a    \"top-level\",\u000a    \"nested\",\u000a    \"auxiliary\",\u000a    \"none\"\u000a};\u000a\u000a// https://w3c.github.io/ServiceWorker/#windowclient\u000a[\u000a    Exposed=ServiceWorker,\u000a    ImplementedAs=ServiceWorkerWindowClient\u000a] interface WindowClient : Client {\u000a    readonly attribute VisibilityState visibilityState;\u000a    readonly attribute boolean focused;\u000a    [CallWith=ScriptState] Promise<WindowClient> focus();\u000a    [CallWith=ScriptState] Promise<WindowClient> navigate(USVString url);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/shapedetection/BarcodeDetector.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/shapedetection/BarcodeDetector.idl"},specUrls:["https://wicg.github.io/shape-detection-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/shape-detection-api/#barcode-detection-api\u000a\u000a[\u000a    Constructor,\u000a    ConstructorCallWith=ExecutionContext,\u000a    Exposed=(Window,Worker),\u000a    MeasureAs=ShapeDetection_BarcodeDetectorConstructor,\u000a    RuntimeEnabled=ShapeDetection\u000a] interface BarcodeDetector {\u000a    [CallWith=ScriptState] Promise<sequence<DetectedBarcode>> detect(ImageBitmapSource image);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/shapedetection/DetectedBarcode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/shapedetection/DetectedBarcode.idl"},specUrls:["https://wicg.github.io/shape-detection-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/shape-detection-api/#barcode-detection-api\u000a\u000a[\u000a    Constructor,\u000a    RuntimeEnabled=ShapeDetection\u000a] interface DetectedBarcode {\u000a    // TODO(mcasas): Implement missing fields. https://crbug.com/646083\u000a    [SameObject] readonly attribute DOMString rawValue;\u000a    [SameObject] readonly attribute DOMRect boundingBox;\u000a    // 4 corner points in clockwise direction starting with top-left. Due to\u000a    // possible perspective distortions, this is not necessarily a rectangle.\u000a    [SameObject, SaveSameObject] readonly attribute FrozenArray<Point2D> cornerPoints;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/shapedetection/DetectedFace.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/shapedetection/DetectedFace.idl"},specUrls:["https://wicg.github.io/shape-detection-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/shape-detection-api/#face-detection-api\u000a\u000a[\u000a    Constructor,\u000a    RuntimeEnabled=ShapeDetection\u000a] interface DetectedFace {\u000a    // TODO(xianglu): Implement any other fields. https://crbug.com/646083\u000a    [SameObject] readonly attribute DOMRect boundingBox;\u000a    [SameObject, SaveSameObject] readonly attribute FrozenArray<Landmark> landmarks;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/shapedetection/DetectedText.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/shapedetection/DetectedText.idl"},specUrls:["https://wicg.github.io/shape-detection-api/text.html"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/shape-detection-api/text.html#detectedtext-section\u000a\u000a[\u000a    Constructor,\u000a    RuntimeEnabled=ShapeDetection\u000a] interface DetectedText {\u000a    [SameObject] readonly attribute DOMString rawValue;\u000a    [SameObject] readonly attribute DOMRect boundingBox;\u000a    // 4 corner points in clockwise direction starting with top-left. Due to\u000a    // possible perspective distortions, this is not necessarily a rectangle.\u000a    [SameObject] readonly attribute FrozenArray<Point2D> cornerPoints;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/shapedetection/FaceDetector.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/shapedetection/FaceDetector.idl"},specUrls:["https://wicg.github.io/shape-detection-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/shape-detection-api/#face-detection-api\u000a\u000a[\u000a    Constructor(optional FaceDetectorOptions faceDetectorOptions),\u000a    ConstructorCallWith=ExecutionContext,\u000a    Exposed=(Window,Worker),\u000a    MeasureAs=ShapeDetection_FaceDetectorConstructor,\u000a    RuntimeEnabled=ShapeDetection\u000a] interface FaceDetector {\u000a    [CallWith=ScriptState] Promise<sequence<DetectedFace>> detect(ImageBitmapSource image);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/shapedetection/FaceDetectorOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/shapedetection/FaceDetectorOptions.idl"},specUrls:["https://wicg.github.io/shape-detection-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/shape-detection-api/#face-detection-api\u000a\u000adictionary FaceDetectorOptions {\u000a  unsigned short maxDetectedFaces = 10;\u000a  boolean fastMode = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/shapedetection/Landmark.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/shapedetection/Landmark.idl"},specUrls:["https://wicg.github.io/shape-detection-api/","https://wicg.github.io/shape-detection-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/shape-detection-api/#enumdef-landmarktype\u000aenum LandmarkType { \"mouth\", \"eye\" };\u000a\u000a// https://wicg.github.io/shape-detection-api/#dictdef-landmark\u000adictionary Landmark {\u000a  required Point2D location;\u000a  LandmarkType type;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/shapedetection/TextDetector.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/shapedetection/TextDetector.idl"},specUrls:["https://wicg.github.io/shape-detection-api/text.html"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/shape-detection-api/text.html#text-detection-api\u000a\u000a[\u000a    Constructor,\u000a    ConstructorCallWith=ExecutionContext,\u000a    Exposed=(Window,Worker),\u000a    MeasureAs=ShapeDetection_TextDetectorConstructor,\u000a    RuntimeEnabled=ShapeDetection\u000a] interface TextDetector {\u000a    [CallWith=ScriptState] Promise<sequence<DetectedText>> detect(ImageBitmapSource image);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechGrammar.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechGrammar.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#dfn-speechgrammar\u000a\u000a[\u000a    Constructor,\u000a    NoInterfaceObject\u000a] interface SpeechGrammar {\u000a    [URL,CallWith=ScriptState] attribute DOMString src;\u000a    attribute float weight;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechGrammarList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechGrammarList.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#dfn-speechgrammarlist\u000a\u000a[\u000a    Constructor,\u000a    NoInterfaceObject\u000a] interface SpeechGrammarList {\u000a    readonly attribute unsigned long length;\u000a    getter SpeechGrammar item(unsigned long index);\u000a    [CallWith=ScriptState] void addFromUri(DOMString src, optional float weight);\u000a    void addFromString(DOMString string, optional float weight);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechRecognition.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechRecognition.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#dfn-speechreco\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    Constructor,\u000a    ConstructorCallWith=ExecutionContext,\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface SpeechRecognition : EventTarget {\u000a    // recognition parameters\u000a    attribute SpeechGrammarList grammars;\u000a    attribute DOMString lang;\u000a    attribute boolean continuous;\u000a    attribute boolean interimResults;\u000a    attribute unsigned long maxAlternatives;\u000a\u000a    // Speech Recognition with WebRTC. https://crbug.com/408940\u000a    [RuntimeEnabled=MediaStreamSpeech] attribute MediaStreamTrack? audioTrack;\u000a\u000a    // methods to drive the speech interaction\u000a    [RaisesException, Measure] void start();\u000a    [ImplementedAs=stopFunction] void stop();\u000a    void abort();\u000a\u000a    // event methods\u000a    attribute EventHandler onaudiostart;\u000a    attribute EventHandler onsoundstart;\u000a    attribute EventHandler onspeechstart;\u000a    attribute EventHandler onspeechend;\u000a    attribute EventHandler onsoundend;\u000a    attribute EventHandler onaudioend;\u000a    attribute EventHandler onresult;\u000a    attribute EventHandler onnomatch;\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onstart;\u000a    attribute EventHandler onend;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechRecognitionAlternative.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechRecognitionAlternative.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#speechrecognitionalternative\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface SpeechRecognitionAlternative {\u000a    readonly attribute DOMString transcript;\u000a    readonly attribute float confidence;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechRecognitionError.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechRecognitionError.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#speechrecognitionerror\u000a\u000a[\u000a    NoInterfaceObject,\u000a    Constructor(DOMString type, optional SpeechRecognitionErrorInit initDict)\u000a] interface SpeechRecognitionError : Event {\u000a    readonly attribute DOMString error;\u000a    readonly attribute DOMString message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechRecognitionErrorInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechRecognitionErrorInit.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#dfn-speechrecognitionerror\u000a\u000adictionary SpeechRecognitionErrorInit : EventInit {\u000a    DOMString error;\u000a    DOMString message;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechRecognitionEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechRecognitionEvent.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#speechrecognitionevent\u000a\u000a[\u000a    NoInterfaceObject,\u000a    Constructor(DOMString type, optional SpeechRecognitionEventInit initDict)\u000a] interface SpeechRecognitionEvent : Event {\u000a    readonly attribute unsigned long resultIndex;\u000a    readonly attribute SpeechRecognitionResultList? results;\u000a\u000a    readonly attribute Document? interpretation;\u000a    readonly attribute Document? emma;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechRecognitionEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechRecognitionEventInit.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#speechrecognitionevent\u000a\u000adictionary SpeechRecognitionEventInit : EventInit {\u000a    unsigned long resultIndex;\u000a    SpeechRecognitionResultList? results;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechRecognitionResult.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechRecognitionResult.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#speechrecognitionresult\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface SpeechRecognitionResult {\u000a    readonly attribute unsigned long length;\u000a    getter SpeechRecognitionAlternative item(unsigned long index);\u000a    readonly attribute boolean isFinal;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechRecognitionResultList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechRecognitionResultList.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *  * Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a *  * Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#speechrecognitionresultlist\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface SpeechRecognitionResultList {\u000a    readonly attribute unsigned long length;\u000a    getter SpeechRecognitionResult item(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechSynthesis.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechSynthesis.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2013 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#tts-section\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface SpeechSynthesis : EventTarget {\u000a    readonly attribute boolean pending;\u000a    readonly attribute boolean speaking;\u000a    readonly attribute boolean paused;\u000a\u000a    void speak(SpeechSynthesisUtterance utterance);\u000a    void cancel();\u000a    void pause();\u000a    void resume();\u000a    sequence<SpeechSynthesisVoice> getVoices();\u000a\u000a    attribute EventHandler onvoiceschanged;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechSynthesisEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechSynthesisEvent.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2013 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#tts-section\u000a\u000a[\u000a    RuntimeEnabled=ScriptedSpeech\u000a] interface SpeechSynthesisEvent : Event {\u000a    readonly attribute SpeechSynthesisUtterance utterance;\u000a    readonly attribute unsigned long charIndex;\u000a    readonly attribute float elapsedTime;\u000a    readonly attribute DOMString name;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechSynthesisUtterance.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechSynthesisUtterance.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2013 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#tts-section\u000a\u000a[\u000a    Constructor(optional DOMString text = null),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RuntimeEnabled=ScriptedSpeech\u000a] interface SpeechSynthesisUtterance : EventTarget {\u000a    attribute DOMString text;\u000a    attribute DOMString lang;\u000a    attribute SpeechSynthesisVoice? voice;\u000a    attribute float volume;\u000a    attribute float rate;\u000a    attribute float pitch;\u000a\u000a    attribute EventHandler onstart;\u000a    attribute EventHandler onend;\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onpause;\u000a    attribute EventHandler onresume;\u000a    attribute EventHandler onmark;\u000a    attribute EventHandler onboundary;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/SpeechSynthesisVoice.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/SpeechSynthesisVoice.idl"},specUrls:["https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html"],contents:"/*\u000a * Copyright (C) 2013 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html#tts-section\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface SpeechSynthesisVoice {\u000a    readonly attribute DOMString voiceURI;\u000a    readonly attribute DOMString name;\u000a    readonly attribute DOMString lang;\u000a    readonly attribute boolean localService;\u000a    [ImplementedAs=isDefault] readonly attribute boolean default;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/WindowSpeech.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/WindowSpeech.idl"},contents:"// Copyright (c) 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=DOMWindowSpeech,\u000a    RuntimeEnabled=ScriptedSpeech\u000a] partial interface Window {\u000a    [Measure] attribute SpeechGrammarConstructor webkitSpeechGrammar;\u000a    [Measure] attribute SpeechGrammarListConstructor webkitSpeechGrammarList;\u000a    [Measure] attribute SpeechRecognitionConstructor webkitSpeechRecognition;\u000a    [Measure] attribute SpeechRecognitionErrorConstructor webkitSpeechRecognitionError;\u000a    [Measure] attribute SpeechRecognitionEventConstructor webkitSpeechRecognitionEvent;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/speech/WindowSpeechSynthesis.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/speech/WindowSpeechSynthesis.idl"},contents:"/*\u000a * Copyright (C) 2013 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a[\u000a    ImplementedAs=DOMWindowSpeechSynthesis,\u000a    RuntimeEnabled=ScriptedSpeech\u000a] partial interface Window {\u000a    [Measure, CallWith=ScriptState] readonly attribute SpeechSynthesis speechSynthesis;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/srcobject/HTMLMediaElementSrcObject.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/srcobject/HTMLMediaElementSrcObject.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-srcobject\u000a\u000a// TODO(guidou): Add support for MediaSource and Blob, as defined in the spec.\u000atypedef MediaStream MediaProvider;\u000a\u000a[\u000a    ImplementedAs=HTMLMediaElementSrcObject\u000a] partial interface HTMLMediaElement {\u000a    // TODO(haraken): Per the spec, the srcObject should be defined in\u000a    // HTMLMediaElement.idl. However, we cannot define srcObject in\u000a    // HTMLMediaElement.idl because of the dependency restriction from modules/\u000a    // to core/. For now we avoid the problem by using a partial interface.\u000a    [Measure] attribute MediaProvider? srcObject;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/storage/Storage.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/storage/Storage.idl"},contents:"/*\u000a * Copyright (C) 2008 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/webstorage.html#the-storage-interface\u000a\u000ainterface Storage {\u000a    [RaisesException=Getter] readonly attribute unsigned long length;\u000a    [RaisesException] DOMString? key(unsigned long index);\u000a    [LogActivity, RaisesException] getter DOMString? getItem(DOMString key);\u000a    [LogActivity, RaisesException] setter void setItem(DOMString key, DOMString value);\u000a    [LogActivity, RaisesException] deleter void removeItem(DOMString key);\u000a    [LogActivity, RaisesException] void clear();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/storage/StorageEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/storage/StorageEvent.idl"},contents:"/*\u000a * Copyright (C) 2008, 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/webstorage.html#the-storageevent-interface\u000a\u000a[\u000a    Constructor(DOMString type, optional StorageEventInit eventInitDict)\u000a] interface StorageEvent : Event {\u000a    readonly attribute DOMString? key;\u000a    readonly attribute DOMString? oldValue;\u000a    readonly attribute DOMString? newValue;\u000a    readonly attribute DOMString url;\u000a    readonly attribute Storage? storageArea;\u000a\u000a    // Non-standard API\u000a    [Measure, LegacyInterfaceTypeChecking] void initStorageEvent([Default=Undefined] optional DOMString typeArg,\u000a                                                                 [Default=Undefined] optional boolean canBubbleArg,\u000a                                                                 [Default=Undefined] optional boolean cancelableArg,\u000a                                                                 [Default=Undefined] optional DOMString keyArg,\u000a                                                                 [Default=Undefined] optional DOMString? oldValueArg,\u000a                                                                 [Default=Undefined] optional DOMString? newValueArg,\u000a                                                                 [Default=Undefined] optional DOMString urlArg,\u000a                                                                 [Default=Undefined] optional Storage storageAreaArg);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/storage/StorageEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/storage/StorageEventInit.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/webstorage.html#the-storageevent-interface\u000a\u000adictionary StorageEventInit : EventInit {\u000a    DOMString? key;\u000a    DOMString? oldValue;\u000a    DOMString? newValue;\u000a    DOMString url;\u000a    Storage? storageArea;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/storage/WindowStorage.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/storage/WindowStorage.idl"},specUrls:["https://html.spec.whatwg.org/","https://html.spec.whatwg.org/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=DOMWindowStorage\u000a] partial interface Window {\u000a    // https://html.spec.whatwg.org/#the-sessionstorage-attribute\u000a    [LogActivity=GetterOnly, RaisesException=Getter] readonly attribute Storage sessionStorage;\u000a    // https://html.spec.whatwg.org/#the-localstorage-attribute\u000a    [LogActivity=GetterOnly, RaisesException=Getter] readonly attribute Storage localStorage;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vibration/NavigatorVibration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vibration/NavigatorVibration.idl"},specUrls:["https://w3c.github.io/vibration/"],contents:"/*\u000a *  Copyright (C) 2012 Samsung Electronics\u000a *\u000a *  This library is free software; you can redistribute it and/or\u000a *  modify it under the terms of the GNU Library General Public\u000a *  License as published by the Free Software Foundation; either\u000a *  version 2 of the License, or (at your option) any later version.\u000a *\u000a *  This library is distributed in the hope that it will be useful,\u000a *  but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\u000a *  Library General Public License for more details.\u000a *\u000a *  You should have received a copy of the GNU Library General Public License\u000a *  along with this library; see the file COPYING.LIB.  If not, write to\u000a *  the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\u000a *  Boston, MA 02110-1301, USA.\u000a */\u000a\u000a// https://w3c.github.io/vibration/#vibration-interface\u000a\u000a[\u000a    ImplementedAs=NavigatorVibration\u000a] partial interface Navigator {\u000a    // FIXME: should be union type https://crbug.com/240176\u000a    // FIXME: The contents of the pattern argument should be clamped.\u000a    // See https://code.google.com/p/chromium/issues/detail?id=310138\u000a    boolean vibrate([Clamp] unsigned long pattern);\u000a    boolean vibrate(sequence<unsigned long> pattern);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/NavigatorVR.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/NavigatorVR.idl"},specUrls:["https://w3c.github.io/webvr/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/#interface-navigator\u000a[\u000a    ImplementedAs=NavigatorVR,\u000a    OriginTrialEnabled=WebVR\u000a] partial interface Navigator {\u000a    // Latest API\u000a    [SecureContext] readonly attribute VR vr;\u000a\u000a    // Legacy API\u000a    [CallWith=ScriptState] Promise getVRDisplays();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/VRDisplay.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/VRDisplay.idl"},specUrls:["https://w3c.github.io/webvr/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000aenum VREye {\u000a    \"left\",\u000a    \"right\"\u000a};\u000a\u000a// https://w3c.github.io/webvr/#interface-vrdisplay\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    OriginTrialEnabled=WebVR\u000a] interface VRDisplay : EventTarget {\u000a    // An identifier for this device unique across VRDisplays.\u000a    readonly attribute unsigned long displayId;\u000a\u000a    // A user-readable name identifying the device.\u000a    [MeasureAs=VRDisplayDisplayName] readonly attribute DOMString displayName;\u000a\u000a    readonly attribute boolean isPresenting;\u000a\u000a    // [Constant]?\u000a    readonly attribute VRDisplayCapabilities capabilities;\u000a\u000a    readonly attribute VRStageParameters stageParameters;\u000a\u000a    boolean getFrameData(VRFrameData frameData);\u000a\u000a    attribute double depthNear;\u000a    attribute double depthFar;\u000a\u000a    VREyeParameters getEyeParameters(VREye whichEye);\u000a\u000a    long requestAnimationFrame(FrameRequestCallback callback);\u000a    void cancelAnimationFrame(long handle);\u000a\u000a    // Begin presenting to the VRDisplay. Must be called in response to a user\u000a    // gesture. Repeat calls while already presenting will update the layer\u000a    // being displayed.\u000a    [CallWith=ScriptState] Promise requestPresent(sequence<VRLayerInit> layers);\u000a\u000a    // Stops presenting to the VRDisplay.\u000a    [CallWith=ScriptState] Promise exitPresent();\u000a\u000a    // Get the sources currently being presented.\u000a    sequence<VRLayerInit> getLayers();\u000a\u000a    // The layer provided to the `VRDisplay` will be captured and presented\u000a    // in the HMD. Calling this function has the same effect on the source\u000a    // canvas as any other operation that uses its source image, and canvases\u000a    // created without preserveDrawingBuffer set to true will be cleared.\u000a    void submitFrame();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/VRDisplayCapabilities.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/VRDisplayCapabilities.idl"},specUrls:["https://w3c.github.io/webvr/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/#interface-vrdisplaycapabilities\u000a[\u000a    OriginTrialEnabled=WebVR\u000a] interface VRDisplayCapabilities {\u000a  // Whether or not the VR display is capable of reporting user position.\u000a  // If false position may still be reported using simulated values like\u000a  // neck modeling.\u000a  readonly attribute boolean hasPosition;\u000a\u000a  // Whether or not the VRDisplay is separate from the device’s primary display.\u000a  // If presenting VR content will obscure other content on the device, this\u000a  // should be false. When false VR content should not be mirrored.\u000a  readonly attribute boolean hasExternalDisplay;\u000a\u000a  // Whether or not the VRDisplay is capable of presenting content to an HMD or\u000a  // similar device. Can be used to indicate “magic window” devices that are\u000a  // capable of 6DoF tracking but for which requestPresent is not meaningful. If\u000a  // false then calls to requestPresent should always fail, and getEyeParameters\u000a  // should return null.\u000a  readonly attribute boolean canPresent;\u000a\u000a  // The maximum length of the array that VRDisplay.requestPresent will accept.\u000a  readonly attribute unsigned long maxLayers;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/VRDisplayEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/VRDisplayEvent.idl"},specUrls:["https://w3c.github.io/webvr/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000aenum VRDisplayEventReason {\u000a    \"connected\",\u000a    \"disconnected\",\u000a    \"navigation\",\u000a    \"mounted\",\u000a    \"unmounted\"\u000a};\u000a\u000a// https://w3c.github.io/webvr/#interface-vrdisplayevent\u000a[\u000a    OriginTrialEnabled=WebVR,\u000a    Constructor(DOMString type, optional VRDisplayEventInit eventInitDict)\u000a] interface VRDisplayEvent : Event {\u000a    readonly attribute VRDisplay display;\u000a    readonly attribute VRDisplayEventReason reason;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/VRDisplayEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/VRDisplayEventInit.idl"},specUrls:["https://w3c.github.io/webvr/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/#interface-vrdisplayeventinit\u000a\u000adictionary VRDisplayEventInit : EventInit {\u000a    // TODO(foolip): |display| should be required and not nullable.\u000a    // https://crbug.com/647693\u000a    // https://github.com/w3c/webvr/issues/83\u000a    VRDisplay? display;\u000a    VRDisplayEventReason reason;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/VREyeParameters.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/VREyeParameters.idl"},specUrls:["https://w3c.github.io/webvr/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/#interface-vreyeparameters\u000a[\u000a    OriginTrialEnabled=WebVR\u000a] interface VREyeParameters {\u000a  /* These values will vary after a FOV has been set */\u000a  [DeprecateAs=VREyeParametersOffset] readonly attribute Float32Array offset;\u000a  readonly attribute unsigned long renderWidth;\u000a  readonly attribute unsigned long renderHeight;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/mediarecorder/BlobEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/mediarecorder/BlobEventInit.idl"},specUrls:["https://w3c.github.io/mediacapture-record/MediaRecorder.html"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/mediacapture-record/MediaRecorder.html#blobeventinit\u000a\u000adictionary BlobEventInit : EventInit {\u000a    required Blob data;\u000a             DOMHighResTimeStamp timecode;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/VRPose.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/VRPose.idl"},specUrls:["https://w3c.github.io/webvr/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/#interface-vrpose\u000a[\u000a    OriginTrialEnabled=WebVR\u000a] interface VRPose {\u000a    readonly attribute Float32Array? position;\u000a    [MeasureAs=VRPoseLinearVelocity] readonly attribute Float32Array? linearVelocity;\u000a    [MeasureAs=VRPoseLinearAcceleration] readonly attribute Float32Array? linearAcceleration;\u000a    readonly attribute Float32Array? orientation;\u000a    [MeasureAs=VRPoseAngularVelocity] readonly attribute Float32Array? angularVelocity;\u000a    [MeasureAs=VRPoseAngularAcceleration] readonly attribute Float32Array? angularAcceleration;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VR.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VR.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vr-interface\u000a[\u000a    SecureContext,\u000a    RuntimeEnabled=WebVR2\u000a] interface VR : EventTarget {\u000a  attribute EventHandler ondeviceconnect;\u000a  attribute EventHandler ondevicedisconnect;\u000a\u000a  [CallWith=ScriptState] Promise requestDevice();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/VRStageParameters.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/VRStageParameters.idl"},specUrls:["https://w3c.github.io/webvr/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/#interface-vrstageparameters\u000a[\u000a    OriginTrialEnabled=WebVR\u000a] interface VRStageParameters {\u000a  // A 16 element array containing the components of a 4x4 transform\u000a  // matrix.  This matrix transforms the sitting space position\u000a  // returned by get{Immediate}Pose() to a standing space position.\u000a  readonly attribute Float32Array sittingToStandingTransform;\u000a\u000a  // Dimensions of the play area bounds. The bounds are defined\u000a  // as an axis aligned rectangle on the floor.\u000a  // The center of the rectangle is at (0,0,0) in standing space\u000a  // coordinates.\u000a  // These bounds are defined for safety purposes.\u000a  // Content should not require the user to move beyond these\u000a  // bounds; however, it is possible for the user to ignore\u000a  // the bounds resulting in position values outside of\u000a  // this rectangle.\u000a  readonly attribute float sizeX;\u000a  readonly attribute float sizeZ;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRDevice.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRDevice.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrdevice-interface\u000a[\u000a    SecureContext,\u000a    RuntimeEnabled=WebVR2\u000a] interface VRDevice : EventTarget {\u000a  readonly attribute DOMString deviceName;\u000a  readonly attribute boolean isExternal;\u000a\u000a  [CallWith=ScriptState] Promise supportsSession([PermissiveDictionaryConversion] optional VRSessionCreationOptions options);\u000a  [CallWith=ScriptState] Promise requestSession([PermissiveDictionaryConversion] optional VRSessionCreationOptions options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRDeviceEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRDeviceEvent.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrdeviceevent-interface\u000a[\u000a    SecureContext,\u000a    RuntimeEnabled=WebVR2,\u000a    Constructor(DOMString type, VRDeviceEventInit eventInitDict)\u000a] interface VRDeviceEvent : Event {\u000a  readonly attribute VRDevice device;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRCoordinateSystem.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRCoordinateSystem.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrcoordinatesystem-interface\u000a[\u000a    SecureContext,\u000a    RuntimeEnabled=WebVR2\u000a] interface VRCoordinateSystem {\u000a  Float32Array? getTransformTo(VRCoordinateSystem other);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRDevicePose.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRDevicePose.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrdevicepose-interface\u000a[\u000a    SecureContext,\u000a    RuntimeEnabled=WebVR2\u000a] interface VRDevicePose {\u000a  readonly attribute Float32Array poseModelMatrix;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRFrameOfReference.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRFrameOfReference.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrframeofreference-interface\u000a\u000aenum VRFrameOfReferenceType {\u000a  \"headModel\",\u000a  \"eyeLevel\",\u000a  \"stage\",\u000a};\u000a\u000a[\u000a    SecureContext,\u000a    RuntimeEnabled=WebVR2\u000a] interface VRFrameOfReference : VRCoordinateSystem {\u000a  readonly attribute VRStageBounds? bounds;\u000a  readonly attribute double emulatedHeight;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRDeviceEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRDeviceEventInit.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrdeviceevent-interface\u000a[\u000a    SecureContext\u000a] dictionary VRDeviceEventInit : EventInit {\u000a  required VRDevice device;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRFrameOfReferenceOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRFrameOfReferenceOptions.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrframeofreference-interface\u000a[\u000a    SecureContext\u000a] dictionary VRFrameOfReferenceOptions {\u000a  boolean disableStageEmulation = false;\u000a  double stageEmulationHeight = 0.0;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRPresentationFrame.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRPresentationFrame.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrpresentationframe-interface\u000a[\u000a    SecureContext,\u000a    RuntimeEnabled=WebVR2\u000a] interface VRPresentationFrame {\u000a  readonly attribute VRSession session;\u000a\u000a  VRDevicePose? getDevicePose(VRCoordinateSystem coordinateSystem);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRFrameRequestCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRFrameRequestCallback.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrframerequestcallback\u000acallback VRFrameRequestCallback = void (VRPresentationFrame frame);\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRSessionCreationOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRSessionCreationOptions.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrsessioncreationoptions-interface\u000a[\u000a    SecureContext\u000a] dictionary VRSessionCreationOptions {\u000a  boolean exclusive = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRSessionEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRSessionEvent.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrsessionevent-interface\u000a[\u000a    SecureContext,\u000a    RuntimeEnabled=WebVR2,\u000a    Constructor(DOMString type, VRSessionEventInit eventInitDict)\u000a] interface VRSessionEvent : Event {\u000a  readonly attribute VRSession session;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRSession.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRSession.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrsession-interface\u000a[\u000a    RuntimeEnabled=WebVR2\u000a] interface VRSession : EventTarget {\u000a  readonly attribute VRDevice device;\u000a  readonly attribute boolean exclusive;\u000a\u000a  attribute double depthNear;\u000a  attribute double depthFar;\u000a\u000a  attribute EventHandler onblur;\u000a  attribute EventHandler onfocus;\u000a  attribute EventHandler onresetpose;\u000a  attribute EventHandler onend;\u000a\u000a  [CallWith=ScriptState] Promise<VRFrameOfReference> requestFrameOfReference(VRFrameOfReferenceType type, [PermissiveDictionaryConversion] optional VRFrameOfReferenceOptions options);\u000a\u000a  long requestFrame(VRFrameRequestCallback callback);\u000a  void cancelFrame(long handle);\u000a\u000a  [CallWith=ScriptState] Promise<void> end();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRStageBounds.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRStageBounds.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrstagebounds-interface\u000a[\u000a    SecureContext,\u000a    RuntimeEnabled=WebVR2\u000a] interface VRStageBounds {\u000a  readonly attribute FrozenArray<VRStageBoundsPoint> geometry;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRStageBoundsPoint.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRStageBoundsPoint.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrstageboundspoint-interface\u000a[\u000a    SecureContext,\u000a    RuntimeEnabled=WebVR2\u000a] interface VRStageBoundsPoint {\u000a  readonly attribute double x;\u000a  readonly attribute double z;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/latest/VRSessionEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/latest/VRSessionEventInit.idl"},specUrls:["https://w3c.github.io/webvr/spec/latest/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/spec/latest/#vrsessionevent-interface\u000a[\u000a    SecureContext\u000a] dictionary VRSessionEventInit : EventInit {\u000a  required VRSession session;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/wake_lock/ScreenWakeLock.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/wake_lock/ScreenWakeLock.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a[\u000a    ImplementedAs=ScreenWakeLock,\u000a    RuntimeEnabled=WakeLock\u000a] partial interface Screen {\u000a    attribute boolean keepAwake;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AnalyserNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AnalyserNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-analysernode-interface\u000a[\u000a    Constructor(BaseAudioContext context, optional AnalyserOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface AnalyserNode : AudioNode {\u000a    [RaisesException=Setter] attribute unsigned long fftSize;\u000a    readonly attribute unsigned long frequencyBinCount;\u000a\u000a    // minDecibels / maxDecibels represent the range to scale the FFT analysis data for conversion to unsigned byte values.\u000a    [RaisesException=Setter] attribute double minDecibels;\u000a    [RaisesException=Setter] attribute double maxDecibels;\u000a\u000a    // A value from 0.0 -> 1.0 where 0.0 represents no time averaging with the last analysis frame.\u000a    [RaisesException=Setter] attribute double smoothingTimeConstant;\u000a\u000a    // Copies the current frequency data into the passed array.\u000a    // If the array has fewer elements than the frequencyBinCount, the excess elements will be dropped.\u000a    void getFloatFrequencyData(Float32Array array);\u000a    void getByteFrequencyData(Uint8Array array);\u000a\u000a    // Real-time waveform data\u000a    void getFloatTimeDomainData(Float32Array array);\u000a    void getByteTimeDomainData(Uint8Array array);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AnalyserOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AnalyserOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#analyseroptions\u000adictionary AnalyserOptions : AudioNodeOptions {\u000a    unsigned long fftSize = 2048;\u000a    float maxDecibels = -30;\u000a    float minDecibels = -100;\u000a    float smoothingTimeConstant = 0.8;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioBuffer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioBuffer.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#AudioBuffer\u000a[\u000a    Constructor(AudioBufferOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a] interface AudioBuffer {\u000a    readonly attribute long length; // in sample-frames\u000a    readonly attribute double duration; // in seconds\u000a    readonly attribute float sampleRate; // in sample-frames per second\u000a\u000a    // Channel access\u000a    readonly attribute unsigned long numberOfChannels;\u000a    [RaisesException] Float32Array getChannelData(unsigned long channelIndex);\u000a    [RaisesException] void copyFromChannel(Float32Array destination, long channelNumber, optional unsigned long startInChannel = 0);\u000a    [RaisesException] void copyToChannel(Float32Array source, long channelNumber, optional unsigned long startInChannel = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioBufferSourceNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioBufferSourceNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// A cached (non-streamed), memory-resident audio source\u000a// See https://webaudio.github.io/web-audio-api/#AudioBufferSourceNode\u000a[\u000a    Constructor(BaseAudioContext context, optional AudioBufferSourceOptions options),\u000a    RaisesException=Constructor,\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Measure\u000a]\u000ainterface AudioBufferSourceNode : AudioScheduledSourceNode {\u000a    [RaisesException=Setter] attribute AudioBuffer? buffer;\u000a\u000a    readonly attribute AudioParam playbackRate;\u000a    readonly attribute AudioParam detune;\u000a\u000a    attribute boolean loop;\u000a    attribute double loopStart;\u000a    attribute double loopEnd;\u000a\u000a    [RaisesException] void start(optional double when = 0, optional double grainOffset, optional double grainDuration);\u000a\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioBufferOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioBufferOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#audiobufferoptions\u000adictionary AudioBufferOptions {\u000a    unsigned long numberOfChannels = 1;\u000a    required unsigned long length;\u000a    required float sampleRate;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioContext.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioContext.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a * Copyright (C) 2011 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000aenum AudioContextLatencyCategory {\u000a    \"balanced\",\u000a    \"interactive\",\u000a    \"playback\"\u000a};\u000a\u000a// See https://webaudio.github.io/web-audio-api/#AudioContext\u000a[\u000a    ActiveScriptWrappable,\u000a    Constructor(optional AudioContextOptions contextOptions),\u000a    ConstructorCallWith=Document,\u000a    DependentLifetime,\u000a    RaisesException=Constructor,\u000a    Measure\u000a] interface AudioContext : BaseAudioContext {\u000a    [MeasureAs=AudioContextSuspend, CallWith=ScriptState, ImplementedAs=suspendContext] Promise<void> suspend();\u000a    [MeasureAs=AudioContextClose, CallWith=ScriptState, ImplementedAs=closeContext] Promise<void> close();\u000a\u000a    // Output timestamp\u000a    [MeasureAs=AudioContextGetOutputTimestamp, CallWith=ScriptState] AudioTimestamp getOutputTimestamp();\u000a\u000a    // Number of seconds of processing latency incurred by the AudioContext\u000a    // passing the audio from the AudioDestinationNode to the audio subsystem\u000a    readonly attribute double baseLatency;\u000a\u000a    // Sources\u000a    // TODO(rtoy): The following methods should be here instead of in BaseAudioContext:\u000a    //\u000a    // createMediaElementSource(HTMLMediaElement mediaElement)\u000a    // createMediaStreamSource(MediaStream mediaStream)\u000a    // createMediaStreamDestination()\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioContextOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioContextOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#audiocontextoptions\u000adictionary AudioContextOptions {\u000a    // If passed as a double this should be the requested output latency in\u000a    // seconds, without taking into account double buffering (same as\u000a    // AudioContext.baseLatency).\u000a    (AudioContextLatencyCategory or double) latencyHint = \"interactive\";\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioBufferSourceOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioBufferSourceOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#audiobuffersourceoptions\u000adictionary AudioBufferSourceOptions {\u000a    AudioBuffer? buffer;\u000a    float detune = 0;\u000a    boolean loop = false;\u000a    double loopEnd = 0;\u000a    double loopStart = 0;\u000a    float playbackRate = 1;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioListener.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioListener.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#AudioListener\u000ainterface AudioListener {\u000a    [MeasureAs=AudioListenerSetPosition] void setPosition(float x, float y, float z);\u000a    [MeasureAs=AudioListenerSetOrientation] void setOrientation(float x, float y, float z, float xUp, float yUp, float zUp);\u000a\u000a    // Location of the listener\u000a    readonly attribute AudioParam positionX;\u000a    readonly attribute AudioParam positionY;\u000a    readonly attribute AudioParam positionZ;\u000a\u000a    // Forward direction vector of the listener\u000a    readonly attribute AudioParam forwardX;\u000a    readonly attribute AudioParam forwardY;\u000a    readonly attribute AudioParam forwardZ;\u000a\u000a    // Up direction vector for the listener\u000a    readonly attribute AudioParam upX;\u000a    readonly attribute AudioParam upY;\u000a    readonly attribute AudioParam upZ;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// https://webaudio.github.io/web-audio-api/#the-audionode-interface\u000a\u000aenum ChannelCountMode {\u000a    \"max\",\u000a    \"clamped-max\",\u000a    \"explicit\"\u000a};\u000a\u000aenum ChannelInterpretation {\u000a    \"speakers\",\u000a    \"discrete\"\u000a};\u000a\u000ainterface AudioNode : EventTarget {\u000a    [RaisesException, MeasureAs=AudioNodeConnectToAudioNode] AudioNode connect(AudioNode destination, optional unsigned long output = 0, optional unsigned long input = 0);\u000a    [RaisesException, MeasureAs=AudioNodeConnectToAudioParam] void connect(AudioParam destination, optional unsigned long output = 0);\u000a    void disconnect();\u000a    [RaisesException, MeasureAs=AudioNodeDisconnectFromAudioNode] void disconnect(unsigned long output);\u000a    [RaisesException, MeasureAs=AudioNodeDisconnectFromAudioNode] void disconnect(AudioNode destination);\u000a    [RaisesException, MeasureAs=AudioNodeDisconnectFromAudioNode] void disconnect(AudioNode destination, unsigned long output);\u000a    [RaisesException, MeasureAs=AudioNodeDisconnectFromAudioNode] void disconnect(AudioNode destination, unsigned long output, unsigned long input);\u000a    [RaisesException, MeasureAs=AudioNodeDisconnectFromAudioParam] void disconnect(AudioParam destination);\u000a    [RaisesException, MeasureAs=AudioNodeDisconnectFromAudioParam] void disconnect(AudioParam destination, unsigned long output);\u000a    readonly attribute BaseAudioContext context;\u000a    readonly attribute unsigned long numberOfInputs;\u000a    readonly attribute unsigned long numberOfOutputs;\u000a    [RaisesException=Setter] attribute unsigned long         channelCount;\u000a    [RaisesException=Setter] attribute ChannelCountMode      channelCountMode;\u000a    [RaisesException=Setter] attribute ChannelInterpretation channelInterpretation;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioDestinationNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioDestinationNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#AudioDestinationNode\u000ainterface AudioDestinationNode : AudioNode {\u000a    readonly attribute unsigned long maxChannelCount;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioParam.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioParam.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#AudioParam\u000ainterface AudioParam {\u000a    attribute float value;\u000a    readonly attribute float defaultValue;\u000a\u000a    // Nominal range for the value.\u000a    readonly attribute float minValue;\u000a    readonly attribute float maxValue;\u000a\u000a    // Parameter automation.\u000a    [RaisesException, MeasureAs=AudioParamSetValueAtTime] AudioParam setValueAtTime(float value, double time);\u000a    [RaisesException, MeasureAs=AudioParamLinearRampToValueAtTime] AudioParam linearRampToValueAtTime(float value, double time);\u000a    [RaisesException, MeasureAs=AudioParamExponentialRampToValueAtTime] AudioParam exponentialRampToValueAtTime(float value, double time);\u000a\u000a    // Exponentially approach the target with a rate having the given time constant.\u000a    [RaisesException, MeasureAs=AudioParamSetTargetAtTime] AudioParam setTargetAtTime(float target, double time, double timeConstant);\u000a\u000a    // Sets an array of arbitrary parameter values starting at time for the given duration.\u000a    // The number of values will be scaled to fit into the desired duration.\u000a    [RaisesException, MeasureAs=AudioParamSetValueCurveAtTime] AudioParam setValueCurveAtTime(sequence<float> values, double time, double duration);\u000a\u000a    // Cancels all scheduled parameter changes with times greater than or equal to startTime.\u000a    [RaisesException, MeasureAs=AudioParamCancelScheduledValues] AudioParam cancelScheduledValues(double startTime);\u000a\u000a    // Cancel scheduled parameter changes and hold the last value\u000a    [RaisesException, MeasureAs=AudioParamCancelAndHoldAtTime] AudioParam cancelAndHoldAtTime(double startTime);\u000a\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioParamDescriptor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioParamDescriptor.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See: https://webaudio.github.io/web-audio-api/#idl-def-AudioParamDescriptor\u000adictionary AudioParamDescriptor {\u000a    required DOMString name;\u000a    float defaultValue = 0;\u000a\u000a    // TODO(hongchan): These numbers are minimum/maximum number possible for \u000a    // |float| type. Remove this comment when the spec is fixed.\u000a    float minValue = -3.4028235e38;\u000a    float maxValue = 3.4028235e38;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioNodeOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioNodeOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#dictionary-audionodeoptions-members\u000adictionary AudioNodeOptions {\u000a    unsigned long channelCount;\u000a    ChannelCountMode channelCountMode;\u000a    ChannelInterpretation channelInterpretation;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioParamMap.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioParamMap.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webaudio.github.io/web-audio-api/#idl-def-AudioParamMap\u000a[\u000a  RuntimeEnabled=AudioWorklet\u000a] interface AudioParamMap {\u000a    readonly maplike<DOMString, AudioParam>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioProcessingEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioProcessingEvent.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-audioprocessingevent-interface---deprecated\u000a[\u000a    Constructor(DOMString type, AudioProcessingEventInit eventInitDict)\u000a]\u000ainterface AudioProcessingEvent : Event {\u000a    readonly attribute double playbackTime;\u000a    readonly attribute AudioBuffer inputBuffer;\u000a    readonly attribute AudioBuffer outputBuffer;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioProcessingEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioProcessingEventInit.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#audioprocessingeventinit\u000adictionary AudioProcessingEventInit : EventInit {\u000a    required double playbackTime;\u000a    required AudioBuffer inputBuffer;\u000a    required AudioBuffer outputBuffer;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioScheduledSourceNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioScheduledSourceNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a]\u000ainterface AudioScheduledSourceNode : AudioNode {\u000a    [RaisesException] void start(optional double when);\u000a    [RaisesException] void stop(optional double when);\u000a    attribute EventHandler onended;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioTimestamp.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioTimestamp.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#audiotimestamp\u000adictionary AudioTimestamp {\u000a    double contextTime;\u000a    DOMHighResTimeStamp performanceTime;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioWorkletGlobalScope.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioWorkletGlobalScope.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope\u000a\u000a[\u000a    Exposed=AudioWorklet,\u000a    Global=(Worklet,AudioWorklet),\u000a    RuntimeEnabled=AudioWorklet\u000a] interface AudioWorkletGlobalScope : WorkletGlobalScope {\u000a    [RaisesException] void registerProcessor(DOMString name, Function processorConstructor);\u000a    readonly attribute double currentTime;\u000a    readonly attribute float sampleRate;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioWorkletNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioWorkletNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webaudio.github.io/web-audio-api/#AudioWorkletNode\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    Constructor(BaseAudioContext context, DOMString name, optional AudioWorkletNodeOptions options),\u000a    DependentLifetime,\u000a    Global=(Worklet,AudioWorklet),\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=AudioWorklet\u000a] interface AudioWorkletNode : AudioNode {\u000a    readonly attribute AudioParamMap parameters;\u000a    // TODO(hongchan): Implement the following.\u000a    // readonly attribute MessagePort port;\u000a    // readonly attribute AudioWorkletProcessorState processorState;\u000a    // attribute EventHandler onprocessorstatechange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioWorkletProcessor.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioWorkletProcessor.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webaudio.github.io/web-audio-api/#AudioWorkletProcessor\u000a\u000a[\u000a    Exposed=AudioWorklet,\u000a    Global=(Worklet,AudioWorklet),\u000a    RuntimeEnabled=AudioWorklet\u000a] interface AudioWorkletProcessor {\u000a  // TODO(hongchan): Implement the following.\u000a  // readonly attribute MessagePort port;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/BaseAudioContext.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/BaseAudioContext.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#BaseAudioContext\u000a\u000aenum AudioContextState {\u000a    \"suspended\",\u000a    \"running\",\u000a    \"closed\"\u000a};\u000a\u000acallback DecodeErrorCallback = void (DOMException error);\u000acallback DecodeSuccessCallback = void (AudioBuffer decodedData);\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface BaseAudioContext : EventTarget {\u000a    // All rendered audio ultimately connects to destination, which represents the audio hardware.\u000a    readonly attribute AudioDestinationNode destination;\u000a\u000a    // All scheduled times are relative to this time in seconds.\u000a    readonly attribute double currentTime;\u000a\u000a    // All AudioNodes in the context run at this sample-rate (sample-frames per second).\u000a    readonly attribute float sampleRate;\u000a\u000a    // All panning is relative to this listener.\u000a    readonly attribute AudioListener listener;\u000a\u000a    // Current state of the AudioContext\u000a    readonly attribute AudioContextState state;\u000a\u000a    [RaisesException] AudioBuffer createBuffer(unsigned long numberOfChannels, unsigned long numberOfFrames, float sampleRate);\u000a\u000a    // Asynchronous audio file data decoding.\u000a    [RaisesException, MeasureAs=AudioContextDecodeAudioData, CallWith=ScriptState] Promise<AudioBuffer> decodeAudioData(ArrayBuffer audioData, optional DecodeSuccessCallback successCallback, optional DecodeErrorCallback  errorCallback);\u000a\u000a    // Sources\u000a    [RaisesException, MeasureAs=AudioContextCreateBufferSource] AudioBufferSourceNode createBufferSource();\u000a    [RaisesException, MeasureAs=AudioContextCreateConstantSource] ConstantSourceNode createConstantSource();\u000a\u000a    // Processing nodes\u000a    [RaisesException, MeasureAs=AudioContextCreateGain] GainNode createGain();\u000a    [RaisesException, MeasureAs=AudioContextCreateDelay] DelayNode createDelay(optional double maxDelayTime);\u000a    [RaisesException, MeasureAs=AudioContextCreateBiquadFilter] BiquadFilterNode createBiquadFilter();\u000a    [RaisesException, MeasureAs=AudioContextCreateIIRFilter] IIRFilterNode createIIRFilter(sequence<double> feedForward, sequence<double> feedBack);\u000a    [RaisesException, MeasureAs=AudioContextCreateWaveShaper] WaveShaperNode createWaveShaper();\u000a    [RaisesException, MeasureAs=AudioContextCreatePannerAutomated] PannerNode createPanner();\u000a    [RaisesException, MeasureAs=AudioContextCreateConvolver] ConvolverNode createConvolver();\u000a    [RaisesException, MeasureAs=AudioContextCreateDynamicsCompressor] DynamicsCompressorNode createDynamicsCompressor();\u000a    [RaisesException, MeasureAs=AudioContextCreateAnalyser] AnalyserNode createAnalyser();\u000a    [RaisesException, MeasureAs=AudioContextCreateScriptProcessor] ScriptProcessorNode createScriptProcessor(optional unsigned long bufferSize, optional unsigned long numberOfInputChannels, optional unsigned long numberOfOutputChannels);\u000a    [RaisesException, MeasureAs=AudioContextCreateStereoPanner] StereoPannerNode createStereoPanner();\u000a    [RaisesException, MeasureAs=AudioContextCreateOscillator] OscillatorNode createOscillator();\u000a    [RaisesException, MeasureAs=AudioContextCreatePeriodicWave] PeriodicWave createPeriodicWave(sequence<float> real, sequence<float> imag, optional PeriodicWaveConstraints options);\u000a\u000a    // Channel splitting and merging\u000a    [RaisesException, MeasureAs=AudioContextCreateChannelSplitter] ChannelSplitterNode createChannelSplitter(optional unsigned long numberOfOutputs);\u000a    [RaisesException, MeasureAs=AudioContextCreateChannelMerger] ChannelMergerNode createChannelMerger(optional unsigned long numberOfInputs);\u000a\u000a    // Pause/resume\u000a    [MeasureAs=AudioContextResume, CallWith=ScriptState, ImplementedAs=resumeContext] Promise<void> resume();\u000a\u000a    // TODO(rtoy): These really belong to the AudioContext, but we need them\u000a    // here so we can use an offline audio context to test these.\u000a    [RaisesException, MeasureAs=AudioContextCreateMediaElementSource] MediaElementAudioSourceNode createMediaElementSource(HTMLMediaElement mediaElement);\u000a    [RaisesException, MeasureAs=AudioContextCreateMediaStreamSource] MediaStreamAudioSourceNode createMediaStreamSource(MediaStream mediaStream);\u000a    [RaisesException, MeasureAs=AudioContextCreateMediaStreamDestination] MediaStreamAudioDestinationNode createMediaStreamDestination();\u000a\u000a    attribute EventHandler onstatechange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/BiquadFilterNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/BiquadFilterNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2011, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface\u000aenum BiquadFilterType {\u000a    \"lowpass\",\u000a    \"highpass\",\u000a    \"bandpass\",\u000a    \"lowshelf\",\u000a    \"highshelf\",\u000a    \"peaking\",\u000a    \"notch\",\u000a    \"allpass\"\u000a};\u000a\u000a[\u000a    Constructor(BaseAudioContext context, optional BiquadFilterOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface BiquadFilterNode : AudioNode {\u000a    attribute BiquadFilterType type;\u000a\u000a    readonly attribute AudioParam frequency; // in Hertz\u000a    readonly attribute AudioParam detune; // in Cents\u000a    readonly attribute AudioParam Q; // Quality factor\u000a    readonly attribute AudioParam gain; // in Decibels\u000a\u000a    void getFrequencyResponse(Float32Array frequencyHz,\u000a                              Float32Array magResponse,\u000a                              Float32Array phaseResponse);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/BiquadFilterOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/BiquadFilterOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#biquadfilteroptions\u000adictionary BiquadFilterOptions : AudioNodeOptions {\u000a    BiquadFilterType type = \"lowpass\";\u000a    float Q = 1;\u000a    float detune = 0;\u000a    float frequency = 350;\u000a    float gain = 0;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/ChannelMergerNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/ChannelMergerNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-channelmergernode-interface\u000a[\u000a    Constructor(BaseAudioContext context, optional ChannelMergerOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface ChannelMergerNode : AudioNode {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/ChannelMergerOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/ChannelMergerOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#channelmergeroptions\u000adictionary ChannelMergerOptions : AudioNodeOptions {\u000a    unsigned long numberOfInputs = 6;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/ChannelSplitterNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/ChannelSplitterNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-channelsplitternode-interface\u000a[\u000a    Constructor(BaseAudioContext context, optional ChannelSplitterOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface ChannelSplitterNode : AudioNode {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/ChannelSplitterOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/ChannelSplitterOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#channelsplitteroptions\u000adictionary ChannelSplitterOptions : AudioNodeOptions {\u000a    unsigned long numberOfOutputs = 6;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/ConstantSourceNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/ConstantSourceNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#ConstantSourceNode\u000a[\u000a    Constructor(BaseAudioContext context, optional ConstantSourceOptions options),\u000a    RaisesException=Constructor,\u000a    ActiveScriptWrappable,\u000a    DependentLifetime,\u000a    Measure\u000a]\u000ainterface ConstantSourceNode : AudioScheduledSourceNode {\u000a    readonly attribute AudioParam offset;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/VRFrameData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/VRFrameData.idl"},specUrls:["https://w3c.github.io/webvr/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://w3c.github.io/webvr/#interface-vrframedata\u000a[\u000a    OriginTrialEnabled=WebVR,\u000a    Constructor\u000a] interface VRFrameData {\u000a    readonly attribute Float32Array leftProjectionMatrix;\u000a    readonly attribute Float32Array leftViewMatrix;\u000a\u000a    readonly attribute Float32Array rightProjectionMatrix;\u000a    readonly attribute Float32Array rightViewMatrix;\u000a\u000a    readonly attribute VRPose pose;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/ConstantSourceOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/ConstantSourceOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#constantsourceoptions\u000adictionary ConstantSourceOptions {\u000a    float offset = 1;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/ConvolverNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/ConvolverNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// A linear convolution effect\u000a// See https://webaudio.github.io/web-audio-api/#ConvolverNode\u000a[\u000a    Constructor(BaseAudioContext context, optional ConvolverOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface ConvolverNode : AudioNode {\u000a    [RaisesException=Setter] attribute AudioBuffer? buffer;\u000a    attribute boolean normalize;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/DelayNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/DelayNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#DelayNode\u000a[\u000a    Constructor(BaseAudioContext context, optional DelayOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface DelayNode : AudioNode {\u000a    readonly attribute AudioParam delayTime;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/ConvolverOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/ConvolverOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#convolveroptions\u000adictionary ConvolverOptions : AudioNodeOptions {\u000a    AudioBuffer? buffer;\u000a    boolean disableNormalization = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/DelayOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/DelayOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#delayoptions\u000adictionary DelayOptions : AudioNodeOptions {\u000a    double maxDelayTime = 1;\u000a    double delayTime = 0;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/DynamicsCompressorNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/DynamicsCompressorNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2011, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface\u000a[\u000a    Constructor(BaseAudioContext context, optional DynamicsCompressorOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface DynamicsCompressorNode : AudioNode {\u000a    readonly attribute AudioParam threshold; // in Decibels\u000a    readonly attribute AudioParam knee; // in Decibels\u000a    readonly attribute AudioParam ratio; // unit-less\u000a    readonly attribute float reduction; // in Decibels\u000a    readonly attribute AudioParam attack; // in Seconds\u000a    readonly attribute AudioParam release; // in Seconds\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/DynamicsCompressorOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/DynamicsCompressorOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#dynamicscompressoroptions\u000adictionary DynamicsCompressorOptions : AudioNodeOptions {\u000a    float attack = 0.003;\u000a    float knee = 30;\u000a    float ratio = 12;\u000a    float release = 0.25;\u000a    float threshold = -24;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/GainNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/GainNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#GainNode\u000a[\u000a    Constructor(BaseAudioContext context, optional GainOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface GainNode : AudioNode {\u000a    // FIXME: eventually it will be interesting to remove the readonly restriction, but need to properly deal with thread safety here.\u000a    readonly attribute AudioParam gain;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/IIRFilterNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/IIRFilterNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-iirfilternode-interface\u000a[\u000a    Constructor(BaseAudioContext context, IIRFilterOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface IIRFilterNode : AudioNode {\u000a    [RaisesException] void getFrequencyResponse(Float32Array frequencyHz,\u000a                                                Float32Array magResponse,\u000a                                                Float32Array phaseResponse);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/IIRFilterOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/IIRFilterOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#iirfilteroptions\u000adictionary IIRFilterOptions : AudioNodeOptions {\u000a    required sequence<double> feedforward;\u000a    required sequence<double> feedback;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/MediaElementAudioSourceNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/MediaElementAudioSourceNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2011, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#MediaElementAudioSourceNode\u000a[\u000a    // TODO(rtoy): This should be AudioContext, not BaseAudioContext.\u000a    Constructor(BaseAudioContext context, MediaElementAudioSourceOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface MediaElementAudioSourceNode : AudioNode {\u000a    [SameObject] readonly attribute HTMLMediaElement mediaElement;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/MediaElementAudioSourceOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/MediaElementAudioSourceOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#mediaelementaudiosourceoptions\u000adictionary MediaElementAudioSourceOptions {\u000a    required HTMLMediaElement mediaElement;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/MediaStreamAudioDestinationNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/MediaStreamAudioDestinationNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2012, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-mediastreamaudiodestinationnode-interface\u000a[\u000a    Constructor(BaseAudioContext context, optional AudioNodeOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface MediaStreamAudioDestinationNode : AudioNode {\u000a    readonly attribute MediaStream stream;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/MediaStreamAudioSourceNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/MediaStreamAudioSourceNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2012, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#MediaStreamAudioSourceNode\u000a[\u000a    Constructor(BaseAudioContext context, MediaStreamAudioSourceOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface MediaStreamAudioSourceNode : AudioNode {\u000a  [SameObject, ImplementedAs=getMediaStream] readonly attribute MediaStream mediaStream;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/MediaStreamAudioSourceOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/MediaStreamAudioSourceOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#mediastreamaudiosourceoptions\u000adictionary MediaStreamAudioSourceOptions {\u000a    required MediaStream mediaStream;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/OfflineAudioCompletionEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/OfflineAudioCompletionEvent.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2011, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#OfflineAudioCompletionEvent \u000a[\u000a    Constructor(DOMString type, OfflineAudioCompletionEventInit eventInitDict)\u000a]\u000ainterface OfflineAudioCompletionEvent : Event {\u000a    readonly attribute AudioBuffer renderedBuffer;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/OfflineAudioCompletionEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/OfflineAudioCompletionEventInit.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#offlineaudiocompletioneventinit\u000adictionary OfflineAudioCompletionEventInit : EventInit {\u000a    required AudioBuffer renderedBuffer;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/OfflineAudioContext.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/OfflineAudioContext.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2012, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#OfflineAudioContext\u000a[\u000a    Constructor(unsigned long numberOfChannels, unsigned long numberOfFrames, float sampleRate),\u000a    Constructor(OfflineAudioContextOptions options),\u000a    ConstructorCallWith=ExecutionContext,\u000a    RaisesException=Constructor,\u000a    Measure\u000a] interface OfflineAudioContext : BaseAudioContext {\u000a    // Offline rendering\u000a    attribute EventHandler oncomplete;\u000a    readonly attribute unsigned long length;\u000a    [CallWith=ScriptState, ImplementedAs=startOfflineRendering, MeasureAs=OfflineAudioContextStartRendering] Promise<AudioBuffer> startRendering();\u000a    [CallWith=ScriptState, ImplementedAs=suspendContext, MeasureAs=OfflineAudioContextSuspend] Promise<void> suspend(double suspendTime);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/OfflineAudioContextOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/OfflineAudioContextOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#offlineaudiocontextoptions\u000adictionary OfflineAudioContextOptions {\u000a    unsigned long numberOfChannels = 1;\u000a    required unsigned long length;\u000a    required float sampleRate;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/OscillatorNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/OscillatorNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2012, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-oscillatornode-interface\u000aenum OscillatorType {\u000a    \"sine\",\u000a    \"square\",\u000a    \"sawtooth\",\u000a    \"triangle\",\u000a    \"custom\"\u000a};\u000a\u000a// OscillatorNode is an audio generator of periodic waveforms.\u000a[\u000a    Constructor(BaseAudioContext context, optional OscillatorOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface OscillatorNode : AudioScheduledSourceNode {\u000a\u000a    [RaisesException=Setter] attribute OscillatorType type;\u000a\u000a    readonly attribute AudioParam frequency; // in Hertz\u000a    readonly attribute AudioParam detune; // in Cents\u000a\u000a    void setPeriodicWave(PeriodicWave periodicWave);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/OscillatorOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/OscillatorOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#oscillatoroptions\u000adictionary OscillatorOptions : AudioNodeOptions {\u000a    OscillatorType type = \"sine\";\u000a    float detune = 0;\u000a    float frequency = 440;\u000a    PeriodicWave? periodicWave;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/PannerNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/PannerNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-pannernode-interface\u000aenum PanningModelType {\u000a    \"equalpower\",\u000a    \"HRTF\"\u000a};\u000a\u000aenum DistanceModelType {\u000a    \"linear\",\u000a    \"inverse\",\u000a    \"exponential\"\u000a};\u000a\u000a[\u000a    Constructor(BaseAudioContext context, optional PannerOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a] interface PannerNode : AudioNode {\u000a    // Default model for stereo is equalpower.\u000a    attribute PanningModelType panningModel;\u000a\u000a    // Uses a 3D cartesian coordinate system\u000a    [MeasureAs=PannerNodeSetPosition] void setPosition(float x, float y, float z);\u000a    [MeasureAs=PannerNodeSetOrientation] void setOrientation(float x, float y, float z);\u000a\u000a    // Uses a 3D cartesian coordinate system\u000a    readonly attribute AudioParam positionX;\u000a    readonly attribute AudioParam positionY;\u000a    readonly attribute AudioParam positionZ;\u000a\u000a    readonly attribute AudioParam orientationX;\u000a    readonly attribute AudioParam orientationY;\u000a    readonly attribute AudioParam orientationZ;\u000a\u000a    // Distance model\u000a    attribute DistanceModelType distanceModel;\u000a\u000a    [RaisesException=Setter] attribute double refDistance;\u000a    [RaisesException=Setter] attribute double maxDistance;\u000a    attribute double rolloffFactor;\u000a\u000a    // Directional sound cone\u000a    attribute double coneInnerAngle;\u000a    attribute double coneOuterAngle;\u000a    attribute double coneOuterGain;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/PannerOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/PannerOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#panneroptions\u000adictionary PannerOptions : AudioNodeOptions {\u000a    PanningModelType panningModel = \"equalpower\";\u000a    DistanceModelType distanceModel = \"inverse\";\u000a\u000a    float positionX = 0;\u000a    float positionY = 0;\u000a    float positionZ = 0;\u000a    float orientationX = 1;\u000a    float orientationY = 0;\u000a    float orientationZ = 0;\u000a\u000a    double refDistance = 1;\u000a    double maxDistance= 10000;\u000a    double rolloffFactor = 1;\u000a    double coneInnerAngle = 360;\u000a    double coneOuterAngle = 360;\u000a    double coneOuterGain = 0;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/PeriodicWave.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/PeriodicWave.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2012, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// PeriodicWave represents a periodic audio waveform given by its Fourier coefficients.\u000a// See https://webaudio.github.io/web-audio-api/#the-periodicwave-interface\u000a[\u000a    Constructor(BaseAudioContext context, optional PeriodicWaveOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface PeriodicWave {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/PeriodicWaveConstraints.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/PeriodicWaveConstraints.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#periodicwaveconstraints\u000adictionary PeriodicWaveConstraints {\u000a    boolean disableNormalization = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/PeriodicWaveOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/PeriodicWaveOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#periodicwaveoptions\u000adictionary PeriodicWaveOptions : PeriodicWaveConstraints {\u000a    sequence<float> real;\u000a    sequence<float> imag;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/ScriptProcessorNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/ScriptProcessorNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-scriptprocessornode-interface---deprecated\u000a// For real-time audio stream synthesis/processing in JavaScript\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface ScriptProcessorNode : AudioNode {\u000a    // Rendering callback\u000a    attribute EventHandler onaudioprocess;\u000a\u000a    readonly attribute long bufferSize;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/StereoPannerNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/StereoPannerNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#the-stereopannernode-interface\u000a[\u000a    Constructor(BaseAudioContext context, optional StereoPannerOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface StereoPannerNode : AudioNode {\u000a\u000a    readonly attribute AudioParam pan;\u000a\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/StereoPannerOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/StereoPannerOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#stereopanneroptions\u000adictionary StereoPannerOptions : AudioNodeOptions {\u000a    float pan = 0;\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/WaveShaperNode.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/WaveShaperNode.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"/*\u000a * Copyright (C) 2011, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND\u000a * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\u000a * ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE\u000a * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\u000a * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\u000a * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\u000a * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\u000a * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\u000a * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\u000a * DAMAGE.\u000a */\u000a\u000a// See https://webaudio.github.io/web-audio-api/#WaveShaperNode\u000aenum OverSampleType {\u000a    \"none\",\u000a    \"2x\",\u000a    \"4x\"\u000a};\u000a\u000a[\u000a    Constructor(BaseAudioContext context, optional WaveShaperOptions options),\u000a    RaisesException=Constructor,\u000a    Measure\u000a]\u000ainterface WaveShaperNode : AudioNode {\u000a    [RaisesException=Setter] attribute Float32Array? curve;\u000a    attribute OverSampleType oversample;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/WaveShaperOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/WaveShaperOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webaudio.github.io/web-audio-api/#waveshaperoptions\u000adictionary WaveShaperOptions : AudioNodeOptions {\u000a    sequence<float> curve;\u000a    OverSampleType oversample = \"none\";\u000a};"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/WindowAudioWorklet.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/WindowAudioWorklet.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webaudio.github.io/web-audio-api/#AudioWorklet\u000a\u000a[\u000a    ImplementedAs=WindowAudioWorklet,\u000a    RuntimeEnabled=AudioWorklet\u000a] partial interface Window {\u000a    readonly attribute Worklet audioWorklet;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webdatabase/Database.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webdatabase/Database.idl"},contents:"/*\u000a * Copyright (C) 2007 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/webdatabase/#database\u000a[\u000a    NoInterfaceObject\u000a] interface Database {\u000a    readonly attribute DOMString version;\u000a    void changeVersion(DOMString oldVersion, DOMString newVersion, optional SQLTransactionCallback callback, optional SQLTransactionErrorCallback errorCallback, optional VoidCallback successCallback);\u000a    void transaction(SQLTransactionCallback callback, optional SQLTransactionErrorCallback errorCallback, optional VoidCallback successCallback);\u000a    void readTransaction(SQLTransactionCallback callback, optional SQLTransactionErrorCallback errorCallback, optional VoidCallback successCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webdatabase/SQLError.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webdatabase/SQLError.idl"},contents:"/*\u000a * Copyright (C) 2007 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/webdatabase/#sqlerror\u000a[\u000a    NoInterfaceObject\u000a] interface SQLError {\u000a    readonly attribute unsigned long code;\u000a    readonly attribute DOMString message;\u000a\u000a    // SQLErrorCode: used only in the async DB API\u000a    const unsigned short UNKNOWN_ERR = 0;\u000a    const unsigned short DATABASE_ERR = 1;\u000a    const unsigned short VERSION_ERR = 2;\u000a    const unsigned short TOO_LARGE_ERR = 3;\u000a    const unsigned short QUOTA_ERR = 4;\u000a    const unsigned short SYNTAX_ERR = 5;\u000a    const unsigned short CONSTRAINT_ERR = 6;\u000a    const unsigned short TIMEOUT_ERR = 7;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webdatabase/SQLResultSet.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webdatabase/SQLResultSet.idl"},contents:"/*\u000a * Copyright (C) 2007 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/webdatabase/#sqlresultset\u000a[\u000a    NoInterfaceObject\u000a] interface SQLResultSet {\u000a    readonly attribute SQLResultSetRowList rows;\u000a\u000a    [RaisesException=Getter] readonly attribute long insertId;\u000a    readonly attribute long rowsAffected;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webdatabase/SQLResultSetRowList.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webdatabase/SQLResultSetRowList.idl"},contents:"/*\u000a * Copyright (C) 2007 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/webdatabase/#sqlresultsetrowlist\u000a[\u000a    NoInterfaceObject\u000a] interface SQLResultSetRowList {\u000a    readonly attribute unsigned long length;\u000a    [RaisesException, CallWith=ScriptState] getter any item(unsigned long index);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webdatabase/SQLStatementCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webdatabase/SQLStatementCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/webdatabase/#sqlstatementcallback\u000acallback interface SQLStatementCallback {\u000a    boolean handleEvent(SQLTransaction transaction, SQLResultSet resultSet);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webdatabase/SQLStatementErrorCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webdatabase/SQLStatementErrorCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/webdatabase/#sqlstatementerrorcallback\u000acallback interface SQLStatementErrorCallback {\u000a    [Custom] boolean handleEvent(SQLTransaction transaction, SQLError error);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webdatabase/SQLTransaction.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webdatabase/SQLTransaction.idl"},contents:"/*\u000a * Copyright (C) 2007 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/webdatabase/#objectarray\u000atypedef sequence<any> ObjectArray;\u000a\u000a// https://www.w3.org/TR/webdatabase/#sqltransaction\u000a[\u000a    NoInterfaceObject\u000a] interface SQLTransaction {\u000a    // The spec defines |arguments| to be an \"optional ObjectArray\" though it defines the\u000a    // behavior when null is being passed.\u000a    [RaisesException, CallWith=ScriptState] void executeSql(DOMString sqlStatement,\u000a                                                            optional ObjectArray? arguments,\u000a                                                            optional SQLStatementCallback callback,\u000a                                                            optional SQLStatementErrorCallback errorCallback);\u000a\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webdatabase/SQLTransactionCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webdatabase/SQLTransactionCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/webdatabase/#sqltransactioncallback\u000acallback interface SQLTransactionCallback {\u000a    boolean handleEvent(SQLTransaction transaction);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webdatabase/SQLTransactionErrorCallback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webdatabase/SQLTransactionErrorCallback.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\u000a *     its contributors may be used to endorse or promote products derived\u000a *     from this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/webdatabase/#sqltransactionerrorcallback\u000acallback interface SQLTransactionErrorCallback {\u000a    boolean handleEvent(SQLError error);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/GainOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/GainOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See https://webaudio.github.io/web-audio-api/#gainoptions\u000adictionary GainOptions : AudioNodeOptions {\u000a    float gain = 1;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webdatabase/WindowWebDatabase.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webdatabase/WindowWebDatabase.idl"},contents:"/*\u000a * Copyright (C) 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.w3.org/TR/webdatabase/#databasecallback\u000acallback DatabaseCallback = boolean (Database database);\u000a\u000a// https://www.w3.org/TR/webdatabase/#databases\u000a[\u000a    ImplementedAs=DOMWindowWebDatabase,\u000a    RuntimeEnabled=Database\u000a] partial interface Window {\u000a    [MeasureAs=OpenWebDatabase, LogActivity, RaisesException] Database openDatabase(DOMString name, DOMString version, DOMString displayName, unsigned long estimatedSize, optional DatabaseCallback creationCallback);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/EXTBlendMinMax.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/EXTBlendMinMax.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/EXT_blend_minmax/\u000a\u000a[\u000a    DependentLifetime,\u000a    DoNotCheckConstants,\u000a    NoInterfaceObject\u000a] interface EXTBlendMinMax {\u000a    const unsigned long MIN_EXT              = 0x8007;\u000a    const unsigned long MAX_EXT              = 0x8008;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/EXTColorBufferFloat.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/EXTColorBufferFloat.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface EXTColorBufferFloat {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/EXTColorBufferHalfFloat.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/EXTColorBufferHalfFloat.idl"},contents:"/*\u000a * Copyright (C) 2017 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_half_float\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface EXTColorBufferHalfFloat {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/EXTDisjointTimerQuery.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/EXTDisjointTimerQuery.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query/\u000a\u000atypedef unsigned long long GLuint64EXT;\u000a\u000a[\u000a    DependentLifetime,\u000a    DoNotCheckConstants,\u000a    NoInterfaceObject\u000a] interface EXTDisjointTimerQuery {\u000a    const GLenum QUERY_COUNTER_BITS_EXT      = 0x8864;\u000a    const GLenum CURRENT_QUERY_EXT           = 0x8865;\u000a    const GLenum QUERY_RESULT_EXT            = 0x8866;\u000a    const GLenum QUERY_RESULT_AVAILABLE_EXT  = 0x8867;\u000a    const GLenum TIME_ELAPSED_EXT            = 0x88BF;\u000a    const GLenum TIMESTAMP_EXT               = 0x8E28;\u000a    const GLenum GPU_DISJOINT_EXT            = 0x8FBB;\u000a\u000a    WebGLTimerQueryEXT createQueryEXT();\u000a    void deleteQueryEXT(WebGLTimerQueryEXT? query);\u000a    boolean isQueryEXT(WebGLTimerQueryEXT? query);\u000a    void beginQueryEXT(GLenum target, WebGLTimerQueryEXT query);\u000a    void endQueryEXT(GLenum target);\u000a    void queryCounterEXT(WebGLTimerQueryEXT query, GLenum target);\u000a    [CallWith=ScriptState] any getQueryEXT(GLenum target, GLenum pname);\u000a    [CallWith=ScriptState] any getQueryObjectEXT(WebGLTimerQueryEXT query, GLenum pname);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/EXTDisjointTimerQueryWebGL2.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/EXTDisjointTimerQueryWebGL2.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query_webgl2/\u000a\u000atypedef unsigned long long GLuint64EXT;\u000a\u000a[\u000a    DependentLifetime,\u000a    DoNotCheckConstants,\u000a    NoInterfaceObject\u000a] interface EXTDisjointTimerQueryWebGL2 {\u000a    const GLenum QUERY_COUNTER_BITS_EXT      = 0x8864;\u000a    const GLenum TIME_ELAPSED_EXT            = 0x88BF;\u000a    const GLenum TIMESTAMP_EXT               = 0x8E28;\u000a    const GLenum GPU_DISJOINT_EXT            = 0x8FBB;\u000a    void queryCounterEXT(WebGLQuery query, GLenum target);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/EXTFragDepth.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/EXTFragDepth.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/EXT_frag_depth/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface EXTFragDepth {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/vr/VRLayerInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/vr/VRLayerInit.idl"},specUrls:["https://w3c.github.io/webvr/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000atypedef (HTMLCanvasElement or OffscreenCanvas) VRSource;\u000a\u000a// https://w3c.github.io/webvr/#interface-vrlayerinit\u000a\u000adictionary VRLayerInit {\u000a  // The canvas to be presented to the VRDisplay\u000a  VRSource? source = null;\u000a\u000a  // The left and right bounds contain 4 git statvalues defining the texture bounds\u000a  // within the canvas to present to the eye in UV space.\u000a  // [0] left offset of the bounds (0.0 - 1.0)\u000a  // [1] top offset of the bounds (0.0 - 1.0)\u000a  // [2] width of the bounds (0.0 - 1.0)\u000a  // [3] height of the bounds (0.0 - 1.0)\u000a  sequence<float> leftBounds = []; //= [0.0, 0.0, 0.5, 1.0];\u000a  sequence<float> rightBounds = []; //= [0.5, 0.0, 0.5, 1.0];\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/EXTShaderTextureLOD.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/EXTShaderTextureLOD.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/EXT_shader_texture_lod/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface EXTShaderTextureLOD {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/EXTsRGB.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/EXTsRGB.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface EXTsRGB {\u000a    const unsigned long SRGB_EXT                                     = 0x8C40;\u000a    const unsigned long SRGB_ALPHA_EXT                               = 0x8C42;\u000a    const unsigned long SRGB8_ALPHA8_EXT                             = 0x8C43;\u000a    const unsigned long FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT    = 0x8210;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/EXTTextureFilterAnisotropic.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/EXTTextureFilterAnisotropic.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface EXTTextureFilterAnisotropic {\u000a    const unsigned long TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;\u000a    const unsigned long MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/OESElementIndexUint.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/OESElementIndexUint.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/OES_element_index_uint/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface OESElementIndexUint {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/OESStandardDerivatives.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/OESStandardDerivatives.idl"},contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/OES_standard_derivatives/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface OESStandardDerivatives {\u000a    const unsigned long FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8B8B;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/OESTextureFloat.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/OESTextureFloat.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/OES_texture_float/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface OESTextureFloat {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/OESTextureFloatLinear.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/OESTextureFloatLinear.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/OES_texture_float_linear/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface OESTextureFloatLinear {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/OESTextureHalfFloat.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/OESTextureHalfFloat.idl"},contents:"/*\u000a * Copyright (C) 2013 Motorola Mobility LLC. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/OES_texture_half_float/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface OESTextureHalfFloat {\u000a    const GLenum HALF_FLOAT_OES                 = 0x8D61;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/OESTextureHalfFloatLinear.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/OESTextureHalfFloatLinear.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/OES_texture_half_float_linear/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface OESTextureHalfFloatLinear {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/OESVertexArrayObject.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/OESVertexArrayObject.idl"},contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/\u000a\u000a[\u000a    DependentLifetime,\u000a    DoNotCheckConstants,\u000a    NoInterfaceObject\u000a] interface OESVertexArrayObject {\u000a    const unsigned long VERTEX_ARRAY_BINDING_OES = 0x85B5;\u000a\u000a    WebGLVertexArrayObjectOES createVertexArrayOES();\u000a    void deleteVertexArrayOES([Default=Undefined] optional WebGLVertexArrayObjectOES? arrayObject);\u000a    boolean isVertexArrayOES([Default=Undefined] optional WebGLVertexArrayObjectOES? arrayObject);\u000a    void bindVertexArrayOES([Default=Undefined] optional WebGLVertexArrayObjectOES? arrayObject);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGL2RenderingContext.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGL2RenderingContext.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/2.0/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/2.0/#3.7\u000a\u000a[\u000a    DoNotCheckConstants,\u000a    Exposed(Worker ExperimentalCanvasFeatures, Window StableBlinkFeatures),\u000a    DependentLifetime\u000a] interface WebGL2RenderingContext { };\u000aWebGL2RenderingContext implements WebGLRenderingContextBase;\u000aWebGL2RenderingContext implements WebGL2RenderingContextBase;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGL2RenderingContextBase.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGL2RenderingContextBase.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/2.0/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/2.0/#3.7\u000a\u000atypedef long long GLint64;\u000atypedef unsigned long long GLuint64;\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface WebGL2RenderingContextBase {\u000a    const GLenum READ_BUFFER                                   = 0x0C02;\u000a    const GLenum UNPACK_ROW_LENGTH                             = 0x0CF2;\u000a    const GLenum UNPACK_SKIP_ROWS                              = 0x0CF3;\u000a    const GLenum UNPACK_SKIP_PIXELS                            = 0x0CF4;\u000a    const GLenum PACK_ROW_LENGTH                               = 0x0D02;\u000a    const GLenum PACK_SKIP_ROWS                                = 0x0D03;\u000a    const GLenum PACK_SKIP_PIXELS                              = 0x0D04;\u000a    const GLenum COLOR                                         = 0x1800;\u000a    const GLenum DEPTH                                         = 0x1801;\u000a    const GLenum STENCIL                                       = 0x1802;\u000a    const GLenum RED                                           = 0x1903;\u000a    const GLenum RGB8                                          = 0x8051;\u000a    const GLenum RGBA8                                         = 0x8058;\u000a    const GLenum RGB10_A2                                      = 0x8059;\u000a    const GLenum TEXTURE_BINDING_3D                            = 0x806A;\u000a    const GLenum UNPACK_SKIP_IMAGES                            = 0x806D;\u000a    const GLenum UNPACK_IMAGE_HEIGHT                           = 0x806E;\u000a    const GLenum TEXTURE_3D                                    = 0x806F;\u000a    const GLenum TEXTURE_WRAP_R                                = 0x8072;\u000a    const GLenum MAX_3D_TEXTURE_SIZE                           = 0x8073;\u000a    const GLenum UNSIGNED_INT_2_10_10_10_REV                   = 0x8368;\u000a    const GLenum MAX_ELEMENTS_VERTICES                         = 0x80E8;\u000a    const GLenum MAX_ELEMENTS_INDICES                          = 0x80E9;\u000a    const GLenum TEXTURE_MIN_LOD                               = 0x813A;\u000a    const GLenum TEXTURE_MAX_LOD                               = 0x813B;\u000a    const GLenum TEXTURE_BASE_LEVEL                            = 0x813C;\u000a    const GLenum TEXTURE_MAX_LEVEL                             = 0x813D;\u000a    const GLenum MIN                                           = 0x8007;\u000a    const GLenum MAX                                           = 0x8008;\u000a    const GLenum DEPTH_COMPONENT24                             = 0x81A6;\u000a    const GLenum MAX_TEXTURE_LOD_BIAS                          = 0x84FD;\u000a    const GLenum TEXTURE_COMPARE_MODE                          = 0x884C;\u000a    const GLenum TEXTURE_COMPARE_FUNC                          = 0x884D;\u000a    const GLenum CURRENT_QUERY                                 = 0x8865;\u000a    const GLenum QUERY_RESULT                                  = 0x8866;\u000a    const GLenum QUERY_RESULT_AVAILABLE                        = 0x8867;\u000a    const GLenum STREAM_READ                                   = 0x88E1;\u000a    const GLenum STREAM_COPY                                   = 0x88E2;\u000a    const GLenum STATIC_READ                                   = 0x88E5;\u000a    const GLenum STATIC_COPY                                   = 0x88E6;\u000a    const GLenum DYNAMIC_READ                                  = 0x88E9;\u000a    const GLenum DYNAMIC_COPY                                  = 0x88EA;\u000a    const GLenum MAX_DRAW_BUFFERS                              = 0x8824;\u000a    const GLenum DRAW_BUFFER0                                  = 0x8825;\u000a    const GLenum DRAW_BUFFER1                                  = 0x8826;\u000a    const GLenum DRAW_BUFFER2                                  = 0x8827;\u000a    const GLenum DRAW_BUFFER3                                  = 0x8828;\u000a    const GLenum DRAW_BUFFER4                                  = 0x8829;\u000a    const GLenum DRAW_BUFFER5                                  = 0x882A;\u000a    const GLenum DRAW_BUFFER6                                  = 0x882B;\u000a    const GLenum DRAW_BUFFER7                                  = 0x882C;\u000a    const GLenum DRAW_BUFFER8                                  = 0x882D;\u000a    const GLenum DRAW_BUFFER9                                  = 0x882E;\u000a    const GLenum DRAW_BUFFER10                                 = 0x882F;\u000a    const GLenum DRAW_BUFFER11                                 = 0x8830;\u000a    const GLenum DRAW_BUFFER12                                 = 0x8831;\u000a    const GLenum DRAW_BUFFER13                                 = 0x8832;\u000a    const GLenum DRAW_BUFFER14                                 = 0x8833;\u000a    const GLenum DRAW_BUFFER15                                 = 0x8834;\u000a    const GLenum MAX_FRAGMENT_UNIFORM_COMPONENTS               = 0x8B49;\u000a    const GLenum MAX_VERTEX_UNIFORM_COMPONENTS                 = 0x8B4A;\u000a    const GLenum SAMPLER_3D                                    = 0x8B5F;\u000a    const GLenum SAMPLER_2D_SHADOW                             = 0x8B62;\u000a    const GLenum FRAGMENT_SHADER_DERIVATIVE_HINT               = 0x8B8B;\u000a    const GLenum PIXEL_PACK_BUFFER                             = 0x88EB;\u000a    const GLenum PIXEL_UNPACK_BUFFER                           = 0x88EC;\u000a    const GLenum PIXEL_PACK_BUFFER_BINDING                     = 0x88ED;\u000a    const GLenum PIXEL_UNPACK_BUFFER_BINDING                   = 0x88EF;\u000a    const GLenum FLOAT_MAT2x3                                  = 0x8B65;\u000a    const GLenum FLOAT_MAT2x4                                  = 0x8B66;\u000a    const GLenum FLOAT_MAT3x2                                  = 0x8B67;\u000a    const GLenum FLOAT_MAT3x4                                  = 0x8B68;\u000a    const GLenum FLOAT_MAT4x2                                  = 0x8B69;\u000a    const GLenum FLOAT_MAT4x3                                  = 0x8B6A;\u000a    const GLenum SRGB                                          = 0x8C40;\u000a    const GLenum SRGB8                                         = 0x8C41;\u000a    const GLenum SRGB8_ALPHA8                                  = 0x8C43;\u000a    const GLenum COMPARE_REF_TO_TEXTURE                        = 0x884E;\u000a    const GLenum RGBA32F                                       = 0x8814;\u000a    const GLenum RGB32F                                        = 0x8815;\u000a    const GLenum RGBA16F                                       = 0x881A;\u000a    const GLenum RGB16F                                        = 0x881B;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_INTEGER                   = 0x88FD;\u000a    const GLenum MAX_ARRAY_TEXTURE_LAYERS                      = 0x88FF;\u000a    const GLenum MIN_PROGRAM_TEXEL_OFFSET                      = 0x8904;\u000a    const GLenum MAX_PROGRAM_TEXEL_OFFSET                      = 0x8905;\u000a    const GLenum MAX_VARYING_COMPONENTS                        = 0x8B4B;\u000a    const GLenum TEXTURE_2D_ARRAY                              = 0x8C1A;\u000a    const GLenum TEXTURE_BINDING_2D_ARRAY                      = 0x8C1D;\u000a    const GLenum R11F_G11F_B10F                                = 0x8C3A;\u000a    const GLenum UNSIGNED_INT_10F_11F_11F_REV                  = 0x8C3B;\u000a    const GLenum RGB9_E5                                       = 0x8C3D;\u000a    const GLenum UNSIGNED_INT_5_9_9_9_REV                      = 0x8C3E;\u000a    const GLenum TRANSFORM_FEEDBACK_BUFFER_MODE                = 0x8C7F;\u000a    const GLenum MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS    = 0x8C80;\u000a    const GLenum TRANSFORM_FEEDBACK_VARYINGS                   = 0x8C83;\u000a    const GLenum TRANSFORM_FEEDBACK_BUFFER_START               = 0x8C84;\u000a    const GLenum TRANSFORM_FEEDBACK_BUFFER_SIZE                = 0x8C85;\u000a    const GLenum TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN         = 0x8C88;\u000a    const GLenum RASTERIZER_DISCARD                            = 0x8C89;\u000a    const GLenum MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;\u000a    const GLenum MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS       = 0x8C8B;\u000a    const GLenum INTERLEAVED_ATTRIBS                           = 0x8C8C;\u000a    const GLenum SEPARATE_ATTRIBS                              = 0x8C8D;\u000a    const GLenum TRANSFORM_FEEDBACK_BUFFER                     = 0x8C8E;\u000a    const GLenum TRANSFORM_FEEDBACK_BUFFER_BINDING             = 0x8C8F;\u000a    const GLenum RGBA32UI                                      = 0x8D70;\u000a    const GLenum RGB32UI                                       = 0x8D71;\u000a    const GLenum RGBA16UI                                      = 0x8D76;\u000a    const GLenum RGB16UI                                       = 0x8D77;\u000a    const GLenum RGBA8UI                                       = 0x8D7C;\u000a    const GLenum RGB8UI                                        = 0x8D7D;\u000a    const GLenum RGBA32I                                       = 0x8D82;\u000a    const GLenum RGB32I                                        = 0x8D83;\u000a    const GLenum RGBA16I                                       = 0x8D88;\u000a    const GLenum RGB16I                                        = 0x8D89;\u000a    const GLenum RGBA8I                                        = 0x8D8E;\u000a    const GLenum RGB8I                                         = 0x8D8F;\u000a    const GLenum RED_INTEGER                                   = 0x8D94;\u000a    const GLenum RGB_INTEGER                                   = 0x8D98;\u000a    const GLenum RGBA_INTEGER                                  = 0x8D99;\u000a    const GLenum SAMPLER_2D_ARRAY                              = 0x8DC1;\u000a    const GLenum SAMPLER_2D_ARRAY_SHADOW                       = 0x8DC4;\u000a    const GLenum SAMPLER_CUBE_SHADOW                           = 0x8DC5;\u000a    const GLenum UNSIGNED_INT_VEC2                             = 0x8DC6;\u000a    const GLenum UNSIGNED_INT_VEC3                             = 0x8DC7;\u000a    const GLenum UNSIGNED_INT_VEC4                             = 0x8DC8;\u000a    const GLenum INT_SAMPLER_2D                                = 0x8DCA;\u000a    const GLenum INT_SAMPLER_3D                                = 0x8DCB;\u000a    const GLenum INT_SAMPLER_CUBE                              = 0x8DCC;\u000a    const GLenum INT_SAMPLER_2D_ARRAY                          = 0x8DCF;\u000a    const GLenum UNSIGNED_INT_SAMPLER_2D                       = 0x8DD2;\u000a    const GLenum UNSIGNED_INT_SAMPLER_3D                       = 0x8DD3;\u000a    const GLenum UNSIGNED_INT_SAMPLER_CUBE                     = 0x8DD4;\u000a    const GLenum UNSIGNED_INT_SAMPLER_2D_ARRAY                 = 0x8DD7;\u000a    const GLenum DEPTH_COMPONENT32F                            = 0x8CAC;\u000a    const GLenum DEPTH32F_STENCIL8                             = 0x8CAD;\u000a    const GLenum FLOAT_32_UNSIGNED_INT_24_8_REV                = 0x8DAD;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING         = 0x8210;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE         = 0x8211;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_RED_SIZE               = 0x8212;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_GREEN_SIZE             = 0x8213;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_BLUE_SIZE              = 0x8214;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE             = 0x8215;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE             = 0x8216;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE           = 0x8217;\u000a    const GLenum FRAMEBUFFER_DEFAULT                           = 0x8218;\u000a    const GLenum UNSIGNED_INT_24_8                             = 0x84FA;\u000a    const GLenum DEPTH24_STENCIL8                              = 0x88F0;\u000a    const GLenum UNSIGNED_NORMALIZED                           = 0x8C17;\u000a    const GLenum DRAW_FRAMEBUFFER_BINDING                      = 0x8CA6; /* Same as FRAMEBUFFER_BINDING */\u000a    const GLenum READ_FRAMEBUFFER                              = 0x8CA8;\u000a    const GLenum DRAW_FRAMEBUFFER                              = 0x8CA9;\u000a    const GLenum READ_FRAMEBUFFER_BINDING                      = 0x8CAA;\u000a    const GLenum RENDERBUFFER_SAMPLES                          = 0x8CAB;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER          = 0x8CD4;\u000a    const GLenum MAX_COLOR_ATTACHMENTS                         = 0x8CDF;\u000a    const GLenum COLOR_ATTACHMENT1                             = 0x8CE1;\u000a    const GLenum COLOR_ATTACHMENT2                             = 0x8CE2;\u000a    const GLenum COLOR_ATTACHMENT3                             = 0x8CE3;\u000a    const GLenum COLOR_ATTACHMENT4                             = 0x8CE4;\u000a    const GLenum COLOR_ATTACHMENT5                             = 0x8CE5;\u000a    const GLenum COLOR_ATTACHMENT6                             = 0x8CE6;\u000a    const GLenum COLOR_ATTACHMENT7                             = 0x8CE7;\u000a    const GLenum COLOR_ATTACHMENT8                             = 0x8CE8;\u000a    const GLenum COLOR_ATTACHMENT9                             = 0x8CE9;\u000a    const GLenum COLOR_ATTACHMENT10                            = 0x8CEA;\u000a    const GLenum COLOR_ATTACHMENT11                            = 0x8CEB;\u000a    const GLenum COLOR_ATTACHMENT12                            = 0x8CEC;\u000a    const GLenum COLOR_ATTACHMENT13                            = 0x8CED;\u000a    const GLenum COLOR_ATTACHMENT14                            = 0x8CEE;\u000a    const GLenum COLOR_ATTACHMENT15                            = 0x8CEF;\u000a    const GLenum FRAMEBUFFER_INCOMPLETE_MULTISAMPLE            = 0x8D56;\u000a    const GLenum MAX_SAMPLES                                   = 0x8D57;\u000a    const GLenum HALF_FLOAT                                    = 0x140B;\u000a    const GLenum RG                                            = 0x8227;\u000a    const GLenum RG_INTEGER                                    = 0x8228;\u000a    const GLenum R8                                            = 0x8229;\u000a    const GLenum RG8                                           = 0x822B;\u000a    const GLenum R16F                                          = 0x822D;\u000a    const GLenum R32F                                          = 0x822E;\u000a    const GLenum RG16F                                         = 0x822F;\u000a    const GLenum RG32F                                         = 0x8230;\u000a    const GLenum R8I                                           = 0x8231;\u000a    const GLenum R8UI                                          = 0x8232;\u000a    const GLenum R16I                                          = 0x8233;\u000a    const GLenum R16UI                                         = 0x8234;\u000a    const GLenum R32I                                          = 0x8235;\u000a    const GLenum R32UI                                         = 0x8236;\u000a    const GLenum RG8I                                          = 0x8237;\u000a    const GLenum RG8UI                                         = 0x8238;\u000a    const GLenum RG16I                                         = 0x8239;\u000a    const GLenum RG16UI                                        = 0x823A;\u000a    const GLenum RG32I                                         = 0x823B;\u000a    const GLenum RG32UI                                        = 0x823C;\u000a    const GLenum VERTEX_ARRAY_BINDING                          = 0x85B5;\u000a    const GLenum R8_SNORM                                      = 0x8F94;\u000a    const GLenum RG8_SNORM                                     = 0x8F95;\u000a    const GLenum RGB8_SNORM                                    = 0x8F96;\u000a    const GLenum RGBA8_SNORM                                   = 0x8F97;\u000a    const GLenum SIGNED_NORMALIZED                             = 0x8F9C;\u000a    const GLenum COPY_READ_BUFFER                              = 0x8F36;\u000a    const GLenum COPY_WRITE_BUFFER                             = 0x8F37;\u000a    const GLenum COPY_READ_BUFFER_BINDING                      = 0x8F36; /* Same as COPY_READ_BUFFER */\u000a    const GLenum COPY_WRITE_BUFFER_BINDING                     = 0x8F37; /* Same as COPY_WRITE_BUFFER */\u000a    const GLenum UNIFORM_BUFFER                                = 0x8A11;\u000a    const GLenum UNIFORM_BUFFER_BINDING                        = 0x8A28;\u000a    const GLenum UNIFORM_BUFFER_START                          = 0x8A29;\u000a    const GLenum UNIFORM_BUFFER_SIZE                           = 0x8A2A;\u000a    const GLenum MAX_VERTEX_UNIFORM_BLOCKS                     = 0x8A2B;\u000a    const GLenum MAX_FRAGMENT_UNIFORM_BLOCKS                   = 0x8A2D;\u000a    const GLenum MAX_COMBINED_UNIFORM_BLOCKS                   = 0x8A2E;\u000a    const GLenum MAX_UNIFORM_BUFFER_BINDINGS                   = 0x8A2F;\u000a    const GLenum MAX_UNIFORM_BLOCK_SIZE                        = 0x8A30;\u000a    const GLenum MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS        = 0x8A31;\u000a    const GLenum MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS      = 0x8A33;\u000a    const GLenum UNIFORM_BUFFER_OFFSET_ALIGNMENT               = 0x8A34;\u000a    const GLenum ACTIVE_UNIFORM_BLOCKS                         = 0x8A36;\u000a    const GLenum UNIFORM_TYPE                                  = 0x8A37;\u000a    const GLenum UNIFORM_SIZE                                  = 0x8A38;\u000a    const GLenum UNIFORM_BLOCK_INDEX                           = 0x8A3A;\u000a    const GLenum UNIFORM_OFFSET                                = 0x8A3B;\u000a    const GLenum UNIFORM_ARRAY_STRIDE                          = 0x8A3C;\u000a    const GLenum UNIFORM_MATRIX_STRIDE                         = 0x8A3D;\u000a    const GLenum UNIFORM_IS_ROW_MAJOR                          = 0x8A3E;\u000a    const GLenum UNIFORM_BLOCK_BINDING                         = 0x8A3F;\u000a    const GLenum UNIFORM_BLOCK_DATA_SIZE                       = 0x8A40;\u000a    const GLenum UNIFORM_BLOCK_ACTIVE_UNIFORMS                 = 0x8A42;\u000a    const GLenum UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES          = 0x8A43;\u000a    const GLenum UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER     = 0x8A44;\u000a    const GLenum UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER   = 0x8A46;\u000a    const GLenum INVALID_INDEX                                 = 0xFFFFFFFF;\u000a    const GLenum MAX_VERTEX_OUTPUT_COMPONENTS                  = 0x9122;\u000a    const GLenum MAX_FRAGMENT_INPUT_COMPONENTS                 = 0x9125;\u000a    const GLenum MAX_SERVER_WAIT_TIMEOUT                       = 0x9111;\u000a    const GLenum OBJECT_TYPE                                   = 0x9112;\u000a    const GLenum SYNC_CONDITION                                = 0x9113;\u000a    const GLenum SYNC_STATUS                                   = 0x9114;\u000a    const GLenum SYNC_FLAGS                                    = 0x9115;\u000a    const GLenum SYNC_FENCE                                    = 0x9116;\u000a    const GLenum SYNC_GPU_COMMANDS_COMPLETE                    = 0x9117;\u000a    const GLenum UNSIGNALED                                    = 0x9118;\u000a    const GLenum SIGNALED                                      = 0x9119;\u000a    const GLenum ALREADY_SIGNALED                              = 0x911A;\u000a    const GLenum TIMEOUT_EXPIRED                               = 0x911B;\u000a    const GLenum CONDITION_SATISFIED                           = 0x911C;\u000a    const GLenum WAIT_FAILED                                   = 0x911D;\u000a    const GLenum SYNC_FLUSH_COMMANDS_BIT                       = 0x00000001;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_DIVISOR                   = 0x88FE;\u000a    const GLenum ANY_SAMPLES_PASSED                            = 0x8C2F;\u000a    const GLenum ANY_SAMPLES_PASSED_CONSERVATIVE               = 0x8D6A;\u000a    const GLenum SAMPLER_BINDING                               = 0x8919;\u000a    const GLenum RGB10_A2UI                                    = 0x906F;\u000a    const GLenum INT_2_10_10_10_REV                            = 0x8D9F;\u000a    const GLenum TRANSFORM_FEEDBACK                            = 0x8E22;\u000a    const GLenum TRANSFORM_FEEDBACK_PAUSED                     = 0x8E23;\u000a    const GLenum TRANSFORM_FEEDBACK_ACTIVE                     = 0x8E24;\u000a    const GLenum TRANSFORM_FEEDBACK_BINDING                    = 0x8E25;\u000a    const GLenum TEXTURE_IMMUTABLE_FORMAT                      = 0x912F;\u000a    const GLenum MAX_ELEMENT_INDEX                             = 0x8D6B;\u000a    const GLenum TEXTURE_IMMUTABLE_LEVELS                      = 0x82DF;\u000a    const GLint TIMEOUT_IGNORED                                = -1;\u000a\u000a    /* WebGL-specific enums */\u000a    const GLenum MAX_CLIENT_WAIT_TIMEOUT_WEBGL                 = 0x9247;\u000a\u000a    /* Buffer objects */\u000a    void bufferData(GLenum target, [AllowShared] ArrayBufferView srcData, GLenum usage, GLuint srcOffset, optional GLuint length = 0);\u000a    void bufferSubData(GLenum target, GLintptr dstByteOffset, [AllowShared] ArrayBufferView srcData, GLuint srcOffset, optional GLuint length = 0);\u000a    void copyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);\u000a    void getBufferSubData(GLenum target, GLintptr srcByteOffset, [AllowShared] ArrayBufferView dstData, optional GLuint dstOffset = 0, optional GLuint length = 0);\u000a\u000a    /* Framebuffer objects */\u000a    void blitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);\u000a    void framebufferTextureLayer(GLenum target, GLenum attachment, WebGLTexture? texture, GLint level, GLint layer);\u000a    [CallWith=ScriptState] any getInternalformatParameter(GLenum target, GLenum internalformat, GLenum pname);\u000a    void invalidateFramebuffer(GLenum target, sequence<GLenum> attachments);\u000a    void invalidateSubFramebuffer(GLenum target, sequence<GLenum> attachments, GLint x, GLint y, GLsizei width, GLsizei height);\u000a    void readBuffer(GLenum mode);\u000a\u000a    /* Renderbuffer objects */\u000a    void renderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);\u000a\u000a    /* Texture objects */\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLintptr offset);\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, ImageData data);\u000a    [CallWith=ExecutionContext, RaisesException] void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, HTMLImageElement image);\u000a    [CallWith=ExecutionContext, RaisesException] void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, HTMLCanvasElement canvas);\u000a    [CallWith=ExecutionContext,RaisesException] void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, HTMLVideoElement video);\u000a    [RaisesException] void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, ImageBitmap bitmap);\u000a    void texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, [AllowShared] ArrayBufferView srcData, GLuint srcOffset);\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLintptr offset);\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, ImageData data);\u000a    [CallWith=ExecutionContext, RaisesException] void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, HTMLImageElement image);\u000a    [CallWith=ExecutionContext, RaisesException] void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, HTMLCanvasElement canvas);\u000a    [CallWith=ExecutionContext, RaisesException] void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, HTMLVideoElement video);\u000a    [RaisesException] void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, ImageBitmap bitmap);\u000a    void texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, [AllowShared] ArrayBufferView srcData, GLuint srcOffset);\u000a    void texStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);\u000a    void texStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLintptr offset);\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, ImageData data);\u000a    [CallWith=ExecutionContext, RaisesException] void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, HTMLImageElement image);\u000a    [CallWith=ExecutionContext, RaisesException] void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, HTMLCanvasElement canvas);\u000a    [CallWith=ExecutionContext, RaisesException] void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, HTMLVideoElement video);\u000a    [RaisesException] void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, ImageBitmap bitmap);\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, [AllowShared] ArrayBufferView? pixels);\u000a    void texImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, [AllowShared] ArrayBufferView pixels, GLuint srcOffset);\u000a    void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLintptr offset);\u000a    void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, ImageData data);\u000a    [CallWith=ExecutionContext, RaisesException] void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, HTMLImageElement image);\u000a    [CallWith=ExecutionContext, RaisesException] void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, HTMLCanvasElement canvas);\u000a    [CallWith=ExecutionContext, RaisesException] void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, HTMLVideoElement video);\u000a    [RaisesException] void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, ImageBitmap bitmap);\u000a    void texSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, [AllowShared] ArrayBufferView pixels, optional GLuint srcOffset = 0);\u000a\u000a    void copyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);\u000a\u000a    void compressedTexImage2D(GLenum target, GLint level, GLenum internalformat,\u000a                              GLsizei width, GLsizei height, GLint border,\u000a                              [AllowShared] ArrayBufferView data, GLuint srcOffset,\u000a                              optional GLuint srcLengthOverride = 0);\u000a    void compressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                                 GLsizei width, GLsizei height, GLenum format,\u000a                                 [AllowShared] ArrayBufferView data, GLuint srcOffset,\u000a                                 optional GLuint srcLengthOverride = 0);\u000a    void compressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, [AllowShared] ArrayBufferView data, optional GLuint srcOffset = 0, optional GLuint srcLengthOverride = 0);\u000a    void compressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, [AllowShared] ArrayBufferView data, optional GLuint srcOffset = 0, optional GLuint srcLengthOverride = 0);\u000a\u000a    void compressedTexImage2D(GLenum target, GLint level, GLenum internalformat,\u000a                              GLsizei width, GLsizei height, GLint border,\u000a                              GLsizei imageSize, GLintptr offset);\u000a    void compressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                                 GLsizei width, GLsizei height, GLenum format,\u000a                                 GLsizei imageSize, GLintptr offset);\u000a    void compressedTexImage3D(GLenum target, GLint level, GLenum internalformat,\u000a                              GLsizei width, GLsizei height, GLsizei depth, GLint border,\u000a                              GLsizei imageSize, GLintptr offset);\u000a    void compressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset,\u000a                                 GLsizei width, GLsizei height, GLsizei depth, GLenum format,\u000a                                 GLsizei imageSize, GLintptr offset);\u000a\u000a    /* Programs and shaders */\u000a    GLint getFragDataLocation(WebGLProgram program, DOMString name);\u000a\u000a    /* Uniforms and attributes */\u000a    void uniform1ui(WebGLUniformLocation? location, GLuint v0);\u000a    void uniform2ui(WebGLUniformLocation? location, GLuint v0, GLuint v1);\u000a    void uniform3ui(WebGLUniformLocation? location, GLuint v0, GLuint v1, GLuint v2);\u000a    void uniform4ui(WebGLUniformLocation? location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);\u000a    // The WebGL1 uniform*v signatures are visible here, so srcOffset has to be non-optional\u000a    // to avoid conflicts. The effect is the same: if uniform*v is called with only two arguments,\u000a    // it goes to the WebGL1 signatures; if it's called with three or four arguments, it goes to\u000a    // the WebGL2 specific signatures.\u000a    void uniform1fv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Float32Array v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform1fv(WebGLUniformLocation? location, sequence<GLfloat> v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform2fv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Float32Array v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform2fv(WebGLUniformLocation? location, sequence<GLfloat> v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform3fv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Float32Array v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform3fv(WebGLUniformLocation? location, sequence<GLfloat> v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform4fv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Float32Array v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform4fv(WebGLUniformLocation? location, sequence<GLfloat> v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform1iv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Int32Array v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform1iv(WebGLUniformLocation? location, sequence<GLint> v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform2iv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Int32Array v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform2iv(WebGLUniformLocation? location, sequence<GLint> v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform3iv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Int32Array v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform3iv(WebGLUniformLocation? location, sequence<GLint> v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform4iv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Int32Array v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform4iv(WebGLUniformLocation? location, sequence<GLint> v,\u000a                    GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniform1uiv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Uint32Array v,\u000a                     optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniform1uiv(WebGLUniformLocation? location, sequence<GLuint> v,\u000a                     optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniform2uiv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Uint32Array v,\u000a                     optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniform2uiv(WebGLUniformLocation? location, sequence<GLuint> v,\u000a                     optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniform3uiv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Uint32Array v,\u000a                     optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniform3uiv(WebGLUniformLocation? location, sequence<GLuint> v,\u000a                     optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniform4uiv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Uint32Array v,\u000a                     optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniform4uiv(WebGLUniformLocation? location, sequence<GLuint> v,\u000a                     optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix2fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array array,\u000a                          GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniformMatrix2fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> array,\u000a                          GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniformMatrix3fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array array,\u000a                          GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniformMatrix3fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> array,\u000a                          GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniformMatrix4fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array array,\u000a                          GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniformMatrix4fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> array,\u000a                          GLuint srcOffset, optional GLuint srcLength = 0);\u000a    void uniformMatrix2x3fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix2x3fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix3x2fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix3x2fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix2x4fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix2x4fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix4x2fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix4x2fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix3x4fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix3x4fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix4x3fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a    void uniformMatrix4x3fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> value,\u000a                            optional GLuint srcOffset = 0, optional GLuint srcLength = 0);\u000a\u000a    void vertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);\u000a    void vertexAttribI4iv(GLuint index, [AllowShared] Int32Array v);\u000a    void vertexAttribI4iv(GLuint index, sequence<GLint> v);\u000a    void vertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);\u000a    void vertexAttribI4uiv(GLuint index, [AllowShared] Uint32Array v);\u000a    void vertexAttribI4uiv(GLuint index, sequence<GLuint> v);\u000a    void vertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);\u000a\u000a    /* Writing to the drawing buffer */\u000a    void vertexAttribDivisor(GLuint index, GLuint divisor);\u000a    void drawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instanceCount);\u000a    void drawElementsInstanced(GLenum mode, GLsizei count, GLenum type, GLintptr offset, GLsizei instanceCount);\u000a    void drawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLintptr offset);\u000a\u000a    /* Multiple Render Targets */\u000a    void drawBuffers(sequence<GLenum> buffers);\u000a    void clearBufferiv(GLenum buffer, GLint drawbuffer, [AllowShared] Int32Array value, optional GLuint srcOffset = 0);\u000a    void clearBufferiv(GLenum buffer, GLint drawbuffer, sequence<GLint> value, optional GLuint srcOffset = 0);\u000a    void clearBufferuiv(GLenum buffer, GLint drawbuffer, [AllowShared] Uint32Array value, optional GLuint srcOffset = 0);\u000a    void clearBufferuiv(GLenum buffer, GLint drawbuffer, sequence<GLuint> value, optional GLuint srcOffset = 0);\u000a    void clearBufferfv(GLenum buffer, GLint drawbuffer, [AllowShared] Float32Array value, optional GLuint srcOffset = 0);\u000a    void clearBufferfv(GLenum buffer, GLint drawbuffer, sequence<GLfloat> value, optional GLuint srcOffset = 0);\u000a    void clearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);\u000a\u000a    /* Query Objects */\u000a    WebGLQuery? createQuery();\u000a    void deleteQuery(WebGLQuery? query);\u000a    GLboolean isQuery(WebGLQuery? query);\u000a    void beginQuery(GLenum target, WebGLQuery query);\u000a    void endQuery(GLenum target);\u000a    [CallWith=ScriptState] any getQuery(GLenum target, GLenum pname);\u000a    [CallWith=ScriptState] any getQueryParameter(WebGLQuery query, GLenum pname);\u000a\u000a    /* Sampler Objects */\u000a    WebGLSampler? createSampler();\u000a    void deleteSampler(WebGLSampler? sampler);\u000a    GLboolean isSampler(WebGLSampler? sampler);\u000a    void bindSampler(GLuint unit, WebGLSampler? sampler);\u000a    void samplerParameteri(WebGLSampler sampler, GLenum pname, GLint param);\u000a    void samplerParameterf(WebGLSampler sampler, GLenum pname, GLfloat param);\u000a    [CallWith=ScriptState] any getSamplerParameter(WebGLSampler sampler, GLenum pname);\u000a\u000a    /* Sync objects */\u000a    WebGLSync? fenceSync(GLenum condition, GLbitfield flags);\u000a    GLboolean isSync(WebGLSync? sync);\u000a    void deleteSync(WebGLSync? sync);\u000a    GLenum clientWaitSync(WebGLSync sync, GLbitfield flags, GLuint64 timeout);\u000a    void waitSync(WebGLSync sync, GLbitfield flags, GLint64 timeout);\u000a\u000a    [CallWith=ScriptState] any getSyncParameter(WebGLSync sync, GLenum pname);\u000a\u000a    /* Transform Feedback */\u000a    WebGLTransformFeedback? createTransformFeedback();\u000a    void deleteTransformFeedback(WebGLTransformFeedback? feedback);\u000a    GLboolean isTransformFeedback(WebGLTransformFeedback? feedback);\u000a    void bindTransformFeedback(GLenum target, WebGLTransformFeedback? feedback);\u000a    void beginTransformFeedback(GLenum primitiveMode);\u000a    void endTransformFeedback();\u000a    void transformFeedbackVaryings(WebGLProgram program, sequence<DOMString> varyings, GLenum bufferMode);\u000a    WebGLActiveInfo? getTransformFeedbackVarying(WebGLProgram program, GLuint index);\u000a    void pauseTransformFeedback();\u000a    void resumeTransformFeedback();\u000a\u000a    /* Uniform Buffer Objects and Transform Feedback Buffers */\u000a    void bindBufferBase(GLenum target, GLuint index, WebGLBuffer? buffer);\u000a    void bindBufferRange(GLenum target, GLuint index, WebGLBuffer? buffer, GLintptr offset, GLsizeiptr size);\u000a    [CallWith=ScriptState] any getIndexedParameter(GLenum target, GLuint index);\u000a    sequence<GLuint>? getUniformIndices(WebGLProgram program, sequence<DOMString> uniformNames);\u000a    [CallWith=ScriptState] any getActiveUniforms(WebGLProgram program, sequence<GLuint> uniformIndices, GLenum pname);\u000a    GLuint getUniformBlockIndex(WebGLProgram program, DOMString uniformBlockName);\u000a    [CallWith=ScriptState] any getActiveUniformBlockParameter(WebGLProgram program, GLuint uniformBlockIndex, GLenum pname);\u000a    DOMString? getActiveUniformBlockName(WebGLProgram program, GLuint uniformBlockIndex);\u000a    void uniformBlockBinding(WebGLProgram program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);\u000a\u000a    /* Vertex Array Objects */\u000a    WebGLVertexArrayObject? createVertexArray();\u000a    void deleteVertexArray(WebGLVertexArrayObject? vertexArray);\u000a    GLboolean isVertexArray(WebGLVertexArrayObject? vertexArray);\u000a    void bindVertexArray(WebGLVertexArrayObject? vertexArray);\u000a\u000a    /* Reading */\u000a    void readPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, [AllowShared] ArrayBufferView dstData, GLintptr offset);\u000a    void readPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLintptr offset);\u000a};\u000aWebGL2RenderingContextBase implements WebGLRenderingContextBase;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLActiveInfo.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLActiveInfo.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.11\u000a\u000ainterface WebGLActiveInfo {\u000a    readonly attribute long size;\u000a    readonly attribute unsigned long type;\u000a    readonly attribute DOMString name;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLColorBufferFloat.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLColorBufferFloat.idl"},contents:"/*\u000a * Copyright (C) 2017 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WebGL_color_buffer_float/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface WebGLColorBufferFloat {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureASTC.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureASTC.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface WebGLCompressedTextureASTC {\u000a    /* Compressed Texture Formats */\u000a    const unsigned long COMPRESSED_RGBA_ASTC_4x4_KHR           = 0x93B0;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_5x4_KHR           = 0x93B1;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_5x5_KHR           = 0x93B2;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_6x5_KHR           = 0x93B3;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_6x6_KHR           = 0x93B4;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_8x5_KHR           = 0x93B5;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_8x6_KHR           = 0x93B6;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_8x8_KHR           = 0x93B7;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_10x5_KHR          = 0x93B8;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_10x6_KHR          = 0x93B9;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_10x8_KHR          = 0x93BA;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_10x10_KHR         = 0x93BB;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_12x10_KHR         = 0x93BC;\u000a    const unsigned long COMPRESSED_RGBA_ASTC_12x12_KHR         = 0x93BD;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR   = 0x93D0;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR   = 0x93D1;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR   = 0x93D2;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR   = 0x93D3;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR   = 0x93D4;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR   = 0x93D5;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR   = 0x93D6;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR   = 0x93D7;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR  = 0x93D8;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR  = 0x93D9;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR  = 0x93DA;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93DB;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93DC;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93DD;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureATC.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureATC.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_atc/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface WebGLCompressedTextureATC {\u000a    /* Compressed Texture Formats */\u000a    const unsigned long COMPRESSED_RGB_ATC_WEBGL                     = 0x8C92;\u000a    const unsigned long COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL     = 0x8C93;\u000a    const unsigned long COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87EE;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureETC.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureETC.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface WebGLCompressedTextureETC {\u000a    /* Compressed Texture Format */\u000a    const unsigned long COMPRESSED_R11_EAC                        = 0x9270;\u000a    const unsigned long COMPRESSED_SIGNED_R11_EAC                 = 0x9271;\u000a    const unsigned long COMPRESSED_RG11_EAC                       = 0x9272;\u000a    const unsigned long COMPRESSED_SIGNED_RG11_EAC                = 0x9273;\u000a    const unsigned long COMPRESSED_RGB8_ETC2                      = 0x9274;\u000a    const unsigned long COMPRESSED_SRGB8_ETC2                     = 0x9275;\u000a    const unsigned long COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2  = 0x9276;\u000a    const unsigned long COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277;\u000a    const unsigned long COMPRESSED_RGBA8_ETC2_EAC                 = 0x9278;\u000a    const unsigned long COMPRESSED_SRGB8_ALPHA8_ETC2_EAC          = 0x9279;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureETC1.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureETC1.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc1/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface WebGLCompressedTextureETC1 {\u000a    /* Compressed Texture Formats */\u000a    const unsigned long COMPRESSED_RGB_ETC1_WEBGL = 0x8D64;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLCompressedTexturePVRTC.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLCompressedTexturePVRTC.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface WebGLCompressedTexturePVRTC {\u000a    /* Compressed Texture Formats */\u000a    const unsigned long COMPRESSED_RGB_PVRTC_4BPPV1_IMG  = 0x8C00;\u000a    const unsigned long COMPRESSED_RGB_PVRTC_2BPPV1_IMG  = 0x8C01;\u000a    const unsigned long COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02;\u000a    const unsigned long COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureS3TC.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureS3TC.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface WebGLCompressedTextureS3TC {\u000a    /* Compressed Texture Formats */\u000a    const unsigned long COMPRESSED_RGB_S3TC_DXT1_EXT        = 0x83F0;\u000a    const unsigned long COMPRESSED_RGBA_S3TC_DXT1_EXT       = 0x83F1;\u000a    const unsigned long COMPRESSED_RGBA_S3TC_DXT3_EXT       = 0x83F2;\u000a    const unsigned long COMPRESSED_RGBA_S3TC_DXT5_EXT       = 0x83F3;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureS3TCsRGB.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLCompressedTextureS3TCsRGB.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface WebGLCompressedTextureS3TCsRGB {\u000a    /* Compressed Texture Formats */\u000a    const unsigned long COMPRESSED_SRGB_S3TC_DXT1_EXT        = 0x8C4C;\u000a    const unsigned long COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT  = 0x8C4D;\u000a    const unsigned long COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT  = 0x8C4E;\u000a    const unsigned long COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT  = 0x8C4F;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLContextAttributes.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLContextAttributes.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (c) 2010, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\u000a\u000adictionary WebGLContextAttributes {\u000a    boolean alpha = true;\u000a    boolean depth = true;\u000a    boolean stencil = false;\u000a    boolean antialias = true;\u000a    boolean premultipliedAlpha = true;\u000a    boolean preserveDrawingBuffer = false;\u000a    boolean failIfMajorPerformanceCaveat = false;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLContextEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLContextEvent.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.15\u000a\u000a[\u000a    Constructor(DOMString type, optional WebGLContextEventInit eventInit)\u000a] interface WebGLContextEvent : Event {\u000a    readonly attribute DOMString statusMessage;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLContextEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLContextEventInit.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.15\u000a\u000adictionary WebGLContextEventInit : EventInit {\u000a    DOMString statusMessage;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLDebugRendererInfo.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLDebugRendererInfo.idl"},contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface WebGLDebugRendererInfo {\u000a    const unsigned long UNMASKED_VENDOR_WEBGL = 0x9245;\u000a    const unsigned long UNMASKED_RENDERER_WEBGL = 0x9246;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLDebugShaders.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLDebugShaders.idl"},contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_debug_shaders/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface WebGLDebugShaders {\u000a    DOMString? getTranslatedShaderSource(WebGLShader shader);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLDepthTexture.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLDepthTexture.idl"},contents:"/*\u000a * Copyright (C) 2012 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface WebGLDepthTexture {\u000a    const unsigned long UNSIGNED_INT_24_8_WEBGL = 0x84FA;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLDrawBuffers.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLDrawBuffers.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_draw_buffers/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface WebGLDrawBuffers {\u000a    const GLenum COLOR_ATTACHMENT0_WEBGL = 0x8CE0;\u000a    const GLenum COLOR_ATTACHMENT1_WEBGL = 0x8CE1;\u000a    const GLenum COLOR_ATTACHMENT2_WEBGL = 0x8CE2;\u000a    const GLenum COLOR_ATTACHMENT3_WEBGL = 0x8CE3;\u000a    const GLenum COLOR_ATTACHMENT4_WEBGL = 0x8CE4;\u000a    const GLenum COLOR_ATTACHMENT5_WEBGL = 0x8CE5;\u000a    const GLenum COLOR_ATTACHMENT6_WEBGL = 0x8CE6;\u000a    const GLenum COLOR_ATTACHMENT7_WEBGL = 0x8CE7;\u000a    const GLenum COLOR_ATTACHMENT8_WEBGL = 0x8CE8;\u000a    const GLenum COLOR_ATTACHMENT9_WEBGL = 0x8CE9;\u000a    const GLenum COLOR_ATTACHMENT10_WEBGL = 0x8CEA;\u000a    const GLenum COLOR_ATTACHMENT11_WEBGL = 0x8CEB;\u000a    const GLenum COLOR_ATTACHMENT12_WEBGL = 0x8CEC;\u000a    const GLenum COLOR_ATTACHMENT13_WEBGL = 0x8CED;\u000a    const GLenum COLOR_ATTACHMENT14_WEBGL = 0x8CEE;\u000a    const GLenum COLOR_ATTACHMENT15_WEBGL = 0x8CEF;\u000a\u000a    const GLenum DRAW_BUFFER0_WEBGL = 0x8825;\u000a    const GLenum DRAW_BUFFER1_WEBGL = 0x8826;\u000a    const GLenum DRAW_BUFFER2_WEBGL = 0x8827;\u000a    const GLenum DRAW_BUFFER3_WEBGL = 0x8828;\u000a    const GLenum DRAW_BUFFER4_WEBGL = 0x8829;\u000a    const GLenum DRAW_BUFFER5_WEBGL = 0x882A;\u000a    const GLenum DRAW_BUFFER6_WEBGL = 0x882B;\u000a    const GLenum DRAW_BUFFER7_WEBGL = 0x882C;\u000a    const GLenum DRAW_BUFFER8_WEBGL = 0x882D;\u000a    const GLenum DRAW_BUFFER9_WEBGL = 0x882E;\u000a    const GLenum DRAW_BUFFER10_WEBGL = 0x882F;\u000a    const GLenum DRAW_BUFFER11_WEBGL = 0x8830;\u000a    const GLenum DRAW_BUFFER12_WEBGL = 0x8831;\u000a    const GLenum DRAW_BUFFER13_WEBGL = 0x8832;\u000a    const GLenum DRAW_BUFFER14_WEBGL = 0x8833;\u000a    const GLenum DRAW_BUFFER15_WEBGL = 0x8834;\u000a\u000a    const GLenum MAX_COLOR_ATTACHMENTS_WEBGL = 0x8CDF;\u000a    const GLenum MAX_DRAW_BUFFERS_WEBGL = 0x8824;\u000a\u000a    void drawBuffersWEBGL(sequence<GLenum> buffers);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLFramebuffer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLFramebuffer.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.5\u000a\u000a[\u000a    DependentLifetime\u000a] interface WebGLFramebuffer {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLGetBufferSubDataAsync.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLGetBufferSubDataAsync.idl"},contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_get_buffer_sub_data_async/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject,\u000a    DoNotCheckConstants\u000a] interface WebGLGetBufferSubDataAsync {\u000a    [CallWith=ScriptState] Promise<ArrayBufferView> getBufferSubDataAsync(GLenum target, GLintptr srcByteOffset, ArrayBufferView dstData, optional GLuint dstOffset = 0, optional GLuint length = 0);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLLoseContext.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLLoseContext.idl"},contents:"/*\u000a * Copyright (C) 2010 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a *\u000a * 1.  Redistributions of source code must retain the above copyright\u000a *     notice, this list of conditions and the following disclaimer.\u000a * 2.  Redistributions in binary form must reproduce the above copyright\u000a *     notice, this list of conditions and the following disclaimer in the\u000a *     documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\u000a * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\u000a * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\u000a * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\u000a * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\u000a * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\u000a * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\u000a * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/WEBGL_lose_context/\u000a\u000a[\u000a    DependentLifetime,\u000a    NoInterfaceObject\u000a] interface WebGLLoseContext {\u000a    void loseContext();\u000a    void restoreContext();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLProgram.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLProgram.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.6\u000a\u000a[\u000a    DependentLifetime\u000a] interface WebGLProgram {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLQuery.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLQuery.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/2.0/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/2.0/#3.2\u000a\u000a[\u000a    DependentLifetime\u000a] interface WebGLQuery {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLRenderbuffer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLRenderbuffer.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.7\u000a\u000a[\u000a    DependentLifetime\u000a] interface WebGLRenderbuffer {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLRenderingContext.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLRenderingContext.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#WebGLRenderingContext\u000a\u000a[\u000a    DoNotCheckConstants,\u000a    Exposed(Worker ExperimentalCanvasFeatures, Window StableBlinkFeatures),\u000a    DependentLifetime\u000a] interface WebGLRenderingContext { };\u000aWebGLRenderingContext implements WebGLRenderingContextBase;\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLRenderingContextBase.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLRenderingContextBase.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#WebGLRenderingContextBase\u000a\u000atypedef unsigned long  GLenum;\u000atypedef boolean        GLboolean;\u000atypedef unsigned long  GLbitfield;\u000atypedef byte           GLbyte; // 'byte' should be a signed 8 bit type.\u000atypedef short          GLshort;\u000atypedef long           GLint;\u000atypedef long           GLsizei;\u000atypedef long long      GLintptr;\u000atypedef long long      GLsizeiptr;\u000atypedef octet          GLubyte; // 'octet' should be an unsigned 8 bit type.\u000atypedef unsigned short GLushort;\u000atypedef unsigned long  GLuint;\u000atypedef unrestricted float GLfloat;\u000atypedef unrestricted float GLclampf;\u000a\u000a[\u000a    // FIXME: [DoNotCheckConstants] should be applied to members and not need to\u000a    // be put on implementing interface\u000a    // DoNotCheckConstants, // need to put on implementing interface\u000a    NoInterfaceObject // Always used on target of 'implements'\u000a] interface WebGLRenderingContextBase {\u000a\u000a    [ImplementedAs=getHTMLOrOffscreenCanvas] readonly attribute (HTMLCanvasElement or OffscreenCanvas) canvas;\u000a\u000a    /* ClearBufferMask */\u000a    const GLenum DEPTH_BUFFER_BIT               = 0x00000100;\u000a    const GLenum STENCIL_BUFFER_BIT             = 0x00000400;\u000a    const GLenum COLOR_BUFFER_BIT               = 0x00004000;\u000a\u000a    /* BeginMode */\u000a    const GLenum POINTS                         = 0x0000;\u000a    const GLenum LINES                          = 0x0001;\u000a    const GLenum LINE_LOOP                      = 0x0002;\u000a    const GLenum LINE_STRIP                     = 0x0003;\u000a    const GLenum TRIANGLES                      = 0x0004;\u000a    const GLenum TRIANGLE_STRIP                 = 0x0005;\u000a    const GLenum TRIANGLE_FAN                   = 0x0006;\u000a\u000a    /* AlphaFunction (not supported in ES20) */\u000a    /*      NEVER */\u000a    /*      LESS */\u000a    /*      EQUAL */\u000a    /*      LEQUAL */\u000a    /*      GREATER */\u000a    /*      NOTEQUAL */\u000a    /*      GEQUAL */\u000a    /*      ALWAYS */\u000a\u000a    /* BlendingFactorDest */\u000a    const GLenum ZERO                           = 0;\u000a    const GLenum ONE                            = 1;\u000a    const GLenum SRC_COLOR                      = 0x0300;\u000a    const GLenum ONE_MINUS_SRC_COLOR            = 0x0301;\u000a    const GLenum SRC_ALPHA                      = 0x0302;\u000a    const GLenum ONE_MINUS_SRC_ALPHA            = 0x0303;\u000a    const GLenum DST_ALPHA                      = 0x0304;\u000a    const GLenum ONE_MINUS_DST_ALPHA            = 0x0305;\u000a\u000a    /* BlendingFactorSrc */\u000a    /*      ZERO */\u000a    /*      ONE */\u000a    const GLenum DST_COLOR                      = 0x0306;\u000a    const GLenum ONE_MINUS_DST_COLOR            = 0x0307;\u000a    const GLenum SRC_ALPHA_SATURATE             = 0x0308;\u000a    /*      SRC_ALPHA */\u000a    /*      ONE_MINUS_SRC_ALPHA */\u000a    /*      DST_ALPHA */\u000a    /*      ONE_MINUS_DST_ALPHA */\u000a\u000a    /* BlendEquationSeparate */\u000a    const GLenum FUNC_ADD                       = 0x8006;\u000a    const GLenum BLEND_EQUATION                 = 0x8009;\u000a    const GLenum BLEND_EQUATION_RGB             = 0x8009;   /* same as BLEND_EQUATION */\u000a    const GLenum BLEND_EQUATION_ALPHA           = 0x883D;\u000a\u000a    /* BlendSubtract */\u000a    const GLenum FUNC_SUBTRACT                  = 0x800A;\u000a    const GLenum FUNC_REVERSE_SUBTRACT          = 0x800B;\u000a\u000a    /* Separate Blend Functions */\u000a    const GLenum BLEND_DST_RGB                  = 0x80C8;\u000a    const GLenum BLEND_SRC_RGB                  = 0x80C9;\u000a    const GLenum BLEND_DST_ALPHA                = 0x80CA;\u000a    const GLenum BLEND_SRC_ALPHA                = 0x80CB;\u000a    const GLenum CONSTANT_COLOR                 = 0x8001;\u000a    const GLenum ONE_MINUS_CONSTANT_COLOR       = 0x8002;\u000a    const GLenum CONSTANT_ALPHA                 = 0x8003;\u000a    const GLenum ONE_MINUS_CONSTANT_ALPHA       = 0x8004;\u000a    const GLenum BLEND_COLOR                    = 0x8005;\u000a\u000a    /* Buffer Objects */\u000a    const GLenum ARRAY_BUFFER                   = 0x8892;\u000a    const GLenum ELEMENT_ARRAY_BUFFER           = 0x8893;\u000a    const GLenum ARRAY_BUFFER_BINDING           = 0x8894;\u000a    const GLenum ELEMENT_ARRAY_BUFFER_BINDING   = 0x8895;\u000a\u000a    const GLenum STREAM_DRAW                    = 0x88E0;\u000a    const GLenum STATIC_DRAW                    = 0x88E4;\u000a    const GLenum DYNAMIC_DRAW                   = 0x88E8;\u000a\u000a    const GLenum BUFFER_SIZE                    = 0x8764;\u000a    const GLenum BUFFER_USAGE                   = 0x8765;\u000a\u000a    const GLenum CURRENT_VERTEX_ATTRIB          = 0x8626;\u000a\u000a    /* CullFaceMode */\u000a    const GLenum FRONT                          = 0x0404;\u000a    const GLenum BACK                           = 0x0405;\u000a    const GLenum FRONT_AND_BACK                 = 0x0408;\u000a\u000a    /* DepthFunction */\u000a    /*      NEVER */\u000a    /*      LESS */\u000a    /*      EQUAL */\u000a    /*      LEQUAL */\u000a    /*      GREATER */\u000a    /*      NOTEQUAL */\u000a    /*      GEQUAL */\u000a    /*      ALWAYS */\u000a\u000a    /* EnableCap */\u000a    const GLenum TEXTURE_2D                     = 0x0DE1;\u000a    const GLenum CULL_FACE                      = 0x0B44;\u000a    const GLenum BLEND                          = 0x0BE2;\u000a    const GLenum DITHER                         = 0x0BD0;\u000a    const GLenum STENCIL_TEST                   = 0x0B90;\u000a    const GLenum DEPTH_TEST                     = 0x0B71;\u000a    const GLenum SCISSOR_TEST                   = 0x0C11;\u000a    const GLenum POLYGON_OFFSET_FILL            = 0x8037;\u000a    const GLenum SAMPLE_ALPHA_TO_COVERAGE       = 0x809E;\u000a    const GLenum SAMPLE_COVERAGE                = 0x80A0;\u000a\u000a    /* ErrorCode */\u000a    const GLenum NO_ERROR                       = 0;\u000a    const GLenum INVALID_ENUM                   = 0x0500;\u000a    const GLenum INVALID_VALUE                  = 0x0501;\u000a    const GLenum INVALID_OPERATION              = 0x0502;\u000a    const GLenum OUT_OF_MEMORY                  = 0x0505;\u000a\u000a    /* FrontFaceDirection */\u000a    const GLenum CW                             = 0x0900;\u000a    const GLenum CCW                            = 0x0901;\u000a\u000a    /* GetPName */\u000a    const GLenum LINE_WIDTH                     = 0x0B21;\u000a    const GLenum ALIASED_POINT_SIZE_RANGE       = 0x846D;\u000a    const GLenum ALIASED_LINE_WIDTH_RANGE       = 0x846E;\u000a    const GLenum CULL_FACE_MODE                 = 0x0B45;\u000a    const GLenum FRONT_FACE                     = 0x0B46;\u000a    const GLenum DEPTH_RANGE                    = 0x0B70;\u000a    const GLenum DEPTH_WRITEMASK                = 0x0B72;\u000a    const GLenum DEPTH_CLEAR_VALUE              = 0x0B73;\u000a    const GLenum DEPTH_FUNC                     = 0x0B74;\u000a    const GLenum STENCIL_CLEAR_VALUE            = 0x0B91;\u000a    const GLenum STENCIL_FUNC                   = 0x0B92;\u000a    const GLenum STENCIL_FAIL                   = 0x0B94;\u000a    const GLenum STENCIL_PASS_DEPTH_FAIL        = 0x0B95;\u000a    const GLenum STENCIL_PASS_DEPTH_PASS        = 0x0B96;\u000a    const GLenum STENCIL_REF                    = 0x0B97;\u000a    const GLenum STENCIL_VALUE_MASK             = 0x0B93;\u000a    const GLenum STENCIL_WRITEMASK              = 0x0B98;\u000a    const GLenum STENCIL_BACK_FUNC              = 0x8800;\u000a    const GLenum STENCIL_BACK_FAIL              = 0x8801;\u000a    const GLenum STENCIL_BACK_PASS_DEPTH_FAIL   = 0x8802;\u000a    const GLenum STENCIL_BACK_PASS_DEPTH_PASS   = 0x8803;\u000a    const GLenum STENCIL_BACK_REF               = 0x8CA3;\u000a    const GLenum STENCIL_BACK_VALUE_MASK        = 0x8CA4;\u000a    const GLenum STENCIL_BACK_WRITEMASK         = 0x8CA5;\u000a    const GLenum VIEWPORT                       = 0x0BA2;\u000a    const GLenum SCISSOR_BOX                    = 0x0C10;\u000a    /*      SCISSOR_TEST */\u000a    const GLenum COLOR_CLEAR_VALUE              = 0x0C22;\u000a    const GLenum COLOR_WRITEMASK                = 0x0C23;\u000a    const GLenum UNPACK_ALIGNMENT               = 0x0CF5;\u000a    const GLenum PACK_ALIGNMENT                 = 0x0D05;\u000a    const GLenum MAX_TEXTURE_SIZE               = 0x0D33;\u000a    const GLenum MAX_VIEWPORT_DIMS              = 0x0D3A;\u000a    const GLenum SUBPIXEL_BITS                  = 0x0D50;\u000a    const GLenum RED_BITS                       = 0x0D52;\u000a    const GLenum GREEN_BITS                     = 0x0D53;\u000a    const GLenum BLUE_BITS                      = 0x0D54;\u000a    const GLenum ALPHA_BITS                     = 0x0D55;\u000a    const GLenum DEPTH_BITS                     = 0x0D56;\u000a    const GLenum STENCIL_BITS                   = 0x0D57;\u000a    const GLenum POLYGON_OFFSET_UNITS           = 0x2A00;\u000a    /*      POLYGON_OFFSET_FILL */\u000a    const GLenum POLYGON_OFFSET_FACTOR          = 0x8038;\u000a    const GLenum TEXTURE_BINDING_2D             = 0x8069;\u000a    const GLenum SAMPLE_BUFFERS                 = 0x80A8;\u000a    const GLenum SAMPLES                        = 0x80A9;\u000a    const GLenum SAMPLE_COVERAGE_VALUE          = 0x80AA;\u000a    const GLenum SAMPLE_COVERAGE_INVERT         = 0x80AB;\u000a\u000a    /* GetTextureParameter */\u000a    /*      TEXTURE_MAG_FILTER */\u000a    /*      TEXTURE_MIN_FILTER */\u000a    /*      TEXTURE_WRAP_S */\u000a    /*      TEXTURE_WRAP_T */\u000a\u000a    const GLenum COMPRESSED_TEXTURE_FORMATS     = 0x86A3;\u000a\u000a    /* HintMode */\u000a    const GLenum DONT_CARE                      = 0x1100;\u000a    const GLenum FASTEST                        = 0x1101;\u000a    const GLenum NICEST                         = 0x1102;\u000a\u000a    /* HintTarget */\u000a    const GLenum GENERATE_MIPMAP_HINT            = 0x8192;\u000a\u000a    /* DataType */\u000a    const GLenum BYTE                           = 0x1400;\u000a    const GLenum UNSIGNED_BYTE                  = 0x1401;\u000a    const GLenum SHORT                          = 0x1402;\u000a    const GLenum UNSIGNED_SHORT                 = 0x1403;\u000a    const GLenum INT                            = 0x1404;\u000a    const GLenum UNSIGNED_INT                   = 0x1405;\u000a    const GLenum FLOAT                          = 0x1406;\u000a\u000a    /* PixelFormat */\u000a    const GLenum DEPTH_COMPONENT                = 0x1902;\u000a    const GLenum ALPHA                          = 0x1906;\u000a    const GLenum RGB                            = 0x1907;\u000a    const GLenum RGBA                           = 0x1908;\u000a    const GLenum LUMINANCE                      = 0x1909;\u000a    const GLenum LUMINANCE_ALPHA                = 0x190A;\u000a\u000a    /* PixelType */\u000a    /*      UNSIGNED_BYTE */\u000a    const GLenum UNSIGNED_SHORT_4_4_4_4         = 0x8033;\u000a    const GLenum UNSIGNED_SHORT_5_5_5_1         = 0x8034;\u000a    const GLenum UNSIGNED_SHORT_5_6_5           = 0x8363;\u000a\u000a    /* Shaders */\u000a    const GLenum FRAGMENT_SHADER                  = 0x8B30;\u000a    const GLenum VERTEX_SHADER                    = 0x8B31;\u000a    const GLenum MAX_VERTEX_ATTRIBS               = 0x8869;\u000a    const GLenum MAX_VERTEX_UNIFORM_VECTORS       = 0x8DFB;\u000a    const GLenum MAX_VARYING_VECTORS              = 0x8DFC;\u000a    const GLenum MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\u000a    const GLenum MAX_VERTEX_TEXTURE_IMAGE_UNITS   = 0x8B4C;\u000a    const GLenum MAX_TEXTURE_IMAGE_UNITS          = 0x8872;\u000a    const GLenum MAX_FRAGMENT_UNIFORM_VECTORS     = 0x8DFD;\u000a    const GLenum SHADER_TYPE                      = 0x8B4F;\u000a    const GLenum DELETE_STATUS                    = 0x8B80;\u000a    const GLenum LINK_STATUS                      = 0x8B82;\u000a    const GLenum VALIDATE_STATUS                  = 0x8B83;\u000a    const GLenum ATTACHED_SHADERS                 = 0x8B85;\u000a    const GLenum ACTIVE_UNIFORMS                  = 0x8B86;\u000a    const GLenum ACTIVE_ATTRIBUTES                = 0x8B89;\u000a    const GLenum SHADING_LANGUAGE_VERSION         = 0x8B8C;\u000a    const GLenum CURRENT_PROGRAM                  = 0x8B8D;\u000a\u000a    /* StencilFunction */\u000a    const GLenum NEVER                          = 0x0200;\u000a    const GLenum LESS                           = 0x0201;\u000a    const GLenum EQUAL                          = 0x0202;\u000a    const GLenum LEQUAL                         = 0x0203;\u000a    const GLenum GREATER                        = 0x0204;\u000a    const GLenum NOTEQUAL                       = 0x0205;\u000a    const GLenum GEQUAL                         = 0x0206;\u000a    const GLenum ALWAYS                         = 0x0207;\u000a\u000a    /* StencilOp */\u000a    /*      ZERO */\u000a    const GLenum KEEP                           = 0x1E00;\u000a    const GLenum REPLACE                        = 0x1E01;\u000a    const GLenum INCR                           = 0x1E02;\u000a    const GLenum DECR                           = 0x1E03;\u000a    const GLenum INVERT                         = 0x150A;\u000a    const GLenum INCR_WRAP                      = 0x8507;\u000a    const GLenum DECR_WRAP                      = 0x8508;\u000a\u000a    /* StringName */\u000a    const GLenum VENDOR                         = 0x1F00;\u000a    const GLenum RENDERER                       = 0x1F01;\u000a    const GLenum VERSION                        = 0x1F02;\u000a\u000a    /* TextureMagFilter */\u000a    const GLenum NEAREST                        = 0x2600;\u000a    const GLenum LINEAR                         = 0x2601;\u000a\u000a    /* TextureMinFilter */\u000a    /*      NEAREST */\u000a    /*      LINEAR */\u000a    const GLenum NEAREST_MIPMAP_NEAREST         = 0x2700;\u000a    const GLenum LINEAR_MIPMAP_NEAREST          = 0x2701;\u000a    const GLenum NEAREST_MIPMAP_LINEAR          = 0x2702;\u000a    const GLenum LINEAR_MIPMAP_LINEAR           = 0x2703;\u000a\u000a    /* TextureParameterName */\u000a    const GLenum TEXTURE_MAG_FILTER             = 0x2800;\u000a    const GLenum TEXTURE_MIN_FILTER             = 0x2801;\u000a    const GLenum TEXTURE_WRAP_S                 = 0x2802;\u000a    const GLenum TEXTURE_WRAP_T                 = 0x2803;\u000a\u000a    /* TextureTarget */\u000a    /*      TEXTURE_2D */\u000a    const GLenum TEXTURE                        = 0x1702;\u000a\u000a    const GLenum TEXTURE_CUBE_MAP               = 0x8513;\u000a    const GLenum TEXTURE_BINDING_CUBE_MAP       = 0x8514;\u000a    const GLenum TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\u000a    const GLenum TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\u000a    const GLenum TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\u000a    const GLenum TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\u000a    const GLenum TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\u000a    const GLenum TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851A;\u000a    const GLenum MAX_CUBE_MAP_TEXTURE_SIZE      = 0x851C;\u000a\u000a    /* TextureUnit */\u000a    const GLenum TEXTURE0                       = 0x84C0;\u000a    const GLenum TEXTURE1                       = 0x84C1;\u000a    const GLenum TEXTURE2                       = 0x84C2;\u000a    const GLenum TEXTURE3                       = 0x84C3;\u000a    const GLenum TEXTURE4                       = 0x84C4;\u000a    const GLenum TEXTURE5                       = 0x84C5;\u000a    const GLenum TEXTURE6                       = 0x84C6;\u000a    const GLenum TEXTURE7                       = 0x84C7;\u000a    const GLenum TEXTURE8                       = 0x84C8;\u000a    const GLenum TEXTURE9                       = 0x84C9;\u000a    const GLenum TEXTURE10                      = 0x84CA;\u000a    const GLenum TEXTURE11                      = 0x84CB;\u000a    const GLenum TEXTURE12                      = 0x84CC;\u000a    const GLenum TEXTURE13                      = 0x84CD;\u000a    const GLenum TEXTURE14                      = 0x84CE;\u000a    const GLenum TEXTURE15                      = 0x84CF;\u000a    const GLenum TEXTURE16                      = 0x84D0;\u000a    const GLenum TEXTURE17                      = 0x84D1;\u000a    const GLenum TEXTURE18                      = 0x84D2;\u000a    const GLenum TEXTURE19                      = 0x84D3;\u000a    const GLenum TEXTURE20                      = 0x84D4;\u000a    const GLenum TEXTURE21                      = 0x84D5;\u000a    const GLenum TEXTURE22                      = 0x84D6;\u000a    const GLenum TEXTURE23                      = 0x84D7;\u000a    const GLenum TEXTURE24                      = 0x84D8;\u000a    const GLenum TEXTURE25                      = 0x84D9;\u000a    const GLenum TEXTURE26                      = 0x84DA;\u000a    const GLenum TEXTURE27                      = 0x84DB;\u000a    const GLenum TEXTURE28                      = 0x84DC;\u000a    const GLenum TEXTURE29                      = 0x84DD;\u000a    const GLenum TEXTURE30                      = 0x84DE;\u000a    const GLenum TEXTURE31                      = 0x84DF;\u000a    const GLenum ACTIVE_TEXTURE                 = 0x84E0;\u000a\u000a    /* TextureWrapMode */\u000a    const GLenum REPEAT                         = 0x2901;\u000a    const GLenum CLAMP_TO_EDGE                  = 0x812F;\u000a    const GLenum MIRRORED_REPEAT                = 0x8370;\u000a\u000a    /* Uniform Types */\u000a    const GLenum FLOAT_VEC2                     = 0x8B50;\u000a    const GLenum FLOAT_VEC3                     = 0x8B51;\u000a    const GLenum FLOAT_VEC4                     = 0x8B52;\u000a    const GLenum INT_VEC2                       = 0x8B53;\u000a    const GLenum INT_VEC3                       = 0x8B54;\u000a    const GLenum INT_VEC4                       = 0x8B55;\u000a    const GLenum BOOL                           = 0x8B56;\u000a    const GLenum BOOL_VEC2                      = 0x8B57;\u000a    const GLenum BOOL_VEC3                      = 0x8B58;\u000a    const GLenum BOOL_VEC4                      = 0x8B59;\u000a    const GLenum FLOAT_MAT2                     = 0x8B5A;\u000a    const GLenum FLOAT_MAT3                     = 0x8B5B;\u000a    const GLenum FLOAT_MAT4                     = 0x8B5C;\u000a    const GLenum SAMPLER_2D                     = 0x8B5E;\u000a    const GLenum SAMPLER_CUBE                   = 0x8B60;\u000a\u000a    /* Vertex Arrays */\u000a    const GLenum VERTEX_ATTRIB_ARRAY_ENABLED        = 0x8622;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_SIZE           = 0x8623;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_STRIDE         = 0x8624;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_TYPE           = 0x8625;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_NORMALIZED     = 0x886A;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_POINTER        = 0x8645;\u000a    const GLenum VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\u000a\u000a    /* Read Format */\u000a    const GLenum IMPLEMENTATION_COLOR_READ_TYPE   = 0x8B9A;\u000a    const GLenum IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B;\u000a\u000a    /* Shader Source */\u000a    const GLenum COMPILE_STATUS                 = 0x8B81;\u000a\u000a    /* Shader Precision-Specified Types */\u000a    const GLenum LOW_FLOAT                      = 0x8DF0;\u000a    const GLenum MEDIUM_FLOAT                   = 0x8DF1;\u000a    const GLenum HIGH_FLOAT                     = 0x8DF2;\u000a    const GLenum LOW_INT                        = 0x8DF3;\u000a    const GLenum MEDIUM_INT                     = 0x8DF4;\u000a    const GLenum HIGH_INT                       = 0x8DF5;\u000a\u000a    /* Framebuffer Object. */\u000a    const GLenum FRAMEBUFFER                    = 0x8D40;\u000a    const GLenum RENDERBUFFER                   = 0x8D41;\u000a\u000a    const GLenum RGBA4                          = 0x8056;\u000a    const GLenum RGB5_A1                        = 0x8057;\u000a    const GLenum RGB565                         = 0x8D62;\u000a    const GLenum DEPTH_COMPONENT16              = 0x81A5;\u000a    const GLenum STENCIL_INDEX8                 = 0x8D48;\u000a    const GLenum DEPTH_STENCIL                  = 0x84F9;\u000a\u000a    const GLenum RENDERBUFFER_WIDTH             = 0x8D42;\u000a    const GLenum RENDERBUFFER_HEIGHT            = 0x8D43;\u000a    const GLenum RENDERBUFFER_INTERNAL_FORMAT   = 0x8D44;\u000a    const GLenum RENDERBUFFER_RED_SIZE          = 0x8D50;\u000a    const GLenum RENDERBUFFER_GREEN_SIZE        = 0x8D51;\u000a    const GLenum RENDERBUFFER_BLUE_SIZE         = 0x8D52;\u000a    const GLenum RENDERBUFFER_ALPHA_SIZE        = 0x8D53;\u000a    const GLenum RENDERBUFFER_DEPTH_SIZE        = 0x8D54;\u000a    const GLenum RENDERBUFFER_STENCIL_SIZE      = 0x8D55;\u000a\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE           = 0x8CD0;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_OBJECT_NAME           = 0x8CD1;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL         = 0x8CD2;\u000a    const GLenum FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\u000a\u000a    const GLenum COLOR_ATTACHMENT0              = 0x8CE0;\u000a    const GLenum DEPTH_ATTACHMENT               = 0x8D00;\u000a    const GLenum STENCIL_ATTACHMENT             = 0x8D20;\u000a    const GLenum DEPTH_STENCIL_ATTACHMENT       = 0x821A;\u000a\u000a    const GLenum NONE                           = 0;\u000a\u000a    const GLenum FRAMEBUFFER_COMPLETE                      = 0x8CD5;\u000a    const GLenum FRAMEBUFFER_INCOMPLETE_ATTACHMENT         = 0x8CD6;\u000a    const GLenum FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\u000a    const GLenum FRAMEBUFFER_INCOMPLETE_DIMENSIONS         = 0x8CD9;\u000a    const GLenum FRAMEBUFFER_UNSUPPORTED                   = 0x8CDD;\u000a\u000a    const GLenum FRAMEBUFFER_BINDING            = 0x8CA6;\u000a    const GLenum RENDERBUFFER_BINDING           = 0x8CA7;\u000a    const GLenum MAX_RENDERBUFFER_SIZE          = 0x84E8;\u000a\u000a    const GLenum INVALID_FRAMEBUFFER_OPERATION  = 0x0506;\u000a\u000a    /* WebGL-specific enums */\u000a    const GLenum UNPACK_FLIP_Y_WEBGL                = 0x9240;\u000a    const GLenum UNPACK_PREMULTIPLY_ALPHA_WEBGL     = 0x9241;\u000a    const GLenum CONTEXT_LOST_WEBGL                 = 0x9242;\u000a    const GLenum UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\u000a    const GLenum BROWSER_DEFAULT_WEBGL              = 0x9244;\u000a\u000a    readonly attribute GLsizei drawingBufferWidth;\u000a    readonly attribute GLsizei drawingBufferHeight;\u000a\u000a    void activeTexture(GLenum texture);\u000a    void attachShader(WebGLProgram program, WebGLShader shader);\u000a    void bindAttribLocation(WebGLProgram program, GLuint index, DOMString name);\u000a    void bindBuffer(GLenum target, WebGLBuffer? buffer);\u000a    void bindFramebuffer(GLenum target, WebGLFramebuffer? framebuffer);\u000a    void bindRenderbuffer(GLenum target, WebGLRenderbuffer? renderbuffer);\u000a    void bindTexture(GLenum target, WebGLTexture? texture);\u000a    void blendColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);\u000a    void blendEquation(GLenum mode);\u000a    void blendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);\u000a    void blendFunc(GLenum sfactor, GLenum dfactor);\u000a    void blendFuncSeparate(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);\u000a    // FIXME: should be union type\u000a    // https://www.khronos.org/bugzilla/show_bug.cgi?id=1172\u000a    void bufferData(GLenum target, GLsizeiptr size, GLenum usage);\u000a    void bufferData(GLenum target, [AllowShared] ArrayBufferView data, GLenum usage);\u000a    void bufferData(GLenum target, ArrayBuffer? data, GLenum usage);\u000a    void bufferSubData(GLenum target, GLintptr offset, [FlexibleArrayBufferView] ArrayBufferView data);\u000a    void bufferSubData(GLenum target, GLintptr offset, ArrayBuffer data);\u000a\u000a    GLenum checkFramebufferStatus(GLenum target);\u000a    void clear(GLbitfield mask);\u000a    void clearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);\u000a    void clearDepth(GLclampf depth);\u000a    void clearStencil(GLint s);\u000a    void colorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);\u000a    void compileShader(WebGLShader shader);\u000a\u000a    void compressedTexImage2D(GLenum target, GLint level, GLenum internalformat,\u000a                              GLsizei width, GLsizei height, GLint border, [AllowShared] ArrayBufferView data);\u000a    void compressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a                                 GLsizei width, GLsizei height, GLenum format, [AllowShared] ArrayBufferView data);\u000a\u000a    void copyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);\u000a    void copyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);\u000a\u000a    WebGLBuffer createBuffer();\u000a    WebGLFramebuffer createFramebuffer();\u000a    WebGLProgram createProgram();\u000a    WebGLRenderbuffer createRenderbuffer();\u000a    WebGLShader createShader(GLenum type);\u000a    WebGLTexture createTexture();\u000a\u000a    void cullFace(GLenum mode);\u000a\u000a    void deleteBuffer(WebGLBuffer? buffer);\u000a    void deleteFramebuffer(WebGLFramebuffer? framebuffer);\u000a    void deleteProgram(WebGLProgram? program);\u000a    void deleteRenderbuffer(WebGLRenderbuffer? renderbuffer);\u000a    void deleteShader(WebGLShader? shader);\u000a    void deleteTexture(WebGLTexture? texture);\u000a\u000a    void depthFunc(GLenum func);\u000a    void depthMask(GLboolean flag);\u000a    void depthRange(GLclampf zNear, GLclampf zFar);\u000a    void detachShader(WebGLProgram program, WebGLShader shader);\u000a    void disable(GLenum cap);\u000a    void disableVertexAttribArray(GLuint index);\u000a    void drawArrays(GLenum mode, GLint first, GLsizei count);\u000a    void drawElements(GLenum mode, GLsizei count, GLenum type, GLintptr offset);\u000a\u000a    void enable(GLenum cap);\u000a    void enableVertexAttribArray(GLuint index);\u000a    void finish();\u000a    void flush();\u000a    void framebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, WebGLRenderbuffer? renderbuffer);\u000a    void framebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, WebGLTexture? texture, GLint level);\u000a    void frontFace(GLenum mode);\u000a    void generateMipmap(GLenum target);\u000a\u000a    WebGLActiveInfo getActiveAttrib(WebGLProgram program, GLuint index);\u000a    WebGLActiveInfo getActiveUniform(WebGLProgram program, GLuint index);\u000a\u000a    sequence<WebGLShader>? getAttachedShaders(WebGLProgram program);\u000a\u000a    GLint getAttribLocation(WebGLProgram program, DOMString name);\u000a\u000a    [CallWith=ScriptState] any getBufferParameter(GLenum target, GLenum pname);\u000a\u000a    WebGLContextAttributes? getContextAttributes();\u000a\u000a    GLenum getError();\u000a\u000a    [CallWith=ScriptState] object? getExtension(DOMString name);\u000a\u000a    [CallWith=ScriptState] any getFramebufferAttachmentParameter(GLenum target, GLenum attachment, GLenum pname);\u000a    [CallWith=ScriptState] any getParameter(GLenum pname);\u000a    [CallWith=ScriptState] any getProgramParameter(WebGLProgram program, GLenum pname);\u000a    DOMString? getProgramInfoLog(WebGLProgram program);\u000a    [CallWith=ScriptState] any getRenderbufferParameter(GLenum target, GLenum pname);\u000a    [CallWith=ScriptState] any getShaderParameter(WebGLShader shader, GLenum pname);\u000a\u000a    DOMString?   getShaderInfoLog(WebGLShader shader);\u000a\u000a    WebGLShaderPrecisionFormat getShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype);\u000a\u000a    DOMString?   getShaderSource(WebGLShader shader);\u000a\u000a    sequence<DOMString>? getSupportedExtensions();\u000a\u000a    [CallWith=ScriptState] any getTexParameter(GLenum target, GLenum pname);\u000a\u000a    [CallWith=ScriptState] any getUniform(WebGLProgram program, WebGLUniformLocation location);\u000a\u000a    WebGLUniformLocation getUniformLocation(WebGLProgram program, DOMString name);\u000a\u000a    [CallWith=ScriptState] any getVertexAttrib(GLuint index, GLenum pname);\u000a\u000a    GLintptr getVertexAttribOffset(GLuint index, GLenum pname);\u000a\u000a    void hint(GLenum target, GLenum mode);\u000a    GLboolean isBuffer(WebGLBuffer? buffer);\u000a    GLboolean isContextLost();\u000a    GLboolean isEnabled(GLenum cap);\u000a    GLboolean isFramebuffer(WebGLFramebuffer? framebuffer);\u000a    GLboolean isProgram(WebGLProgram? program);\u000a    GLboolean isRenderbuffer(WebGLRenderbuffer? renderbuffer);\u000a    GLboolean isShader(WebGLShader? shader);\u000a    GLboolean isTexture(WebGLTexture? texture);\u000a    void lineWidth(GLfloat width);\u000a    void linkProgram(WebGLProgram program);\u000a    void pixelStorei(GLenum pname, GLint param);\u000a    void polygonOffset(GLfloat factor, GLfloat units);\u000a\u000a    void readPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, [AllowShared] ArrayBufferView? pixels);\u000a\u000a    void renderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);\u000a    void sampleCoverage(GLclampf value, GLboolean invert);\u000a    void scissor(GLint x, GLint y, GLsizei width, GLsizei height);\u000a    void shaderSource(WebGLShader shader, DOMString string);\u000a    void stencilFunc(GLenum func, GLint ref, GLuint mask);\u000a    void stencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);\u000a    void stencilMask(GLuint mask);\u000a    void stencilMaskSeparate(GLenum face, GLuint mask);\u000a    void stencilOp(GLenum fail, GLenum zfail, GLenum zpass);\u000a    void stencilOpSeparate(GLenum face, GLenum fail, GLenum zfail, GLenum zpass);\u000a\u000a    void texParameterf(GLenum target, GLenum pname, GLfloat param);\u000a    void texParameteri(GLenum target, GLenum pname, GLint param);\u000a\u000a    // Supported forms:\u000a    // FIXME: should be union type\u000a    // https://www.khronos.org/bugzilla/show_bug.cgi?id=1172\u000a    void texImage2D(\u000a        GLenum target, GLint level, GLint internalformat,\u000a        GLsizei width, GLsizei height, GLint border,\u000a        GLenum format, GLenum type, [AllowShared] ArrayBufferView? pixels);\u000a    void texImage2D(\u000a        GLenum target, GLint level, GLint internalformat,\u000a        GLenum format, GLenum type, ImageData pixels);\u000a    [CallWith=ExecutionContext, RaisesException] void texImage2D(\u000a        GLenum target, GLint level, GLint internalformat,\u000a        GLenum format, GLenum type, HTMLImageElement image);\u000a    [CallWith=ExecutionContext, RaisesException] void texImage2D(\u000a        GLenum target, GLint level, GLint internalformat,\u000a        GLenum format, GLenum type, HTMLCanvasElement canvas);\u000a    [CallWith=ExecutionContext, RaisesException] void texImage2D(\u000a        GLenum target, GLint level, GLint internalformat,\u000a        GLenum format, GLenum type, HTMLVideoElement video);\u000a    [RaisesException] void texImage2D(\u000a        GLenum target, GLint level, GLint internalformat,\u000a        GLenum format, GLenum type, ImageBitmap bitmap);\u000a\u000a    void texSubImage2D(\u000a        GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a        GLsizei width, GLsizei height,\u000a        GLenum format, GLenum type, [AllowShared] ArrayBufferView? pixels);\u000a    void texSubImage2D(\u000a        GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a        GLenum format, GLenum type, ImageData pixels);\u000a    [CallWith=ExecutionContext, RaisesException] void texSubImage2D(\u000a        GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a        GLenum format, GLenum type, HTMLImageElement image);\u000a    [CallWith=ExecutionContext, RaisesException] void texSubImage2D(\u000a        GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a        GLenum format, GLenum type, HTMLCanvasElement canvas);\u000a    [CallWith=ExecutionContext, RaisesException] void texSubImage2D(\u000a        GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a        GLenum format, GLenum type, HTMLVideoElement video);\u000a    [RaisesException] void texSubImage2D(\u000a        GLenum target, GLint level, GLint xoffset, GLint yoffset,\u000a        GLenum format, GLenum type, ImageBitmap bitmap);\u000a\u000a    void uniform1f(WebGLUniformLocation? location, GLfloat x);\u000a    void uniform1fv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Float32Array v);\u000a    void uniform1fv(WebGLUniformLocation? location, sequence<GLfloat> v);\u000a    void uniform1i(WebGLUniformLocation? location, GLint x);\u000a    void uniform1iv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Int32Array v);\u000a    void uniform1iv(WebGLUniformLocation? location, sequence<GLint> v);\u000a    void uniform2f(WebGLUniformLocation? location, GLfloat x, GLfloat y);\u000a    void uniform2fv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Float32Array v);\u000a    void uniform2fv(WebGLUniformLocation? location, sequence<GLfloat> v);\u000a    void uniform2i(WebGLUniformLocation? location, GLint x, GLint y);\u000a    void uniform2iv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Int32Array v);\u000a    void uniform2iv(WebGLUniformLocation? location, sequence<GLint> v);\u000a    void uniform3f(WebGLUniformLocation? location, GLfloat x, GLfloat y, GLfloat z);\u000a    void uniform3fv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Float32Array v);\u000a    void uniform3fv(WebGLUniformLocation? location, sequence<GLfloat> v);\u000a    void uniform3i(WebGLUniformLocation? location, GLint x, GLint y, GLint z);\u000a    void uniform3iv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Int32Array v);\u000a    void uniform3iv(WebGLUniformLocation? location, sequence<GLint> v);\u000a    void uniform4f(WebGLUniformLocation? location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\u000a    void uniform4fv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Float32Array v);\u000a    void uniform4fv(WebGLUniformLocation? location, sequence<GLfloat> v);\u000a    void uniform4i(WebGLUniformLocation? location, GLint x, GLint y, GLint z, GLint w);\u000a    void uniform4iv(WebGLUniformLocation? location, [FlexibleArrayBufferView] Int32Array v);\u000a    void uniform4iv(WebGLUniformLocation? location, sequence<GLint> v);\u000a\u000a    void uniformMatrix2fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array array);\u000a    void uniformMatrix2fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> array);\u000a    void uniformMatrix3fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array array);\u000a    void uniformMatrix3fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> array);\u000a    void uniformMatrix4fv(WebGLUniformLocation? location, GLboolean transpose, [AllowShared] Float32Array array);\u000a    void uniformMatrix4fv(WebGLUniformLocation? location, GLboolean transpose, sequence<GLfloat> array);\u000a\u000a    void useProgram(WebGLProgram? program);\u000a    void validateProgram(WebGLProgram program);\u000a\u000a    void vertexAttrib1f(GLuint indx, GLfloat x);\u000a    void vertexAttrib1fv(GLuint indx, [AllowShared] Float32Array values);\u000a    void vertexAttrib1fv(GLuint indx, sequence<GLfloat> values);\u000a    void vertexAttrib2f(GLuint indx, GLfloat x, GLfloat y);\u000a    void vertexAttrib2fv(GLuint indx, [AllowShared] Float32Array values);\u000a    void vertexAttrib2fv(GLuint indx, sequence<GLfloat> values);\u000a    void vertexAttrib3f(GLuint indx, GLfloat x, GLfloat y, GLfloat z);\u000a    void vertexAttrib3fv(GLuint indx, [AllowShared] Float32Array values);\u000a    void vertexAttrib3fv(GLuint indx, sequence<GLfloat> values);\u000a    void vertexAttrib4f(GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\u000a    void vertexAttrib4fv(GLuint indx, [AllowShared] Float32Array values);\u000a    void vertexAttrib4fv(GLuint indx, sequence<GLfloat> values);\u000a    void vertexAttribPointer(GLuint indx, GLint size, GLenum type, GLboolean normalized,\u000a                                                    GLsizei stride, GLintptr offset);\u000a\u000a    void viewport(GLint x, GLint y, GLsizei width, GLsizei height);\u000a\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures, CallWith=ScriptState, RaisesException] Promise commit();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLSampler.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLSampler.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/2.0/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/2.0/#3.3\u000a\u000a[\u000a    DependentLifetime\u000a] interface WebGLSampler {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLShader.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLShader.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.8\u000a\u000a[\u000a    DependentLifetime\u000a] interface WebGLShader {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLShaderPrecisionFormat.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLShaderPrecisionFormat.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (c) 2012, Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.12\u000a\u000ainterface WebGLShaderPrecisionFormat {\u000a    readonly attribute long rangeMin;\u000a    readonly attribute long rangeMax;\u000a    readonly attribute long precision;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLSync.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLSync.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/2.0/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/2.0/#3.4\u000a\u000ainterface WebGLSync {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLTexture.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLTexture.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.9\u000a\u000a[\u000a    DependentLifetime\u000a] interface WebGLTexture {\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute unsigned long lastUploadedVideoWidth;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute unsigned long lastUploadedVideoHeight;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute double lastUploadedVideoTimestamp;\u000a    [RuntimeEnabled=ExperimentalCanvasFeatures] readonly attribute boolean lastUploadedVideoFrameWasSkipped;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLTimerQueryEXT.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLTimerQueryEXT.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query/\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface WebGLTimerQueryEXT {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLTransformFeedback.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLTransformFeedback.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/2.0/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/2.0/#3.5\u000a\u000a[\u000a    DependentLifetime\u000a] interface WebGLTransformFeedback {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLUniformLocation.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLUniformLocation.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a * Copyright (C) 2009 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.10\u000a\u000ainterface WebGLUniformLocation {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLBuffer.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLBuffer.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/1.0/"],contents:"/*\u000a * Copyright (C) 2009 Apple Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.4\u000a\u000a[\u000a    DependentLifetime\u000a] interface WebGLBuffer {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLVertexArrayObject.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLVertexArrayObject.idl"},specUrls:["https://www.khronos.org/registry/webgl/specs/latest/2.0/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://www.khronos.org/registry/webgl/specs/latest/2.0/#3.6\u000a\u000a[\u000a    DependentLifetime\u000a] interface WebGLVertexArrayObject {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/WebGLVertexArrayObjectOES.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/WebGLVertexArrayObjectOES.idl"},contents:"/*\u000a * Copyright (C) 2011 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions\u000a * are met:\u000a * 1. Redistributions of source code must retain the above copyright\u000a *    notice, this list of conditions and the following disclaimer.\u000a * 2. Redistributions in binary form must reproduce the above copyright\u000a *    notice, this list of conditions and the following disclaimer in the\u000a *    documentation and/or other materials provided with the distribution.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\u000a * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\u000a * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\u000a * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\u000a * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\u000a * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\u000a * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\u000a * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\u000a * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/\u000a\u000a[\u000a    NoInterfaceObject\u000a] interface WebGLVertexArrayObjectOES {\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/MIDIAccess.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/MIDIAccess.idl"},specUrls:["https://webaudio.github.io/web-midi-api/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://webaudio.github.io/web-midi-api/#MIDIAccess\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface MIDIAccess : EventTarget {\u000a    readonly attribute MIDIInputMap inputs;\u000a    readonly attribute MIDIOutputMap outputs;\u000a\u000a    readonly attribute boolean sysexEnabled;\u000a\u000a    attribute EventHandler onstatechange;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/MIDIConnectionEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/MIDIConnectionEvent.idl"},specUrls:["https://webaudio.github.io/web-midi-api/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://webaudio.github.io/web-midi-api/#MIDIConnectionEvent\u000a\u000a[\u000a    Constructor(DOMString type, optional MIDIConnectionEventInit eventInitDict)\u000a] interface MIDIConnectionEvent : Event {\u000a    readonly attribute MIDIPort port;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/MIDIConnectionEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/MIDIConnectionEventInit.idl"},specUrls:["https://webaudio.github.io/web-midi-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webaudio.github.io/web-midi-api/#MIDIConnectionEventInit\u000a\u000adictionary MIDIConnectionEventInit : EventInit {\u000a    // TODO(foolip): |port| should be required and not nullable.\u000a    // https://crbug.com/647693\u000a    // https://github.com/WebAudio/web-midi-api/issues/168\u000a    MIDIPort? port;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/MIDIInput.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/MIDIInput.idl"},specUrls:["https://webaudio.github.io/web-midi-api/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://webaudio.github.io/web-midi-api/#MIDIInput\u000a\u000a[\u000a    DependentLifetime\u000a] interface MIDIInput : MIDIPort {\u000a    attribute EventHandler onmidimessage;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/MIDIInputMap.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/MIDIInputMap.idl"},specUrls:["https://webaudio.github.io/web-midi-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webaudio.github.io/web-midi-api/#MIDIInput\u000a\u000ainterface MIDIInputMap {\u000a    readonly maplike<DOMString, MIDIInput>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/MIDIMessageEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/MIDIMessageEventInit.idl"},specUrls:["https://webaudio.github.io/web-midi-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webaudio.github.io/web-midi-api/#MIDIMessageEventInit\u000a\u000adictionary MIDIMessageEventInit : EventInit {\u000a    // TODO(foolip): |data| should be required and not nullable.\u000a    // https://crbug.com/647693\u000a    // https://github.com/WebAudio/web-midi-api/issues/168\u000a    Uint8Array? data;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/MIDIOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/MIDIOptions.idl"},specUrls:["https://webaudio.github.io/web-midi-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webaudio.github.io/web-midi-api/#MIDIOptions\u000a\u000adictionary MIDIOptions {\u000a    boolean sysex;\u000a    // TODO(crbug.com/502127): Add bool software to follow the latest spec.\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/MIDIOutput.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/MIDIOutput.idl"},specUrls:["https://webaudio.github.io/web-midi-api/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://webaudio.github.io/web-midi-api/#MIDIOutput\u000a\u000a[\u000a    DependentLifetime\u000a] interface MIDIOutput : MIDIPort {\u000a    // TODO(toyoshim): implement void clear()\u000a    [RaisesException] void send(Uint8Array data, optional double timestamp);\u000a    [RaisesException] void send(sequence<unsigned long> data, optional double timestamp);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/MIDIMessageEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/MIDIMessageEvent.idl"},specUrls:["https://webaudio.github.io/web-midi-api/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://webaudio.github.io/web-midi-api/#MIDIMessageEvent\u000a\u000a[\u000a    Constructor(DOMString type, optional MIDIMessageEventInit eventInitDict)\u000a] interface MIDIMessageEvent : Event {\u000a    readonly attribute Uint8Array data;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/MIDIOutputMap.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/MIDIOutputMap.idl"},specUrls:["https://webaudio.github.io/web-midi-api/"],contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://webaudio.github.io/web-midi-api/#MIDIOutputMap\u000a\u000ainterface MIDIOutputMap {\u000a    readonly maplike<DOMString, MIDIOutput>;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/MIDIPort.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/MIDIPort.idl"},specUrls:["https://webaudio.github.io/web-midi-api/","https://webaudio.github.io/web-midi-api/","https://webaudio.github.io/web-midi-api/","https://webaudio.github.io/web-midi-api/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://webaudio.github.io/web-midi-api/#idl-def-MIDIPortConnectionState\u000a\u000aenum MIDIPortConnectionState {\u000a    \"open\",\u000a    \"closed\",\u000a    \"pending\"\u000a};\u000a\u000a// https://webaudio.github.io/web-midi-api/#idl-def-MIDIPortDeviceState\u000a\u000aenum MIDIPortDeviceState {\u000a    \"disconnected\",\u000a    \"connected\"\u000a};\u000a\u000a// https://webaudio.github.io/web-midi-api/#idl-def-MIDIPortType\u000a\u000aenum MIDIPortType {\u000a    \"input\",\u000a    \"output\"\u000a};\u000a\u000a// https://webaudio.github.io/web-midi-api/#MIDIPort\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    DependentLifetime\u000a] interface MIDIPort : EventTarget {\u000a    readonly attribute MIDIPortConnectionState connection;\u000a    readonly attribute DOMString id;\u000a    readonly attribute DOMString manufacturer;\u000a    readonly attribute DOMString name;\u000a    readonly attribute MIDIPortDeviceState state;\u000a    readonly attribute MIDIPortType type;\u000a    readonly attribute DOMString version;\u000a\u000a    attribute EventHandler onstatechange;\u000a\u000a    [CallWith=ScriptState] Promise open();\u000a    [CallWith=ScriptState] Promise close();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webshare/NavigatorShare.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webshare/NavigatorShare.idl"},specUrls:["https://wicg.github.io/web-share/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/web-share/\u000a\u000a[\u000a  ImplementedAs=NavigatorShare,\u000a  RuntimeEnabled=WebShare\u000a] partial interface Navigator {\u000a  [SecureContext, CallWith=ScriptState, MeasureAs=WebShareShare]\u000a  Promise<void> share(optional ShareData data);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webmidi/NavigatorWebMIDI.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webmidi/NavigatorWebMIDI.idl"},specUrls:["https://webaudio.github.io/web-midi-api/"],contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://webaudio.github.io/web-midi-api/#requestMIDIAccess\u000a\u000a[\u000a  ImplementedAs=NavigatorWebMIDI\u000a] partial interface Navigator {\u000a  [\u000a    CallWith = ScriptState, MeasureAs = RequestMIDIAccess_ObscuredByFootprinting\u000a  ] Promise\u000a  requestMIDIAccess(optional MIDIOptions options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webshare/ShareData.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webshare/ShareData.idl"},specUrls:["https://wicg.github.io/web-share/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/web-share/\u000a\u000adictionary ShareData {\u000a  USVString title;\u000a  USVString text;\u000a  USVString url;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/websockets/CloseEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/websockets/CloseEvent.idl"},contents:"/*\u000a * Copyright (C) 2011 Google Inc.  All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/comms.html#the-closeevent-interfaces\u000a\u000a[\u000a    Constructor(DOMString type, optional CloseEventInit eventInitDict),\u000a    Exposed=(Window,Worker)\u000a] interface CloseEvent : Event {\u000a    readonly attribute boolean wasClean;\u000a    readonly attribute unsigned short code;\u000a    readonly attribute DOMString reason;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/websockets/CloseEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/websockets/CloseEventInit.idl"},contents:"// Copyright 2014 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://html.spec.whatwg.org/multipage/comms.html#the-closeevent-interfaces\u000a\u000adictionary CloseEventInit : EventInit {\u000a    boolean wasClean;\u000a    unsigned short code;\u000a    DOMString reason;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/websockets/WebSocket.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/websockets/WebSocket.idl"},contents:"/*\u000a * Copyright (C) 2009 Google Inc.  All rights reserved.\u000a * Copyright (C) 2010, 2011 Apple Inc. All Rights Reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\u000a\u000aenum BinaryType { \"blob\", \"arraybuffer\" };\u000a\u000a[\u000a    ActiveScriptWrappable,\u000a    Constructor(DOMString url, optional (DOMString or sequence<DOMString>) protocols),\u000a    ConstructorCallWith=ExecutionContext,\u000a    DependentLifetime,\u000a    Exposed=(Window,Worker),\u000a    ImplementedAs=DOMWebSocket,\u000a    RaisesException=Constructor\u000a] interface WebSocket : EventTarget {\u000a    readonly attribute DOMString url;\u000a\u000a    // ready state\u000a    const unsigned short CONNECTING = 0;\u000a    const unsigned short OPEN = 1;\u000a    const unsigned short CLOSING = 2;\u000a    const unsigned short CLOSED = 3;\u000a    readonly attribute unsigned short readyState;\u000a    readonly attribute unsigned long bufferedAmount;\u000a\u000a    // networking\u000a    attribute EventHandler onopen;\u000a    attribute EventHandler onerror;\u000a    attribute EventHandler onclose;\u000a    readonly attribute DOMString extensions;\u000a    readonly attribute DOMString protocol;\u000a    [RaisesException] void close(optional [Clamp] unsigned short code, optional USVString reason);\u000a\u000a    // messaging\u000a    attribute EventHandler onmessage;\u000a    attribute BinaryType binaryType;\u000a    [RaisesException] void send(USVString data);\u000a    [RaisesException] void send(Blob data);\u000a    [RaisesException] void send(ArrayBuffer data);\u000a    [RaisesException] void send(ArrayBufferView data);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USB.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USB.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#usb\u000a\u000a[\u000a    RuntimeEnabled=WebUSB\u000a] interface USB : EventTarget {\u000a    attribute EventHandler onconnect;\u000a    attribute EventHandler ondisconnect;\u000a    [CallWith=ScriptState, MeasureAs=UsbGetDevices] Promise<sequence<USBDevice>> getDevices();\u000a    [CallWith=ScriptState, MeasureAs=UsbRequestDevice] Promise<sequence<USBDevice>> requestDevice(USBDeviceRequestOptions options);\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBAlternateInterface.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBAlternateInterface.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#interfaces\u000a\u000a[\u000a    Constructor(USBInterface deviceInterface, octet alternateSetting),\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=WebUSB\u000a] interface USBAlternateInterface {\u000a    readonly attribute octet alternateSetting;\u000a    readonly attribute octet interfaceClass;\u000a    readonly attribute octet interfaceSubclass;\u000a    readonly attribute octet interfaceProtocol;\u000a    readonly attribute DOMString? interfaceName;\u000a    readonly attribute FrozenArray<USBEndpoint> endpoints;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBConfiguration.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBConfiguration.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#configurations\u000a\u000a[\u000a    Constructor(USBDevice device, octet configurationValue),\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=WebUSB\u000a] interface USBConfiguration {\u000a    readonly attribute octet configurationValue;\u000a    readonly attribute DOMString? configurationName;\u000a    readonly attribute FrozenArray<USBInterface> interfaces;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBConnectionEventInit.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBConnectionEventInit.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#events\u000a\u000adictionary USBConnectionEventInit : EventInit {\u000a    required USBDevice device;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBConnectionEvent.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBConnectionEvent.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#events\u000a\u000a[\u000a    Constructor(DOMString type, USBConnectionEventInit eventInitDict),\u000a    RuntimeEnabled=WebUSB\u000a] interface USBConnectionEvent : Event {\u000a    [SameObject] readonly attribute USBDevice device;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBControlTransferParameters.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBControlTransferParameters.idl"},contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000aenum USBRequestType {\u000a    \"standard\",\u000a    \"class\",\u000a    \"vendor\"\u000a};\u000a\u000aenum USBRecipient {\u000a    \"device\",\u000a    \"interface\",\u000a    \"endpoint\",\u000a    \"other\",\u000a};\u000a\u000adictionary USBControlTransferParameters {\u000a    required USBRequestType requestType;\u000a    required USBRecipient recipient;\u000a    required octet request;\u000a    required unsigned short value;\u000a    required unsigned short index;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBDevice.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBDevice.idl"},specUrls:["https://wicg.github.io/webusb/","https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#transfers\u000a\u000aenum USBTransferStatus {\u000a    \"ok\",\u000a    \"stall\",\u000a    \"babble\"\u000a};\u000a\u000a// https://wicg.github.io/webusb/#device-usage\u000a\u000a[\u000a    RuntimeEnabled=WebUSB\u000a] interface USBDevice {\u000a    readonly attribute octet usbVersionMajor;\u000a    readonly attribute octet usbVersionMinor;\u000a    readonly attribute octet usbVersionSubminor;\u000a    readonly attribute octet deviceClass;\u000a    readonly attribute octet deviceSubclass;\u000a    readonly attribute octet deviceProtocol;\u000a    readonly attribute unsigned short vendorId;\u000a    readonly attribute unsigned short productId;\u000a    readonly attribute octet deviceVersionMajor;\u000a    readonly attribute octet deviceVersionMinor;\u000a    readonly attribute octet deviceVersionSubminor;\u000a    readonly attribute DOMString? manufacturerName;\u000a    readonly attribute DOMString? productName;\u000a    readonly attribute DOMString? serialNumber;\u000a    readonly attribute USBConfiguration? configuration;\u000a    readonly attribute FrozenArray<USBConfiguration> configurations;\u000a    readonly attribute boolean opened;\u000a\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceOpen] Promise<void> open();\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceClose] Promise<void> close();\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceSelectConfiguration] Promise<void> selectConfiguration(octet configurationValue);\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceClaimInterface] Promise<void> claimInterface(octet interfaceNumber);\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceReleaseInterface] Promise<void> releaseInterface(octet interfaceNumber);\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceSelectAlternateInterface] Promise<void> selectAlternateInterface(octet interfaceNumber, octet alternateSetting);\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceControlTransferIn] Promise<USBInTransferResult> controlTransferIn(USBControlTransferParameters setup, unsigned short length);\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceControlTransferOut] Promise<USBOutTransferResult> controlTransferOut(USBControlTransferParameters setup, optional BufferSource data);\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceClearHalt] Promise<void> clearHalt(USBDirection direction, octet endpointNumber);\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceTransferIn] Promise<USBInTransferResult> transferIn(octet endpointNumber, unsigned long length);\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceTransferOut] Promise<USBOutTransferResult> transferOut(octet endpointNumber, BufferSource data);\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceIsochronousTransferIn] Promise<USBIsochronousInTransferResult>  isochronousTransferIn(octet endpointNumber, sequence<unsigned long> packetLengths);\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceIsochronousTransferOut] Promise<UsbIsochronousOutTransferResult> isochronousTransferOut(octet endpointNumber, BufferSource data, sequence<unsigned long> packetLengths);\u000a    [CallWith=ScriptState, MeasureAs=UsbDeviceReset] Promise<void> reset();\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBDeviceFilter.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBDeviceFilter.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#enumeration\u000a\u000adictionary USBDeviceFilter {\u000a    unsigned short vendorId;\u000a    unsigned short productId;\u000a    octet classCode;\u000a    octet subclassCode;\u000a    octet protocolCode;\u000a    DOMString serialNumber;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBDeviceRequestOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBDeviceRequestOptions.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#enumeration\u000a\u000adictionary USBDeviceRequestOptions {\u000a    required sequence<USBDeviceFilter> filters;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBInTransferResult.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBInTransferResult.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#usbintransferresult\u000a\u000a[\u000a    RuntimeEnabled=WebUSB,\u000a    Constructor(USBTransferStatus status, optional DataView? data)\u000a] interface USBInTransferResult {\u000a    readonly attribute DataView? data;\u000a    readonly attribute USBTransferStatus status;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBEndpoint.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBEndpoint.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#endpoints\u000a\u000aenum USBDirection {\u000a    \"in\",\u000a    \"out\"\u000a};\u000a\u000aenum USBEndpointType {\u000a    \"bulk\",\u000a    \"interrupt\",\u000a    \"isochronous\"\u000a};\u000a\u000a[\u000a    Constructor(USBAlternateInterface alternate, octet endpointNumber, USBDirection direction),\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=WebUSB\u000a] interface USBEndpoint {\u000a    readonly attribute octet endpointNumber;\u000a    readonly attribute USBDirection direction;\u000a    readonly attribute USBEndpointType type;\u000a    readonly attribute unsigned long packetSize;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/NavigatorUSB.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/NavigatorUSB.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#enumeration\u000a\u000a[\u000a    ImplementedAs=NavigatorUSB\u000a] partial interface Navigator {\u000a    [SecureContext, RuntimeEnabled=WebUSB] readonly attribute USB usb;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBIsochronousInTransferPacket.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBIsochronousInTransferPacket.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#usbisochronousintransferpacket\u000a\u000a[\u000a    RuntimeEnabled=WebUSB,\u000a    Constructor(USBTransferStatus status, optional DataView? data)\u000a] interface USBIsochronousInTransferPacket {\u000a    readonly attribute USBTransferStatus status;\u000a    readonly attribute DataView? data;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBInterface.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBInterface.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#interfaces\u000a\u000a[\u000a    Constructor(USBConfiguration configuration, octet interfaceNumber),\u000a    RaisesException=Constructor,\u000a    RuntimeEnabled=WebUSB\u000a] interface USBInterface {\u000a    readonly attribute octet interfaceNumber;\u000a    readonly attribute USBAlternateInterface? alternate;\u000a    readonly attribute FrozenArray<USBAlternateInterface> alternates;\u000a    readonly attribute boolean claimed;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBIsochronousInTransferResult.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBIsochronousInTransferResult.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#usbisochronousintransferresult\u000a\u000a[\u000a    RuntimeEnabled=WebUSB,\u000a    Constructor(sequence<USBIsochronousInTransferPacket> packets,\u000a                optional DataView? data)\u000a] interface USBIsochronousInTransferResult {\u000a    readonly attribute DataView? data;\u000a    readonly attribute FrozenArray<USBIsochronousInTransferPacket> packets;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBIsochronousOutTransferPacket.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBIsochronousOutTransferPacket.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#usbisochronousouttransferpacket\u000a\u000a[\u000a    RuntimeEnabled=WebUSB,\u000a    Constructor(USBTransferStatus status, optional unsigned long bytesWritten = 0)\u000a] interface USBIsochronousOutTransferPacket {\u000a    readonly attribute unsigned long bytesWritten;\u000a    readonly attribute USBTransferStatus status;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBOutTransferResult.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBOutTransferResult.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2015 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#usbouttransferresult\u000a\u000a[\u000a    RuntimeEnabled=WebUSB,\u000a    Constructor(USBTransferStatus status, optional unsigned long bytesWritten = 0)\u000a] interface USBOutTransferResult {\u000a    readonly attribute unsigned long bytesWritten;\u000a    readonly attribute USBTransferStatus status;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webusb/USBIsochronousOutTransferResult.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webusb/USBIsochronousOutTransferResult.idl"},specUrls:["https://wicg.github.io/webusb/"],contents:"// Copyright 2016 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// https://wicg.github.io/webusb/#usbisochronousouttransferresult\u000a\u000a[\u000a    RuntimeEnabled=WebUSB,\u000a    Constructor(sequence<USBIsochronousOutTransferPacket> packets)\u000a] interface USBIsochronousOutTransferResult {\u000a    readonly attribute FrozenArray<USBIsochronousOutTransferPacket> packets;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webaudio/AudioWorkletNodeOptions.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webaudio/AudioWorkletNodeOptions.idl"},specUrls:["https://webaudio.github.io/web-audio-api/"],contents:"// Copyright 2017 The Chromium Authors. All rights reserved.\u000a// Use of this source code is governed by a BSD-style license that can be\u000a// found in the LICENSE file.\u000a\u000a// See: https://webaudio.github.io/web-audio-api/#AudioWorkletNodeOptions\u000adictionary AudioWorkletNodeOptions : AudioNodeOptions {\u000a    unsigned long numberOfInputs = 1;\u000a    unsigned long numberOfOutputs = 1;\u000a    sequence<unsigned long> outputChannelCount;\u000a    record<DOMString, double> parameterData;\u000a};\u000a"}));
put(foam.json.parse({class:"org.chromium.webidl.IDLFileContents",id:["https://chromium.googlesource.com/chromium/src.git","00916928f29ce9f2ccf89c0df03775ed0d3755a2","third_party/WebKit/Source/modules/webgl/ANGLEInstancedArrays.idl"],metadata:{class:"org.chromium.webidl.GitilesIDLFile",gitilesBaseURL:"https://chromium.googlesource.com/chromium/src/+",atob:function atobNode(str) {
              return new Buffer(str, 'base64').toString();
            },repository:"https://chromium.googlesource.com/chromium/src.git",revision:"00916928f29ce9f2ccf89c0df03775ed0d3755a2",path:"third_party/WebKit/Source/modules/webgl/ANGLEInstancedArrays.idl"},contents:"/*\u000a * Copyright (C) 2013 Google Inc. All rights reserved.\u000a *\u000a * Redistribution and use in source and binary forms, with or without\u000a * modification, are permitted provided that the following conditions are\u000a * met:\u000a *\u000a *     * Redistributions of source code must retain the above copyright\u000a * notice, this list of conditions and the following disclaimer.\u000a *     * Redistributions in binary form must reproduce the above\u000a * copyright notice, this list of conditions and the following disclaimer\u000a * in the documentation and/or other materials provided with the\u000a * distribution.\u000a *     * Neither the name of Google Inc. nor the names of its\u000a * contributors may be used to endorse or promote products derived from\u000a * this software without specific prior written permission.\u000a *\u000a * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\u000a * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\u000a * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\u000a * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\u000a * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\u000a * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\u000a * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\u000a * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\u000a * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\u000a * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\u000a * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u000a */\u000a\u000a// https://www.khronos.org/registry/webgl/extensions/ANGLE_instanced_arrays/\u000a\u000a[\u000a    DependentLifetime,\u000a    DoNotCheckConstants,\u000a    NoInterfaceObject\u000a] interface ANGLEInstancedArrays {\u000a    const unsigned long VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = 0x88FE;\u000a\u000a    void drawArraysInstancedANGLE(unsigned long mode, long first, long count, long primcount);\u000a    void drawElementsInstancedANGLE(unsigned long mode, long count, unsigned long type, long long offset, long primcount);\u000a    void vertexAttribDivisorANGLE(unsigned long index, long divisor);\u000a};\u000a"}));
